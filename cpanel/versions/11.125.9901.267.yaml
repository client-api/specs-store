openapi: 3.0.2
info:
  title: cPanel UAPI
  description: UAPI accesses the cPanel interface's features. Use this API to access
    and modify cPanel account data and settings.
  termsOfService: https://cpanel.net/legal-notices/
  contact:
    name: "WebPros International, LLC"
    url: https://cpanel.net/support/
    email: cs@cpanel.net
  license:
    name: cPanel License
    url: https://cpanel.net/legal-notices/
  version: 11.125.9901.267
externalDocs:
  url: https://cpanel.net/developers/
servers:
- url: "https://{host}:{port}/execute"
  description: A server running cPanel.
  variables:
    host:
      description: The hostname of a server running cPanel
      default: cpanel-server.tld
    port:
      description: The cPanel port.
      default: "2083"
security:
- BasicAuth: []
tags:
- name: Account Enhancements
  description: The Account Enhancement module for UAPI.
- name: Account Information
  description: cPanel Account / Account Information
- name: Account Management
  description: cPanel Account / Account Management
- name: Antivirus Protection (ClamAV)
  description: Optional Applications / Antivirus Protection (ClamAV)
- name: API Token Management
  description: API Development Tools / API Token Management
- name: Application Information
  description: cPanel Theme Management / Application Information
- name: Application Manager
  description: Web Server Management / Application Manager
- name: Auto-generated SSL Certificates
  description: SSL Certificates / Auto-generated SSL Certificates
- name: Backup
  description: The Backup module for UAPI.
- name: Bandwidth
  description: The Bandwidth module for UAPI.
- name: Batch
  description: The Batch module for UAPI.
- name: Block IP
  description: Block Ip Addresses / Block IP
- name: BlockIP
  description: The BlockIP module for UAPI.
- name: BoxTrapper
  description: The BoxTrapper module for UAPI.
- name: Brand Management
  description: cPanel Theme Management / Brand Management
- name: Branding
  description: The Branding module for UAPI.
- name: Browser Cache Management
  description: cPanel Theme Management / Browser Cache Management
- name: CacheBuster
  description: The CacheBuster module for UAPI.
- name: Calendar and Contacts (DAV)
  description: Optional Applications / Calendar and Contacts (DAV)
- name: Calendar and Contacts Server
  description: Optional Applications / Calendar and Contacts Server
- name: CCS
  description: The CCS module for UAPI.
- name: Chkservd
  description: The Chkservd module for UAPI.
- name: Chrome
  description: The Chrome module for UAPI.
- name: ClamScanner
  description: The ClamScanner module provides methods for ClamAVÂ® virus scans and
    disinfection.
- name: Contact Information
  description: Contact Information
- name: Contact Information
  description: cPanel Account / Contact Information
- name: ContactInformation
  description: The ContactInformation module for UAPI.
- name: Contactus
  description: The Contactus module for UAPI.
- name: cPAddons
  description: The cPAddons module for UAPI.
- name: cPanel Account SSL Management
  description: SSL Certificates / cPanel Account SSL Management
- name: cPanel Addons (cPAddons)
  description: Optional Applications / cPanel Addons (cPAddons)
- name: cPanel Features
  description: cPanel Account / cPanel Features
- name: cPanel Server Information
  description: Server Information / Server Information
- name: cPanel Server Information
  description: Server Information / cPanel Server Information
- name: CPDAVD
  description: The CPDAVD module for UAPI.
- name: cPGreyList
  description: The cPGreyList module for UAPI.
- name: CSVImport
  description: The CSVImport module for UAPI.
- name: Database Information
  description: MySQL and MariaDB / Database Information
- name: Database Management
  description: MySQL and MariaDB / Database Management
- name: DAV
  description: The DAV module for UAPI.
- name: DCV
  description: The DCV module for UAPI.
- name: Deployment Settings
  description: GIT Management / Deployment Settings
- name: Direct Link Protection (Hotlink)
  description: Domain Management / Direct Link Protection (Hotlink)
- name: Directory Indexes
  description: Directory Management / Directory Indexes
- name: Directory Privacy
  description: Directory Management / Directory Privacy
- name: Directory Protection
  description: Directory Management / Directory Protection
- name: DirectoryIndexes
  description: The DirectoryIndexes module for UAPI.
- name: DirectoryPrivacy
  description: The DirectoryPrivacy module for UAPI.
- name: DirectoryProtection
  description: The DirectoryProtection module for UAPI.
- name: Disk Quotas
  description: cPanel Account / Disk Quotas
- name: DNS
  description: The DNS module for UAPI.
- name: DNS Information
  description: DNS / DNS Information
- name: DNS Security
  description: DNS / DNS Security
- name: DNSSEC
  description: The DNSSEC module for UAPI.
- name: Domain Information
  description: Domain Management / Domain Information
- name: Domain Redirection
  description: Domain Management / Domain Redirection
- name: Domain Statistics
  description: Statistics / Domain Statistics
- name: DomainInfo
  description: The DomainInfo module for UAPI.
- name: Dynamic DNS
  description: DNS / Dynamic DNS
- name: DynamicDNS
  description: The DynamicDNS module for UAPI.
- name: EA4
  description: The EA4 module for UAPI.
- name: Email
  description: The Email module for UAPI.
- name: Email Accounts
  description: Email / Email Accounts
- name: Email DNS Settings
  description: DNS / Email DNS Settings
- name: Email Filtering
  description: Email / Email Filtering
- name: Email Forwarding
  description: Email / Email Forwarding
- name: Email Server Information
  description: Email / Email Server Information
- name: Email Server Information
  description: Email / Email Server Information.
- name: Email Suspensions
  description: Email / Email Suspensions
- name: EmailAuth
  description: The EmailAuth module for UAPI.
- name: External Authentication
  description: Authentication / External Authentication
- name: ExternalAuthentication
  description: The ExternalAuthentication module for UAPI.
- name: Features
  description: The Features module for UAPI.
- name: File Restoration
  description: cPanel Account Backups / File Restoration
- name: Fileman
  description: The Fileman module for UAPI.
- name: Ftp
  description: The Ftp module for UAPI.
- name: Ftp
  description: The FTP module for UAPI.
- name: FTP Accounts
  description: Files / FTP Accounts
- name: FTP Server Settings
  description: Files / FTP Server Settings
- name: GPG
  description: The GPG module for UAPI.
- name: Handler Management
  description: Website Configuration / Handler Management
- name: Image Tools
  description: Files / Image Tools
- name: ImageManager
  description: The ImageManager module for UAPI.
- name: Integration
  description: The Integration module for UAPI.
- name: Known SSH Hosts Management
  description: Security / Known SSH Hosts Management
- name: KnownHosts
  description: The KnownHosts module for UAPI.
- name: LangPHP
  description: The LangPHP module for UAPI.
- name: Language
  description: cPanel Theme Management / Language
- name: LastLogin
  description: The LastLogin module for UAPI.
- name: Locale
  description: The Locale module for UAPI.
- name: Login Information
  description: Security / Login Information
- name: LogManager
  description: The LogManager module for UAPI.
- name: Logs
  description: Website Configuration / Logs
- name: Mail Server Information
  description: Email / Mail Server Information
- name: Mailbox Management
  description: Email / Mailbox Management
- name: Mailboxes
  description: The Mailboxes module for UAPI.
- name: Mailing Lists
  description: Email / Mailing Lists
- name: Manage Files
  description: Files / Manage Files
- name: Market
  description: The Market module for UAPI.
- name: Market Integration
  description: Commerce Integration / Market Integration
- name: Mime
  description: The Mime module for UAPI.
- name: Mime Type Management
  description: Website Configuration / Mime Type Management
- name: ModSecurity
  description: The ModSecurity module for UAPI.
- name: Mysql
  description: The Mysql module for UAPI.
- name: NginxCaching
  description: The NginxCaching module for UAPI.
- name: Notifications
  description: The Notifications module for UAPI.
- name: Parser
  description: The Parser module for UAPI.
- name: PassengerApps
  description: The PassengerApps module for UAPI.
- name: PasswdStrength
  description: The PasswdStrength module for UAPI.
- name: Password Strength
  description: Server Information / Password Strength
- name: Personalization
  description: The Personalization module for UAPI.
- name: PHP
  description: PHP recommendations
- name: PHP Settings
  description: Web Server Management / PHP Settings
- name: Plugins
  description: The Plugins module for UAPI.
- name: Postgresql
  description: The Postgresql module for UAPI.
- name: PostgreSQL Database Management
  description: PostgreSQL / Database Management
- name: PostgreSQL User Management
  description: PostgreSQL / User Management
- name: Pushbullet
  description: The Pushbullet module for UAPI.
- name: Quota
  description: The Quota module for UAPI.
- name: Remote Databases
  description: MySQL and MariaDB / Remote Databases
- name: Repository Management
  description: GIT Management / Repository Management
- name: Resellers
  description: The Resellers module for UAPI.
- name: Resource Usage and Statistics
  description: cPanel Account / Resource Usage and Statistics
- name: ResourceUsage
  description: The ResourceUsage module for UAPI.
- name: ServerInformation
  description: The ServerInformation module for UAPI.
- name: Service Proxy
  description: Service Proxy
- name: ServiceProxy
  description: The ServiceProxy module for UAPI.
- name: Session
  description: The Session module for UAPI.
- name: Signing and Encryption (GnuPG Keys)
  description: Email / Signing and Encryption (GnuPG Keys)
- name: Site Information
  description: Website Configuration / Site Information
- name: Site Installation
  description: Website Configuration / Site Installation
- name: Site Publisher Management
  description: Website Configuration / Site Publisher Management
- name: Sitejet
  description: The Sitejet module for UAPI.
- name: SiteQuality
  description: The SiteQuality module for UAPI.
- name: SiteTemplates
  description: The SiteTemplates module for UAPI.
- name: SNI Email Settings
  description: SSL Certificates / SNI Email Settings
- name: Spam Filtering (Greylisting)
  description: Email / Spam Filtering (Greylisting)
- name: Spam Management
  description: Email / Spam Management
- name: Spam Prevention (BoxTrapper)
  description: Email / Spam Prevention (BoxTrapper)
- name: SpamAssassin
  description: The SpamAssassin module for UAPI.
- name: SSE Task Management
  description: API Development Tools / SSE Task Management
- name: SSH
  description: The SSH module for UAPI.
- name: SSL
  description: The SSL module for UAPI.
- name: SSL Certificate Management
  description: SSL Certificates / SSL Certificate Management
- name: SSL Certificates
  description: Commerce Integration / SSL Certificates
- name: Stats
  description: The Stats module for UAPI.
- name: StatsBar
  description: The StatsBar module for UAPI.
- name: StatsManager
  description: The StatsManager module for UAPI.
- name: Subaccount Management
  description: cPanel Account / Subaccount Management
- name: SubDomain
  description: The SubDomain module for UAPI.
- name: Team Roles
  description: The Team Roles module for UAPI.
- name: Team Users
  description: The Team User module for UAPI.
- name: Theme Settings
  description: cPanel Theme Management / Theme Settings
- name: Themes
  description: The Themes module for UAPI.
- name: Tokens
  description: The Tokens module for UAPI.
- name: Two-Factor Settings
  description: Authentication / Two-Factor Settings
- name: TwoFactorAuth
  description: The TwoFactorAuth module for UAPI.
- name: URL Parsing
  description: API Development Tools / URL Parsing
- name: User Management
  description: MySQL and MariaDB / User Management
- name: UserManager
  description: The UserManager module for UAPI.
- name: UserTasks
  description: The UserTasks module for UAPI.
- name: Variables
  description: The Variables module for UAPI.
- name: Verify Domain Ownership
  description: SSL Certificates / Verify Domain Ownership
- name: VersionControl
  description: The VersionControl module for UAPI.
- name: VersionControlDeployment
  description: The VersionControlDeployment module for UAPI.
- name: Virtual Host Information
  description: Domain Management / Virtual Host Information
- name: WebDisk
  description: The WebDisk module for UAPI.
- name: WebDisk Settings
  description: Files / WebDisk Settings
- name: Weblog Settings
  description: Statistics / Weblog Settings
- name: Webmail Applications
  description: Email / Webmail Applications
- name: Webmail Sessions
  description: Email / Webmail Sessions
- name: WebmailApps
  description: The WebmailApps module for UAPI.
- name: WebVhosts
  description: The WebVhosts module for UAPI.
- name: WordPress Manager Backups
  description: Optional Applications / WordPress Manager Backups
- name: WordPress Manager Settings
  description: Optional Applications / WordPress Manager Settings
- name: WordPressBackup
  description: The WordPressBackup module for UAPI.
- name: WordPressInstanceManager
  description: The WordPressInstanceManager module for UAPI.
- name: WordPressRestore
  description: The WordPressRestore module for UAPI.
- name: WordPressSite
  description: The WordPressSite module for UAPI.
paths:
  /AccountEnhancements/has_enhancement:
    get:
      tags:
      - Account Enhancements
      summary: Validate Account Enhancement assignment
      description: "This function returns whether a cPanel account has a specific\
        \ [Account Enhancement](https://go.cpanel.net/account-enhancements)."
      operationId: AccountEnhancements-has-enhancement
      parameters:
      - name: id
        in: query
        description: |-
          The identifier for a specific Account Enhancement.

          **Note:**

          To retrieve a list of all Account Enhancements IDs on the server, run the WHM API 1 `list_account_enhancements` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: sample-enhancement-id
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
  /AccountEnhancements/list:
    get:
      tags:
      - Account Enhancements
      summary: Return all cPanel account's Account Enhancements
      description: "This function lists a cPanel account's [Account Enhancements](https://go.cpanel.net/account-enhancements)."
      operationId: AccountEnhancements-list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
  /Backup/fullbackup_to_ftp:
    get:
      tags:
      - Backup
      summary: Back up cPanel account via FTP
      description: This function creates a full backup to the remote server via File
        Transfer Protocol (FTP). The system creates a file in theÂ `backup-MM.DD.YYYY_HH-mm-ss.tar.gz`Â filename
        format.
      operationId: fullbackup_to_ftp
      parameters:
      - name: host
        in: query
        description: The remote server's hostname or IP address.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host"
      - name: password
        in: query
        description: The remote server account's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: luggage123456
      - name: username
        in: query
        description: The remote server account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: directory
        in: query
        description: |-
          The directory on the remote server that will store the backup.

          **Note:**

          * This value defaults to the remote server account's default login directory.
          * Enter the directory relative to the FTP user's login directory. For example, enter `/public_ftp` not `/home/username/public_ftp`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /public_ftp
      - name: email
        in: query
        description: |-
          The email address to receive a confirmation email when the backup completes.

          **Note:**

           The system does **not** provide confirmation if you do **not** pass this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: homedir
        in: query
        description: |-
          How to manage the home directory in the backup.

          * `include` â Include the home directory in the backup.
          * `skip` â Omit the home directory from the backup.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: include
          default: include
          enum:
          - include
          - skip
      - name: port
        in: query
        description: The port number to use during the transfer.
        required: false
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 21
          default: 21
      - name: variant
        in: query
        description: |-
          Whether to use the `active` or `passive` FTP variant to connect to
          the remote server. For more information about FTP variants, read our How
          to [Enable FTP Passive Mode](https://go.cpanel.net/HowtoEnableFTPPassiveMode) documentation.
          * `active` â The FTP server responds to the connection attempt and returns a connection request from a different port to the FTP client.
          * `passive` â The FTP client initiates connection attempts.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: active
          default: active
          enum:
          - active
          - passive
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
  /Backup/fullbackup_to_homedir:
    get:
      tags:
      - Backup
      summary: Back up cPanel account to home directory
      description: This function creates a full backup to the user's home directory.
        The system creates a file in theÂ `backup-MM.DD.YYYY_HH-mm-ss_username.tar.gz`Â filename
        format.
      operationId: fullbackup_to_homedir
      parameters:
      - name: email
        in: query
        description: |-
          The email address to receive a confirmation email when the backup process completes.

          **Note:**

          The system does **not** provide confirmation if you do not pass this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: homedir
        in: query
        description: |-
          How to manage the home directory in the backup.

          * `include` â Include the home directory in the backup.
          * `skip` â Omit the home directory from the backup.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: include
          default: include
          enum:
          - include
          - skip
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
  /Backup/fullbackup_to_scp_with_key:
    get:
      tags:
      - Backup
      summary: Back up cPanel account via SCP with SSH key
      description: This function creates a full backup to a remote server with a private
        SSH key via the secure copy protocol (scp) command. The system creates a file
        in theÂ `backup-MM.DD.YYYY_HH-mm-ss_username.tar.gz`Â filename format.
      operationId: fullbackup_to_scp_with_key
      parameters:
      - name: host
        in: query
        description: The remote server's hostname or IP address.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_1"
      - name: key_name
        in: query
        description: |-
          The SSH key's name.

          **Notes:**

          * To generate a private SSH key, use the UAPI `SSL::generate_key`
          function.
          * To import an existing SSH key, use the cPanel API 2
          `SSH::importkey` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: examplesshkey
      - name: key_passphrase
        in: query
        description: The SSH key's password.
        required: true
        style: form
        explode: true
        schema:
          minLength: 4
          type: string
          example: 123456luggage
      - name: directory
        in: query
        description: |-
          The directory on the remote server that will store the backup.

          **Note:**

          This parameter defaults to the remote server account's default login directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /user
      - name: email
        in: query
        description: |-
          The email address to receive a confirmation email when the backup completes.

          **Note:**

          The system does **not** provide confirmation if you do not pass this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: homedir
        in: query
        description: |-
          How to manage the home directory in the backup.

          * `include` â Include the home directory in the backup.
          * `skip` â Omit the home directory from the backup.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: include
          default: include
          enum:
          - include
          - skip
      - name: port
        in: query
        description: The port to use during the transfer.
        required: false
        style: form
        explode: true
        schema:
          maximum: 65335
          minimum: 1
          type: integer
          example: 22
          default: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_4"
  /Backup/fullbackup_to_scp_with_password:
    get:
      tags:
      - Backup
      summary: Back up cPanel account via SCP with password
      description: This function creates a full backup to a remote server via the
        secure copy protocol (`scp`) command with a password. The system creates a
        file in theÂ `backup-MM.DD.YYYY_HH-mm-ss.tar.gz`Â filename format.
      operationId: fullbackup_to_scp_with_password
      parameters:
      - name: host
        in: query
        description: The remote server's hostname or IP address.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_2"
      - name: password
        in: query
        description: The remote server account's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: luggage123456
      - name: username
        in: query
        description: The remote server account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: directory
        in: query
        description: |-
          The directory on the remote server that will store the backup.

          **Note:**

          This parameter defaults to the remote server account's default login directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /user
      - name: email
        in: query
        description: |-
          The email address to receive a confirmation email when the backup completes.

          **Note:**

          The system does **not** provide confirmation if you do **not** pass this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: homedir
        in: query
        description: |-
          How to manage the home directory in the backup.

          * `include` â Include the home directory in the backup.
          * `skip` â Omit the home directory from the backup.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: include
          default: include
          enum:
          - include
          - skip
      - name: port
        in: query
        description: The port to use during the transfer.
        required: false
        style: form
        explode: true
        schema:
          maximum: 65335
          minimum: 1
          type: integer
          example: 22
          default: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_5"
  /Backup/list_backups:
    get:
      tags:
      - Backup
      summary: Return backup files
      description: This function lists the account's backup files.
      operationId: list_backups
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
  /Backup/restore_databases:
    post:
      tags:
      - File Restoration
      summary: Restore databases
      description: |-
        This function restores a database's backup files.

        **Important:**

        When the [MySQL Client role](https://go.cpanel.net/howtouseserverprofiles#roles) is disabled, the system also **disables** this function.

        **Note:**

        You **must** pass either the `file` **or** `backup` parameter.
      operationId: restore_databases
      parameters:
      - name: backup
        in: query
        description: |-
          The database backup file to restore.

          **Important:**

          **Only** pass this parameter to restore files already on the server.

          **Note:**

          To restore multiple database backup files, increment the parameter name. For example: `backup-1`, `backup-2`, and `backup-3`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Restore multiple database backup files.
            value: backup-1=home/user/user_db1.sql.gz backup-2=home/user/user_db2.sql.gz
              backup-3=home/user/user_db3.sql.gz
          single:
            summary: Restore a single database backup file.
            value: home/user/user_db1.sql.gz
      - name: timeout
        in: query
        description: |-
          The maximum number of seconds to try to restore the file.
          * `0` - The system will not time out the file restoration.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 3600
          default: 7200
      - name: verbose
        in: query
        description: |-
          Whether to return additional information from theÂ `/usr/local/cpanel/logs/cpbackup` log file.
          * `1` - Return additional information.
          * `0` - Do **not** return additional information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      requestBody:
        description: |-
          The database backup file to upload and restore.

          **Important:**

          * **Only** pass this parameter to upload files that don't already exist on the server.
          * You can **not** pass this parameter on the command line.

          **Note:**

          * To upload multiple database backup files, increment the parameter name. For example: `file-1`, `file-2`, and `file-3`.
          * Pass this file in a multipart/form-data structure.
          * For more information about this structure, read Mozilla's [POST Method](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) documentation.
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Backup_restore_databases_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_7"
  /Backup/restore_email_filters:
    post:
      tags:
      - File Restoration
      summary: Restore email filters
      description: |-
        This function restores an account's email filters.

        **Important:**

        When the [Receive Mail role](https://go.cpanel.net/howtouseserverprofiles#roles) is disabled, the system also **disables** this function.

        **Note:**

        You **must** use the `backup` parameter when you call this function in one of the following formats:
        * As part of a `multipart/form-data` request body to upload and restore a backup file to the server.
        * As a query parameter to restore an existing file on the server.
      operationId: restore_email_filters
      parameters:
      - name: backup
        in: query
        description: |-
          The email filter file to restore.

          **Important:**

          **Only** pass this parameter to restore email filter files that already exist on the server.

          **Note:**

          To restore multiple email filter files,Â increment the parameter name. For example:Â `backup-1`,Â `backup-2`,Â and `backup-3`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Restore multiple email filter files.
            value: backup-1=/home/user/filter_info1.username.yaml.gz backup-2=/home/user/filter_info2.username.yaml.gz
              backup-3=/home/user/filter_info3.username.yaml.gz
          single:
            summary: Restore a single email filter file.
            value: /home/user/filter_info.username.yaml.gz
      - name: timeout
        in: query
        description: |-
          The maximum number of seconds to try to restore the file.
          * `0` - The system will not time out the file restoration.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 3600
          default: 7200
      - name: verbose
        in: query
        description: |-
          Whether to return additional information from theÂ `/home/cpuser/.cpanel/logs/restore-email-filters`Â log files.
          * `1` - Return additional information.
          * `0` - Do not return additional information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      requestBody:
        description: |-
          The email filter file to upload and restore.

          **Important:**

          * **Only** pass this parameter to upload files that don't already exist on the server.
          * You can't pass this parameter on the command line.

          **Note:**

          * To upload multiple email filter files,Â increment the parameter name. For example:Â `backup-1`,Â `backup-2`,Â and `backup-3`.
          * Pass this file in a multipart/form-data structure.
          * For more information about this structure, read Mozilla's [POST Method](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) documentation.
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Backup_restore_email_filters_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_8"
  /Backup/restore_email_forwarders:
    post:
      tags:
      - File Restoration
      summary: Restore email forwarders
      description: |-
        This function restores an account's email forwarders.

        **Important:**

        When the [Receive Mail role](https://go.cpanel.net/howtouseserverprofiles#roles) is disabled, the system also **disables** this function.

        **Note:**

        You **must** use the `backup` parameter when you call this function in one of the following formats:
        * As part of a `multipart/form-data` request body to upload and restore a backup file to the server. For more information about this structure, read Mozilla's [POST Method](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) documentation.
        * As a query parameter to restore an existing file on the server.
      operationId: restore_email_forwarders
      parameters:
      - name: backup
        in: query
        description: |-
          The email forwarder file to restore.

          **Important:**

          **Only** pass this parameter to restore email forwarder files that already exist on the server.

          **Note:**

          To restore multiple email filter files,Â increment the parameter name. For example:Â `backup-1`,Â `backup-2`,Â and `backup-3`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Restore multiple email forwarder files.
            value: backup-1=/home/user/aliases-example1.com.gz backup-2=/home/user/aliases-example2.com.gz
              backup-3=/home/user/aliases-example3.com.gz
          single:
            summary: Restore a single email forwarder file.
            value: /home/user/aliases-example.com.gz
      - name: timeout
        in: query
        description: |-
          The maximum number of seconds to try to restore the file.
          * `0` - The system will not time out the file restoration.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 3600
          default: 7200
      - name: verbose
        in: query
        description: |-
          Whether to return additional information from theÂ `/home/cpuser/.cpanel/logs/restore-email-forwarders`Â log files.
          * `1` - Return additional information.
          * `0` - Do not return additional information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      requestBody:
        description: |-
          The email forwarder file to upload and restore.

          **Important:**

          * **Only** pass this parameter to upload files that don't already exist on the server.
          * You can't pass this parameter on the command line.

          **Note:**

          To upload multiple email filter files,Â increment the parameter name. For example:Â `backup-1`,Â `backup-2`,Â and `backup-3`.
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Backup_restore_email_forwarders_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_9"
  /Backup/restore_files:
    post:
      tags:
      - File Restoration
      summary: Restore files
      description: |-
        This function restores an account's files.

        **Important:**

        When the [File Storage role](https://go.cpanel.net/howtouseserverprofiles#roles) is disabled, the system also **disables** this function.

        **Note:**

        You **must** use the `backup` parameter when you call this function in one of the following formats:
        * As part of a `multipart/form-data` request body to upload and restore a backup file to the server. For more information about this structure, read Mozilla's [POST Method](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) documentation.
        * As a query parameter to restore an existing file on the server.
      operationId: restore_files
      parameters:
      - name: backup
        in: query
        description: |-
          The backup file to restore.

          **Important:**

          **Only** pass this parameter to restore backup files that already exist on the server.

          **Note:**

          To restore multiple backup files,Â increment the parameter name. For example: `backup-1`,Â `backup-2`,Â and `backup-3`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Restore multiple backup files.
            value: backup-1=/home/cpuser/backup-cpuser.tld-9-10-2019_1.tar.gz backup-2=/home/cpuser/backup-cpuser.tld-9-10-2019_2.tar.gz
          single:
            summary: Restore a single backup file.
            value: /home/cpuser/backup-cpuser.tld-9-10-2019_1.tar.gz
      - name: directory
        in: query
        description: The directory to which to restore the file. The default is the
          user's `home` directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/user/example
      - name: timeout
        in: query
        description: |-
          The maximum number of seconds to try to restore the file.
          * `0` - The system will not time out the file restoration.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 7200
          default: 172800
      - name: verbose
        in: query
        description: |-
          Whether to return additional information from theÂ `/home/cptest/.cpanel/logs/restorefiles` log files.
          * `1` - Return additional information.
          * `0` - Do not return additional information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      requestBody:
        description: |-
          The backup file to upload and restore.

          **Important:**

          * **Only** pass this parameter to upload files that don't already exist on the server.
          * You can't pass this parameter on the command line.

          **Note:**

          To upload and restore multiple backup files,Â increment the parameter name. For example: `backup-1`,Â `backup-2`,Â and `backup-3`.
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Backup_restore_files_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_10"
  /Bandwidth/get_enabled_protocols:
    get:
      tags:
      - Bandwidth
      summary: Return services monitored in bandwidth data
      description: This function returns a list of the server's enabled protocols.
      operationId: get_enabled_protocols
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_11"
  /Bandwidth/get_retention_periods:
    get:
      tags:
      - Bandwidth
      summary: Return bandwidth retention period
      description: This function retrieves the retention periods for bandwidth data.
      operationId: get_retention_periods
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_12"
  /Bandwidth/query:
    get:
      tags:
      - Bandwidth
      summary: Return cPanel account's bandwidth usage report
      description: |-
        This function queries an account's bandwidth data and returns a report.

        **Note:**

        This function also returns the bandwidth use of a [distributed cPanel account](https://go.cpanel.net/cPanelGlossary#distributed-cpanel-account).
      operationId: query
      parameters:
      - name: grouping
        in: query
        description: |-
          How to group the data in the report, in pipe-separated format. This list **must** contain one or both of the following parameters:

          A pipe-separated list that contains one or both of the following parameters:
          * `domain`
          * `protocol`

          This parameter can also include only **one** of the following start time interval types:
          * `year`
          * `year_month`
          * `year_month_day`
          * `year_month_day_hour`
          * `year_month_day_mour_minute`

          **Note:**

          * This parameter accepts a maximum of three values.
          * The function nests the return objects in the order that you declare the values in this parameter.
        required: true
        style: pipeDelimited
        explode: false
        schema:
          $ref: "#/components/schemas/grouping"
        examples:
          domain_protocol_year:
            summary: domain|protocol|year
            value: grouping=domain|protocol|year
          domain_year:
            summary: domain|year
            value: grouping=domain|year
          protocol_year_month:
            summary: protocol|year_month
            value: grouping=protocol|year_month
          year_month_day:
            summary: year_month_day
            value: grouping=year_month_day
      - name: domains
        in: query
        description: |-
          A pipe-separated list of domains for which to provided data.

          **Note:**

          * If you do not include this parameter, the function will return data for all domains on the cPanel account.
          * The `UNKNOWN` "pseudo-domain" refers to data recorded without a specific domain. All traffic except HTTP traffic
          is recorded without a specific domain.
        required: false
        style: pipeDelimited
        explode: false
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Get data for multiple domains and UNKNOWN.
            value: domains=example.com|subdomain.example.com|subdomain2.example.com|parkedexample.com|UNKNOWN
          single:
            summary: Get data for a specific domain.
            value: example.com
      - name: end
        in: query
        description: The end date of the report window.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1446664809
      - name: interval
        in: query
        description: |-
          Length of time between bandwidth data samples.

          * `daily`
          * `hourly`
          * `5min`

          **Note:**

          The interval's retention period determines availability of the interval's data.
          Use the `Bandwidth::get_retention_periods` API to determine an interval's retention period.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: daily
          default: daily
          enum:
          - daily
          - hourly
          - 5min
      - name: protocols
        in: query
        description: |-
          A pipe-separated list of the protocols for which to provide data.
          * `http`
          * `imap`
          * `smtp`
          * `pop3`
          * `ftp`
        required: false
        style: pipeDelimited
        explode: false
        schema:
          type: string
        examples:
          multiple:
            summary: Get data for multiple protocols.
            value: protocols=http|imap|smtp|pop3|ftp
          single:
            summary: Get data for a specific protocol.
            value: http
      - name: start
        in: query
        description: The start date of the report window.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1445664609
      - name: timezone
        in: query
        description: The timezone in which to report the data.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: olson_timezone_name
          example: America/Chicago
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_13"
              examples:
                domain:
                  description: grouping=domain
                  value:
                    data:
                      UNKNOWN: 70447164
                      example.com: 815258916235
                      parkedexample.com: 18861122614
                      subdomain.example.com: 11407
                      subdomain2.example.com: 683533
                    metadata: {}
                    status: 1
                domain_protocol_year:
                  description: grouping=domain|protocol|year
                  value:
                    data:
                      UNKNOWN:
                        imap:
                          "1325376000": 11036.0461226852
                          "1356998400": 14892
                          "1388534400": 5148
                          "1420070400": 39745
                        smtp:
                          "1325376000": 155605
                          "1356998400": 2525944.05255787
                          "1388534400": 37310742
                          "1420070400": 30384052
                      example.com:
                        http:
                          "1325376000": 11700672006
                          "1356998400": 252262219725
                          "1388534400": 330435334428
                          "1420070400": 220860690076
                      parkedexample.com:
                        http:
                          "1356998400": 1214392
                          "1420070400": 18859908222
                      subdomain.example.com:
                        http:
                          "1388534400": 10227
                          "1420070400": 1180
                      subdomain2.example.com:
                        http:
                          "1420070400": 683533
                    metadata: {}
                    status: 1
                domain_year:
                  description: grouping=domain|year
                  value:
                    data:
                      UNKNOWN:
                        "1325376000": 141799
                        "1356998400": 52558
                        "1388534400": 56450
                        "1420070400": 3737236
                      example.com:
                        "1325376000": 27496678808
                        "1356998400": 16961550301
                        "1388534400": 17664354048
                        "1420070400": 26169989838
                      parkedexample.com:
                        "1325376000": 2474092283
                        "1356998400": 1214392
                        "1388534400": 1514221571
                        "1420070400": 14871594368
                      subdomain.example.com:
                        "1356998400": 1180
                        "1388534400": 5708
                        "1420070400": 4519
                      subdomain2.example.com:
                        "1420070400": 683533
                    metadata: {}
                    status: 1
                year_domain:
                  description: grouping=year|domain
                  value:
                    data:
                      "1325376000":
                        UNKNOWN: 70447164
                        example.com: 815258916235
                        parkedexample.com: 18861122614
                        subdomain.example.com: 11407
                        subdomain2.example.com: 683533
                      "1356998400":
                        UNKNOWN: 70447164
                        example.com: 815258916235
                        parkedexample.com: 18861122614
                        subdomain.example.com: 11407
                        subdomain2.example.com: 683533
                      "1388534400":
                        UNKNOWN: 70447164
                        example.com: 815258916235
                        parkedexample.com: 18861122614
                        subdomain.example.com: 11407
                        subdomain2.example.com: 683533
                      "1420070400":
                        UNKNOWN: 70447164
                        example.com: 815258916235
                        parkedexample.com: 18861122614
                        subdomain.example.com: 11407
                        subdomain2.example.com: 683533
                    metadata: {}
                    status: 1
  /Batch/strict:
    get:
      tags:
      - Batch
      summary: Run multiple UAPI functions in order
      description: |-
        This function combines calls for multiple UAPI functions and performs them in order.

        **Note:**

        * If a function call in the list fails, the `Batch::strict` function does not run further function calls in the list.
        * Due to the potential length of calls of this function, we recommend that you use the HTTP POST method for extremely long batch commands.
      operationId: strict
      parameters:
      - name: command
        in: query
        description: |-
          A UAPI function call, encoded as a JSON array with two or three items:

          * The UAPI module.
          * The UAPI function.
          * A JSON object containing the parameters to pass to this function. You can omit this value if you do not pass any parameters to the function.

          To submit multiple commands, duplicate the parameter name, or index all parameter names and increment the index for each one.

          * When using the cPanel LiveAPI PHP Library, you **must** increment the parameter name when you submit the arguments in an associative array. For example:Â use `command-0`,Â `command-1`,Â and `command-2`.
          * When using the cPanel LiveAPI Perl Library, you **must** increment the parameter name when you submit the arguments in a hash. For example:Â use `command-0`,Â `command-1`,Â and `command-2`.
          * You do **not** need to add an index to `command` parameters for query string calls of this function.
        required: true
        content:
          application/json:
            schema:
              maxItems: 3
              minItems: 2
              type: array
              items:
                oneOf:
                - type: string
                - type: object
                  additionalProperties: true
            examples:
              multiple:
                summary: Call multiple UAPI functions.
                value:
                - "command=[\"PasswdStrength\",\"get_required_strength\",{\"app\"\
                  :\"webdisk\"}]"
                - "command=[\"SSH\",\"get_port\"]"
              multiple_indexed:
                summary: Call multiple UAPI functions using indexed parameters.
                value:
                - "command-0=[\"PasswdStrength\",\"get_required_strength\",{\"app\"\
                  :\"webdisk\"}]"
                - "command-1=[\"SSH\",\"get_port\"]"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_14"
  /BlockIP/add_ip:
    get:
      tags:
      - BlockIP
      - Block IP
      summary: Add IP address to cPanel account's block list
      description: |-
        This function blocks IP addresses from accessing the domains on a cPanel account.

        **Important**

        When you disable the Web Server role, the system disables this function.
      operationId: blockip-add-ip
      parameters:
      - name: ip
        in: query
        description: The IP address or IP address range that you wish to block.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          cidr-ipv4:
            summary: CIDR Format IPv4
            value: 192.168.0.1/16
          cidr-ipv6:
            summary: CIDR Format IPv6
            value: 2001:db8::/32
          hostname:
            summary: Add by resolving hostname
            value: example.com
          implied-range:
            summary: Implied Range
            value: 192.168.0.1-58
          ipv4-range:
            summary: IPv4 Range
            value: 192.168.0.1-192.168.0.58
          ipv6-range:
            summary: IPv6 Range
            value: 2001:db8::1-2001:db8::3
          single-ipv4:
            summary: Single IPv4 Address
            value: 192.0.2.0
          single-ipv6:
            summary: Single IPv6 Address
            value: 2001:db8::1
          subnet-octet:
            summary: Subnet Range - Matches 10.*.*.*
            value: "10."
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_15"
  /BlockIP/remove_ip:
    get:
      tags:
      - BlockIP
      - Block IP
      summary: Remove IP address from cPanel account's block list
      description: |-
        This function unblocks IP addresses from accessing domains on a cPanel account.

        **Important**

        When you disable the Web Server role, the system disables this function.
      operationId: blockip-remove-ip
      parameters:
      - name: ip
        in: query
        description: The IP address or IP address range that you wish to unblock.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          cidr-ipv4:
            summary: CIDR Format IPv4
            value: 192.168.0.1/16
          cidr-ipv6:
            summary: CIDR Format IPv6
            value: 2001:db8::/32
          hostname:
            summary: Add by resolving hostname
            value: example.com
          implied-range:
            summary: Implied Range
            value: 192.168.0.1-58
          ipv4-range:
            summary: IPv4 Range
            value: 192.168.0.1-192.168.0.58
          ipv6-range:
            summary: IPv6 Range
            value: 2001:db8::1-2001:db8::3
          single-ipv4:
            summary: Single IPv4 Address
            value: 192.0.2.0
          single-ipv6:
            summary: Single IPv6 Address
            value: 2001:db8::1
          subnet-octet:
            summary: Subnet Range - Matches 10.*.*.*
            value: "10."
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_16"
  /BoxTrapper/blacklist_messages:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Add email address to BoxTrapper blocked senders
      description: |-
        This function blacklists email message senders.

        **Important:**

          When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system disables this function.
      operationId: blacklist_messages
      parameters:
      - name: email
        in: query
        description: |-
          The email address for which to blacklist messages.

          **Warning:**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently-authenticated user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: queuefile
        in: query
        description: The filename of the email message to blacklist.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.msg
        examples:
          multiple:
            summary: Blacklist multiple filenames.
            value: queuefile=file1&queuefile=file2
          single:
            summary: Blacklist one filename.
            value: file1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_17"
  /BoxTrapper/delete_messages:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Delete messages in the BoxTrapper queue
      description: |-
        This function deletes messages in the BoxTrapper queue.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system disables this function.
      operationId: delete_messages
      parameters:
      - name: email
        in: query
        description: |-
          The account's email address.

          **Warning:**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently-authenticated email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: queuefile
        in: query
        description: |-
          The filename of the email message who's sender to delete.

            **Warning:**

           To delete multiple email message senders, duplicate the parameter name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.msg
        examples:
          multiple:
            summary: Delete multiple filenames.
            value: queuefile=file1.msg&queuefile=file2.msg
          single:
            summary: Delete a single filename.
            value: file1.msg
      - name: all_like
        in: query
        description: |-
          Whether to delete all messages that resemble the `queuefile` parameter's value.

          * `1` - Delete all messages resembling the `queuefile` parameter.
          * `0` - Do **not** delete all messages resembling the `queuefile` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_18"
  /BoxTrapper/deliver_messages:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Send messages in the BoxTrapper queue
      description: |-
        This function delivers messages in the BoxTrapper queue.

        **Important:**

        When you disable the
        [*Receive Mail* role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: deliver_messages
      parameters:
      - name: email
        in: query
        description: |-
          The sender's cPanel account email address for which to deliver email messages.

          **Warning:**

          If you call this function in Webmail, the system ignores this parameter
          and defaults to the currently-authenticated email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: queuefile
        in: query
        description: |-
          The filename of the email messages to deliver.

          **Note:**

          To deliver multiple email messages, pass this parameter multiple times.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Deliver multiple email messages.
            value: queuefile=example.msg&queuefile=example1.msg&queuefile=example2.msg
          single:
            summary: Deliver a single email message.
            value: example.msg
      - name: all_like
        in: query
        description: |-
          Whether to deliver all messages that resemble the `queuefile` parameter's value.

          * `1` - Deliver all similar messages.
          * `0` - Don't deliver all similar messages.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_19"
  /BoxTrapper/get_allowlist:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return account BoxTrapper allowlist rules
      description: |-
        This function retrieves a list of BoxTrapper allowlist configuration rules. BoxTrapper will deliver emails that match these rules.

        **Important:**

        When you disable the
        [*Receive Mail* role](https://go.cpanel.net/serverroles),
        the system **disables** this function.
      operationId: BoxTrapper::get_allowlist
      parameters:
      - name: email
        in: query
        description: |-
          A valid email address on the cPanel account.

          **Warning:**

          If you call this function in Webmail, the system overrides this parameter.
          This parameter defaults to the current email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_20"
  /BoxTrapper/get_blocklist:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return account BoxTrapper blocklist rules
      description: |-
        This function retrieves a list of BoxTrapper blocklist configuration rules. BoxTrapper will delete messages that match these rules and send a notification to the sender.

        **Important:**

        When you disable the
        [*Receive Mail* role](https://go.cpanel.net/serverroles),
        the system **disables** this function.
      operationId: BoxTrapper::get_blocklist
      parameters:
      - name: email
        in: query
        description: |-
          A valid email address on the cPanel account.

          **Warning:**

          If you call this function in Webmail, the system overrides this parameter.
          This parameter defaults to the current email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
  /BoxTrapper/get_configuration:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return email account's BoxTrapper configuration
      description: |-
        This function retrieves an account's BoxTrapper configuration.

        **Important:**

          When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system disables this function.
      operationId: get_configuration
      parameters:
      - name: email
        in: query
        description: |-
          The account's email address.

          **Warning:**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently-authenticated email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_22"
  /BoxTrapper/get_email_template:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return specified BoxTrapper email template
      description: |-
        This function retrieves a BoxTrapper email message template.

        **Important:**

          When you disable the
          [*Receive Mail* role](https://go.cpanel.net/serverroles),
          the system **disables** this function.
      operationId: get_email_template
      parameters:
      - name: email
        in: query
        description: |-
          A valid email address on the cPanel account.

          **Warning:**

          If you call this function in Webmail, the system overrides this parameter.
          This parameter defaults to the current email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: template
        in: query
        description: |-
          The message template.

          * `blacklist`
          * `returnverify`
          * `verifyreleased`
          * `verify`

          **Note:**

          For more information on each template, read our
          [BoxTrapper](https://go.cpanel.net/cpaneldocsBoxTrapper) documentation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: verify
          enum:
          - blacklist
          - returnverify
          - verifyreleased
          - verify
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
  /BoxTrapper/get_forwarders:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return all BoxTrapper forwarders
      description: |-
        This function retrieves a list of email addresses to which BoxTrapper forwards email messages.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_forwarders
      parameters:
      - name: email
        in: query
        description: |-
          The account's email address.

          **Important:**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently-authenticated email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
  /BoxTrapper/get_ignorelist:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return account BoxTrapper ignorelist rules
      description: |-
        This function retrieves a list of BoxTrapper ignorelist configuration rules. BoxTrapper will delete messages that match these rules without sending a notification to the sender.

        **Important:**

        When you disable the
        [*Receive Mail* role](https://go.cpanel.net/serverroles),
        the system **disables** this function.
      operationId: BoxTrapper::get_ignorelist
      parameters:
      - name: email
        in: query
        description: |-
          A valid email address on the cPanel account.

          **Warning:**

          If you call this function in Webmail, the system overrides this parameter.
          This parameter defaults to the current email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_25"
  /BoxTrapper/get_log:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return BoxTrapper log file and contents
      description: |-
        This function returns the account's BoxTrapper log file and its contents.

        **Important:**

        When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: get_log
      parameters:
      - name: email
        in: query
        description: |-
          The account's email address.

          **Important:**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently authenticated email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: date
        in: query
        description: |-
          The date for which to return the log file and its contents.

          **Note:**

          This parameter defaults to the current date.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1556812881
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_26"
  /BoxTrapper/get_message:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return message's top 200 lines in BoxTrapper queue
      description: |-
        This function returns the first 200 lines of an email in the BoxTrapper queue.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_message
      parameters:
      - name: email
        in: query
        description: |-
          The accountâs name, either an email address or the cPanel userâs username.

          **Important:**

           If you call this function in Webmail, the system ignores this parameter.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/email"
        example: user@example.com
      - name: queuefile
        in: query
        description: The message's filename.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.msg
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_27"
  /BoxTrapper/get_status:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return whether email account uses BoxTrapper
      description: |-
        This function checks whether BoxTrapper is enabled for an email account.

        **Important:**

        When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: get_status
      parameters:
      - name: email
        in: query
        description: |-
          The account's email address.

          **Important:**

          If you call this function in Webmail, the system ignores this parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_28"
  /BoxTrapper/ignore_messages:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Add email account to Exim ignore list
      description: |-
        This function marks email message senders for Exim to ignore.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ignore_messages
      parameters:
      - name: email
        in: query
        description: "The cPanel email account from which to ignore messages.\n\n\
          **Warning:** \n\nIf you call this function in Webmail, the system ignores\
          \ this parameter and defaults\nto the currently-authenticated email address."
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: queuefile
        in: query
        description: |-
          The filename of the email message to ignore.

          **Note:**

           To ignore multiple email messages, duplicate this parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Ignore multiple email messages.
            value: queuefile-1=example1.msg queuefile-2=example2.msg queuefile-3=example3.msg
          single:
            summary: Ignore a single email message.
            value: example.msg
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_29"
  /BoxTrapper/list_email_templates:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return BoxTrapper email templates
      description: |-
        This function lists the BoxTrapper email templates.

        **Important:**

        When you **disable** the [Receive Mail](https://go.cpanel.net/serverroles) role, the system disables this function.
      operationId: list_email_templates
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_30"
  /BoxTrapper/list_queued_messages:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Return email account's BoxTrapper queued messages
      description: |-
        This function returns a list of messages in the account's BoxTrapper queue.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables**
          this function.
      operationId: list_queued_messages
      parameters:
      - name: email
        in: query
        description: |-
          The email account for which to retrieve queued messages.

          **Important:**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently authenticated email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: date
        in: query
        description: The date for which to return queued messages.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1556812881
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_31"
  /BoxTrapper/process_messages:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Run a specific BoxTrapper action for a message
      description: |-
        This function performs a specified action on messages in the BoxTrapper queue.

        **Important:**

        When you disable the [*Receive Mail*](https://go.cpanel.net/serverroles#roles) role, the system **disables** this function.
      operationId: process_messages
      parameters:
      - name: action
        in: query
        description: |-
          The action to perform on the email message file. To perform multiple actions on the specified email messages, pass this parameter multiple times.

          * `deliver` â Deliver a specific message.
          * `deliverall` â Deliver all messages from a sender.
          * `delete` â Delete a message.
          * `deleteall` â Delete all messages from a sender.
          * `blacklist` â Blacklist the sender of an email message.
          * `whitelist` â Whitelist the sender of an email message.
          * `ignore` â Ignore email messages from a sender.

          **Note:**

          The function performs the actions on the email messages files in the order that you pass each action.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: blacklist
          enum:
          - deliver
          - deliverall
          - delete
          - deleteall
          - blacklist
          - whitelist
          - ignore
        examples:
          multiple:
            summary: Perform multiple actions.
            value: action=blacklist action=deleteall
          single:
            summary: Perform a single action.
            value: blacklist
      - name: queuefile
        in: query
        description: "The filename of the email message to process. To process multiple\
          \ email messages, pass this parameter multiple times."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.msg
        examples:
          multiple:
            summary: Process multiple email messages.
            value: email=example.msg email=example1.msg email=example2.msg
          single:
            summary: Process a single email message.
            value: example.msg
      - name: email
        in: query
        description: |-
          The account's email address.

          **Warning:**

          * The `email` parameter is required when this function is called **outside** of Webmail.
          * If you call this function in Webmail, the `email` parameter is **not** required, and
          the systemÂ overrides this parameter with the current authenticated user's email address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_32"
              examples:
                function-fail:
                  summary: The function failed.
                  value:
                    apiversion: 3
                    module: BoxTrapper
                    result:
                      data:
                      - failed: 1
                        matches:
                        - example
                        reason: "(XID 2ymu8k) The system failed to locate the requested\
                          \ message:  example.msg"
                      metadata:
                        transformed: 1
                      status: 1
                      warnings:
                      - One or more of the operations failed.
                function-success:
                  summary: The function succeeded.
                  value:
                    apiversion: 3
                    data:
                    - email: user@example.com
                      matches:
                      - example
                      operator: blacklist
                    - email: user@example.com
                      matches:
                      - example
                      operator: deleteall
                    metadata:
                      transformed: 1
                    module: BoxTrapper
                    status: 1
  /BoxTrapper/reset_email_template:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Restore default BoxTrapper email message template
      description: |-
        This function restores the BoxTrapper email message templates to the system default setting.

        **Important:**

        When you **disable** the [Receive Mail](https://go.cpanel.net/serverroles) role, the system disables this function.
      operationId: reset_email_template
      parameters:
      - name: template
        in: query
        description: |-
          The message template. Possible values:
          * `blacklist` - BoxTrapper responds with this message when a blacklisted address sends an email.
          * `verify` - BoxTrapper responds with this message when an address that does not exist on the whitelist or blacklist sends an email. This message requests a response to confirm that the sender is legitimate.
          * `verifyreleased` - BoxTrapper responds with this message when a person responds to the verify message with an email or a click on the verification link.
          * `returnverify` - BoxTrapper responds with this message when the verification process fails.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: verify
          enum:
          - blacklist
          - verify
          - verifyreleased
          - returnverify
      - name: email
        in: query
        description: |-
          The account's email address.

          **Warning:**

          The `email` parameter is required when this function is called outside of webmail.
          If you call this function in Webmail, the `email` parameter is not required, and
          the systemÂ overrides this parameter with the current authenticated user's email address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_33"
  /BoxTrapper/save_configuration:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Update email account's BoxTrapper configuration
      description: |-
        This function modifies an account's BoxTrapper configuration.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: save_configuration
      parameters:
      - name: email
        in: query
        description: |-
          The account's email address.

          **Warning:**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently-authenticated email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: enable_auto_whitelist
        in: query
        description: |-
          Whether to enable automatic whitelisting for the account.

          * `1` - Enable.
          * `0` - Disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: from_addresses
        in: query
        description: A comma-separated list of email addresses that the system uses
          when it sends messages back to the original message senders.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email-csv
          example: "sender1@test.com,sender2@test.com"
      - name: queue_days
        in: query
        description: The number of days to retain log files and queued messages.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 14
      - name: whitelist_by_association
        in: query
        description: |-
          Whether to whitelist the email addresses in a message's *To* and *From* sections, including carbon-copied (CC) recipients.

          * `1` - Whitelist.
          * `0` - Do **not** whitelist.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: from_name
        in: query
        description: The name of the person who owns the email account.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: User
      - name: spam_score
        in: query
        description: |-
          The account's Apache SpamAssassinâ¢ threshold score. For more information about Apache SpamAssassin threshold scores, read our [Spam Filters](https://go.cpanel.net/cpaneldocsSpamFilters) documentation.

          **Note:**

          This parameter defaults to the account's current configuration.
        required: false
        style: form
        explode: true
        schema:
          type: number
          example: 2.5
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_34"
  /BoxTrapper/save_email_template:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Save BoxTrapper message template contents
      description: |-
        This function saves the contents of a BoxTrapper message template.

        **Important:**

        When you disable the [_Receive Mail_ role](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: save_email_template
      parameters:
      - name: contents
        in: query
        description: |-
          The template file's contents.

          You can use [variables](https://go.cpanel.net/cpaneldocsBoxTrapper) in the template
          to include details about the original message.

          **Important:**

          * You **must** include `To: %email%` in this parameter's value.
          * If you use the `verify` template, you **must** include `Subject: verify#%msgid%` in this parameter's value.
          * This value cannot exceed four kilobytes (KB).
          * You **must** URI-encode this parameter's value when using the CLI.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: |-
            To: %email%
            Subject: Re: %subject%

            The user %acct% does not accept mail from your address.

            The headers of the message sent from your address are shown below:

            %headers%
      - name: email
        in: query
        description: |-
          The account's email address.

          **Warning:**

          If you call this function in Webmail, the system overrides this parameter.

          **Note:**

          This parameterÂ defaults to the current email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: template
        in: query
        description: |-
          The message template.

          * `blacklist`
          * `returnverify`
          * `verifyreleased`
          * `verify`

          **Important:**

          If you use the `verify` template, you **must** include `Subject: verify#%msgid%` in this parameter's value.

          **Note:**

          For more information about each template, read our [BoxTrapper documentation](https://go.cpanel.net/cpaneldocsBoxTrapper).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: blacklist
          enum:
          - blacklist
          - returnverify
          - verifyreleased
          - verify
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_35"
  /BoxTrapper/set_allowlist:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Update account BoxTrapper allowlist
      description: |-
        This function sets the BoxTrapper allowlist configuration rules. BoxTrapper will deliver emails that match these rules.

        **Important:**

        When you disable the
        [*Receive Mail* role](https://go.cpanel.net/serverroles),
        the system **disables** this function.
      operationId: BoxTrapper::set_allowlist
      parameters:
      - name: email
        in: query
        description: |-
          A valid email address on the cPanel account.

          **Warning:**

          If you call this function in Webmail, the system overrides this parameter.
          This parameter defaults to the current email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: rules
        in: query
        description: |-
          An array of allowlist rules.

          **Note:**

          You can set multiple allowlist rules, duplicate or increment the parameter name. For example,
          `rules-1`, `rules-2`, and `rules-3`.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        examples:
          multiple:
            summary: Set multiple rules.
            value: rules-1='allowlisted-email\@domain\.com' rules-2='from allowlisted-email2\@domain\.com'
              rules-3='to domain2\.com'
          multiple-alternative:
            summary: Set multiple rules.
            value: rules='allowlisted-email\@domain\.com' rules='from allowlisted-email2\@domain\.com'
              rules='to domain2\.com'
          single:
            summary: Set a single rule.
            value: allowlisted-email\@domain\.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_36"
  /BoxTrapper/set_blocklist:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Update account BoxTrapper blocklist
      description: |-
        This function sets the BoxTrapper blocklist configuration rules. BoxTrapper will delete messages that match these rules and send a notification to the sender.

        **Important:**

        When you disable the
        [*Receive Mail* role](https://go.cpanel.net/serverroles),
        the system **disables** this function.
      operationId: BoxTrapper::set_blocklist
      parameters:
      - name: email
        in: query
        description: |-
          A valid email address on the cPanel account.

          **Warning:**

          If you call this function in Webmail, the system overrides this parameter.
          This parameter defaults to the current email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: rules
        in: query
        description: |-
          An array of blocklist rules.

          **Note:**

          You can set multiple block rules, duplicate or increment the parameter name. For example,
          `rules-1`, `rules-2`, and `rules-3`.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        examples:
          multiple:
            summary: Set multiple rules.
            value: rules-1='blocklisted-email\@domain\.com' rules-2='from blocklisted-email2\@domain\.com'
              rules-3='to domain2\.com'
          multiple-alternative:
            summary: Set multiple rules.
            value: rules='blocklisted-email\@domain\.com' rules='from blocklisted-email2\@domain\.com'
              rules='to domain2\.com'
          single:
            summary: Set a single rule.
            value: blocklisted-email\@domain\.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_37"
  /BoxTrapper/set_forwarders:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Add email address to BoxTrapper forwarders
      description: |-
        This function adds a list of email addresses to which BoxTrapper forwards email messages.

        **Important:**

          When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: set_forwarders
      parameters:
      - name: email
        in: query
        description: |-
          The account's email address.

          **Warning:**

          If you call this function
          in Webmail, the system ignores this parameter and uses the currently-authenticated
          email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      - name: forwarder
        in: query
        description: The email addresses to which to forward email messages.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            format: email
            example: user1@example.com
        example:
        - user1@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_38"
  /BoxTrapper/set_ignorelist:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Update account BoxTrapper ignorelist
      description: |-
        This function sets the BoxTrapper ignorelist configuration rules. BoxTrapper will delete messages that match these rules without sending a notification to the sender.

        **Important:**

        When you disable the
        [*Receive Mail* role](https://go.cpanel.net/serverroles),
        the system **disables** this function.
      operationId: BoxTrapper::set_ignorelist
      parameters:
      - name: email
        in: query
        description: |-
          A valid email address on the cPanel account.

          **Warning:**

          If you call this function in Webmail, the system overrides this parameter.
          This parameter defaults to the current email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: rules
        in: query
        description: |-
          An array of ignorelist rules.

          **Note:**

          You can set multiple ignore rules, duplicate or increment the parameter name. For example,
          `rules-1`, `rules-2`, and `rules-3`.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        examples:
          multiple:
            summary: Set multiple rules.
            value: rules-1='ignored-email\@domain\.com' rules-2='from ignored-email2\@domain\.com'
              rules-3='to domain2\.com'
          multiple-alternative:
            summary: Set multiple rules.
            value: rules='ignored-email\@domain\.com' rules='from ignored-email2\@domain\.com'
              rules='to domain2\.com'
          single:
            summary: Set a single rule.
            value: ignored-email\@domain\.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_39"
  /BoxTrapper/set_status:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Enable or disable BoxTrapper for email account
      description: |-
        This function enables or disables BoxTrapper for an email account.

        **Important:**

          When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: set_status
      parameters:
      - name: email
        in: query
        description: |-
          The account's name. This can be an email address or the cPanel userâs username.

          **Warning:**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently-authenticated email address.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/email_1"
        example: user@example.com
      - name: enabled
        in: query
        description: |-
          Whether to enable or disable BoxTrapper for the email account.

          * `1` - Enable BoxTrapper.
          * `0` - **Disable** BoxTrapper.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_40"
  /BoxTrapper/whitelist_messages:
    get:
      tags:
      - BoxTrapper
      - Spam Prevention (BoxTrapper)
      summary: Add email address to BoxTrapper allowed senders
      description: |-
        This function whitelists email messages.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.

        **Note:**

        To retrieve email messages in the BoxTrapper queue from senders that you did not previously whitelist, use the UAPI `BoxTrapper::deliver_messages` function.
      operationId: whitelist_messages
      parameters:
      - name: queuefile
        in: query
        description: |-
          The filename of the email message to whitelist.

          **Note:**

          To get a list of filenames in an account's BoxTrapper queue, use the UAPI `BoxTrapper::list_queued_messages` function.

          **Note:**

          To whitelist multiple email messages, duplicate this parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.msg
        examples:
          multiple:
            summary: Whitelist multiple messages.
            value: queuefile=ex1.msg&queuefile=ex2.msg&queuefile=ex3.msg
          single:
            summary: Whitelist a single message.
            value: example.msg
      - name: email
        in: query
        description: |-
          The cPanel account email address for which to whitelist messages.

          **Warning**

          If you call this function in Webmail, the system ignores this parameter and defaults to the currently-authenticated email address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_41"
  /Branding/get_application_information:
    get:
      tags:
      - Branding
      - Application Information
      summary: Return single app's info from dynamicui.conf
      description: This function retrieves an application's information from the `dynamicui.conf`
        file.
      operationId: get_application_information
      parameters:
      - name: app_key
        in: query
        description: "The application's feature name. This value **must** match a\
          \ feature's `app_key` value. For a list of app_key values, read our [Guide\
          \ to cPanel Interface Customization - Appkeys](https://go.cpanel.net/appkey)\
          \ documentation."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: boxtrapper
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_42"
  /Branding/get_applications:
    get:
      tags:
      - Branding
      - Application Information
      summary: Return multiple apps' info from dynamicui.conf
      description: This function retrieves an application's information from a specific
        theme's `dynamicui.conf` file.
      operationId: get_applications
      parameters:
      - name: app_keys
        in: query
        description: |-
          A comma-separated list of an application feature names. If you do not specify this parameter,
          the output will include all of the applications that the `dynamicui.conf` file contains.

          **Note:**

          * This value must match an application's `feature` value in the `dynamicui.conf` file.
          * For more information, read our [Guide to cPanel Interface Customization - Appkeys](https://go.cpanel.net/appkey) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "addon_domains,ftp_accounts,anonymous_ftp"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_43"
  /Branding/get_available_applications:
    get:
      tags:
      - Branding
      - Application Information
      summary: Return current user's cPanel application details
      description: This function retrieves information about the groups and applications
        in the authenticated user's cPanel interface.
      operationId: get_available_applications
      parameters:
      - name: nvarglist
        in: query
        description: |-
          A pipe-separated list of group names denoting the order in which to sort the
          groups. If you do not supply a value, the function does not sort the groups.

          **Note:**

          `arglist` is an alias for this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: pref|software|domains
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_44"
  /Branding/get_information_for_applications:
    get:
      tags:
      - Branding
      - Application Information
      summary: Return app's info from sitemap.json
      description: |-
        This function retrieves an application's information from a specific
        theme's `sitemap.json` file.
      operationId: get_information_for_applications
      parameters:
      - name: docroot
        in: query
        description: |-
          The absolute path to the directory containing the `sitemap.json` file.
          This is the path to your theme's document root.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /usr/local/cpanel/base/webmail/jupiter
      - name: app_keys
        in: query
        description: |-
          A comma-separated list of Appkey names. If you do **not**
          specify this parameter, the output will include all of the applications that the
          `sitemap.json` file contains.

          **Note:**

          This value **must** match an application's `key` value in the `sitemap.json` file.
          For more information, read our
          [Guide to cPanel Interface Customization - Appkeys](https://go.cpanel.net/appkey)
          documentation.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: email_filters
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_45"
  /CCS/add_delegate:
    get:
      tags:
      - CCS
      - Calendar and Contacts Server
      summary: Add calendar delegation
      description: |-
        This function delegates a user's calendar to another user.

        **Note:**

        You **must** install the [Calendar and Contacts Server](https://go.cpanel.net/CalendarAndContactsServer) cPanel plugin to access this API function.
      operationId: add_delegate
      parameters:
      - name: delegatee
        in: query
        description: The user to whom you wish to delegate the calendar.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: delegatee@cptest.test
      - name: delegator
        in: query
        description: The calendar's owner.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: delegator@cptest.test
      - name: readonly
        in: query
        description: |-
          Whether the delegatee will only have read-only access on the calendar.
          * `1` - Read-only access.
          * `0` - Full access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_46"
      x-cpanel-minimum-compatible-version: 80
      x-cpanel-rpm: cpanel-ccs-calendarserver
      x-cpanel-rpm-version: 69
  /CCS/list_delegates:
    get:
      tags:
      - CCS
      - Calendar and Contacts Server
      summary: List cPanel account's calendar delegates
      description: |-
        This function lists all [calendar delegates](https://docs.cpanel.net/cpanel/email/calendar-delegation/) on the cPanel account.

        **Note:**

        You **must** install the [Calendar and Contacts Server](https://go.cpanel.net/CalendarAndContactsServer) cPanel plugin to access this API function.
      operationId: list_delegates
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_47"
  /CCS/list_users:
    get:
      tags:
      - CCS
      - Calendar and Contacts Server
      summary: List cPanel account's calendar users
      description: |-
        This function lists all calendar users on the cPanel account.

        **Note:**

        You **must** install the [Calendar and Contacts Server](https://go.cpanel.net/CalendarAndContactsServer) cPanel plugin to access this API function.
      operationId: list_users
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_48"
  /CCS/remove_delegate:
    get:
      tags:
      - CCS
      - Calendar and Contacts Server
      summary: Remove calendar delegation
      description: |-
        This function removes a delegate from another user's calendar.

        **Note:**

        You **must** install the [Calendar and Contacts Server](https://go.cpanel.net/CalendarAndContactsServer) cPanel plugin to access this API function.
      operationId: remove_delegate
      parameters:
      - name: delegatee
        in: query
        description: The user from whom you wish to remove delegation rights.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user2@example.com
      - name: delegator
        in: query
        description: The calendar's owner.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user1@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_49"
  /CCS/update_delegate:
    get:
      tags:
      - CCS
      - Calendar and Contacts Server
      summary: Update calendar delegation
      description: |-
        This function updates the delegation of a user's calendar to another user.

        **Note:**

        You **must** install the [Calendar and Contacts Server](https://go.cpanel.net/CalendarAndContactsServer) cPanel plugin to access this API function.
      operationId: update_delegate
      parameters:
      - name: delegatee
        in: query
        description: The user to whom you delegated the calendar.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user2@example.com
      - name: delegator
        in: query
        description: The calendar's owner.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user1@example.com
      - name: readonly
        in: query
        description: |-
          Whether the delegatee will only have read-only access on the calendar.
          * `1` - Read-only access.
          * `0` - Full access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_50"
  /CPDAVD/add_delegate:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Share a calendar
      description: This function adds a share for the specified calendar.
      operationId: CPDAVD_add_delegate
      parameters:
      - name: calendar
        in: query
        description: The calendar to share.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: calendar
      - name: delegatee
        in: query
        description: The person to whom you will share the calendar.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: second@example.com
      - name: delegator
        in: query
        description: "The owner of the calendar, who wishes to share it to another\
          \ user."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: first@example.com
      - name: readonly
        in: query
        description: "If set, the provided access will be read-only."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_51"
  /CPDAVD/list_delegates:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: List calendar sharing.
      description: This function lists the sharing configuration in calendars for
        this account.
      operationId: CPDAVD_list_delegates
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_52"
  /CPDAVD/list_users:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Update calendar sharing
      description: This function lists the users that are available for use with CalDAV
        and CardDAV
      operationId: CPDAVD_list_users
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_53"
  /CPDAVD/manage_collection:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Perform an operation on a calendar or address book.
      description: "This function creates, updates, or deletes a collection."
      operationId: CPDAVD_manage_collection
      parameters:
      - name: account
        in: query
        description: The owner of the calendar.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      - name: action
        in: query
        description: "The action to perform (create, update, or delete a collection)."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: delete
          enum:
          - create
          - update
          - delete
      - name: collection_type
        in: query
        description: The collection type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: calendar
          enum:
          - calendar
          - addressbook
      - name: path
        in: query
        description: The path to the collection.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /calendars/user@example.com/mycalendar
      - name: calendar-color
        in: query
        description: "The color of the calendar, if applicable."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "#ee5555"
      - name: description
        in: query
        description: The description of the collection.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: This is my calendar.
      - name: name
        in: query
        description: The name of the collection. Required when creating a collection.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: My Calendar
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_54"
  /CPDAVD/remove_delegate:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Remove a share.
      description: This function removes a share for the specified calendar.
      operationId: CPDAVD_remove_delegate
      parameters:
      - name: calendar
        in: query
        description: The calendar that was shared.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: calendar
      - name: delegatee
        in: query
        description: The person to whom the calendar was shared.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: second@example.com
      - name: delegator
        in: query
        description: "The owner of the calendar, who wishes to remove the sharing."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: first@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_55"
  /CPDAVD/update_delegate:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Update calendar sharing.
      description: This function updates a share for the specified calendar.
      operationId: CPDAVD_update_delegate
      parameters:
      - name: calendar
        in: query
        description: The calendar to share.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: calendar
      - name: delegatee
        in: query
        description: The person to whom you will share the calendar.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: second@example.com
      - name: delegator
        in: query
        description: "The owner of the calendar, who wishes to change the details\
          \ of the sharing."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: first@example.com
      - name: readonly
        in: query
        description: "If set, the provided access will be read-only."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_56"
  /CSVImport/doimport:
    get:
      tags:
      - CSVImport
      - Email Accounts
      summary: Import email accounts from CSV file
      description: This function imports email accounts from an already uploaded CSV
        file.
      operationId: CSVImport::doimport
      parameters:
      - name: domain
        in: query
        description: The domain under which to add the email accounts.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: id
        in: query
        description: The unique ID of the import operation. The cPanel API 2 CSVImport::uploadimport
          function generates this ID and stores it in the `CPVAR` attribute named
          `csvimportid`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Leq58oid3sF3Moye3_YbJGqoMvCb7M4j
      - name: type
        in: query
        description: |-
          The type of email address to add.

          * `email` â A regular email account.
          * `fwd` â A forwarder.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: email
          enum:
          - email
          - fwd
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_57"
  /CacheBuster/read:
    get:
      tags:
      - CacheBuster
      - Browser Cache Management
      summary: Return web browser cached file override ID
      description: |-
        This function returns the current `CacheBuster` id. The system uses this ID to force the browser to fetch a new resource when that resource already exists in the web browser cache. This is useful when an application has updated the resource on the server. You should append this ID to the end of the url in the query-string. For example, if you are accessing a url like:

        `https://example.com/styled/basic/sprites/icon_spritemap.css`

         To force the browser to fetch the updated version, you would append the following:

         `https://example.com/styled/basic/sprites/icon_spritemap.css?<CacheBusterID>`

         **Note**

         The application that updates the resource at this url on the server **must** call the `CacheBuster::update` function when it updates the resource to signify that update.
      operationId: CacheBuster-read
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_58"
  /CacheBuster/update:
    get:
      tags:
      - CacheBuster
      - Browser Cache Management
      summary: Create web browser cached file override ID
      description: This function generates a random integer (the CacheBuster ID).
        Use this ID to work with and around a browser's caching mechanism.
      operationId: update
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_59"
  /Chkservd/get_exim_ports:
    get:
      tags:
      - Chkservd
      - Mail Server Information
      summary: Return outgoing (SMTP) mail port
      description: This function lists the ports on which Exim listens.
      operationId: get_exim_ports
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_60"
  /Chkservd/get_exim_ports_ssl:
    get:
      tags:
      - Chkservd
      - Mail Server Information
      summary: Return outgoing mail (SMTP) SSL-secured port
      description: This function retrieves Exim's SSL port.
      operationId: get_exim_ports_ssl
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_61"
  /Chrome/get_dom:
    get:
      tags:
      - Chrome
      - Brand Management
      summary: Return cPanel theme header and footer HTML
      description: This function returns header and footer HTML. You can use this
        HTML to create a page with the same visual appearance as your cPanel theme.
      operationId: get_dom
      parameters:
      - name: page_title
        in: query
        description: The title of the page to wrap in the theme's headers and footers.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Test
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_62"
  /ClamScanner/check_disinfection_status:
    get:
      tags:
      - ClamScanner
      - Antivirus Protection (ClamAV)
      summary: Request disinfection process status
      description: |-
        This function checks the status of the previously queued disinfection
        of infected files.

        **Note:**

        You must run the APIs in this order:

        1. Run [`ClamScanner::start_scan`](https://go.cpanel.net/ClamScanner-start-scan) to start the virus scan.
        2. Run [`ClamScanner::get_scan_status`](https://go.cpanel.net/ClamScanner-get-scan-status) in a loop until the scan is finished.
        3. Run [`ClamScanner::list_infected_files`](https://go.cpanel.net/ClamScanner-list-infected-files) to get a report of the complete list of infected files.
        4. Decide how you want to handle each infected file.
        5. Run [`ClamScanner::disinfect_files`](https://go.cpanel.net/ClamScanner-disinfect-files) to queue the disinfection of the files.
        6. Run [`ClamScanner::check_disinfection_status`](https://go.cpanel.net/ClamScanner-check-disinfection-status) in a loop until you get a done status.

        If you want to display the progress, you can render the `ClamScanner::check_disinfection_status` returned 'result{data}{details}' array where the `type` is `step`.

        Each `step` record indicates the action taken on a specific file in the set being processed.
      operationId: ClamScanner::check_disinfection_status
      parameters:
      - name: last_id
        in: query
        description: |-
          The unique `id` of the message you last received from this same log.

          The API will return only the records after the specified `last_id`.

          If this parameter is not provided, the entire log is returned.

          **Note:**

          For improved performance, we recommend applications include the last record ID (last_id)
          from a previous call to this API, so only messages since the previous API call are returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 10
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_63"
  /ClamScanner/disinfect_files:
    post:
      tags:
      - ClamScanner
      - Antivirus Protection (ClamAV)
      summary: Start disinfecting files with viruses
      description: |-
        This function applies the disinfection option selected by the user
        for each infected file.

        **Note:**

        You must run the APIs in this order:

        1. Run [`ClamScanner::start_scan`](https://go.cpanel.net/ClamScanner-start-scan) to start the virus scan.
        2. Run [`ClamScanner::get_scan_status`](https://go.cpanel.net/ClamScanner-get-scan-status) in a loop until the scan is finished.
        3. Run [`ClamScanner::list_infected_files`](https://go.cpanel.net/ClamScanner-list-infected-files) to get a report of the complete list of infected files.
        4. Decide how you want to handle each infected file.
        5. Run [`ClamScanner::disinfect_files`](https://go.cpanel.net/ClamScanner-disinfect-files) to queue the disinfection of the files.
        6. Run [`ClamScanner::check_disinfection_status`](https://go.cpanel.net/ClamScanner-check-disinfection-status) in a loop until you get a done status.
      operationId: disinfect_files
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClamScanner_disinfect_files_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_64"
  /ClamScanner/get_scan_paths:
    get:
      tags:
      - ClamScanner
      - Antivirus Protection (ClamAV)
      summary: Return virus scan types
      description: |-
        This function gets the available local paths that a cPanel account is permitted to scan.

        **Note**:

        The system determines the available scan types based on what the system administrator has set in WHM's [Configure ClamAVÂ®](https://go.cpanel.net/configureclamavscanner) page.

        **Note**:

        You must run the APIs in this order:

        1. Run [`ClamScanner::start_scan`](https://go.cpanel.net/ClamScanner-start-scan) to start the virus scan.
        2. Run [`ClamScanner::get_scan_status`](https://go.cpanel.net/ClamScanner-get-scan-status) in a loop until the scan is finished.
        3. Run [`ClamScanner::list_infected_files`](https://go.cpanel.net/ClamScanner-list-infected-files) to get a report of the complete list of infected files.
        4. Decide how you want to handle each infected file.
        5. Run [`ClamScanner::disinfect_files`](https://go.cpanel.net/ClamScanner-disinfect-files) to queue the disinfection of the files.
        6. Run [`ClamScanner::check_disinfection_status`](https://go.cpanel.net/ClamScanner-check-disinfection-status) in a loop until you get a done status.
      operationId: ClamScanner::get_scan_paths
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_65"
  /ClamScanner/get_scan_status:
    get:
      tags:
      - ClamScanner
      - Antivirus Protection (ClamAV)
      summary: Request virus scan status
      description: |-
        This function gets the status of a ClamAVÂ® scan on a directory.

        **Note**:

        You must run the APIs in this order:

        1. Run [`ClamScanner::start_scan`](https://go.cpanel.net/ClamScanner-start-scan) to start the virus scan.
        2. Run [`ClamScanner::get_scan_status`](https://go.cpanel.net/ClamScanner-get-scan-status) in a loop until the scan is finished.
        3. Run [`ClamScanner::list_infected_files`](https://go.cpanel.net/ClamScanner-list-infected-files) to get a report of the complete list of infected files.
        4. Decide how you want to handle each infected file.
        5. Run [`ClamScanner::disinfect_files`](https://go.cpanel.net/ClamScanner-disinfect-files) to queue the disinfection of the files.
        6. Run [`ClamScanner::check_disinfection_status`](https://go.cpanel.net/ClamScanner-check-disinfection-status) in a loop until you get a done status.
      operationId: ClamScanner::get_scan_status
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_66"
  /ClamScanner/list_infected_files:
    get:
      tags:
      - ClamScanner
      - Antivirus Protection (ClamAV)
      summary: Return infected file list
      description: |-
        This function lists infected files from a ClamAVÂ® virus scan.

        **Note**:

        You must run the APIs in this order:

        1. Run [`ClamScanner::start_scan`](https://go.cpanel.net/ClamScanner-start-scan) to start the virus scan.
        2. Run [`ClamScanner::get_scan_status`](https://go.cpanel.net/ClamScanner-get-scan-status) in a loop until the scan is finished.
        3. Run [`ClamScanner::list_infected_files`](https://go.cpanel.net/ClamScanner-list-infected-files) to get a report of the complete list of infected files.
        4. Decide how you want to handle each infected file.
        5. Run [`ClamScanner::disinfect_files`](https://go.cpanel.net/ClamScanner-disinfect-files) to queue the disinfection of the files.
        6. Run [`ClamScanner::check_disinfection_status`](https://go.cpanel.net/ClamScanner-check-disinfection-status) in a loop until you get a done status.
      operationId: ClamScanner::list_infected_files
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_67"
  /ClamScanner/start_scan:
    get:
      tags:
      - ClamScanner
      - Antivirus Protection (ClamAV)
      summary: Start virus scan
      description: |-
        This function starts a ClamAVÂ® scan on a directory.

        **Note**:

        You must run the APIs in this order:

        1. Run [`ClamScanner::start_scan`](https://go.cpanel.net/ClamScanner-start-scan) to start the virus scan.
        2. Run [`ClamScanner::get_scan_status`](https://go.cpanel.net/ClamScanner-get-scan-status) in a loop until the scan is finished.
        3. Run [`ClamScanner::list_infected_files`](https://go.cpanel.net/ClamScanner-list-infected-files) to get a report of the complete list of infected files.
        4. Decide how you want to handle each infected file.
        5. Run [`ClamScanner::disinfect_files`](https://go.cpanel.net/ClamScanner-disinfect-files) to queue the disinfection of the files.
        6. Run [`ClamScanner::check_disinfection_status`](https://go.cpanel.net/ClamScanner-check-disinfection-status) in a loop until you get a done status.
      operationId: ClamScanner::start_scan
      parameters:
      - name: scan_type
        in: query
        description: |-
          The type of directory to scan.

          * `home` â User's entire home directory
          * `mail` â User's email directory
          * `public_html` â User's web directory
          * `public_ftp` â User's ftp directory
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: home
          enum:
          - home
          - mail
          - public_html
          - public_ftp
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_68"
  /ContactInformation/set_email_addresses:
    get:
      tags:
      - ContactInformation
      - Contact Information
      summary: Set contact email address(es)
      description: |-
        Use this function to set an account's contact email address(es).

        To unset all contact email addresses, call `unset_email_addresses`.
      operationId: contactinformation-set_email_addresses
      parameters:
      - name: address
        in: query
        description: The accountâs new contact email addresses.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: email
        example:
        - foo@example.com
        - bar@example.com
      - name: old_address
        in: query
        description: |-
          The accountâs existing contact email addresses.

          If this list does not match the accountâs current current email address(es),
          then the request will fail. This control is here to prevent
          race conditions.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: email
        example:
        - old1@example.com
      - name: password
        in: query
        description: The accountâs password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: q1df%D9<z0ShqdxRP%^
      responses:
        "200":
          description: Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_69"
  /ContactInformation/unset_email_addresses:
    get:
      tags:
      - ContactInformation
      - Contact Information
      summary: Unset contact email addresses
      description: |-
        Use this function to unset all contact email address for an account.

        To set contact email address(es), call `set_email_addresses`.
      operationId: contactinformation-unset_email_addresses
      parameters:
      - name: old_address
        in: query
        description: |-
          The accountâs existing contact email addresses.

          If this list does not match the accountâs current current email address(es),
          then the request will fail. This control is here to prevent
          race conditions.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: email
        example:
        - old1@example.com
      - name: password
        in: query
        description: The accountâs password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: q1df%D9<z0ShqdxRP%^
      responses:
        "200":
          description: Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_70"
  /Contactus/is_enabled:
    get:
      tags:
      - Contactus
      - Contact Information
      summary: Return whether contact option is enabled
      description: This function checks whether the cPanel account can contact their
        hosting provider from the cPanel interface.
      operationId: is_enabled
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_71"
  /DAV/disable_shared_global_addressbook:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Disable global address book
      description: This function disables the shared global address book for the current
        cPanel account's webmail accounts.
      operationId: disable_shared_global_addressbook
      parameters:
      - name: name
        in: query
        description: "cPanel account username or a Webmail user's email address. If\
          \ you do **not** specify a user, this parameter defaults to the currently-authenticated\
          \ user."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_72"
  /DAV/enable_shared_global_addressbook:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Enable global address book
      description: This function enables the shared global address book for the current
        cPanel account's webmail accounts.
      operationId: enable_shared_global_addressbook
      parameters:
      - name: name
        in: query
        description: "cPanel account username or a Webmail user's email address. If\
          \ you do **not** specify a user, this parameter defaults to the currently-authenticated\
          \ user."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_73"
  /DAV/get_calendar_contacts_config:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Return CalDAV and CardDAV connection information
      description: This function returns the connection information to set up the
        CalDAV and CardDAV clients.
      operationId: get_calendar_contacts_config
      parameters:
      - name: user
        in: query
        description: |-
          A cPanel account or valid email account user.

          If you do **not** include this parameter, the function defaults to the current
          authenticated user.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/user"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_74"
  /DAV/has_shared_global_addressbook:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Return whether global address book is enabled
      description: This function checks whether the shared global address book is
        enabled on the current cPanel account's webmail accounts.
      operationId: has_shared_global_addressbook
      parameters:
      - name: name
        in: query
        description: "cPanel account user name or a Webmail user's email address.\
          \ If you do **not** specify a user, this parameter defaults to the currently-authenticated\
          \ user."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_75"
  /DAV/is_dav_service_enabled:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Return whether DAV is enabled
      description: This function checks whether the DAV service is enabled.
      operationId: is_dav_service_enabled
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_76"
  /DAV/is_horde_enabled:
    get:
      tags:
      - DAV
      - Calendar and Contacts (DAV)
      summary: Return whether Horde is enabled
      description: "This function checks whether Horde is enabled. Since Horde is\
        \ no longer installed with the product, the return value will only ever be\
        \ 0."
      operationId: is_horde_enabled
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_77"
  /DCV/check_domains_via_dns:
    post:
      tags:
      - DCV
      - Verify Domain Ownership
      summary: Verify domain ownership via DNS
      description: This function checks whether the account's domains can pass Domain
        Control Validation (DCV) via a DNS request.
      operationId: check_domains_via_dns
      parameters:
      - name: domain
        in: query
        description: |-
          The domain or domains to check.

          **Note:**

           To check multiple domains, increment the parameter name. For example, `domain-0`, `domain-1`, and `domain-2`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
        examples:
          multiple:
            summary: Check multiple domains.
            value: domain-0=example.com&domain-1=example2.com
          single:
            summary: Check a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_78"
  /DCV/check_domains_via_http:
    get:
      tags:
      - DCV
      - Verify Domain Ownership
      summary: Verify domain ownership via HTTP
      description: This function checks whether the account's domains can pass Domain
        Control Validation (DCV) via an HTTP request.
      operationId: check_domains_via_http
      parameters:
      - name: domain
        in: query
        description: |-
          The domains to check.

          **Note:**

          To check more than one domain, repeat or increment the parameter name. For
          example, `domain-1`, `domain-2`, and `domain-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Check multiple domains.
            value: domain-1=example.com&domain-2=example2.com&domain-3=example2.com
          single:
            summary: Check a single domain.
            value: example.com
      - name: dcv_file_allowed_characters
        in: query
        description: An array of characters that the certificate providerÂ allows in
          the DCV check file's filename.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          default:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - "N"
          - O
          - P
          - Q
          - R
          - S
          - T
          - U
          - V
          - W
          - X
          - "Y"
          - Z
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
      - name: dcv_file_extension
        in: query
        description: The DCV check file extension that the certificate providerÂ requires.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: txt
          default: ""
      - name: dcv_file_random_character_count
        in: query
        description: The number of characters that the certificate providerÂ allows
          in the DCV check file's filename.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 32
          default: 100
      - name: dcv_file_relative_path
        in: query
        description: "The DCV check file's file path, relative to the domain's document\
          \ `root` directory."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: .well-known/pki-validation
          default: .well-known/pki-validation
      - name: dcv_max_redirects
        in: query
        description: |-
          The number of domain redirects the system permits the DCV check to follow. The function checks the provider's supported number of redirects.
          It will then return the `redirect` array of objects for the passed value, plus one. This ensures the functionÂ will display any redirects causing DCV failures, if any exist.

          **Note:**

          * If you pass a `0` value, this function does **not** limit the number of redirect returns.
          * Use the `Market::get_provider_specific_dcv_constraints` UAPI function to list a provider's supported number of redirects.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          nullable: true
          example: 2
      - name: dcv_user_agent_string
        in: query
        description: |-
          The [user agent string](https://wikipedia.org/wiki/User_agent) that the system uses for the imitated local DCV check.

          **Important:**

          The default value can change at any time.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: SECTIGO+DCV
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_79"
  /DCV/ensure_domains_can_pass_dcv:
    get:
      tags:
      - DCV
      - Verify Domain Ownership
      summary: Verify domain ownership
      description: |-
        This function indicates whether the account's domains can pass a Domain Control
        Validation (DCV) check.

        **Warning:**

        We deprecated this function. Use UAPI's `DCV::check_domains_via_http` function.
      operationId: ensure_domains_can_pass_dcv
      parameters:
      - name: domain
        in: query
        description: |-
          The domains to check.

          **Note:**

           To check multiple domains, duplicate or increment the parameter name. For example,
           `domain-1`, `domain-2`, and `domain-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Check multiple domains.
            value: domain-1=example1.com domain-2=example2.com domain-3=example3.com
          multiple-alternative:
            summary: Check multiple domains.
            value: domain=example1.com domain=example2.com domain=example3.com
          single:
            summary: Check a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_80"
      deprecated: true
  /DNS/ensure_domains_reside_only_locally:
    get:
      tags:
      - DNS
      - DNS Information
      summary: Return whether domains only resolve locally
      description: This function indicates whether the account's domains resolve exclusively
        to this server.
      operationId: ensure_domains_reside_only_locally
      parameters:
      - name: domain
        in: query
        description: |-
          The domain to check.

          **Note:**

          To check multiple domains, duplicate or increment the parameter name. For example, to exclude three domains, you could:
          * Use the `domain` parameter multiple times.
          * Use the `domain`, `domain-1`, and `domain-2` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example1.com
        examples:
          multiple:
            summary: Multiple domains
            value: domain=example.com&domain-1=example1.com&domain-2=example2.com
          multiple-alternative:
            summary: Multiple domains
            value: domain=example.com&domain=example1.com&domain=example2.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_81"
  /DNS/has_local_authority:
    get:
      tags:
      - DNS
      - DNS Information
      summary: Return whether local DNS server is authoritative
      description: This function checks whether the local server is authoritative
        for the domain's DNS records.
      operationId: has_local_authority
      parameters:
      - name: domain
        in: query
        description: |-
          The domain to check whether the local server is authoritative for the domain's
          DNS records.

          **Note:**

          To check multiple domains, increment or duplicate the parameter name. For
          example, `domain-0`,Â `domain-1`, andÂ `domain-2`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
        examples:
          multiple:
            summary: Check multiple domains.
            value: domain-0=example.com domain-1=example1.com domain-2=example2.com
          multiple-alternative:
            summary: Check multiple domains.
            value: domain=example.com domain=example1.com domain=example2.com
          single:
            summary: Check a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_82"
  /DNS/is_alias_available:
    get:
      tags:
      - DNS
      - DNS Information
      summary: Return `ALIAS` DNS record availability & resolver
      description: |-
        This function returns whether `ALIAS` and `ANAME` records are available and the value of the running PowerDNS (PDNS) `resolver` setting, if any exists.
        For more information, read our [`ALIAS` documentation](https://go.cpanel.net/dns-alias-record).
      operationId: DNS::is_alias_available
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_83"
  /DNS/lookup:
    get:
      tags:
      - DNS
      - DNS Information
      summary: Return domain's DNS information
      description: This function returns DNS zone information about a domain.
      operationId: dns-lookup
      parameters:
      - name: domain
        in: query
        description: A fully qualified domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_84"
  /DNS/mass_edit_zone:
    get:
      tags:
      - DNS
      - DNS Information
      summary: Update a DNS zone
      description: |-
        This function updates a given DNS zone. It can add, edit,
        and remove many records in a single call. It also ensures
        that each record not removed will occupy the same
        number of lines after the edit as it did before the edit.
      operationId: dns-mass_edit_zone
      parameters:
      - name: serial
        in: query
        description: |-
          The current serial number in the DNS zoneâs SOA (Start of Authority)
          record. If this value does not match the zoneâs current state, the
          request fails.
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 202001010100
      - name: zone
        in: query
        description: The name of one of the userâs DNS zones.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: add
        in: query
        description: |-
          The records to add to the zone. Each item must be a serialized
          JSON object that contains:

          * `dname` â The recordâs name.
          * `ttl` â The recordâs TTL (Time-To-Live) value.
          * `record_type` â The recordâs type. For example, `A` or `TXT`.
          * `data` â An array of strings. The format and number of the
            strings depend on the `record_type` value.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: json
        examples:
          a:
            description: An A record.
            value: "'{\"dname\":\"example\", \"ttl\":14400, \"record_type\":\"A\"\
              , \"data\":[\"11.22.33.44\"]}'"
          aaaa:
            description: A TXT record.
            value: "'{\"dname\":\"example\", \"ttl\":14400, \"record_type\":\"TXT\"\
              , \"data\":[\"string1\", \"string2\"]}'"
      - name: edit
        in: query
        description: |-
          The records to edit in the zone. Each item must be a serialized
          JSON object that contains:

          * `line_index` â The line number in the DNS zone where the record starts.
            This is a 0-based index, so to edit the first line in the file
            use the `0` value. To edit the second line, give `1`, and so forth.
          * `dname` â The recordâs name.
          * `ttl` â The recordâs TTL (Time-To-Live) value.
          * `record_type` â The recordâs new type. For example, `A` or `TXT`.
          * `data` â An array of strings. The format and number of the
            strings depend on the `record_type` value.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: json
            example: "'{\"line_index\": 9, \"dname\":\"example\", \"ttl\":14400, \"\
              record_type\":\"TXT\", \"data\":[\"string1\", \"string2\"]}'"
      - name: remove
        in: query
        description: The line indexes of records to remove from the zone.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            minimum: 0
            type: integer
            example: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_85"
  /DNS/parse_zone:
    get:
      tags:
      - DNS
      - DNS Information
      summary: Return a parsed DNS zone
      description: |-
        This function parses a given DNS zone.

        **Important:**

        Most DNS zones contain only 7-bit ASCII. However, it is possible for
        DNS zones to contain any binary sequence. An application that decodes
        this function's base64 output **must** be able to handle cases
        where the decoded octets do not match any specific character
        encoding.
      operationId: dns-parse_zone
      parameters:
      - name: zone
        in: query
        description: The name of one of the userâs DNS zones.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_86"
  /DNS/swap_ip_in_zones:
    get:
      tags:
      - DNS
      summary: Update IP addresses in zone files
      description: |-
        This function replaces a domain's IPv4 address in the DNS zone
        file with the specified destination IPv4 address.
      operationId: DNS-swap_ip_in_zones
      parameters:
      - name: dest_ip
        in: query
        description: The IPv4 address to use as the replacement in the zone files.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.0.2.1
      - name: domain
        in: query
        description: |-
          The domain to perform the zone file updates on.

          **Note:**

          To update multiple domains, increment or duplicate the parameter name. For
          example, `domain-0`, `domain-1`, and `domain-2`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
        examples:
          multiple:
            summary: Update multiple domains.
            value: example.com domain-1=example1.com domain-2=example2.com
          multiple-alternative:
            summary: Update multiple domains.
            value: example.com domain=example1.com domain=example2.com
          single:
            summary: Update a single domain.
            value: example.com
      - name: ftp_ip
        in: query
        description: |-
          The IPv4 address to use as the replacement for FTP records in the zone files.

          If this parameter is **not** provided, then the system will use the `dest_ip` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.0.2.1
      - name: source_ip
        in: query
        description: |-
          The IPv4 address to replace in the zone files. The detected source IPv4 address is one of:

          * If there is an A record for the root of the zone **and** the IP address is **not** a loopback address, then the system will use its address.
          * If there are any A records in the zone whose addresses are **not** loopback addresses, then the system will use the address of the first such A record in the zone file.
          * If no A records exist in the zone **or** all A records have loopback addresses, then the system will **not** update the zone file.

          If you do **not** call this parameter, the system will automatically detect the IP addresses in the zone files.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.0.2.0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_87"
  /DNSSEC/activate_zone_key:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Enable DNSSEC security key
      description: |-
        This function activates a DNSSEC security key.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: activate_zone_key
      parameters:
      - name: domain
        in: query
        description: The security key's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key_id
        in: query
        description: The security key's ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_88"
  /DNSSEC/add_zone_key:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Create DNSSEC security key
      description: |-
        This function generates a DNSSEC zone key for a domain.

        **Note:**

        * After you enable DNSSEC on the domain, you **must** add the DS records to your registrar.
        * You **cannot** modify the DNSSEC security key. To make any changes, you **must** disable (and delete) and re-create the DNSSEC security key.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_zone_key
      parameters:
      - name: algo_num
        in: query
        description: |-
          The algorithm that the system uses to generate the security key.

          * `5` â RSA/SHA-1
          * `6` â DSA-NSEC3-SHA1
          * `7` â RSASHA1-NSEC3-SHA1
          * `8` â RSA/SHA-256
          * `10` â RSA/SHA-512
          * `13` â ECDSA Curve P-256 with SHA-256
          * `14` â ECDSA Curve P-384 with SHA-384

          **Note:**

          We recommend that you use 'ECDSA Curve P-256 with SHA-256' if your registrar supports it.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 8
          enum:
          - 5
          - 6
          - 7
          - 8
          - 10
          - 13
          - 14
      - name: domain
        in: query
        description: The domain on which to enable DNSSEC.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key_type
        in: query
        description: |-
          The type of key to add.

          * `ksk`
          * `zsk`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ksk
          enum:
          - ksk
          - zsk
      - name: active
        in: query
        description: |-
          Whether to activate the newly-created key.

          * `1` â Activate the key.
          * `0` â Do **not** activate the key.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: key_size
        in: query
        description: "The key's size, in bits.\n\n**Note:**\n\nFor the following `algo_num`\
          \ and `key_type` parameters, the `key_size` defaults to the following values:\n\
          * `5` â ksk `2048` zsk `1024`\n* `6` â ksk `2048` zsk `1024`\n* `7` â ksk\
          \ `2048` zsk `1024`\n* `8` â ksk `2048` zsk `1024`\n* `10` â ksk `2048`\
          \ zsk `1024`\n* `13` â ksk `256` zsk `256`\n* `14` â ksk `384` zsk `384` "
        required: false
        style: form
        explode: true
        schema:
          maximum: 2048
          minimum: 256
          type: integer
          example: 2048
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_89"
  /DNSSEC/deactivate_zone_key:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Disable DNSSEC security key
      description: |-
        This function deactivates a DNSSEC security key.

        **Important:**

        When you disable the [*DNS* role](https://go.cpanel.net/serverroles/), the system **disables** this function.
      operationId: deactivate_zone_key
      parameters:
      - name: domain
        in: query
        description: The security key's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key_id
        in: query
        description: The security key's ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_90"
  /DNSSEC/disable_dnssec:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Disable DNSSEC
      description: |-
        This function disables DNSSEC on the domain.

        **Warning:**

         * This action is **irreversible**. If you disable DNSSEC on the domain, you will lose the associated keys. You can only retrieve the previous state with a full backup.
         * If you disable DNSSEC, you **must** remove the DNS records at the registrar.

        **Important:**

          When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: disable_dnssec
      parameters:
      - name: domain
        in: query
        description: |-
          The domain on which to disable DNSSEC.

          **Note:**

           To enable DNSSEC on multiple domains, increment the parameter name. For example: `domain-0`, `domain-1`, `domain-2`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: To enable DNSSEC on multiple domains.
            value: domain-0=example0.com&domain-1=example1.com&domain-2=example2.com
          single:
            summary: To enable DNSSEC on a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_91"
  /DNSSEC/enable_dnssec:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Enable DNSSEC
      description: |-
        This function enables DNSSEC on the domain.

        **Note:**

         * After you enable DNSSEC on the domain, you **must** add the DNS records to your registrar.
         * You **cannot** modify the DNSSEC security key. To make any changes, you **must** disable (and delete) and re-create the DNSSEC security key.

        **Important:**

          When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: enable_dnssec
      parameters:
      - name: domain
        in: query
        description: |-
          The domain on which to enable DNSSEC.

          **Note:**

           To enable DNSSEC on multiple domains, increment the parameter name. For example: `domain-0`, `domain-1`, `domain-2`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: To enable DNSSEC on multiple domains.
            value: domain-0=example0.com&domain-1=example1.com&domain-2=example2.com
          single:
            summary: To enable DNSSEC on a single domain.
            value: example.com
      - name: active
        in: query
        description: |-
          Whether to activate the newly-created key.

          * `1` â Activate the key.
          * `0` â Do **not** activate the key.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: algo_num
        in: query
        description: |-
          The algorithm that the system uses to generate the security key.

          * `5` â RSA/SHA-1
          * `6` â DSA-NSEC3-SHA1
          * `7` â RSASHA1-NSEC3-SHA1
          * `8` â RSA/SHA-256
          * `10` â RSA/SHA-512
          * `13` â ECDSA Curve P-256 with SHA-256
          * `14` â ECDSA Curve P-384 with SHA-384

          **Note:**

           We recommend that you use `ECDSA Curve P-256 with SHA-256` if your registrar supports it.
        required: false
        style: form
        explode: true
        schema:
          maximum: 255
          minimum: 0
          type: integer
          example: 8
          default: 8
      - name: key_setup
        in: query
        description: |-
          The manner in which the system creates the security key.

          * `simple` â Use a single key for both KSK and ZSK. Use this value when the `algo_nom` parameter is greater than `8`.
          * `classic` â Use separate keys for KSK and ZSK. Use this value when the `algo_nom` parameter is equal to or less than `8`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: classic
          default: classic
          enum:
          - simple
          - classic
      - name: nsec3_iterations
        in: query
        description: |-
          The number of times that the system rehashes the first resource record hash operation.

          A positive integer less than `501`.
        required: false
        style: form
        explode: true
        schema:
          maximum: 500
          minimum: 1
          type: integer
          example: 7
          default: 7
      - name: nsec3_narrow
        in: query
        description: |-
          Whether NSEC3 will operate in Narrow or Inclusive mode.

          In Narrow mode, PowerDNS sends out white lies about the next secure record. Rather than query the resource record in the database, PowerDNS sends the hash plusÂ `1`Â as the next secure record.

          * `1` â Narrow mode.
          * `0` â Inclusive mode.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: nsec3_opt_out
        in: query
        description: |-
          Whether the system will create records for all delegations.

          * `1` â Create records for all delegations.
          * `0` â Create records only for secure delegations.

          **Note:**

           **Only** select `1` if you **must** create records for all delegations.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: nsec3_salt
        in: query
        description: |-
          A hexadecimal string that the system appends to the domain name before it applies the hash function to the name. For more information about the salt value, read theÂ [RFC 5155](https://tools.ietf.org/html/rfc5155#section-3.1.5) documentation.

          If you do not declare a value, the system defaults to a random 64-bit value.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
          format: hex
          example: 1A2B3C4D5E6F
      - name: use_nsec3
        in: query
        description: |-
          Whether the domain will use [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) or NSEC3 semantics.

          * `1` â Use NSEC3 semantics.
          * `0` â Use NSEC semantics.

          **Note:**

           If you use NSEC semantics (`0`), the system ignores the other NSEC3 options.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_92"
  /DNSSEC/export_zone_dnskey:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Export DNSKEY record value
      description: |-
        This function exports a domain's DNSKEY record value.

        **Important:**

        When you disable the [_DNS_ role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: export_zone_dnskey
      parameters:
      - name: domain
        in: query
        description: The domain from which to fetch the DNSKEY record value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key_id
        in: query
        description: The DNSSEC record's ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 12345
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_93"
  /DNSSEC/export_zone_key:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Export DNSSEC security key
      description: |-
        This function exports a DNSSEC security key.

        **Important:**

        When you disable the [DNS](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: export_zone_key
      parameters:
      - name: domain
        in: query
        description: The security key's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key_id
        in: query
        description: The security key's ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 12345
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_94"
  /DNSSEC/fetch_ds_records:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Return domain's DS records
      description: |-
        This function fetches a domain's Delegation of Signing (DS) records.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: fetch_ds_records
      parameters:
      - name: domain
        in: query
        description: |-
          The domain from which to fetch DS records.

          **Note:**

           To enable DNSSEC on multiple domains, increment the parameter name. For example: `domain-0`, `domain-1`, `domain-2`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: To fetch DS records on multiple domains.
            value: domain-0=example0.com&domain-1=example1.com&domain-2=example2.com
          single:
            summary: To fetch DS records on a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_95"
  /DNSSEC/import_zone_key:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Add DNSSEC security key
      description: |-
        This function imports a DNSSEC security key.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: import_zone_key
      parameters:
      - name: domain
        in: query
        description: The security key's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key_data
        in: query
        description: |-
          The security key data that the [`pdnsutil`](https://doc.powerdns.com/authoritative/manpages/pdnsutil.1.html)
          utility's `export-zone-key` call returns.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Private-key-format:%20v1.2%0AAlgorithm:%2013%20\(ECDSAP256SHA256\)%0APrivateKey:%20xCM281KtWE9oCsUX8fP1hDZ02/X7JCjp4QZA/DZjfX0=%0A%0A
      - name: key_type
        in: query
        description: |-
          The security key's type.

          * `ksk`
          * `zsk`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ksk
          enum:
          - ksk
          - zsk
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_96"
  /DNSSEC/remove_zone_key:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Remove DNSSEC security key
      description: |-
        This function removes a DNSSEC security key.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: remove_zone_key
      parameters:
      - name: domain
        in: query
        description: The security key's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key_id
        in: query
        description: The security key's ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_97"
  /DNSSEC/set_nsec3:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Update domain to use NSEC3
      description: |-
        This function configures the domain to use [Next Secure Record 3](https://tools.ietf.org/html/rfc4470) (NSEC3) semantics.

        **Important:**

          When you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: set_nsec3
      parameters:
      - name: domain
        in: query
        description: The domain on which to enable NSEC3 semantics.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: nsec3_iterations
        in: query
        description: The number of times that the system re-executes the first resource
          record hash operation.
        required: true
        style: form
        explode: true
        schema:
          maximum: 500
          minimum: 1
          type: integer
          example: 7
      - name: nsec3_narrow
        in: query
        description: |-
          Whether NSEC3 will operate in Narrow mode or Inclusive mode. In Narrow mode, PowerDNS sends out white lies about the next secure record. Rather than query the resource record in the database, PowerDNS sends the hash plus 1 as the next secure record.
          * `1` - Narrow mode. * `0` - Inclusive mode.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: nsec3_opt_out
        in: query
        description: |-
          Whether the system will create records for all delegations.

          * `1` - Create records for all delegations.
          * `0` - Create records **only** for secure delegations.

          **Note:**

            **Only** select `1` if you **must** create records for all delegations.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: nsec3_salt
        in: query
        description: "The salt value that PowerDNS uses in the hashes. For more information\
          \ about the salt value, read the [RFC 5155 documentation](https://tools.ietf.org/html/rfc5155)."
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: hex
          example: 1A2B3C4D5E6F
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_98"
  /DNSSEC/unset_nsec3:
    get:
      tags:
      - DNSSEC
      - DNS Security
      summary: Update domain to use NSEC
      description: |-
        This function configures the domain to use [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) semantics instead of Next Secure Record 3Â (NSEC3) semantics.

        **Important:**

          When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: unset_nsec3
      parameters:
      - name: domain
        in: query
        description: The domain on which to disable NSEC3 semantics and use NSEC semantics.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_99"
  /DirectoryIndexes/get_indexing:
    get:
      tags:
      - DirectoryIndexes
      - Directory Indexes
      summary: Return directory indexing settings
      description: This function returns the directory indexing settings for a directory
        on the cPanel account and its subdirectories.
      operationId: get_indexing
      parameters:
      - name: dir
        in: query
        description: The directory for which to check the indexing type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /home/example/example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_100"
  /DirectoryIndexes/list_directories:
    get:
      tags:
      - DirectoryIndexes
      - Directory Indexes
      summary: Return subdirectories directory indexing settings
      description: "This function returns the [directory indexing](https://go.cpanel.net/cpaneldocsIndexes)\
        \ settings of the subdirectories in a directory."
      operationId: DirectoryIndexes-list_directories
      parameters:
      - name: dir
        in: query
        description: The absolute path of the directory for which to return indexing
          information.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_101"
  /DirectoryIndexes/set_indexing:
    get:
      tags:
      - DirectoryIndexes
      - Directory Indexes
      summary: Update directory indexing settings
      description: "This function configures the\_[directory indexing](https://go.cpanel.net/cpaneldocsIndexes)\_\
        settings for a directory on the cPanel account."
      operationId: set_indexing
      parameters:
      - name: dir
        in: query
        description: The directory for which to manage directory indexing.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      - name: type
        in: query
        description: |-
          The type of directory indexing.

          * `standard` â The directory uses directory indexing with standard formatting.
          * `disabled` â The directory doesn't use directory indexing.
          * `inherit` â The directory uses the system's default settings.
          * `fancy` â The directory uses directory indexing with Apache FancyIndexing directive. The directory will include additional information such as file size and the date of the file's last update.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: inherit
          enum:
          - standard
          - disabled
          - inherit
          - fancy
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_102"
  /DirectoryPrivacy/add_user:
    get:
      tags:
      - DirectoryPrivacy
      - Directory Privacy
      summary: Add authorized user for protected directory
      description: This function adds a user who can access a protected directory
        on the cPanel account.
      operationId: add_user
      parameters:
      - name: dir
        in: query
        description: The directory to add users to.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      - name: password
        in: query
        description: The password for the user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: user
        in: query
        description: The username of the user who can access the directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_103"
  /DirectoryPrivacy/configure_directory_protection:
    get:
      tags:
      - DirectoryPrivacy
      - Directory Privacy
      summary: Enable or disable protected directory
      description: This function enables or disables password protection for a directory
        on the cPanel account.
      operationId: configure_directory_protection
      parameters:
      - name: authname
        in: query
        description: |-
          The name of the directory protection authorization instance.

          **Note:**

          **Only** use this parameter when you enable password protection.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: protectandserve
      - name: dir
        in: query
        description: The absolute or relative directory path for which to enable or
          disable password protection.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      - name: enabled
        in: query
        description: |-
          Whether to enable password protection for the directory.
          * `1` - Enable.
          * `0` - Disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_104"
  /DirectoryPrivacy/delete_user:
    get:
      tags:
      - DirectoryPrivacy
      - Directory Privacy
      summary: Delete authorized user for protected directory
      description: This function deletes a user who can access a protected directory
        on the cPanel account.
      operationId: delete_user
      parameters:
      - name: dir
        in: query
        description: The absolute directory path on the cPanel account from which
          to remove a user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      - name: user
        in: query
        description: The username to remove from the directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_105"
  /DirectoryPrivacy/is_directory_protected:
    get:
      tags:
      - DirectoryPrivacy
      - Directory Privacy
      summary: Return whether directory uses password protection
      description: This function confirms whether a directory uses password protection.
      operationId: is_directory_protected
      parameters:
      - name: dir
        in: query
        description: The absolute directory path on the cPanel account to check for
          password protection.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_106"
  /DirectoryPrivacy/list_directories:
    get:
      tags:
      - DirectoryPrivacy
      - Directory Privacy
      summary: Return privacy status of subdirectories
      description: This function returns the privacy status of the subdirectories
        in a directory.
      operationId: DirectoryPrivacy-list_directories
      parameters:
      - name: dir
        in: query
        description: The directory path for which to return the subdirectories' privacy
          information.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_107"
  /DirectoryPrivacy/list_users:
    get:
      tags:
      - DirectoryPrivacy
      - Directory Privacy
      summary: Return authorized users for protected directory
      description: This function returns the users who can access a password-protected
        directory on the cPanel account.
      operationId: DirectoryPrivacy::list_users
      parameters:
      - name: dir
        in: query
        description: The password-protected directory for which to return authorized
          users.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_108"
  /DirectoryProtection/list_directories:
    get:
      tags:
      - DirectoryProtection
      - Directory Protection
      summary: Return Directory Protection settings
      description: |-
        This function returns the
        [leech protection](https://go.cpanel.net/cpaneldocsLeechProtection)
        settings of the subdirectories in a directory.
      operationId: DirectoryProtection-list_directories
      parameters:
      - name: dir
        in: query
        description: The absolute or relative file path in the user's `home` directory
          for which to return leech protection information.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_109"
  /DomainInfo/domains_data:
    get:
      tags:
      - DomainInfo
      - Domain Information
      summary: Return all domains' hosting configuration
      description: |-
        This function lists user data for the cPanel account's domains.

        **Note:**

        This function retrieves data from the `/var/cpanel/userdata/user/domain` file, where `user`
        represents the cPanel account username and `domain` represents the domain. For this reason,
        actual output may not contain all of the returns that this document lists.
      operationId: domains_data
      parameters:
      - name: format
        in: query
        description: |-
          The function's return format.

          * `hash` âÂ Use a hash format. The function will return objects based on the domain type.
          * `list` âÂ Use a list format. The function will return an array of objects, where each object is a domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: hash
          default: hash
          enum:
          - hash
          - list
      - name: return_https_redirects_status
        in: query
        description: |-
          Whether to return the secure redirect status of the addon domains.

          * `1` âÂ Return the status.
          * `0` âÂ Do **not** return the status.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_110"
              examples:
                hash:
                  summary: Output in hash return format.
                  value:
                    data:
                      addon_domains:
                      - all_aliases_valid: "0"
                        can_https_redirect: "0"
                        documentroot: /home/user/public_html/seconddomain.com
                        domain: seconddomain.com
                        group: user
                        hascgi: "1"
                        homedir: /home/user
                        ip: 192.168.0.128
                        is_https_redirecting: "0"
                        no_cache_update: "0"
                        owner: root
                        serveradmin: webmaster@seconddomain.example.com
                        serveralias: seconddomain.com www.seconddomain.com www.seconddomain.example.com
                        servername: seconddomain.example.com
                        type: addon_domain
                        usecanonicalname: "Off"
                        user: user
                        userdirprotect: ""
                      - all_aliases_valid: "0"
                        can_https_redirect: "0"
                        documentroot: /home/user/public_html/subdomain
                        domain: exampledomain.com
                        group: user
                        hascgi: "1"
                        homedir: /home/user
                        ip: 192.168.0.128
                        is_https_redirecting: "0"
                        no_cache_update: "0"
                        owner: root
                        serveradmin: webmaster@subdomain.example.com
                        serveralias: exampledomain.com www.exampledomain.com www.subdomain.example.com
                        servername: subdomain.example.com
                        type: addon_domain
                        usecanonicalname: "Off"
                        user: user
                        userdirprotect: ""
                      - all_aliases_valid: "0"
                        can_https_redirect: "0"
                        documentroot: /home/user/addondomain/home/dir
                        domain: addondomain.com
                        group: user
                        hascgi: "1"
                        homedir: /home/user
                        ip: 192.168.0.128
                        is_https_redirecting: "0"
                        main_domain:
                          all_aliases_valid: "0"
                          can_https_redirect: "0"
                          customlog:
                          - format: combined
                            target: /usr/local/apache/domlogs/example.com
                          - format: "\"%{%s}t %I .\\n%{%s}t %O .\""
                            target: /usr/local/apache/domlogs/example.com-bytes_log
                          documentroot: /home/user/public_html
                          domain: example.com
                          group: user
                          hascgi: "1"
                          homedir: /home/user
                          ifmodulemodsuphpc:
                            group: user
                          ip: 192.168.0.128
                          is_https_redirecting: "0"
                          options: ExecCGI Includes
                          owner: root
                          port: "80"
                          scriptalias:
                          - path: /home/user/public_html/cgi-bin
                            url: /cgi-bin/
                          - path: /home/user/public_html/cgi-bin/
                            url: /cgi-bin/
                          serveradmin: webmaster@example.com
                          serveralias: parkeddomain.com www.parkeddomain.com www.example.com
                          servername: example.com
                          type: main_domain
                          usecanonicalname: "Off"
                          user: user
                          userdirprotect: ""
                        no_cache_update: "0"
                        owner: root
                        parked_capable_of_https_redirects:
                        - parkeddomain.com
                        parked_domains:
                        - parkeddomain.com
                        parked_with_https_redirects:
                        - parkeddomain.com
                        serveradmin: webmaster@subdomain.example.com
                        serveralias: addondomain.com www.addondomain.com www.subdomain.example.com
                        servername: subdomain.example.com
                        sub_domains:
                        - all_aliases_valid: "0"
                          can_https_redirect: "0"
                          documentroot: /home/user/public_html/sub
                          domain: sub.example.com
                          group: user
                          hascgi: "1"
                          homedir: /home/user
                          ip: 192.168.0.128
                          is_https_redirecting: "0"
                          no_cache_update: "0"
                          owner: root
                          serveradmin: webmaster@sub.example.com
                          serveralias: www.sub.example.com
                          servername: sub.example.com
                          type: sub_domain
                          usecanonicalname: "Off"
                          user: user
                          userdirprotect: ""
                        type: addon_domain
                        usecanonicalname: "Off"
                        user: user
                        userdirprotect: ""
                    status: 1
                list:
                  summary: Output in list return format.
                  value:
                    data:
                    - all_aliases_valid: "0"
                      can_https_redirect: "0"
                      customlog:
                      - format: combined
                        target: /usr/local/apache/domlogs/example.com
                      - format: "\"%{%s}t %I .\\n%{%s}t %O .\""
                        target: /usr/local/apache/domlogs/example.com-bytes_log
                      documentroot: /home/user/public_html
                      domain: example.com
                      group: user
                      hascgi: "1"
                      homedir: /home/user
                      ifmodulemodsuphpc:
                        group: user
                      ip: 192.168.0.128
                      is_https_redirecting: "0"
                      options: ExecCGI Includes
                      owner: root
                      port: "80"
                      scriptalias:
                      - path: /home/user/public_html/cgi-bin
                        url: /cgi-bin/
                      - path: /home/user/public_html/cgi-bin/
                        url: /cgi-bin/
                      serveradmin: webmaster@example.com
                      serveralias: parkeddomain.com www.parkeddomain.com www.example.com
                      servername: example.com
                      type: main_domain
                      usecanonicalname: "Off"
                      user: user
                      userdirprotect: "1"
                    - parked_with_https_redirects:
                      - parkeddomain.com
                    - parked_capable_of_https_redirects:
                      - zippy.nugs.test
                    - all_aliases_valid: "0"
                      can_https_redirect: "0"
                      documentroot: /home/user/public_html/seconddomain.com
                      domain: seconddomain.com
                      group: user
                      hascgi: "1"
                      homedir: /home/user
                      ip: 192.168.0.128
                      is_https_redirecting: "0"
                      no_cache_update: "0"
                      owner: root
                      serveradmin: webmaster@seconddomain.example.com
                      serveralias: seconddomain.com www.seconddomain.com www.seconddomain.example.com
                      servername: seconddomain.example.com
                      type: addon_domain
                      usecanonicalname: "Off"
                      user: user
                      userdirprotect: ""
                    - all_aliases_valid: "0"
                      can_https_redirect: "0"
                      documentroot: /home/user/public_html/subdomain
                      domain: exampledomain.com
                      group: user
                      hascgi: "1"
                      homedir: /home/user
                      ip: 192.168.0.128
                      is_https_redirecting: "0"
                      no_cache_update: "0"
                      owner: root
                      serveradmin: webmaster@subdomain.example.com
                      serveralias: exampledomain.com www.exampledomain.com www.subdomain.example.com
                      servername: subdomain.example.com
                      type: addon_domain
                      usecanonicalname: "Off"
                      user: user
                      userdirprotect: ""
                    - all_aliases_valid: "0"
                      can_https_redirect: "0"
                      documentroot: /home/user/addondomain/home/dir
                      domain: addondomain.com
                      group: user
                      hascgi: "1"
                      homedir: /home/user
                      ip: 192.168.0.128
                      is_https_redirecting: "0"
                      no_cache_update: "0"
                      owner: root
                      serveradmin: webmaster@subdomain.example.com
                      serveralias: addondomain.com www.addondomain.com www.subdomain.example.com
                      servername: subdomain.example.com
                      type: addon_domain
                      usecanonicalname: "Off"
                      user: user
                      userdirprotect: ""
                    - all_aliases_valid: "0"
                      can_https_redirect: "0"
                      documentroot: /home/user/public_html/sub
                      domain: sub.example.com
                      group: user
                      hascgi: "1"
                      homedir: /home/user
                      ip: 192.168.0.128
                      is_https_redirecting: "0"
                      no_cache_update: "0"
                      owner: root
                      serveradmin: webmaster@sub.example.com
                      serveralias: www.sub.example.com
                      servername: sub.example.com
                      type: sub_domain
                      usecanonicalname: "Off"
                      user: user
                      userdirprotect: ""
                    metadata:
                      transformed: 1
                    status: 1
  /DomainInfo/list_domains:
    get:
      tags:
      - DomainInfo
      - Domain Information
      summary: Return cPanel account's domains
      description: |-
        This function lists the cPanel account's domains.

        **Note:**

        For this function to succeed, the `/var/cpanel/userdata/username/main` file (where `username` represents the authenticated user) **must** possess the correct permissions. If a permissions error occurs, this function returns blank values for **all** of its returns and does **not** return an error message.
      operationId: list_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_111"
  /DomainInfo/main_domain_builtin_subdomain_aliases:
    get:
      tags:
      - DomainInfo
      - Domain Information
      summary: Return built-in subdomain aliases
      description: |-
        This function returns the built-in subdomain aliases for an account's main domain.

        **Note:**

          This function retrieves data from the `/var/cpanel/userdata/user/domain` file, where `user` represents the cPanel account username and `domain` represents the domain. For this reason, actual output may not contain all of the returns that this document lists.
      operationId: main_domain_builtin_subdomain_aliases
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_112"
  /DomainInfo/single_domain_data:
    get:
      tags:
      - DomainInfo
      - Domain Information
      summary: Return domain's hosting configuration
      description: |-
        This function lists user data for a domain.

        **Important:**

          This function retrieves data from the `/var/cpanel/userdata/user/domain` file, where `user` represents the cPanel account username and `domain` represents the domain.
          * Because aliases (parked domains) do **not** use a user data file, this function **cannot** query information for aliases. To retrieve information for an alias, specify the associated main or addon domain.
          * Due to differences in user data files, the function's actual output may not contain all of the returns that this document lists.
      operationId: single_domain_data
      parameters:
      - name: domain
        in: query
        description: |-
          The domain on the cPanel account.

          **Important:**

          Do **not** specify an alias (parked domain).
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: return_https_redirect_status
        in: query
        description: |-
          Whether to return the secure redirect status of the addon domains.
          * `1` - Return status.
          * `0` - Do **not** return status.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_113"
  /DynamicDNS/create:
    get:
      tags:
      - DynamicDNS
      - Dynamic DNS
      summary: Create Dynamic DNS domain
      description: |-
        This function creates a Dynamic DNS (DDNS) domain.

        **Important:**

        When you disable the [_DNS_ role](https://go.cpanel.net/serverroles), the system disables this function.
      operationId: dynamicdns-create
      parameters:
      - name: domain
        in: query
        description: The fully-qualified domain name to create as a DDNS domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: home.example.com
      - name: description
        in: query
        description: A human-readable string that describes the domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Home network
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_114"
  /DynamicDNS/delete:
    get:
      tags:
      - DynamicDNS
      - Dynamic DNS
      summary: Delete Dynamic DNS domain
      description: |-
        This function deletes an existing Dynamic DNS (DDNS) domain.

        **Important:**

        When you disable the [_DNS_ role](https://go.cpanel.net/serverroles), the system disables this function.
      operationId: dynamicdns-delete
      parameters:
      - name: id
        in: query
        description: The DDNS domainâs ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ggiugyxxjwnkmqtwysgmvrurplmafxpq
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_115"
  /DynamicDNS/list:
    get:
      tags:
      - DynamicDNS
      - Dynamic DNS
      summary: Return Dynamic DNS domains
      description: |-
        This function lists the userâs Dynamic DNS (DDNS) domains.

        **Important:**

        When you disable the [_DNS_ role](https://go.cpanel.net/serverroles), the system disables this function.
      operationId: dynamicdns-list
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_116"
  /DynamicDNS/recreate:
    get:
      tags:
      - DynamicDNS
      - Dynamic DNS
      summary: Update Dynamic DNS domain ID
      description: |-
        This function gives a new, randomly-generated ID to an existing Dynamic DNS (DDNS) domain.

        **Important:**

        When you disable the [_DNS_ role](https://go.cpanel.net/serverroles), the system disables this function.
      operationId: dynamicdns-recreate
      parameters:
      - name: id
        in: query
        description: The DDNS domainâs ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ggiugyxxjwnkmqtwysgmvrurplmafxpq
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_117"
  /DynamicDNS/set_description:
    get:
      tags:
      - DynamicDNS
      - Dynamic DNS
      summary: Update Dynamic DNS domain description
      description: |-
        This function sets the description on a userâs Dynamic DNS (DDNS) domain.

        **Important:**

        When you disable the [_DNS_ role](https://go.cpanel.net/serverroles), the system disables this function.
      operationId: dynamicdns-set_description
      parameters:
      - name: description
        in: query
        description: A human-readable string that describes the domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Home network
      - name: id
        in: query
        description: The DDNS domainâs ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ggiugyxxjwnkmqtwysgmvrurplmafxpq
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_118"
  /Email/account_name:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return current user's account name
      description: |-
        This function returns the provided value. This function works with other functions to display form data within a user interface.

        **Note:**

          If you call this function from a Webmail session URL, the system will **only** access data for that email account.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: account_name
      parameters:
      - name: account
        in: query
        description: |-
          The function will return this value in the data return. If you do **not** include this parameter, the function returns `All Mail On The Account` or a blank value.
          * A valid string.
          * An empty value.

          **Note:**

           The function does **not** validate this parameter's value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: display
        in: query
        description: "Include this parameter to cause the function to return `All\
          \ Mail On The Account` if the account parameter is blank or does not exist.\
          \ If you do **not** include this parameter and the account value is blank\
          \ or does not exist, the function returns a blank data value."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: any_value
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_119"
  /Email/add_auto_responder:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Create email account's autoresponder
      description: |-
        This function creates an autoresponder for an email account.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_auto_responder
      parameters:
      - name: body
        in: query
        description: The contents of the autoresponder message's `Body` section.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: This is an autoresponder message.
      - name: domain
        in: query
        description: "The email account's domain. For example, `example.com` if the\
          \ email address is `user@example.com`."
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: email
        in: query
        description: "The email account name. For example, `user` if the email address\
          \ is `user@example.com`."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: from
        in: query
        description: The contents of the autoresponder message's `From:` field.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: User Name
      - name: interval
        in: query
        description: |-
          The amount of time, in hours, that the server waits between autoresponder messages to the same address.

          **Note:**

            If you specify `0`, the system sends a message for each received email.
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 24
      - name: is_html
        in: query
        description: |-
          Whether the body of the autoresponder message begins with an [HTML Content-Type declaration](https://en.wikipedia.org/wiki/Character_encodings_in_HTML#Specifying_the_document.27s_character_encoding).
          * `1` â Include an HTML content type declaration.
          * `0` â Do **not** include an HTML content type declaration.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: start
        in: query
        description: When to enable the autoresponder.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1410277881
      - name: stop
        in: query
        description: When to disable the autoresponder. A time that is after the `start`
          time.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1410300000
      - name: subject
        in: query
        description: The contents of the autoresponder message's `Subject:` field.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Autoresponder Subject
      - name: charset
        in: query
        description: "The [character set](https://en.wikipedia.org/wiki/Character_encoding)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: UTF-8
          default: utf-8
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_120"
  /Email/add_domain_forwarder:
    get:
      tags:
      - Email
      - Email Forwarding
      summary: Create domain-level forwarder
      description: |-
        This function creates a domain-level forwarder.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_domain_forwarder
      parameters:
      - name: destdomain
        in: query
        description: The domain to receive forwarded mail.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: forwardtome.com
      - name: domain
        in: query
        description: The domain on the cPanel account from which to forward mail.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_121"
  /Email/add_forwarder:
    get:
      tags:
      - Email
      - Email Forwarding
      summary: Create email account forwarder
      description: "This function creates an email forwarder.\n\n**Important:**\n\n\
        \  When you disable the MailReceive role, the system disables this function.\
        \ \n  For more information, read our [How to Use Server Profiles](https://go.cpanel.net/howtouseserverprofiles)\
        \ \n  documentation."
      operationId: add_forwarder
      parameters:
      - name: domain
        in: query
        description: The domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: email
        in: query
        description: The email address to forward.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: forwardme@example.com
      - name: fwdopt
        in: query
        description: The method to use to handle the email address's mail.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: fwd
      - name: failmsgs
        in: query
        description: |-
          The failure message for the message's sender.

          **Note:**

           Use this parameter if you used the fail method for the fwdopt parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Nobody home.
          default: No such person at this address
      - name: fwdemail
        in: query
        description: |-
          The email address to which the system forwards messages.

          **Note:**

           You must use this parameter if you used the fwd method for the fwdopt parameter. You can pass multiple addresses to this parameter as a comma-separated list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: fwdtome@example.com
      - name: fwdsystem
        in: query
        description: |-
          The system user to whom the system forwards messages.

          **Note:**

           You must use this parameter if you used the system method for the fwdopt parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: pipefwd
        in: query
        description: "The application to which the system pipes messages.\n\n**Note:**\n\
          \n You must use this parameter if you used the pipe method for the fwdopt\
          \ parameter.\n\n**Important:**\n\n  This parameter requires the FileStorage\
          \ role. For more information, read our \n  [How to Use Server Profiles](https://go.cpanel.net/howtouseserverprofiles)\
          \ documentation."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: mailscript.pl
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_122"
  /Email/add_list:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Create mailing list
      description: |-
        This function creates a Mailman mailing list.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_list
      parameters:
      - name: domain
        in: query
        description: The domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: list
        in: query
        description: The mailing list name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: newlist
      - name: password
        in: query
        description: The mailing list password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: private
        in: query
        description: |-
          Whether the mailing list is private.
          * `1` â Private.
          * `0` â Public.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: rebuildonly
        in: query
        description: |-
          Whether to rebuild the mailing list.
          * `1` â Rebuild the mailing list.
          * `0` â Do **not** rebuild the mailing list.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_123"
  /Email/add_mailman_delegates:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Add administrators to mailing list
      description: |-
        This function grants mailing list administrative privileges to users.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_mailman_delegates
      parameters:
      - name: delegates
        in: query
        description: |-
          A list of the administrators to add.

          **Note:**

            Separate multiple email addresses with commas.
        required: true
        style: form
        explode: false
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple delegates
            value: "delegates=user@example.com,admin@example.com"
          single:
            summary: A single delegate.
            value: user@example.com
      - name: list
        in: query
        description: The mailing list.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mylist
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_124"
  /Email/add_mx:
    get:
      tags:
      - Email DNS Settings
      summary: Create mail exchanger record
      description: |-
        This function creates a Mail Exchanger (MX) record. For more information about MX record settings, read ourÂ [Email Routing Configuration](https://go.cpanel.net/whmdocsEmailRoutingConfiguration)Â documentation.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function
      operationId: add_mx
      parameters:
      - name: domain
        in: query
        description: The new mail exchanger's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: exchanger
        in: query
        description: The new mail exchanger's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: mail.example.com
      - name: priority
        in: query
        description: |-
          The new mailÂ exchanger's [priority value](https://go.cpanel.net/whmdocsEditMXEntry).

          **Note:**

            It is common practice to set a priority value that is divisible by five.
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 5
      - name: alwaysaccept
        in: query
        description: |-
          Whether the mail exchanger accepts all mail for the domain.
          * `1` â The mail exchanger always accepts mail.
          * `0` â The mail exchanger does **not** always accept mail.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_125"
  /Email/add_pop:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Create email address
      description: |-
        This function creates an email address.

        **Important:**

          * When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
          * We recommend that you use the UAPI `UserManager::create_user` function to create an email address instead of this function. This function is incompatible with [the *Reset Password* feature](https://go.cpanel.net/resetpassdocs).
          * You **must** URI-encode values when using the CLI.
      operationId: add_pop
      parameters:
      - name: email
        in: query
        description: |-
          The email account username or address.
          * A valid email account username. For example, `user` to create `user@example.com`.
          * A valid email address.

          **Note:**

            You **cannot** enter `cpanel` as an account name when you create an email account.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/email_2"
      - name: password
        in: query
        description: The email account password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: domain
        in: query
        description: "The email account's domain. For example, `example.com` to create\
          \ `user@example.com`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
          default: The cPanel account's main domain.
      - name: password_hash
        in: query
        description: |-
          The account's password hash.

          **Notes:**

            * You can use this parameter instead of the `password` parameter. However, you cannot use both `password` and `password_hash` parameters in the same request.
            * You can find your server's hash type in the `/etc/sysconfig/authconfig` file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: $6$1sOyHP5ZDYp3pGUz$R0TSgfPRHfDjT5PP5RJGv39FhiGTNNPvM7IFpCBjXijMmlMZk9yI8T3LqGuntc9fdKb5eX.lGL7wBS9e4DAWn/
      - name: quota
        in: query
        description: |-
          The maximum amount of disk space that the new email account may use.
          * A positive integer that represents the maximum amount of disk space, in megabytes (MB).
          * `0` or `unlimited` â The account possesses unlimited disk space.

          **Note:**

            * The positive integer value **cannot** exceed the maximum email quota.
            * The `0` or `unlimited` value is **only** available to users **without** a maximum email account quota.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/quota"
      - name: send_welcome_email
        in: query
        description: |-
          Whether to send client configuration instructions to the account.
          * `1` â Send the instructions.
          * `0` â Do **not** send the instructions.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: skip_update_db
        in: query
        description: |-
          Whether to skip the update of the email accounts database's cache.
          * `1` â Skip the update.
          * `0` â Perform the update.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_126"
  /Email/add_spam_filter:
    get:
      tags:
      - Email
      - Spam Management
      summary: Update minimum spam score threshold value
      description: |-
        This function sets a new minimum Apache SpamAssassinâ¢ spam score threshold value.

        **Notes:**

          * To disable spam filtering, use the UAPI `Email::disable_spam_autodelete` fuction.
          * For more information, read our [Spam Filters](https://go.cpanel.net/cpaneldocsSpamFilters) documentation.

        **Important:**

          * When you disable the [*Spam Filter* role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: add_spam_filter
      parameters:
      - name: account
        in: query
        description: |-
          The email account to apply a spam score threshold value.

          **Note:**

            If you doÂ **not**Â specify a value, the function applies the new spam score threshold value toÂ **all**Â accounts.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: required_score
        in: query
        description: |-
          Set a spam score threshold value.

          **Notes:**

            * You **must** specify a value greater than `0`, and lower than the domain owner's spam score threshold value.
            * You **cannot** enter `0` as a value for this parameter.
            * You can retrieve the domain ownerâs spam score threshold value via theÂ `cpuser_spam_auto_delete_score` return from the UAPIÂ `Email::get_spam_settings` function.
            * The default value, `5`, is an aggressive spam score.
            * The lower the spam score, the more likely that Apache SpamAssassin will label messages as spam and delete them.
            * Some systems may wish to use a more lenient spam score (for example, `8` or `10`).
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: string
          example: "8"
          default: "5"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_127"
  /Email/browse_mailbox:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return mail directory's subdirectories and files
      description: |-
        This function lists the mail directory's subdirectories (boxes) and files.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.

        **Notes:**

          If you do not use any input parameters, the function returns a list of items in the cPanel account's main mail directory.
      operationId: browse_mailbox
      parameters:
      - name: account
        in: query
        description: "An email address, to limit the function's results."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: dir
        in: query
        description: |-
          A mail directory name, to limit results to specific directories.

          **Note:**

            If you pass the `default` or `mail` values, the function lists information for all mail directories.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: maildir
      - name: showdotfiles
        in: query
        description: |-
          Whether to include hidden files and directories.
          * `1` â Include hidden items.
          * `0` â Do **not** include hidden items.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_128"
  /Email/change_mx:
    get:
      tags:
      - Email DNS Settings
      summary: Update mail exchanger record
      description: |-
        This function creates a Mail Exchanger (MX) record. For more information about MX record settings, read our [Email Routing Configuration](https://go.cpanel.net/whmdocsEmailRoutingConfiguration) documentation.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: change_mx
      parameters:
      - name: domain
        in: query
        description: The mail exchanger's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: exchanger
        in: query
        description: The mail exchanger's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: mail.example.com
      - name: oldexchanger
        in: query
        description: The mail exchanger's current name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: mail.example.com
      - name: priority
        in: query
        description: |-
          The mailÂ exchanger's newÂ [priority value](https://go.cpanel.net/whmdocsEditMXEntry).

          **Note:**

            Common practice sets a priority value divisible by five.
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 15
      - name: alwaysaccept
        in: query
        description: |-
          Whether the mail exchanger accepts all mail for the domain.
          * `1` â The mail exchanger always accepts mail.
          * `0` â The mail exchanger does **not** always accept mail.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: oldpriority
        in: query
        description: "The mail exchanger's current priority value. If multiple MX\
          \ entries match the `oldexchanger` value, the system uses this parameter\
          \ to find the correct entry."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 5
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_129"
  /Email/check_fastmail:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Return BlackBerry FastMail support status
      description: |-
        This function checks whether [BlackBerryÂ® FastMail](https://go.cpanel.net/blackberryfastmail) support is enabled.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: check_fastmail
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_130"
  /Email/count_auto_responders:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return cPanel account's autoresponders total
      description: |-
        This function returns the number of [autoresponders](https://go.cpanel.net/Autoresponders) for every email address on a cPanel account.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: count_auto_responders
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_131"
  /Email/count_filters:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Return cPanel account's email filters total
      description: |-
        This function returns the number of [email filters](https://go.cpanel.net/cpaneldocsEmailFilters) for every email address on a cPanel account.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles) or the [*IP Blocker*](https://go.cpanel.net/whmdocsFeatureManager) feature, the system **disables** this function. For more information, read our [How to Use Server Profiles](https://go.cpanel.net/howtouseserverprofiles) documentation.
      operationId: count_filters
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_132"
  /Email/count_forwarders:
    get:
      tags:
      - Email
      - Email Forwarding
      summary: Return cPanel account's mail forwarder total
      description: |-
        This function returns the number ofÂ [forwarders](https://go.cpanel.net/Forwarders) for every email address on a cPanel account.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: count_forwarders
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_133"
  /Email/count_lists:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Return cPanel account's mailing list total
      description: |-
        This function returns the number of [mailing lists](https://go.cpanel.net/MailingLists) for every email address on a cPanel account.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: count_lists
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_134"
  /Email/count_pops:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return cPanel account's email account total
      description: |-
        This function returns the number of [email accounts](https://go.cpanel.net/cpaneldocsEmailAccounts) for a cPanel account.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: count_pops
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_135"
  /Email/delete_auto_responder:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Delete email account's autoresponder
      description: |-
        This function deletes an autoresponder.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: delete_auto_responder
      parameters:
      - name: email
        in: query
        description: The email account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_136"
  /Email/delete_domain_forwarder:
    get:
      tags:
      - Email
      - Email Forwarding
      summary: Delete domain-level forwarder
      description: |-
        This function deletes a domain-level forwarder.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_domain_forwarder
      parameters:
      - name: domain
        in: query
        description: The domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_137"
  /Email/delete_filter:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Delete email account's email filter
      description: |-
        This function deletes an email filter.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_filter
      parameters:
      - name: account
        in: query
        description: The email address that owns the filter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: filtername
        in: query
        description: The filter's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: coffee
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_138"
  /Email/delete_forwarder:
    get:
      tags:
      - Email
      - Email Forwarding
      summary: Delete email account's email forwarder
      description: |-
        This function deletes an email forwarder.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_forwarder
      parameters:
      - name: address
        in: query
        description: The forwarder's email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: forwarder
        in: query
        description: |-
          The forwarder's destination.
          * A valid email address.
          * A script location.
          * A system account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: fwdtome@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_139"
  /Email/delete_held_messages:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Delete email account's outgoing messages
      description: |-
        This function deletes all outbound email messages held in the mail queue for the specified email account.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_held_messages
      parameters:
      - name: email
        in: query
        description: The email address to query.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_140"
  /Email/delete_list:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Delete mailing list
      description: |-
        This function deletes a Mailman mailing list.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_list
      parameters:
      - name: list
        in: query
        description: The mailing list.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mylist
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_141"
  /Email/delete_mx:
    get:
      tags:
      - Email DNS Settings
      summary: Delete mail exchanger record
      description: |-
        This function deletes a Mail Exchanger (MX) record. For more information about MX record settings, read ourÂ [Email Routing Configuration](https://go.cpanel.net/whmdocsEmailRoutingConfiguration) documentation.

        **Important:**

          When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_mx
      parameters:
      - name: domain
        in: query
        description: The mail exchanger's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: exchanger
        in: query
        description: The mail exchanger's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mail.example.com
      - name: priority
        in: query
        description: "The mail\_exchanger's [priority value](https://go.cpanel.net/whmdocsEditMXEntry).\
          \ If multiple MX entries match the exchanger value, the system uses this\
          \ parameter to find the correct entry."
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 15
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_142"
  /Email/delete_pop:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Delete email address
      description: |-
        This function deletes an email address.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_pop
      parameters:
      - name: email
        in: query
        description: |-
          The email account username or address.
          * A valid email account username. For example, `user` if the email address is `user@example.com`.
          * A valid email address.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/email_3"
        example: user@domain.com
      - name: domain
        in: query
        description: "The email account's domain. For example, `example.com` if the\
          \ email address is `user@example.com`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
          default: The cPanel account's main domain.
      - name: flags
        in: query
        description: |-
          Whether to remove the mail account's home mail directory. If you do not specify a value, the function removes the mail account's home directory.
          * `passwd` â Preserve the mail account's home directory.
          * Any other value â Remove the mail account's home directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: passwd
      - name: skip_quota
        in: query
        description: |-
          Whether to modify the mail account's quota file.
          * `1` â Do **not** modify.
          * `0` â Modify.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_143"
  /Email/disable_filter:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Disable email filter for email account
      description: |-
        This function disables an email filter.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: disable_filter
      parameters:
      - name: account
        in: query
        description: The email address that owns the filter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: filtername
        in: query
        description: The filter's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: coffee
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_144"
  /Email/disable_mailbox_autocreate:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Disable cPanel account mailbox autocreation
      description: |-
        This function disables the system's ability to automatically create mailboxes for a cPanel account.

        **Note:**

          When you **enable** the UAPI's `Email::enable_mailbox_autocreate` function, the system automatically creates mailboxes. The system creates a new mailbox when it receives an email address in [plus address format](https://en.wikipedia.org/wiki/Email_address#Sub-addressing) and that mailbox does **not** exist. For example, receiving an email from the `user+newmailbox@example.com` address creates the `newmailbox` mailbox if the `newmailbox` mailbox does not exist.
      operationId: disable_mailbox_autocreate
      parameters:
      - name: email
        in: query
        description: The email account address for which to disable mailbox autocreation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_145"
  /Email/disable_spam_assassin:
    get:
      tags:
      - Email
      - Spam Management
      summary: Disable Apache SpamAssassin for cPanel account
      description: |-
        This function disables Apache SpamAssassinâ¢ for a cPanel account.

        **Important:**

          When you disable the [*Spam Filter* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: disable_spam_assassin
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_146"
  /Email/disable_spam_autodelete:
    get:
      tags:
      - Email
      - Spam Management
      summary: Disable spam box filtering auto-delete
      description: |-
        This function disables the Apache SpamAssassinâ¢ auto-delete spam feature.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: disable_spam_autodelete
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_147"
  /Email/disable_spam_box:
    get:
      tags:
      - Email
      - Spam Management
      summary: Disable spam box filtering for cPanel account
      description: |-
        This function disables spam box filtering for a cPanel account. When you disable spam box filtering, the system sends all messages to the account's inbox.

        **Notes:**

          * This function **requires** that your hosting provider enables Apache SpamAssassinâ¢ on the server.
          * To **enable** spam box filtering, use the UAPI `Email::enable_spam_box` function.
          * For more information, read our [Spam Filters](https://go.cpanel.net/cpaneldocsSpamFilters) documentation.

        **Important:**

          When you disable the [*Spam Filter* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: disable_spam_box
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_148"
  /Email/dispatch_client_settings:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Send email client settings to an email address
      description: |-
        This function sends an email account's client settings to an email address.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: dispatch_client_settings
      parameters:
      - name: account
        in: query
        description: The email account username or address for which to send client
          settings.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/account"
        example: username
      - name: to
        in: query
        description: The email address to send client settings.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_149"
  /Email/edit_pop_quota:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Update email account's quota
      description: This function changes an email address's quota.
      operationId: edit_pop_quota
      parameters:
      - name: domain
        in: query
        description: The email account's domain. Defaults to the cPanel account's
          main domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: email
        in: query
        description: The email account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: quota
        in: query
        description: |-
          The maximum amount of disk space that the new email account may use. Defaults to the system value.
          * A positive integer that represents the maximum amount of disk space, in megabytes (MB).

          **Note:**

          You **cannot** enter a value that exceeds the maximum email quota.
          * `0` or `unlimited` â The account possesses unlimited disk space.

          If the email account's quota value is set higher (or unlimited) than
          the account's max quota, the account's max quota will be applied instead
          of the value entered.

          **Note:**

          This value is only available to users without a maximum email account quota.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "500"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_150"
  /Email/enable_filter:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Enable email filter for email account
      description: |-
        This function enables an email filter.

        **Important:**

          When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: enable_filter
      parameters:
      - name: account
        in: query
        description: The email address that owns the filter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: filtername
        in: query
        description: The filter's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: coffee
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_151"
  /Email/enable_mailbox_autocreate:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Enable cPanel account mailbox autocreation
      description: |-
        This function allows the system to automatically create mailboxes for a cPanel account. The system will create a new mailbox when it receives an email address in plus address format and that mailbox does not exist. For example, receiving an email from the user+newmailbox@example.com address creates the newmailbox mailbox if theÂ newmailboxÂ mailbox does not exist.

        **Note:**

          To disable this functionality, use the UAPI Email::disable_mailbox_autocreate function.
      operationId: enable_mailbox_autocreate
      parameters:
      - name: email
        in: query
        description: The email account for which to enable mailbox autocreation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_152"
  /Email/enable_spam_assassin:
    get:
      tags:
      - Email
      - Spam Management
      summary: Enable Apache SpamAssassin for cPanel account
      description: |-
        This function enables Apache SpamAssassinâ¢ for the account.

        **Important:**

        When you disable the [Spam Filter role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: enable_spam_assassin
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_153"
  /Email/enable_spam_box:
    get:
      tags:
      - Email
      - Spam Management
      summary: Enable spam box filtering for cPanel account
      description: |-
        This function enables spam box filtering for a cPanel account. When you enable spam box filtering, the system sends messages marked as spam to a spam folder.

        **Notes:**

        * This function **requires** that your hosting provider enables Apache SpamAssassin on the server.
        * To **disable** spam box filtering, use the UAPI `Email::disable_spam_box` function.
        * For more information, read our [Spam Filters](https://go.cpanel.net/cpaneldocsSpamFilters) documentation.

        **Important:**

        When you disable the [Spam Filter](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: enable_spam_box
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_154"
  /Email/export_lists:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Export cPanel account's Mailman mailing lists to a file
      description: |-
        This function exports a cPanel account's Mailman mailing lists into a CSV file.
        This file is located in mail/exported_lists under the user's home directory.
      operationId: export_lists
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_155"
  /Email/fetch_charmaps:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Return server's supported character encodings
      description: |-
        This function lists the available character encodings.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: fetch_charmaps
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_156"
  /Email/fts_rescan_mailbox:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Start IMAP Full-Text Search scan for email account
      description: |-
        This function requests that the IMAP Full-Text Search Indexing (powered by Apache Solrâ¢) plugin rescan an email account.

        **Note:**

        To enable this function, you **must** install the *IMAP Full-Text Search Indexing (powered by Apache Solrâ¢)* plugin in WHM's [*Manage Plugins*](https://go.cpanel.net/whmdocsManagePlugins) interface (*WHM >> Home >> cPanel >> Manage Plugins*). For more information, read our [install_dovecot_fts script](https://go.cpanel.net/installdovecotftsscript) documentation.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system disables this function.
      operationId: fts_rescan_mailbox
      parameters:
      - name: account
        in: query
        description: |-
          The email user's account name.

          **Note:**

          If you do not enter an email address, the function rescans the default email account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_157"
  /Email/generate_mailman_otp:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Create one-time password for a mailing list
      description: |-
        This function generates a one-time password (OTP) for a mailing list.

        **Note:**

        The generated password expires after one use.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: generate_mailman_otp
      parameters:
      - name: list
        in: query
        description: The mailing list.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mylist
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_158"
  /Email/get_auto_responder:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's autoresponder information
      description: |-
        This function retrieves autoresponder information.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_auto_responder
      parameters:
      - name: email
        in: query
        description: The email account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: user
      - name: temp_charset
        in: query
        description: "The autoresponder's [character set](https://en.wikipedia.org/wiki/Character_encoding)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: utf-8
          default: utf-8
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_159"
  /Email/get_charsets:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Return mail server's supported character encodings
      description: |-
        This function lists character encodings that the mail server supports.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_charsets
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_160"
  /Email/get_client_settings:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's client settings
      description: |-
        This function retrieves an email account's client settings.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_client_settings
      parameters:
      - name: account
        in: query
        description: "The email address for which to send client settings.\n\n**Note:**\n\
          \nThis parameter defaults to the [system default email account](https://go.cpanel.net/systemdefaultemailaccount). "
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_161"
  /Email/get_default_email_quota:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's default email quota
      description: |-
        This function retrieves the account's default email quota size, in bytes format.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_default_email_quota
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_162"
  /Email/get_default_email_quota_mib:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's default email quota in MiB
      description: |-
        This function retrieves the account's default email quota size in [mebibytes](https://en.wikipedia.org/wiki/Mebibyte) (MiB).

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_default_email_quota_mib
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_163"
  /Email/get_disk_usage:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's disk usage
      description: |-
        This function retrieves the disk space that an email account uses.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_disk_usage
      parameters:
      - name: domain
        in: query
        description: The email account's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: user
        in: query
        description: The email account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_164"
  /Email/get_filter:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Return email filter's information
      description: |-
        This function retrieves an email filter's information.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_filter
      parameters:
      - name: account
        in: query
        description: The email address that owns the filter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: filtername
        in: query
        description: The filter's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: coffee
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_165"
  /Email/get_held_message_count:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's outgoing message count
      description: |-
        This function returns the count of outbound email messages held in the mail queue for the specified email account.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_held_message_count
      parameters:
      - name: email
        in: query
        description: The email address to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_166"
  /Email/get_lists_total_disk_usage:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Return cPanel account's mailing list disk usage
      description: |-
        This function returns the total disk usage for the [mailing lists](https://go.cpanel.net/cpaneldocsMailingLists) of a cPanel account.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_lists_total_disk_usage
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_167"
  /Email/get_mailbox_autocreate:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Return cPanel account's mailbox autocreate status
      description: |-
        This function checks whether a cPanel account will automatically create mailboxes when it receives an email address in [plus address format](https://en.wikipedia.org/wiki/Email_address#Sub-addressing).

        **Note:**

        To enable or disable this functionality, use the UAPI's `Email::enable_mailbox_autocreate` and `Email::disable_mailbox_autocreate` functions.
      operationId: get_mailbox_autocreate
      parameters:
      - name: email
        in: query
        description: The email account address to query.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_168"
  /Email/get_mailman_delegates:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Return mailing list administrators
      description: |-
        This function lists a mailing list's administrators.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_mailman_delegates
      parameters:
      - name: list
        in: query
        description: The name of a Mailman mailing list on the cPanel account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mylist
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_169"
  /Email/get_main_account_disk_usage:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return primary email account's disk usage
      description: |-
        This function returns the disk space that the main account uses.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_main_account_disk_usage
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_170"
  /Email/get_main_account_disk_usage_bytes:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return primary email account's disk usage in bytes
      description: |-
        This function returns the disk space that the cPanel account uses.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_main_account_disk_usage_bytes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_171"
  /Email/get_max_email_quota:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's max quota size
      description: |-
        This function retrieves the account's maximum email quota size, in bytes format.

        **Important:**

          When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_max_email_quota
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_172"
  /Email/get_max_email_quota_mib:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's max quota size in MiB
      description: |-
        This function retrieves the account's maximum email account quota size, in
        [Mebibytes (MiB)](https://en.wikipedia.org/wiki/Mebibyte) format.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: get_max_email_quota_mib
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_173"
  /Email/get_pop_quota:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's quota
      description: |-
        This function retrieves an email account's quota.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_pop_quota
      parameters:
      - name: email
        in: query
        description: "The email account username.  For example, user if the email\
          \ address is user@example.com."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: as_bytes
        in: query
        description: |-
          Whether to return the quota as bytes.

          * `1` â Return the quota as bytes.
          * `0` â Return the quota as megabytes (MB).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: domain
        in: query
        description: The email account's domain. This parameter defaults to the cPanel
          account's main domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_174"
  /Email/get_spam_settings:
    get:
      tags:
      - Email
      - Spam Management
      summary: Return email account Apache SpamAssassin settings
      description: |-
        This function retrieves the Apache SpamAssassinâ¢ settings for the account.

        **Important:**

        When you disable the [SpamFilter role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_spam_settings
      parameters:
      - name: account
        in: query
        description: |-
          Retrieve a specific user account's SpamAssassin settings.

          **Note:**

          If you do **not** specify this parameter, the function returns the settings for [the default email account](https://go.cpanel.net/DefaultAddress).
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_175"
  /Email/get_webmail_settings:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email account's Webmail settings
      description: |-
        This function retrieves an email account's Webmail settings.

        **Important:**

        When you disable the [_Receive Mail_ role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_webmail_settings
      parameters:
      - name: account
        in: query
        description: |-
          The email account.

          **Note:**

          If you do **not** specify a value, the function retrieves settings for the cPanel account's default mail account.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/account_1"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_176"
  /Email/has_delegated_mailman_lists:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Return email account's mailing list privileges
      description: |-
        This function checks an account's administrative privileges on mailing lists.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: has_delegated_mailman_lists
      parameters:
      - name: delegate
        in: query
        description: The email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_177"
  /Email/has_plaintext_authentication:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Return whether plaintext authentication is enabled
      description: |-
        This function checks whether plaintext authentication is enabled on the Dovecot mail server.

        **Important:**

          When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: has_plaintext_authentication
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_178"
  /Email/hold_outgoing:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Stop email account's outgoing mail
      description: |-
        This function sets Exim's queue to not send outgoing mail from an email account.

        **Notes:**

        * To send all mail from the queue, use the UAPI `Email::release_outgoing` function.
        * To reject outgoing mail and not place mail in a queue, use the UAPI `Email::suspend_outgoing` function.
        * This function does **not** hold local outgoing mail.
      operationId: hold_outgoing
      parameters:
      - name: email
        in: query
        description: The email account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_179"
  /Email/list_auto_responders:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return domain's autoresponders
      description: |-
        This function lists a domain's autoresponders.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_auto_responders
      parameters:
      - name: domain
        in: query
        description: The domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: regex
        in: query
        description: "A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions)\
          \ that filters the results."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_180"
  /Email/list_default_address:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return domain's default email address
      description: |-
        This function retrieves a domain's default address.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_default_address
      parameters:
      - name: user
        in: query
        description: The user whose default addresses to list.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: user
      - name: domain
        in: query
        description: "The domain. If you do not specify a value, the function lists\
          \ default addresses for all of the cPanel account's domains."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_181"
  /Email/list_domain_forwarders:
    get:
      tags:
      - Email
      - Email Forwarding
      summary: Return domain-level forwarders
      description: |-
        This function lists domain-level forwarders.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_domain_forwarders
      parameters:
      - name: domain
        in: query
        description: "The domain name to query. If you do not use this parameter,\
          \ the function returns all domain-level forwarders on the cPanel account."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_182"
  /Email/list_filters:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Return account-level email filters
      description: |-
        This function lists account-level mail filters. For more information about Exim filters, read [Eximâs documentation](http://www.exim.org/exim-html-3.30/doc/html/filter.html).

        **Important**:

          When you disable the [Mail Receive role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_filters
      parameters:
      - name: account
        in: query
        description: "The email address or cPanel account username for which to return\
          \ a list of filters. If you do not specify this value, the function lists\
          \ all of the cPanel accountâs account-level filters."
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/account_2"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_183"
  /Email/list_filters_backups:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Return domains with domain-level email filters
      description: |-
        This function lists all of the cPanel account's domains that use domain-level filters.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_filters_backups
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_184"
  /Email/list_forwarders:
    get:
      tags:
      - Email
      - Email Forwarding
      summary: Return domain's forwarders
      description: |-
        This function lists a domain's forwarders.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_forwarders
      parameters:
      - name: domain
        in: query
        description: The domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: regex
        in: query
        description: "A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions)\
          \ that filters the results. If you do **not** use this parameter, the function\
          \ returns results for all of the account's filters."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_185"
  /Email/list_forwarders_backups:
    get:
      tags:
      - Email
      - Email Forwarding
      summary: Return domains with domain-level forwarders
      description: |-
        This function lists the domains with domain-level forwarders.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_forwarders_backups
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_186"
  /Email/list_lists:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Return cPanel account's mailing lists
      description: This function lists the account's Mailman mailing lists.
      operationId: list_lists
      parameters:
      - name: domain
        in: query
        description: "The domain to query. If you do **not** use this parameter, the\
          \ function lists mailing lists for all of the cPanel account's domains."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: regex
        in: query
        description: "A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions)\_\
          that filters the results."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_187"
  /Email/list_mail_domains:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return cPanel account's mail domains
      description: |-
        This function lists the account's mail domains.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.

        **Note:**

          This function **always** returns the account's main domain first.
      operationId: list_mail_domains
      parameters:
      - name: add_www
        in: query
        description: |-
          Whether to list `www.` addresses.
          * `1` â List `www.` addresses.
          * `0` â Do **not** list `www.` addresses.
          For example, if you specify `1`, the function's output would include both `example.com` and `www.example.com`. If you specify `0`, the output would include **only** `example.com`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: include_wildcard
        in: query
        description: |-
          Whether to list wildcard addresses.
          * `1` â List wildcard addresses.
          * `0` â Do **not** list wildcard addresses.
          For example, if you specify `1`, the function's output would include both `example.com` and `*.example.com`. If you specify `0`, the output would include **only** `example.com`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: select
        in: query
        description: "The name of the domain that the function returns with the `select\
          \ `output parameter. If you do **not** use this parameter, the function\
          \ will **not** return the `select` parameter with any domains."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_188"
  /Email/list_mxs:
    get:
      tags:
      - Email DNS Settings
      summary: Return mail exchanger records
      description: |-
        This function lists Mail Exchanger (MX) records.

        **Important:**

          When you disable the [*DNS* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_mxs
      parameters:
      - name: domain
        in: query
        description: "The domain to query. If you do **not** use this parameter, the\
          \ function returns MX records for all of the cPanel account's domains."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_189"
  /Email/list_pops:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email accounts
      description: |-
        This function lists the cPanel account's email accounts.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_pops
      parameters:
      - name: no_validate
        in: query
        description: |-
          Whether to skip the email database's validation check.
          * `1` â Skip the validation check.
          * `0` â Run the validation check.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: regex
        in: query
        description: "A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions)\
          \ that filters the results."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: skip_main
        in: query
        description: |-
          Whether to exclude the cPanel account's main account from the results.
          * `1` â Exclude the main account.
          * `0` â Include the main account.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_190"
  /Email/list_pops_with_disk:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Return email accounts with disk information
      description: |-
        This function lists the cPanel account's email accounts with disk information.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_pops_with_disk
      parameters:
      - name: domain
        in: query
        description: "A domain name to filter the results by. If you do **not** use\
          \ this parameter, the function returns **all** of the cPanel account's email\
          \ addresses."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: email
        in: query
        description: |-
          The cPanel user account to query. If you do **not** use this parameter, the function returns the email addresses for **all** cPanel accounts that the user owns.

          **Note:**

           To retrieve information for a single email address, add the domain parameter. For example, `email=user&domain=example.com` will return information for the email address `user@example.com`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: user
      - name: get_restrictions
        in: query
        description: |-
          Whether to display restriction status for each of the email addresses.
          * `1` â Display.
          * `0` â Do **not** display.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: infinityimg
        in: query
        description: "An image to display for email addresses with an unlimited quota.\
          \ If you specify an `infinityimg` value, the function returns HTML code\
          \ to display that image as the `diskquota` parameter's value."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: images/myimg.jpg
      - name: infinitylang
        in: query
        description: |-
          Whether to return the `â` character for email addresses with an unlimited quota.
          * `1` â Return the `â` character for unlimited `diskquota` values.
          * `0` â Return the string `unlimited` for unlimited `diskquota` values.

          **Note:**

           If you specify `1` for this parameter **and** the `infinityimg` parameter, the function ignores **this** parameter and returns HTML code for unlimited `diskquota` values.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: maxaccounts
        in: query
        description: "The maximum number of email addresses to return. If you do not\
          \ use this parameter, the function returns an unlimited number of email\
          \ addresses."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 500
      - name: no_disk
        in: query
        description: |-
          Whether to skip the collection of disk usage information.
          * `1` â Do **not** collect.
          * `0` â Collect.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: no_validate
        in: query
        description: |-
          Whether to skip email database validation.
          * `1` â Skip validation.
          * `0` â Perform the validation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: regex
        in: query
        description: "A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions)\
          \ that filters the results. For example, `/^[a-z0-9_-]{6,18}$/` matches\
          \ the local portion of an email address, if it contains between six and\
          \ 18 characters."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "/^[a-z0-9_-]{6,18}$/"
          default: An empty string
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_191"
  /Email/list_system_filter_info:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Return system-level email filter file information
      description: |-
        This function retrieves a `.yaml.gz` file that contains system-level filter information.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_system_filter_info
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_192"
  /Email/passwd_list:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Update mailing list password
      description: |-
        This function changes a mailing list's password.

        **Important:**

        When you disable the [_Receive Mail_](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: passwd_list
      parameters:
      - name: list
        in: query
        description: The full name (including the domain) of a Mailman mailing list
          on the cPanel account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mylist@example.com
      - name: password
        in: query
        description: The new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_193"
  /Email/passwd_pop:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Update email account password
      description: |-
        This function changes an email account's password.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: passwd_pop
      parameters:
      - name: email
        in: query
        description: The email account username or address.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/email_4"
        example: username@example.com
      - name: password
        in: query
        description: The email account password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: domain
        in: query
        description: The email account's domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
          default: the cPanel account's main domain
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_194"
  /Email/release_outgoing:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Start email account outgoing mail
      description: |-
        This function sends all of the outgoing mail from Exim's queue for an email account.

        **Note:**

        To set Exim to queue all outgoing mail for an email account, use the UAPI `Email::hold_outgoing` function.
      operationId: release_outgoing
      parameters:
      - name: email
        in: query
        description: The email account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_195"
  /Email/remove_mailman_delegates:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Remove account mailing list admin privileges
      description: This function removes an account's mailing list administrative
        privileges.
      operationId: remove_mailman_delegates
      parameters:
      - name: delegates
        in: query
        description: list of the administrators to remove.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "user@example.com,admin@example.com"
      - name: list
        in: query
        description: The mailing list.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mylist
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_196"
  /Email/reorder_filters:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Update email address's email filter order
      description: |-
        This function modifies the filter order for an email address. For more information about Exim filters, readÂ [Exim's documentation](http://www.exim.org/exim-html-3.30/doc/html/filter.html).

        **Important:**

        When you disable the [_Receive Mail_ role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: reorder_filters
      parameters:
      - name: filter*
        in: query
        description: |-
          A mail filter name.

          For each mail filter to reorder, supply a `filter*` parameter, where `*` is a number that represents the filter's order.

          For example, to set `coffee` as the first email filter and `cheesecloth` as the second, set `coffee` as the `filter1` parameter's value, and `cheesecloth` as the value for the `filter2` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: coffee
      - name: mailbox
        in: query
        description: The email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_197"
  /Email/set_always_accept:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Update Mail Exchanger type
      description: |-
        This function sets the Mail Exchanger (MX) type.

        **Note:**

          This function **only** affects the cPanel configuration. You **must** configure the mail exchanger's DNS entry separately.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: set_always_accept
      parameters:
      - name: domain
        in: query
        description: The mail exchanger's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: alwaysaccept
        in: query
        description: |-
          The mail exchanger type.
          * `auto` â Allow cPanel to determine the appropriate role.
          * `local` â Always accept the domain's mail.
          * `secondary` â Accept mail until a higher priority mail server is available.
          * `remote` â Do **not** accept mail.

          **Note:**

          This parameter is redundant with the `mxcheck` parameter. Do **not** enter the `mxcheck` and `alwaysaccept`
          parameters at the same time. [Undefined behavior](https://en.wikipedia.org/wiki/Undefined_behavior) may occur if this
          happens.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: auto
          default: auto
          enum:
          - auto
          - local
          - secondary
          - remote
      - name: mxcheck
        in: query
        description: |-
          The mail exchanger type.
          * `auto` â Allow cPanel to determine the appropriate role.
          * `local` â Always accept the domain's mail.
          * `secondary` â Accept mail until a higher priority mail server is available.
          * `remote` â Do **not** accept mail.

          **Note:**

          This parameter is redundant with the `alwaysaccept` parameter. Do **not** enter the `mxcheck` and `alwaysaccept`
          parameters at the same time. [Undefined behavior](https://en.wikipedia.org/wiki/Undefined_behavior) may occur if this
          happens.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: auto
          default: auto
          enum:
          - auto
          - local
          - secondary
          - remote
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_198"
  /Email/set_default_address:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Create default email address
      description: |-
        This function configures a default (catchall) email address.

        **Important**:

          When you disable the [Mail Receive role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_default_address
      parameters:
      - name: fwdopt
        in: query
        description: |-
          The method to use to handle unroutable mail.
          * `fwd` â Forward messages to the `fwdemail` parameterâs address.
          * `fail` â Bounce messages back to the sender, and include the `failmsgs` parameterâs failure message.
          * `blackhole` â Send messages to the `/dev/null/` directory. This method does **not** generate a failure notice.
          * `pipe` â Pipe mail to the `pipefwd` parameterâs application. This parameter requires the [File Storage role](https://go.cpanel.net/serverroles).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: fwd
          enum:
          - fwd
          - fail
          - blackhole
          - pipe
      - name: domain
        in: query
        description: |-
          The domain whose default email behavior you want to configure.

          **Note**:

            This parameter defaults to the cPanel accountâs main domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: failmsgs
        in: query
        description: |-
          The failure message for the messageâs sender.

          **Note**:

           Use this parameter if you used the `fail` method for the `fwdopt` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Failure echos loud. That address does not exist. Softly I regret.
            - an email failure haiku
          default: No such person at this address
      - name: fwdemail
        in: query
        description: |-
          The email address to which the system forwards messages.

          **Note**:

           Use this parameter if you used the `fwd` method for the `fwdopt` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: admin@example.com
      - name: pipefwd
        in: query
        description: |-
          The application to which the system pipes messages.

          **Note**:

            Use this parameter if you used the `pipe` method for the `fwdopt` parameter.

          **Important**:

            This parameter requires the [File Storage role](https://go.cpanel.net/serverroles).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: mailscript.pl
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_199"
  /Email/set_list_privacy_options:
    get:
      tags:
      - Email
      - Mailing Lists
      summary: Update mailing list privacy options
      description: |-
        This function modifies a Mailman mailing list's privacy options.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_list_privacy_options
      parameters:
      - name: advertised
        in: query
        description: |-
          Whether the Mailman directory page displays the list.
          * `1` - Display.
          * `0` - Does **not** display.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: archive_private
        in: query
        description: |-
          Whether the mailing list archive is private.
          * `1` - Private.
          * `0` - Public.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: list
        in: query
        description: The mailing list name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mylist
      - name: subscribe_policy
        in: query
        description: |-
          The level of control that the mailing list administrator has over new subscribers.
          * `1` - Anyone can subscribe. The system sends a confirmation email.
          * `2` - The administrator **must** approve subscriptions. The system does **not** send a confirmation email.
          * `3` - The administrator **must** approve subscriptions. The system sends a confirmation email.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 2
          - 3
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_200"
  /Email/set_manual_mx_redirects:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Add manual MX redirection
      description: |-
        This function lets you create a manual Exim mail exchanger (MX) redirect for a domain.
        An MX redirection lets you bypass the domain's MX lookup via the Domain Name System (DNS).
        This function adds the manual redirect entries to the `/etc/manualmx` file.

        **Note:**

          To remove a domain's manual MX redirection, use the UAPI Email `unset_manual_mx_redirect` function.
      operationId: set_manual_mx_redirects
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to add a manual MX redirect entry.

          **Note:**

          * To add multiple domain entries, increment the parameter. For example, use the `domain`, `domain-1`, and `domain-2` parameters.
          * For multiple domains, you **must** include its corresponding `mx_host` value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
        examples:
          single:
            summary: Add a single manual MX redirect entry.
            value: '''example.com'''
          multiple:
            summary: Add multiple manual MX redirect entries.
            value: example.com&domain-1=example1.com&domain-2=example2.com
      - name: mx_host
        in: query
        description: |-
          The domain, IPv4, or IPv6 address to redirect the domain value's emails to.

          **Note:**

           * To add multiple MX hosts, increment the parameter. For example, use the `mx_host`, `mx_host-1`, and `mx_host-2` parameters.
           * For multiple MX hosts, you **must** include its corresponding `domain` value.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/mx_host"
        examples:
          single:
            summary: Add a single manual MX host.
            value: '''mailhostexample'''
          multiple:
            summary: Add multiple manual MX hosts.
            value: mailhostexample&mx_host-1=mailhostexample&mx_host-2=mailhostexample
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_201"
  /Email/stats_db_status:
    get:
      tags:
      - Email
      - Email Server Information
      summary: Return eximstats SQLite database status
      description: |-
        This function returns the status of the eximstatsÂ SQLiteÂ Database.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: stats_db_status
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_202"
  /Email/store_filter:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Create email filter
      description: |-
        This function creates a new email filter. For more information about Exim filters, readÂ [Exim's documentation](http://www.exim.org/exim-html-3.30/doc/html/filter.html).

        **Important:**

        When you disable the [*Receive Mail* role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.

        ### Create multiple rules

        You may create up to 4,096 separate sets of conditions in one filter. To do this, append numbers to the parameter names.

        To create a filter with two sets of actions and conditions, use the following parameters:
          * Assign the information for the first filter rule to the `action1`, `dest1`, `match1`, `opt1`, `part1`, and `val1` parameters.
          * Assign the information for the second filter rule to the `action2`, `dest2`, `match2`, `opt2`, `part2`, and `val2` parameters.

        To create a filter that uses one set of actions but two sets of conditions, use the following parameters:
          * Assign the actions to the `action1` and `dest1` parameters.
          * Assign the first set of conditions to the `match1`, `opt1`, `part1`, and `val1` parameters.
          * Assign the second set of conditions to the `match2`, `opt2`, `part2`, and `val2` parameters.
      operationId: store_filter
      parameters:
      - name: action*
        in: query
        description: |-
          The filter's action.

          * `deliver` - Deliver the message to the `dest*` address.
          * `fail` - Force a delivery failure.
          * `finish` - Stop processing the message.
          * `save` - Save the message to the `dest*` file.
          * `pipe` - Pipe the message to the `dest*` application.

          **Important:**

          * You **must** increment each action. For example, pass the first action as `action1` and the second action as `action2`.
          * This value **requires** the `FileStorage` role. For more information, read our [How to Use Server Profiles](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles) documentation.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/action"
        examples:
          multiple:
            summary: Use multiple filter actions.
            value: action1=deliver action2=save
          single:
            summary: Use a single filter action.
            value: deliver
      - name: filtername
        in: query
        description: The filter name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: coffee
      - name: match*
        in: query
        description: |-
          The filter's [match type](http://www.exim.org/exim-html-current/doc/html/spec_html/filter_ch-exim_filter_files.html).
          * If the `val*` parameter is a string, use a string operator.
          * If the `val*` parameter is an integer, use a numeric operator.

          String operators:

          * `is`
          * `matches`
          * `contains`
          * `does not contain`
          * `begins`
          * `does not begin`
          * `ends`
          * `does not end`
          * `does not match`

          Numeric operators:

          * `is above`
          * `is not above`
          * `is below`
          * `is not below`

          **Important:**

           You **must** increment each match type. For example, pass the first match type as `match1` and the second match type as `match2`.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/match"
        examples:
          multiple:
            summary: Use multiple match types.
            value: match1=contains match2=matches
          single:
            summary: Use a single match type.
            value: contains
      - name: part*
        in: query
        description: |-
          The email section to query.

           * `$h_x-Spam-Bar:` - Match against the message's spam score value, measured in plus(`+`) characters.
           * `$h_x-Spam-Score:` - Match against the message's spam score value.
           * `$h_X-Spam-Status:` - Match against whether the system detected the message as spam.
           * `$h_List-Id:` - Match against the message's `List-ID` header value.
           * `$header_from:` - Match against the `From:` section.
           * `$header_subject:` - Match against the `Subject:` section.
           * `$header_to:` - Match against the `To:` section.
           * `$reply_address:` - Match against the `Reply To:` section.
           * `$message_body:` - Match against the message's body.
           * `$message_headers:` - Match against the message's headers.
           * `foranyaddress $h_to:, $h_cc:` - Match against all message recipients.
           * `not delivered` - Match if the message is not queued for delivery.
           * `error_message` - Match if the incoming message is bounced.

          **Important:**

          You **must** increment each section. For example, pass the first section as `part1` and the second section as `part2`.

          **Note:**

          Generally, the recipient does **not** receive the `BCC` field in an email's header. For this reason you **cannot** use the `BCC` field in a filter.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/part"
        examples:
          multiple:
            summary: Query multiple email sections.
            value: part1=$header_from part2=$message_body
          single:
            summary: Query a single email section.
            value: $header_from
      - name: val*
        in: query
        description: |-
          The value to match.

          **Important:**

          You **must** increment each value. For example, pass the first value as `val1` and the second value as `val2`.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/val"
        examples:
          multiple:
            summary: Match multiple values.
            value: val1=coconut val2=12
          single:
            summary: Match a single value.
            value: coconut
      - name: account
        in: query
        description: "The email address, for user-level filters. If you do not use\
          \ this parameter, the function creates an account-level filter."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: dest*
        in: query
        description: |-
          The destination for filtered mail.

          **Important:**

           * This parameter is **required** if the action value is `deliver`, `save`, or `pipe`.
           * You **must** increment each destination. For example, pass the first destination as `dest1` and the second destination as `dest2`.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/dest"
        examples:
          multiple:
            summary: Use multiple destinations for filtered mail.
            value: dest1=user@example.com dest2=user2@example.com
          single:
            summary: Use a single destination for filtered mail.
            value: user@example.com
      - name: oldfiltername
        in: query
        description: "The name of an existing filter, to rename it. If you do not\
          \ use this parameter, the function creates a new filter."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: pool
      - name: opt*
        in: query
        description: |-
          The connection between multiple conditions.

          **Important:**

          You **must** increment each connection. For example, pass the first connection as `opt1` and the second connection as `opt2`.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/opt"
        examples:
          multiple:
            summary: Use multiple connections between conditions.
            value: opt1=and opt2=and
          single:
            summary: Use a single connection between conditions.
            value: and
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_203"
  /Email/suspend_incoming:
    get:
      tags:
      - Email
      - Email Suspensions
      summary: Suspend email account incoming (SMTP) mail
      description: |-
        This function suspends incoming email for an account. The system will reject incoming email while the account is suspended.

        **Notes:**

        * The user can still log in to the email account. To suspend a user's ability to log in to, send mail from, and read their account, use the UAPI `Email::suspend_login` function.
        * Use the UAPI `Email::unsuspend_incoming` function to allow the account to receive email.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: suspend_incoming
      parameters:
      - name: email
        in: query
        description: The email user's account name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_204"
  /Email/suspend_login:
    get:
      tags:
      - Email
      - Email Suspensions
      summary: Suspend email account login
      description: |-
        This function suspends a user's ability to log in to their email account. This function immediately suspends the user's login credentials and prevents future authenticated connections to the email account.

        **Notes:**

        * When you suspend an account, the user's account still receives email.
        * To suspend incoming email for an account, use the UAPI `Email::suspend_incoming` function.
        * To remove the login suspension for an account, use the UAPI `Email::unsuspend_login` function.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: suspend_login
      parameters:
      - name: email
        in: query
        description: The email user's account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_205"
  /Email/suspend_outgoing:
    get:
      tags:
      - Email
      - Email Suspensions
      summary: Suspend email account outgoing mail
      description: |-
        This function rejects outgoing mail for a suspended email account. This function doesÂ **not**Â disable a user's login credentials or access permissions to their email account.

        **Notes:**

        * To suspend a user's login credentials and prevent authenticated connections to the email account, use the UAPI `Email::suspend_login` function.
        * To allow an email account to send mail, use the UAPI `Email::unsuspend_outgoing` function.
        * To hold outgoing mail in Exim's queue, use the UAPI `Email::hold_outgoing` function.

        **Important:**

        When you disable the [Send Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: suspend_outgoing
      parameters:
      - name: email
        in: query
        description: The email account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_206"
  /Email/terminate_mailbox_sessions:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Stop cPanel account IMAP and POP3 connections
      description: |-
        This function terminates all IMAP and POP3 connections for a cPanel account.

        **Note:**

        This function ends connections for every email address, which includes the [default address](https://go.cpanel.net/cpaneldocsDefaultAddress).
      operationId: email-terminate_mailbox_sessions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_207"
  /Email/trace_delivery:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Run email delivery route trace
      description: This function traces the email delivery route to an email account.
      operationId: trace_delivery
      parameters:
      - name: recipient
        in: query
        description: The email address to which to trace a message delivery path.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_208"
  /Email/trace_filter:
    get:
      tags:
      - Email
      - Email Filtering
      summary: Run test for main domain email filters
      description: |-
        This function tests mail filters. The function **only** tests filters for the cPanel account's main domain, and only tests against the message's body. For more information about Exim filters, read [Exim's documentation](http://www.exim.org/exim-html-3.30/doc/html/filter.html).

        **Note:**

        If the domain or account does not contain a filter file, this function will fail.

        **Important:**

        When you disable the [Receive Mail](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: trace_filter
      parameters:
      - name: msg
        in: query
        description: "The string to test. The function uses this string as the body\
          \ of an email message, to check whether filters would match the string."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Test
      - name: account
        in: query
        description: "The email address, to test legacy cPanel filters in the filters\
          \ directory. If you do not use this parameter, the function tests the main\
          \ domain's filters in the `/etc/vfilters` directory."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_209"
  /Email/unset_manual_mx_redirects:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Remove manual MX redirection
      description: |-
        This function lets you create a manual Exim mail exchanger (MX) redirect for a domain.
        An MX redirection lets you bypass the domain's MX lookup via the Domain Name System (DNS).
        This function adds the manual redirect entries to the `/etc/manualmx` file.

        **Note:**

          To remove a domain's manual MX redirection, use the UAPI Email `unset_manual_mx_redirect` function.
      operationId: unset_manual_mx_redirects
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to add a manual MX redirect entry.

          **Note:**

          * To add multiple domain entries, increment the parameter. For example, use the `domain`, `domain-1`, and `domain-2` parameters.
          * For multiple domains, you **must** include its corresponding `mx_host` value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
        examples:
          single:
            summary: Add a single manual MX redirect entry.
            value: '''example.com'''
          multiple:
            summary: Add multiple manual MX redirect entries.
            value: example.com&domain-1=example1.com&domain-2=example2.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_210"
  /Email/unsuspend_incoming:
    get:
      tags:
      - Email
      - Email Suspensions
      summary: Unsuspend email account incoming mail
      description: |-
        This function unsuspends incoming email for an email account.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: unsuspend_incoming
      parameters:
      - name: email
        in: query
        description: The email user's account name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_211"
  /Email/unsuspend_login:
    get:
      tags:
      - Email
      - Email Suspensions
      summary: Unsuspend email account login
      description: |-
        This function restores a user's ability to log in to their email account.

        **Note:**

        * To suspend a user's ability to log in, use the UAPI `Email::suspend_login` function.
        * To suspend incoming email for an account, use the UAPI `Email::suspend_incoming` function.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: unsuspend_login
      parameters:
      - name: email
        in: query
        description: The email user's account name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_212"
  /Email/unsuspend_outgoing:
    get:
      tags:
      - Email
      - Email Suspensions
      summary: Unsuspend email account outgoing mail
      description: "This function cancels the suspension action put in place by the\
        \ UAPI `Email::suspend_outgoing`\nfunction for outgoing mail for an email\
        \ account.\n\n**Note:**\n\nTo suspend an email account and reject all outgoing\
        \ mail, use the UAPI `Email::suspend_outgoing` function.        "
      operationId: unsuspend_outgoing
      parameters:
      - name: email
        in: query
        description: The email account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_213"
  /Email/verify_password:
    get:
      tags:
      - Email
      - Email Accounts
      summary: Validate email account password
      description: |-
        This function verifies the password for an email account.

        **Important:**

        When you disable the [Receive Mail role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: verify_password
      parameters:
      - name: email
        in: query
        description: The email account address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: password
        in: query
        description: The email account password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_214"
  /EmailAuth/apply_dmarc:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Apply DMARC records to domains.
      description: This function applies a DMARC record to the specified domain(s)
      operationId: EmailAuth::apply_dmarc
      parameters:
      - name: policy
        in: query
        description: |-
          The DMARC record to apply to the requested domains.

          **Note:**

          Visit the following link for more information about the DMARC record specification: https://dmarc.org/resources/specification/
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: v=DMARC1;p=reject;pct=100;rua=mailto:postmaster@example.com
      - name: domain
        in: query
        description: |-
          The domain for which to apply the DMARC record.

          **Note:**

          To enable multiple domain DMARC records, duplicate or increment the parameter. For example, to enable DMARC records for three domains, perform either of the following actions:

          * Use theÂ `domain` parameter three times.
          * Use theÂ `domain`, `domain-1`, and `domain-2`Â parameters.

          If you do not include this argument, the system applies the DMARC record to all the user's domains.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Enable multiple domains' DMARC records.
            value: domain-1=example1.com domain-2=example2.com domain-3=example3.com
          multiple-alternative:
            summary: Enable multiple domains' DMARC records.
            value: domain=example1.com domain=example2.com domain=example3.com
          single:
            summary: Enable a single domain's DMARC records.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_215"
  /EmailAuth/disable_dkim:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Remove domains' DKIM records
      description: This function removes the DomainKeys Identified Mail (DKIM) records
        on the DNS server for one or more domains.
      operationId: disable_dkim
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to remove DKIM records on the DNS server.

          **Note:**

          To remove multiple domain DKIM records, duplicate the parameter name. For example, use the `domain=example.com`, `domain=example2.com`, and `domain=example3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example.com&domain=example2.com&domain=example.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_216"
  /EmailAuth/enable_dkim:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Enable domains' DKIM records
      description: |-
        This function enables DomainKeys Identified Mail (DKIM) records on the DNS server for one or more domains.

        **Note:**

        If a DKIM record does **not** exist on the server, this function will install a new DKIM record.
      operationId: enable_dkim
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to enable DKIM records on the DNS server.

          **Note:**

          To enable multiple domain DKIM records, duplicate or increment the parameter. For example, to perform this for three domains, you could:

          * Use theÂ `domain` parameter multiple times.
          * Use theÂ `domain`, `domain-1`, and `domain-2`Â parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Enable multiple domains' DKIM records.
            value: domain-1=example1.com domain-2=example2.com domain-3=example3.com
          multiple-alternative:
            summary: Enable multiple domains' DKIM records.
            value: domain=example1.com domain=example2.com domain=example3.com
          single:
            summary: Enable a single domain's DKIM records.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_217"
  /EmailAuth/ensure_dkim_keys_exist:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Validate domains' DKIM private keys
      description: |-
        This function confirms the validity of a DomainKeys Identified Mail (DKIM) key for one or more domains.

        **Notes:**

        * If an existing DKIM key does **not** meet the server's security requirements, the system replaces the existing DKIM key.
        * If no DKIM key exists, the system creates a new key for the domain.
      operationId: ensure_dkim_keys_exist
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to confirm a valid DKIM key exists.

          **Note:**

           To check the DKIM key validity for multiple domains, duplicate the parameter name. For example, use the `domain=example.com`, `domain=example2.com`, and `domain=example3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example.com&domain=example2.com&domain=example3.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_218"
  /EmailAuth/fetch_dkim_private_keys:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Return domains' DKIM private keys
      description: |-
        This function returns a domain's installed DKIM private key in [Privacy-Enhanced Mail (PEM)](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.

        **Warning:**

        We **strongly** recommend that you protect your private key. If others obtain your private DKIM key, they could sign emails and impersonate you as a sender.
      operationId: fetch_dkim_private_keys
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to retrieve the installed DKIM private key.

          **Note:**

          To retrieve multiple domain DKIM keys, duplicate the parameter name. For example, use the `domain=example.com`, `domain=example2.com`, and `domain=example3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example.com&domain=example2.com&domain=example3.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_219"
  /EmailAuth/install_dkim_private_keys:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Add domains' DKIM record keys
      description: |-
        This function installs existing keys for use in a DomainKeys Identified Mail (DKIM) record. This is useful if you do not want the system to generate keys for DKIM records.

        **Note:**

        * This function does **not** update the local DNS server's records.
        * If the local DNS server is authoritative for the domain's DNS records, use the UAPI `EmailAuth::enable_dkim` function to update the local DNS server's DNS records.
          * We recommend that you use the UAPI `EmailAuth::install_dkim_private_keys` and `EmailAuth::enable_dkim functions` in a batch UAPI call.
      operationId: install_dkim_private_keys
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to install a DKIM private key on the local server.

          **Note:**

          To install multiple RSA private keys for multiple domains, duplicate the parameter name. For example, use the `domain=example.com`, `domain=example2.com`, and `domain=example3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example&domain=example2.com&domain=example3.com
          single:
            summary: A single domain.
            value: example
      - name: key
        in: query
        description: |-
          An RSA key in [Privacy-Enhanced Mail (PEM)](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.

          **Note:**

          You **must** provide this parameter for each `domain` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-private-key
          example: '-----BEGIN%20RSA%20PRIVATE%20KEY-----%0aAAAAB3NzaC1yc2EAAAABIwAAAQEA5kSivOqhs0U9ZMN20nxFe27QZ3t0lT2zbH7OSXylKd%0a1rjAjYXGnSXC9j2uaZlemHlptBKVziMJC86ha7Hcj6dVOVrDQ6vF4q34bOCjtKLphQ0IjB%0azVIvqILH9eLJdRaOrS34CmgmPaisrCk5wKVlakygvUfcj3HzaTKS6THyZDGx5shdTpa9lb%0ay8tpOD3JceV7ay4w8r0DipoKPC0OLpvS4EABEeMo9sx8zQEaKv03XygjNCCYtFvxlQQIRG%0alVoL7mPaHSaL3anI05RpNbm/PS+9BhZg+BqNjU4ofHBbfkXk5MiN6M7ieR4Sk5BquccboG%0aF13U5slNgmCEekdt0amw%0a-----END%20RSA%20PRIVATE%20KEY-----%0a'
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_220"
  /EmailAuth/install_spf_records:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Add domains' SPF records
      description: This function installs a Sender Policy Framework (SPF) record for
        a domain on the DNS server.
      operationId: install_spf_records
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to install an SPF record on the DNS server.

          **Note:**

          To install multiple SPF records, duplicate the parameter name. For example, use the `domain=example.com`, `domain=example2.com`, and `domain=example3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example.com&domain=example2.com&domain=example3.com
          single:
            summary: A single domain.
            value: example.com
      - name: record
        in: query
        description: |-
          An SPF record.

          **Note:**

          You **must** provide this parameter for each `domain` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '"v=spf1 ip4:10.0.0.1 %2Ba %2Bmx %2Bip4:10.0.0.2 %2Bip4:10.0.0.3
            -all"'
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_221"
  /EmailAuth/remove_dmarc:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Remove DMARC record from domain(s)
      description: This function removes the DMARC record for domains.
      operationId: EmailAuth::remove_dmarc
      parameters:
      - name: domain
        in: query
        description: |-
          The domain from which to remove the DMARC record.

          **Note:**

          If you do not include this argument, the system will remove **all** DMARC records from **all** domains owned by the user.

          To remove multiple domain DMARC records, duplicate the parameter name. For example, use the `domain=example.com`, `domain=example2.com`, and `domain=example3.com` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example.com&domain=example2.com&domain=example.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_222"
  /EmailAuth/validate_current_dkims:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Validate domains' DKIM records
      description: |-
        This function retrieves and checks the DomainKeys Identified Mail
        (DKIM) records for one or more domains.
      operationId: validate_current_dkims
      parameters:
      - name: domain
        in: query
        description: The domain for which to check the DKIM records.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Check DKIM records for a multiple domains.
            value: |-
              domain=example.com,domain=another.com,domain=yetanother.com
              domain=example.com,domain-1=another.com,domain-2=yetanother.com
          single:
            summary: Check DKIM records for a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_223"
  /EmailAuth/validate_current_dmarcs:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Validate domains' DMARC records
      description: This function checks the validity of the current DMARC record for
        one or more domains.
      operationId: EmailAuth::validate_current_dmarcs
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to check the DMARC record.

          **Note:**

          If you do not include this argument, the system will validate DMARC records for all domains owned by the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Check DMARC records for multiple domains.
            value: "domain=example.com,domain=another.com,domain=yetanother.com"
          single:
            summary: Check DMARC records for a single domain.
            value: domain=example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_224"
  /EmailAuth/validate_current_ptrs:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Validate domains' PTR records
      description: |-
        This function validates the pointer records (PTR) for IPv4 and
        IPv6 addresses that the account's domains send mail from. It retrieves the
        PTR records for each IP address and determines which of the domain's IP addresses
        send mail. It then validates the PTR records for each IP address and validates
        the A or AAAA records pointing to each domain. This function also ensures
        that at least one of that domain's A or AAAA records points back to the IP
        address.
      operationId: validate_current_ptrs
      parameters:
      - name: domain
        in: query
        description: The domain for which to validate the PTR records.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Check PTR records for a multiple domains.
            value: |-
              `domain`=example.com,`domain`=another.com,`domain`=yetanother.com
              `domain`=example.com,`domain-1`=another.com,`domain-2`=yetanother.com
          single:
            summary: Check PTR records for a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_225"
  /EmailAuth/validate_current_spfs:
    get:
      tags:
      - EmailAuth
      - Email DNS Settings
      summary: Validate domains' SPF records
      description: |-
        This function retrieves the the Sender Policy Framework (SPF) records
        for one or more domains.
      operationId: validate_current_spfs
      parameters:
      - name: domain
        in: query
        description: The domain for which to check the `SPF` records.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Check `SPF` records for a multiple domains.
            value: |-
              `domain`=example.com,`domain`=another.com,`domain`=yetanother.com
              `domain`=example.com,`domain-1`=another.com,`domain-2`=yetanother.com
          single:
            summary: Check `SPF` records for a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_226"
  /ExternalAuthentication/add_authn_link:
    get:
      tags:
      - ExternalAuthentication
      - External Authentication
      summary: Add external authentication link
      description: This function adds an External Authentication authorization link
        to an account.
      operationId: add_authn_link
      parameters:
      - name: preferred_username
        in: query
        description: The preferred username of the account on theÂ identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Example
      - name: provider_id
        in: query
        description: The name of theÂ identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: google
      - name: subject_unique_identifier
        in: query
        description: The unique identifier for the user at theÂ identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "123456789012345678901"
      - name: username
        in: query
        description: The username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_227"
  /ExternalAuthentication/configured_modules:
    get:
      tags:
      - ExternalAuthentication
      - External Authentication
      summary: Return server's external authentication providers
      description: This function lists the display information for your server's available
        and configured external authenticationÂ identity provider modules.
      operationId: configured_modules
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_228"
  /ExternalAuthentication/get_authn_links:
    get:
      tags:
      - ExternalAuthentication
      - External Authentication
      summary: Return external authentication links
      description: This function lists the external authentication links to the current
        cPanel account.
      operationId: get_authn_links
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_229"
  /ExternalAuthentication/has_external_auth_modules_configured:
    get:
      tags:
      - ExternalAuthentication
      - External Authentication
      summary: Return external authentication user status
      description: This function determines whether the user enabled external authentication
        modules.
      operationId: has_external_auth_modules_configured
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_230"
  /ExternalAuthentication/remove_authn_link:
    get:
      tags:
      - ExternalAuthentication
      - External Authentication
      summary: Remove external authentication link
      description: This function removes a link to an account at an external authentication
        identity provider.
      operationId: remove_authn_link
      parameters:
      - name: provider
        in: query
        description: The name of theÂ identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanelid
      - name: subject_unique_identifier
        in: query
        description: The unique identifier for the user at theÂ identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "123456789012345678901"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_231"
  /Features/get_feature_metadata:
    get:
      tags:
      - Features
      - cPanel Features
      summary: Return cPanel account's features' metadata
      description: This function lists the details of a cPanel account's available
        feature lists.
      operationId: get_feature_metadata
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_232"
  /Features/has_feature:
    get:
      tags:
      - Features
      - cPanel Features
      summary: Validate cPanel account's feature access
      description: |-
        This function checks whether a cPanel account has access to
        a [feature](https://go.cpanel.net/whmdocsFeatureManager#selectable-features).
      operationId: has_feature
      parameters:
      - name: name
        in: query
        description: The feature's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: autossl
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_233"
              examples:
                does-not-have-feature:
                  summary: The account does not have a feature.
                  value:
                    result:
                      metadata: {}
                      status: 0
                exists-but-acct-does-not-have:
                  summary: The feature exists but the account does not have it enabled.
                  value:
                    result:
                      messages:
                      - The feature âautosslâ exists but is not enabled.
                      metadata: {}
                      status: 0
                has-feature:
                  summary: The account has a feature.
                  value:
                    result:
                      metadata: {}
                      status: 1
  /Features/list_features:
    get:
      tags:
      - Features
      - cPanel Features
      summary: Return cPanel account's features
      description: This function lists a cPanel account's features.
      operationId: list_features
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_234"
  /Fileman/autocompletedir:
    get:
      tags:
      - Fileman
      - Manage Files
      summary: Return autocomplete file and directory names
      description: |-
        This function returns any files and directories that begin with a specified string.

        **Important:**

          When you disable the [File Storage role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: autocompletedir
      parameters:
      - name: path
        in: query
        description: The prefix of the paths to complete.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: public
      - name: dirsonly
        in: query
        description: |-
          Whether to include only directories in the output.
          * `1` â **Only** include directories.
          * `0` â Include directories **and** files.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          enum:
          - 1
          - 0
      - name: html
        in: query
        description: |-
          Whether to return HTML-encoded results.
          * `1` â Return HTML-encoded output.
          * `0` â Return plaintext output.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: list_all
        in: query
        description: |-
          Whether to return all files and directories inside the specified
          directory. If you set this parameter's value to `1`, you **must** set the `path`
          parameter's value to a full directory path.
          * `1` â Return **all** files and directories inside the specified directory.
          * `0` â Return partial file and directory name matches.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_235"
  /Fileman/empty_trash:
    get:
      tags:
      - Fileman
      - Manage Files
      summary: Delete .trash folder content
      description: |-
        This function purges content from the `.trash` folder in the user's home directory.

        **Important:**

          When you disable the [FileStorage role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: empty_trash
      parameters:
      - name: older_than
        in: query
        description: |-
          The maximum age in days of content that the function will not purge.

          **Note:**

          A value of `0` will purge everything from the user's `.trash` folder.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 31
          default: 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_236"
  /Fileman/get_file_content:
    get:
      tags:
      - Fileman
      - Manage Files
      summary: Return file content
      description: |-
        This function retrieves a file's content.

        **Important:**

        When you disable the [File Storage](https://go.cpanel.net/serverroles) role, the system **disables** this function.

        **Note:**

        JSON strings **must** be valid UTF-8. To retrieve a non-UTF-8 file via
        JSON, we recommend that you give `ISO-8859-1` as `from_charset` and
        `UTF-8` as `to_charset`, then decode the return payloadâs `content`
        as UTF-8.
      operationId: get_file_content
      parameters:
      - name: dir
        in: query
        description: The file path to the directory that contains the selected file.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/user/public.html
      - name: file
        in: query
        description: The file to retrieve.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.html
      - name: from_charset
        in: query
        description: "The fileâs character encoding. This parameter defaults to\_\
          `_DETECT_`, which indicates a request to detect the fileâs character encoding."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: _DETECT_
          default: _DETECT_
      - name: to_charset
        in: query
        description: |-
          The output character encoding. This parameter defaults toÂ `_LOCALE_`, which indicates a request to use the session localeâs character encoding.

          **Important:**

          Contexts that serialize the API response as JSON **require**
          this value to be `utf-8` or `US-ASCII`. Behavior is **undefined**
          if the request indicates any other encoding.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: _LOCALE_
          default: _LOCALE_
      - name: update_html_document_encoding
        in: query
        description: |-
          Whether to update the file's HTML document encoding.

          * `1` â Update the file's HTML document encoding.
          * `0` â Don't update the file's HTML encoding.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_237"
  /Fileman/get_file_information:
    get:
      tags:
      - Fileman
      - Manage Files
      summary: Return file or directory information
      description: |-
        This function returns the information for a specified file or directory.

        **Important:**

        When you disable the [File Storage](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: get_file_information
      parameters:
      - name: path
        in: query
        description: The directory from which to list files.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: public_html
      - name: check_for_leaf_directories
        in: query
        description: |-
          Whether to flag directories that contain subdirectories.

          * `1` - Flag directories that contain subdirectories.
          * `0` - Do **not** flag directories that contain subdirectories.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: include_hash
        in: query
        description: |-
          Whether to return a hash of the file's information.

          * `1` - Return a hash of the file's information.
          * `0` - Do **not** return a hash of the file's information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: include_mime
        in: query
        description: |-
          Whether to return the file's MIME type.

          * `1` - Return the file's MIME type.
          * `0` - Do **not** return the file's MIME type.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: include_permissions
        in: query
        description: |-
          Whether to parse the file owner's read and write permissions.

          * `1` - Parse the file owner's read and write permissions.
          * `0` - Do **not** parse the file owner's read and write permissions.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: show_hidden
        in: query
        description: |-
          Whether to include hidden files in the output.

          * `1` - Include hidden files.
          * `0` - Do **not** include hidden files.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_238"
  /Fileman/list_files:
    get:
      tags:
      - Fileman
      - Manage Files
      summary: Return directory content
      description: |-
        This function returns a sorted list of files and directories.

        **Important:**

        When you disable the [FileStorage role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function. For more information, read our How to Use Server Profiles documentation.
      operationId: list_files
      parameters:
      - name: dir
        in: query
        description: The directory from which to list files.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: public_html
      - name: check_for_leaf_directories
        in: query
        description: |-
          Whether to return directories that contain subdirectories.

          * `1` â Return subdirectories.
          * `0` â Do **not** retain subdirectories.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: include_hash
        in: query
        description: |-
          Whether to include a hash of the file's information in the return.

          * `1` â Generate a hash.
          * `0` â Do **not** generate a hash.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: include_mime
        in: query
        description: |-
          Whether to return the file's MIME type.

          * `1` â Include MIME type.
          * `0` â Do **not** include MIME type.

          **Note:**

           If you set this value to `0` but also include the `mime_types` or `raw_mime_types` parameters, the function **overrides** your specified value and sets this parameter to `1`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: include_permissions
        in: query
        description: |-
          Whether to parse the file owner's read and write permissions.

          * `1` â Parse file permissions.
          * `0` â Do **not** parse file permissions.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: limit_to_list
        in: query
        description: |-
          Whether to return only entries that begin withÂ the `filepath-` prefix.

          * `1` â Return only files that begin with the `filepath-` prefix.
          * `0` â Return **all** files.

          If you do not use this parameter, the function returns all filenames.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: mime_types
        in: query
        description: |-
          The MIME types to return.

          * If you use this parameter, the function returns the specified MIME types
          and sets the `include_mime` parameter's value to `1`.
          * If you do **not** use this parameter, the function returns all MIME types.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: text-plain
      - name: only_these_files
        in: query
        description: |-
          A comma-separated list of files to return.

          If you do not use this parameter, the function returns all files.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: cpbackup-exclude.conf
      - name: raw_mime_types
        in: query
        description: |-
          The raw MIME types to return.

          * If you use this parameter, the function returns the specified MIME types
          and sets the `include_mime` parameter's value to `1`.
          * If you do **not** use this parameter, the function returns all MIME types.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: text/plain
      - name: show_hidden
        in: query
        description: |-
          Whether to include hidden files in the output.

          * `1` â Include hidden files.
          * `0` â Do **not** include hidden files.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: types
        in: query
        description: |-
          A pipe-separated list of file types to return.

          * `file` â A file.
          * `dir` â A directory.
          * `char` â A character special device.
          * `block` â A block special device.
          * `fifo` â A named pipe (FIFO).
          * `link` â A symbolic link.
          * `socket` â A Unix domain socket.

          If you do not use this parameter, the function returns all file types.
        required: false
        style: pipeDelimited
        explode: false
        schema:
          type: array
          items:
            type: string
            example: file|dir
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_239"
  /Fileman/save_file_content:
    get:
      tags:
      - Fileman
      - Manage Files
      summary: Save file
      description: |-
        This function saves a file in a directory and encodes it in a character set.

        **Important:**

          When you disable the [File Storage role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: save_file_content
      parameters:
      - name: file
        in: query
        description: The files to retrieve.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.html
      - name: content
        in: query
        description: "The new file's contents. If you do **not** use this parameter,\
          \ the function creates a blank file."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: hi
      - name: dir
        in: query
        description: |-
          The directory that contains the selected file.

          **Note:**

          This parameter defaults to the currently-authenticated user's `/home` directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/username/public_html
      - name: fallback
        in: query
        description: |-
          Whether the function will return an error or save in the default
          character set if it cannot save in the specified character set.

          * `1` â Save in the default character set.
          * `0` â Return an error.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: from_charset
        in: query
        description: "The [character set encoding](https://en.wikipedia.org/wiki/Character_encoding)\
          \ of the `content` parameter's value."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: UTF-8
          default: UTF-8
      - name: to_charset
        in: query
        description: "The [character set encoding](https://en.wikipedia.org/wiki/Character_encoding)\
          \ in which to encode the file."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ASCII
          default: UTF-8
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_240"
  /Fileman/transcode:
    get:
      tags:
      - Fileman
      - Manage Files
      summary: Update buffer encoding
      description: |-
        This function converts a buffer from one encoding language to another.

        **Important:**

          When you disable the [File Storage role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: transcode
      parameters:
      - name: content
        in: query
        description: The file's contents.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: hi
      - name: discard_illegal
        in: query
        description: |-
          Whether to discard any characters that do not transcode correctly.
            * `1` - Discard invalid characters.
            * `0` - Transcode invalid characters in the default [character set encoding](https://en.wikipedia.org/wiki/Character_encoding).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: from_charset
        in: query
        description: "The file's current [character set encoding](https://en.wikipedia.org/wiki/Character_encoding)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: UTF-8
      - name: to_charset
        in: query
        description: "The\_[character set encoding](https://en.wikipedia.org/wiki/Character_encoding)\
          \ in which to encode the file."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ASCII
      - name: transliterate
        in: query
        description: |-
          Whether to transcode invalid characters to valid characters in the new character set encoding.
            * `1` - Transcode invalid characters in the new [character set encoding](https://en.wikipedia.org/wiki/Character_encoding).
            * `0` - Return an error message.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_241"
  /Fileman/upload_files:
    get:
      tags:
      - Fileman
      - Manage Files
      summary: Upload files
      description: "This function uploads files.\n\n**Note:**\n\n  For more information\
        \ about how to use this function in your custom code,\n  read our [Use UAPI's\
        \ `Fileman::upload_files` \n  Function in Custom Code tutorial](https://go.cpanel.net/tutorial-use-uapis-fileman-upload-files-function-in-custom-code).\
        \ \n\n**Important:**\n\n When you disable the [File Storage](https://go.cpanel.net/serverroles)\
        \ role, the system **disables** this function.\n\nYou cannot call this function\
        \ through WHM API 1's [uapi_cpanel](https://go.cpanel.net/UseWHMAPItoCallcPanelAPIandUAPI)\
        \ function."
      operationId: upload_files
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_242"
  /Ftp/add_ftp:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Create FTP account
      description: |-
        This function creates an FTP account.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_ftp
      parameters:
      - name: user
        in: query
        description: The new FTP account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: disallowdot
        in: query
        description: |-
          Whether to strip dots (`.`) from the username.

          * `1` â Strip dots.
          * `0` â Do **not** strip dots.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: domain
        in: query
        description: |-
          The FTP user's associated domain. This must be a domain that the cPanel account owns.

          **Note:**

          This parameter defaults to theÂ cPanel account's primary domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: homedir
        in: query
        description: "The path to the FTP account's root directory, relative to the\
          \ cPanel account's home directory. If you don't set this, it defaults to\
          \ a directory with the same name as the FTP account."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: exampleftp
      - name: pass
        in: query
        description: |-
          The new FTP account password.

          **Note:**

          You can use the `pass_hash` parameter in place of this parameter. However, you **cannot** use both the `pass` and `pass_hash` parameters in the same request.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: pass_hash
        in: query
        description: |-
          The account's password hash.

          **Note:**

          * You can use this parameter in place of the `pass` parameter. However, you **cannot** use both the `pass` and `pass_hash` parameters in the same request.
          * You can find your server's password hash type in the `/etc/sysconfig/authconfig` file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: $6$1sOyHP5ZDYp3pGUz$R0TSgfPRHfDjT5PP5RJGv39FhiGTNNPvM7IFpCBjXijMmlMZk9yI8T3LqGuntc9fdKb5eX.lGL7wBS9e4DAWn/
          default: ""
      - name: quota
        in: query
        description: |-
          The FTP account's maximum disk usage quota, in megabytes (MB).

          **Note:**

          A value of `0` grants the FTP account unlimited disk space.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 42
          default: 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_243"
  /Ftp/allows_anonymous_ftp:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Return if anonymous FTP connections allowed
      description: |-
        This function checks whether the account allows anonymous FTP connections.

        **Important:**

        When you disable the [*FTP* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: allows_anonymous_ftp
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_244"
  /Ftp/allows_anonymous_ftp_incoming:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Return if anonymous FTP transfers allowed
      description: |-
        This function checks whether the account allows inbound anonymous FTP transfers.

        **Important:**

          When you disable the [*FTP* role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: allows_anonymous_ftp_incoming
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_245"
  /Ftp/delete_ftp:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Delete FTP account
      description: |-
        This function deletes an FTP account.

        **Important:**

        When you disable the [*FTP* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_ftp
      parameters:
      - name: user
        in: query
        description: The FTP account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: destroy
        in: query
        description: |-
          Whether to delete the FTP account's home directory.

          * `1` â Delete the home directory.
          * `0` â Do **not** delete the home directory.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: domain
        in: query
        description: |-
          The user's associated domain.

          **Note:**

          This parameter defaults to the cPanel account's primary domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_246"
  /Ftp/ftp_exists:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Return whether an FTP account exists
      description: |-
        This function checks whether an FTP account exists.

        **Note:**

        This function returns only metadata if the FTP account exists, or an error if the FTP account does **not** exist.
      operationId: ftp_exists
      parameters:
      - name: user
        in: query
        description: The FTP account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: us_chickens
      - name: domain
        in: query
        description: |-
          The user's associated domain.

          **Note:**

          This parameter defaults to the cPanel account's primary domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_247"
  /Ftp/get_ftp_daemon_info:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Return FTP server's information
      description: This function retrieves the extended information about the server's
        FTP daemon.
      operationId: get_ftp_daemon_info
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_248"
  /Ftp/get_port:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Return FTP server's port
      description: |-
        This function returns the FTP port.

        **Important:**

          When you disable the [*FTP* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_port
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_249"
  /Ftp/get_quota:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Return FTP account's quota
      description: |-
        This function checks an FTP account's quota.

        **Important:**

          When you disable the [_FTP role_](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_quota
      parameters:
      - name: account
        in: query
        description: The FTP account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user1
      - name: domain
        in: query
        description: |-
          The user's associated domain.

          **Note:**

          This parameter defaults to the cPanel account's primary domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_250"
  /Ftp/get_welcome_message:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Return FTP account's welcome message
      description: |-
        This function retrieves the cPanel account's FTP welcome message.

        **Important:**

          When you disable the [*FTP* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_welcome_message
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_251"
  /Ftp/kill_session:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Stop FTP session
      description: |-
        This function kills FTP sessions.

        **Important:**

          When you disable the [*FTP* Role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: kill_session
      parameters:
      - name: login
        in: query
        description: |-
          The username for the session's FTP account.

          **Note:**

            To stop all FTP sessions for the cPanel account, set this parameter to the `all` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: weeones
          default: all
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_252"
  /Ftp/list_ftp:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Return FTP accounts
      description: |-
        This function lists FTP account information.

        **Important:**

        When you disable the [*FTP* role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function. For more information, read our How to Use Server Profiles documentation.
      operationId: list_ftp
      parameters:
      - name: include_acct_types
        in: query
        description: |-
          A list of the FTP account types to include in the function's results.

          * `anonymous`
          * `logaccess`
          * `main`
          * `sub`

          If you do not specify this parameter, this function returns all FTP account
          types.

          **Note:**

          * Separate multiple types with the pipe character (`|`).
          * In browser-based calls, use `%7C`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: main|anonymous
      - name: skip_acct_types
        in: query
        description: |-
          A list of the FTP account types to exclude from the function's
          results.

          * `anonymous`
          * `logaccess`
          * `main`
          * `sub`

          If you do not specify this parameter, this function does **not** exclude
          any account types.

          **Note:**

          * Separate multiple types with the pipe character (`|`).
          * In browser-based calls, use `%7C`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: main|anonymous
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_253"
  /Ftp/list_ftp_with_disk:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Return FTP accounts and disk usage
      description: |-
        This function lists FTP account and disk usage information.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_ftp_with_disk
      parameters:
      - name: include_acct_types
        in: query
        description: |-
          A pipe-delimited list of the FTP account types to include in the function's results.
          If you do not specify this parameter, the function returns all FTP account types.

          Valid types for this list are:

          * `anonymous`
          * `logaccess`
          * `main`
          * `sub`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: main|anonymous
      - name: skip_acct_types
        in: query
        description: |-
          A pipe-delimited list of the FTP account types to exclude from the function's
          results. If you do not specify this parameter, the function does **not** exclude
          any account types.

          Valid types for this list are:

          * `anonymous`
          * `logaccess`
          * `main`
          * `sub`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: main|anonymous
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_254"
  /Ftp/list_sessions:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Return FTP server's active sessions
      description: |-
        This function lists the FTP server's active sessions.

        **Important:**

          When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_sessions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_255"
  /Ftp/passwd:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Update FTP account's password
      description: |-
        This function changes an FTP account's password.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: passwd
      parameters:
      - name: pass
        in: query
        description: The FTP account's new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: user
        in: query
        description: The FTP account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ftpaccount
      - name: domain
        in: query
        description: |-
          The user's associated domain.

          **Note:**

          This parameterÂ defaults to theÂ cPanel account's primary domain
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_256"
  /Ftp/server_name:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Return whether server uses ProFTPD or Pure-FTPd
      description: |-
        This function checks whether the server uses ProFTPD or Pure-FTPd.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: server_name
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_257"
  /Ftp/set_anonymous_ftp:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Enable or disable anonymous FTP logins
      description: |-
        This function enables or disables anonymous FTP logins.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_anonymous_ftp
      parameters:
      - name: set
        in: query
        description: |-
          Whether to enable or disable anonymous FTP logins.

          * `1` - Enable.
          * `0` - Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_258"
  /Ftp/set_anonymous_ftp_incoming:
    get:
      tags:
      - Ftp
      - FTP Server Settings
      summary: Enable or disable anonymous incoming FTP transfers
      description: |-
        This function enables or disables inbound anonymous FTP transfers.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_anonymous_ftp_incoming
      parameters:
      - name: set
        in: query
        description: |-
          Whether to enable or disable inbound anonymous FTP transfers.

          * `1` - Enable.
          * `0` - Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_259"
  /Ftp/set_homedir:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Update FTP account's home directory
      description: |-
        This function changes the home directory for FTP accounts.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_homedir
      parameters:
      - name: user
        in: query
        description: The FTP account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example1
      - name: domain
        in: query
        description: |-
          The user's associated domain.

          **Note:**

          The default value is the cPanel account's primary domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: homedir
        in: query
        description: |-
          The FTP account's home directory

          **Note:**

          This parameter defaults to the `user@domain` subdirectory in the cPanel account's home directory with the name, where user and domain represent the `user` and `domain` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: example1/
          default: user@domain/
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_260"
  /Ftp/set_quota:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Update FTP account's quota
      description: |-
        This function changes an FTP account's quota.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_quota
      parameters:
      - name: user
        in: query
        description: The FTP account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ftpaccount
      - name: domain
        in: query
        description: |-
          The user's associated domain.

          **Note:**

          The default value is the cPanel account's primary domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: kill
        in: query
        description: |-
          Whether to disable quotas for the FTP account.
          * `1` - Disable quotas.
          * `0` - Enable quotas.

          **Note:**

           If you disable quotas for an FTP account, you grant that account unlimited disk space.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: quota
        in: query
        description: |-
          The new quota, in megabytes.

          **Note:**

          Setting this parameter to `0` grants the account unlimited disk space.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 500
          default: 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_261"
  /Ftp/set_welcome_message:
    get:
      tags:
      - Ftp
      - FTP Accounts
      summary: Update FTP welcome message
      description: |-
        This function sets the FTP welcome message.

        **Important:**

        When you disable the [FTP role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_welcome_message
      parameters:
      - name: message
        in: query
        description: The cPanel account's new FTP welcome message.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "Greetings, Professor Falken."
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_262"
  /GPG/delete_keypair:
    get:
      tags:
      - GPG
      - Signing and Encryption (GnuPG Keys)
      summary: Delete GnuPG key pair
      description: This function deletes a GnuPG (GPG) key pair.
      operationId: delete_keypair
      parameters:
      - name: key_id
        in: query
        description: "The ID of the GPG key that you wish to delete.\n\n**Note:**\n\
          \n* The function will delete **all** keys that match this ID.\n  * If you\
          \ set this parameter to a public key, the function will delete the public\
          \ key. \n  * If you set this parameter to a public and private key pair,\
          \ the function will delete the public and private keys.\n* To obtain the\
          \ desired key, call the UAPI `GPG::list_secret_keys` function."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ACFFDB37176B680D
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_263"
  /GPG/export_public_key:
    get:
      tags:
      - GPG
      - Signing and Encryption (GnuPG Keys)
      summary: Export GnuPG public key
      description: This function exports a GnuPG (GPG) public key.
      operationId: export_public_key
      parameters:
      - name: key_id
        in: query
        description: The ID of the GPG key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 48BEA5A16FCA746E
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_264"
  /GPG/export_secret_key:
    get:
      tags:
      - GPG
      - Signing and Encryption (GnuPG Keys)
      summary: Export GnuPG secret key
      description: This function exports a GnuPG (GPG) secret key.
      operationId: export_secret_key
      parameters:
      - name: key_id
        in: query
        description: The ID of the GPG secret key that you wish to retrieve.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 48BEA5A16FCA746E
      - name: passphrase
        in: query
        description: The passphrase of the GPG secret key that you wish to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: whatever
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_265"
  /GPG/generate_key:
    get:
      tags:
      - GPG
      - Signing and Encryption (GnuPG Keys)
      summary: Create GnuPG key
      description: |-
        This function generates a GnuPGÂ (GPG) key. The system saves the key in the user's `.gnupg` directory.

        **Note:**

        This function uses [the system's entropy](https://en.wikipedia.org/wiki/Entropy_(computing)) to generate the key. Systems with low entropy levels may cause long generation times or timeouts.
      operationId: generate_key
      parameters:
      - name: email
        in: query
        description: The user's email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: name
        in: query
        description: The name of the user for whom to generate the key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: passphrase
        in: query
        description: The key's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: comment
        in: query
        description: A comment about the key.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Username's Key
      - name: expire
        in: query
        description: |-
          The desired expiration date of the key
          as a timestamp in [Unix time format](http://en.wikipedia.org/wiki/Unix_time).

          **Note:**

          This will default to one year from the current date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "1560363242"
      - name: keysize
        in: query
        description: |-
          The new key's size, in bytes.

          **Note:**

          Large keys require more time to generate.
        required: false
        style: form
        explode: true
        schema:
          maximum: 4096
          minimum: 1024
          type: integer
          example: 2048
          default: 2048
          enum:
          - 1024
          - 2048
          - 3072
          - 4096
      - name: no_expire
        in: query
        description: |-
          Whether to generate the key without an expiration date.

          * `0` - The key will expire.
          * `1` - The key will **not** expire.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_266"
  /GPG/import_key:
    get:
      tags:
      - GPG
      - Signing and Encryption (GnuPG Keys)
      summary: Import GnuPG key
      description: This function imports a GnuPG (GPG) key.
      operationId: import_key
      parameters:
      - name: key_data
        in: query
        description: |-
          The key to import.

          **Note:**

          You must URI-encode this value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '%0A-----BEGIN%20PGP%20PUBLIC%20KEY%20BLOCK-----%0AVersion%3A%20GnuPG%20v2.0.14%20(GNU%2FLinux)%0A%0AmQENBFN0%2BOsBCADoFvyf8gHIKZ%2F%2B5KwbWb3Ht%2Fz1ukyQqFNGpBVIqHossmjmyF9e%0APn6iiZ0fHnt7r6XGGXaP%2BKKjIxAcqOTiFiP%2BHIx6GQubzVih6Ol0YNjzmK%2Ft4f%2B4%0AfSElEVnyzeyJa4LmC%2Fui%2FvvtptJ8JX6su7f11BwUTSyuqnk204AfN5uVpAcZNPT0%0A0qNNky1bxYvPUxU6Imvi1q3NtpFzqsQ4u%2FyZuLpUe7uwmgMPeO0lAms1kCa3Guot%0A3mfSt0vrUAMdcV4drY1FGtYZdYSa4rSTzpFuB7o9Ze%2BE3fUbCWs1%2B0FiN3JQNGO1%0AS2lnqjEqbpz2nHtA50elJRGqxZLEi8zkFqlTABEBAAG0Z2NQYW5lbCBTZWN1cml0%0AeSBUZWFtIC0gVEVTVCAoVEhJUyBJUyBBIFRFU1QgS0VZOyBETyBOT1QgVVNFIEZP%0AUiBBTllUSElORyBSRUFMISkgPHNlY3RlYW1zaXhAY3BhbmVsLm5ldD6JAT4EEwEC%0AACgFAlN0%2BOsCGwMFCQHhM4AGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEOhU%0A60c9RtoRkhMIAIe2yDKj55mGD3zbuGqxx6NNNIyiuEujw31N8yOS9BKTqGtIiK9i%0AGu4lzrzmHISKi0rjKmJdbckap7OouUoo9WR3ewjN6S5EHyjKfrrMwMzTWMPZOkTj%0A7A698X0vGc9yZ6KyBj8mM8J9duvNtRS285hfXfQxYO%2FuiyrJGBedI%2FWVZ3a7mcfq%0A7FhC8t6jU6sz9uIvYHAzywcVdmhEK5rS%2FuE%2F9e37h46jn2%2BkzlIWEe%2FYgpa%2BuWdT%0AO%2BOyqteW51LEjXLWMyP8AJEq8EoqbqKnm4Q1g0etOQ9trrkLUnPxaSwD5R6i4KLH%0AMR%2Fh7m%2FOoz8yOhUlrCGJwX7v9qDEdaYYFLQ%3D%0A%3DMEFZ%0A-----END%20PGP%20PUBLIC%20KEY%20BLOCK-----%0A'
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_267"
  /GPG/list_public_keys:
    get:
      tags:
      - GPG
      - Signing and Encryption (GnuPG Keys)
      summary: Return current user's GnuPG public keys
      description: |-
        This function lists the GnuPG (GPG) public keys for the
        currently-authenticated account.
      operationId: list_public_keys
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_268"
  /GPG/list_secret_keys:
    get:
      tags:
      - GPG
      - Signing and Encryption (GnuPG Keys)
      summary: Return current user's GnuPG secret keys
      description: This function lists the GnuPG (GPG) secret keys for the currently-authenticated
        account.
      operationId: list_secret_keys
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_269"
  /ImageManager/convert_file:
    get:
      tags:
      - ImageManager
      - Image Tools
      summary: Create image with new format
      description: |-
        This function converts an image to a new file format.

        **Important:**

        When you disable the [WebServer role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: convert_file
      parameters:
      - name: image_file
        in: query
        description: "The image file to convert, relative to the cPanel account's\
          \ `/home` directory."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: images/myimage.jpg
      - name: type
        in: query
        description: The format to which to convert the images.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: png
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_270"
  /ImageManager/create_thumbnails:
    get:
      tags:
      - ImageManager
      - Image Tools
      summary: Create image thumbnails
      description: |-
        This function creates thumbnails from images. The function saves the new thumbnail images in a thumbnails subdirectory inside the original directory. The system prepends thumbnail filenames with ``tn_`` (for example, ``tn_picture.jpg``).

        **Important:**

        When you disable the [WebServer role](https://go.cpanel.net/serverroles), the system disables this function.
      operationId: create_thumbnails
      parameters:
      - name: dir
        in: query
        description: |-
          The path to the directory where the image resides. When you pass this parameter, the function creates a thumbnail directory directly below the image directory.

          **NOTE:**

          This parameter can use an absolute directory path or a path relative to the user's home directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: images
      - name: height_percentage
        in: query
        description: The percentage by which to reduce the thumbnails' height.
        required: true
        style: form
        explode: true
        schema:
          maximum: 99
          minimum: 1
          type: integer
          example: 25
      - name: width_percentage
        in: query
        description: The percentage by which to reduce the thumbnails' width.
        required: true
        style: form
        explode: true
        schema:
          maximum: 99
          minimum: 1
          type: integer
          example: 25
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_271"
  /ImageManager/get_dimensions:
    get:
      tags:
      - ImageManager
      - Image Tools
      summary: Return image dimensions
      description: |-
        This function returns the dimensions of the image file that you specify.

        **Important:**

        When you disable the [WebServer role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: get_dimensions
      parameters:
      - name: image_file
        in: query
        description: |-
          The path to the file to measure.

          **Note:**

          Use the absolute filepath or a path relative to the user's home directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: image/myimage.jpg
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_272"
  /ImageManager/resize_image:
    get:
      tags:
      - ImageManager
      - Image Tools
      summary: Save resized image
      description: |-
        This function resizes a specified image.

        **Important:**

        When you disable the [WebServer role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: resize_image
      parameters:
      - name: height
        in: query
        description: The height to which to set the image size.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 300
      - name: image_file
        in: query
        description: |-
          The name of the file to scale.

          **Note:**

          Use the absolute filepath or a filepath relative to the user's home directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /images/image.jpg
      - name: width
        in: query
        description: The width to which to set the image size.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 200
      - name: save_original_as
        in: query
        description: |-
          The path to the directory in which to save a copy the original
          image file.

          **Note:**

          * If you don't pass this parameter, the function doesn't save
          a copy of the original image.
          * Use the absolute filepath or a filepath relative to the user's home directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: images/original.jpg
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_273"
  /Integration/fetch_url:
    get:
      tags:
      - Integration
      - URL Parsing
      summary: Return integrated application URL
      description: This function returns the URL for an integrated application.
      operationId: fetch_url
      parameters:
      - name: app
        in: query
        description: The application's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: applicationname
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_274"
  /KnownHosts/create:
    get:
      tags:
      - KnownHosts
      - Known SSH Hosts Management
      summary: Create host
      description: This function registers a host in the cPanel account'sÂ `/home/user/.ssh/known_hosts`
        file.
      operationId: create
      parameters:
      - name: host_name
        in: query
        description: The hostname or IP address to add.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_name"
        example: hostname.example.com
      - name: port
        in: query
        description: "The SSH port to use, if the system uses a non-standard SSH port."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1234
          default: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_275"
  /KnownHosts/delete:
    get:
      tags:
      - KnownHosts
      - Known SSH Hosts Management
      summary: Delete host
      description: This function removes a host from the cPanel account'sÂ `/home/user/.ssh/known_hosts`
        file.
      operationId: KnownHosts::delete
      parameters:
      - name: host_name
        in: query
        description: The hostname or IP address of the host to delete.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_name_1"
      - name: port
        in: query
        description: The SSH port to use.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1234
          default: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_276"
  /KnownHosts/update:
    get:
      tags:
      - KnownHosts
      - Known SSH Hosts Management
      summary: Update host in the known_hosts file
      description: This function updates a host's entry in the cPanel account'sÂ /home/user/.ssh/known_hosts
        file.
      operationId: KnownHosts::update
      parameters:
      - name: host_name
        in: query
        description: The host to update.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_name_2"
      - name: port
        in: query
        description: The SSH port to use.
        required: false
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 1234
          default: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_277"
  /KnownHosts/verify:
    get:
      tags:
      - KnownHosts
      - Known SSH Hosts Management
      summary: Validate host
      description: This function checks whether a host's public key exists in the
        cPanel account'sÂ `/home/user/.ssh/known_hosts` file.
      operationId: verify
      parameters:
      - name: host_name
        in: query
        description: The host to query.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_name_3"
      - name: port
        in: query
        description: The SSH port to use.
        required: false
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 1234
          default: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_278"
  /LangPHP/php_get_domain_handler:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Return PHP version's handler
      description: |-
        This function returns a PHP version's assigned PHP handler.

        **Note:**

          This document **only** applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system disables this function. For more information, read our How to Use Server Profiles documentation.
      operationId: php_get_domain_handler
      parameters:
      - name: type
        in: query
        description: |-
          The type of `php.ini` file.

          * `home`
          * `vhost`

          **Important:**

           * If you set this parameter to `vhost`, you **must** also include the vhost parameter.
           * If you set this parameter to `home`, the system returns the system default PHP handler.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: vhost
          enum:
          - home
          - vhost
      - name: vhost
        in: query
        description: |-
          The name of a virtual host.

          **Important:**

           If the `type` value is `vhost`, you **must** use this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: clearly.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_279"
  /LangPHP/php_get_impacted_domains:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Return domains that shared PHP configuration
      description: |-
        This function lists domains that obtain their PHP version from a specified PHP configuration.

        **Note:**

          This document **only** applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_get_impacted_domains
      parameters:
      - name: domain
        in: query
        description: |-
          A domain on the system.

          **Note:**

           * YouÂ mustÂ pass either the `system_default` or `domain` parameters, or both.
           * You can pass this parameter multiple times.
           * You **cannot** pass the name of a parked domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: system_default
        in: query
        description: |-
          Whether to return domains that inherit the system's default PHP version.

          * `1` - Return domains that inherit the system's default PHP version.
          * `0` - Do **not** return domains that inherit the system's default PHP version.

          **Note:**

          If you pass this parameter with a false value and do **not** also pass the domain parameter, the function returns an error.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_280"
  /LangPHP/php_get_installed_versions:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Return installed PHP versions
      description: |-
        This function lists the system's PHP versions.

        **Note:**

          This document **only** applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_get_installed_versions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_281"
  /LangPHP/php_get_system_default_version:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Return default PHP version
      description: |-
        This function lists the systemâs default PHP version.

        **Important**:

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: php_get_system_default_version
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_282"
  /LangPHP/php_get_vhost_versions:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Return virtual host's PHP version
      description: |-
        This function returns the PHP version of every virtual host that a reseller controls.

        You can get the version of a single virtual host by providing an optional `vhost` name.

        **Note:**

          This document **only** applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_get_vhost_versions
      parameters:
      - name: vhost
        in: query
        description: The PHP Virtual Hostname.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: your-domain.test
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_283"
  /LangPHP/php_ini_get_user_basic_directives:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Return basic PHP directives
      description: |-
        This function lists a virtual host's basic PHP directives. The Basic Mode section of cPanel'sÂ [MultiPHP INI Editor](https://go.cpanel.net/cPanelMultiPHPINI)  interface (Home >>Â Software >> MultiPHP INI Editor) also lists these directives.

        **Note:**

          This document **only** applies to systems that run EasyApache 4 with MultiPHP enabled.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_ini_get_user_basic_directives
      parameters:
      - name: type
        in: query
        description: |-
          The type of `php.ini` file.

          - `home`
          - `vhost`

          **Important:**

           If you set this parameter to `vhost`, you **must** also include the `vhost` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: vhost
          enum:
          - home
          - vhost
      - name: vhost
        in: query
        description: |-
          The name of a virtual host.

          **Important:**

           If the type value is `vhost`, you **must** use this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: clearly.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_284"
  /LangPHP/php_ini_get_user_content:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Return virtual host's php.ini content
      description: |-
        This function returns the contents of a virtual host'sÂ `php.ini`Â file.

        **Note:**

          This document **only** applies to systems that run EasyApache 4 with MultiPHP enabled.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_ini_get_user_content
      parameters:
      - name: type
        in: query
        description: |-
          The type of `php.ini` file.

          * `home`
          * `vhost`

          **Important:**

          If you set this parameter to `vhost`, you **must** also include the `vhost` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: vhost
      - name: vhost
        in: query
        description: |-
          The name of a virtual host.

          **Important:**

           If the type value is `vhost`, you **must** use this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: clearly.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_285"
  /LangPHP/php_ini_get_user_paths:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Return php.ini file paths
      description: |-
        This function lists the `php.ini` file paths for the user's home directory and virtual host document roots.

        **Note:**

          This document **only** applies to systems that run EasyApache 4 with MultiPHP enabled.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_ini_get_user_paths
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_286"
  /LangPHP/php_ini_set_user_basic_directives:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Update basic PHP directives
      description: |-
        This function sets the values of any basic PHP directive. The *Basic Mode* section of cPanel's
        [*MultiPHP INI Editor*](https://go.cpanel.net/whmdocsMultiPHPINIEditor) interface (*WHM >> Home >> Software >> MultiPHP INI Editor*) lists these directives.

        **Note:**

          This document **only** applies to systems that run EasyApache 4 with MultiPHP enabled.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: php_ini_set_user_basic_directives
      parameters:
      - name: directive
        in: query
        description: "The name of a PHP directive and its value.\n\n**Note:**\n\n\
          * To change the directive's value for multiple PHP directives, increment\
          \ the parameter name. For example, the `directive-1`,\_`directive-2`, and\
          \ `directive-3`\_parameters.\n* You **must** format values as `<directive>:<value>`\
          \  "
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple PHP directives.
            value: directive-1=allow_url_fopen%3A0&directive-2=upload_max_filesize%3A4M&directive-3=post_max_size
          single:
            summary: A single PHP directive.
            value: allow_url_fopen:0
      - name: type
        in: query
        description: |-
          The type of `php.ini` file.

          * `home`
          * `vhost`

          **Important:**

           If you set this parameter to `vhost`, you **must** also include the `vhost` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: vhost
          enum:
          - home
          - vhost
      - name: vhost
        in: query
        description: |-
          The name of a virtual host.

          **Important:**

           If the `type` value is `vhost`, you **must** use this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: clearly.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_287"
  /LangPHP/php_ini_set_user_content:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Update virtual host's php.ini content
      description: |-
        This function changes the contents of a virtual host's `php.ini` file.

        **Note:**

          This document **only** applies to systems that run EasyApache 4 with MultiPHP enabled.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_ini_set_user_content
      parameters:
      - name: content
        in: query
        description: The content of the `php.ini` file to change.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '%5BPHP%5D%0D%0A%3B+About+php.ini%0D%0A%3B+php.ini+is+responsible+for+configuring+many+of+the+aspects+of+PHP%27s+behavior.%0D%0Apcre.backtrack_limit%3D100000'
      - name: type
        in: query
        description: |-
          The type of `php.ini` file.

          * `home`
          * `vhost`

          **Important:**

           If you set this parameter to `vhost`, you **must** also include the `vhost` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: vhost
          enum:
          - host
          - vhost
      - name: vhost
        in: query
        description: |-
          The name of a virtual host.

          **Important:**

           If the type value is `vhost` , you **must** use this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: clearly.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_288"
  /LangPHP/php_set_vhost_versions:
    get:
      tags:
      - LangPHP
      - PHP Settings
      summary: Update virtual host's PHP version
      description: |-
        This function sets a virtual host's PHP version.

        **Note:**

          This document **only** applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_set_vhost_versions
      parameters:
      - name: version
        in: query
        description: The PHP version of a virtual host.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php72
      - name: vhost
        in: query
        description: |-
          The virtual host's name.

          **Note:**

            To change the PHP version of multiple virtual hosts, duplicate or increment the parameter name. For example, `vhost-1`, `vhost-2`, and `vhost-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Set a multiple vhosts.
            value: vhost-1=example.com&vhost-2=example2.com&vhost-3=example3.com
          single:
            summary: Set a single vhost.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_289"
  /LastLogin/get_last_or_current_logged_in_ip:
    get:
      tags:
      - LastLogin
      - Login Information
      summary: Return last authenticated login IP address
      description: This function returns the IP address of the user who most recently
        logged in.
      operationId: get_last_or_current_logged_in_ip
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_290"
  /Locale/get_attributes:
    get:
      tags:
      - Locale
      - Language
      summary: Return current locale settings
      description: This function retrieves information about the user's current locale
        setting.
      operationId: get_attributes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_291"
  /Locale/list_locales:
    get:
      tags:
      - Locale
      - Language
      summary: Return available locales
      description: This function lists an account's available interface languages.
      operationId: list_locales
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_292"
  /Locale/set_locale:
    get:
      tags:
      - Locale
      - Language
      summary: Update cPanel account locale
      description: This function sets the account's locale.
      operationId: set_locale
      parameters:
      - name: locale
        in: query
        description: The locale's abbreviated name according to UAPI's `Locale::list_locales`
          function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: en
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_293"
  /LogManager/get_settings:
    get:
      tags:
      - LogManager
      - Logs
      summary: Retrieve cPanel account's log archival settings
      description: This function retrieves the account's log archival settings.
      operationId: get_settings
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_294"
  /LogManager/list_archives:
    get:
      tags:
      - LogManager
      - Logs
      summary: Return cPanel account's archive files list
      description: This function returns a list of the user's archive files.
      operationId: list_archives
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_295"
  /LogManager/set_settings:
    get:
      tags:
      - LogManager
      - Logs
      summary: Save cPanel account's log archive settings
      description: |-
        This function saves the account's log archive settings.

        **Note:**

        You **must** pass either the `archive_logs` or the `prune_archives` parameter.
      operationId: set_settings
      parameters:
      - name: archive_logs
        in: query
        description: |-
          Whether toÂ archive log files to your home directory after the
          system processes statistics.
          * `1` â Archive the logs.
          * `0` â Do **not** archive the logs.

          **Note:**

          * This parameter defaults to the `archive-logs` setting's value in the user's `~/.cpanel-logs` file.
          * If this file does **not** exist, this parameter defaults to the `default_archive-logs` key's value in the [`cpanel.config`](https://go.cpanel.net/cpanelconfiginvalid) file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: prune_archive
        in: query
        description: |-
          Whether to remove the previous month's archived logs from the `~/logs directory` at the end of each month.
          * `1` â Remove the logs.
          * `0` â Do **not** remove the logs.

          **Note:**

          * This parameter defaults to the `remove-old-archived-logs` setting's value in the user's `~/.cpanel-logs` file.
          * If this file doesn't exist, this parameter defaults to the `default_remove-old-archive-logs` key's value in the [`cpanel.config`](https://go.cpanel.net/cpanelconfiginvalid) file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_296"
  /Mailboxes/expunge_mailbox_messages:
    get:
      tags:
      - Mailboxes
      - Mailbox Management
      summary: Delete selected messages in mailbox
      description: This function marks the selected mail messages as deleted.
      operationId: expunge_mailbox_messages
      parameters:
      - name: account
        in: query
        description: The email account's name.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/account_3"
        examples:
          _mainaccount:
            summary: "The `_mainaccount` alias, which represents the cPanel user's\
              \ mailbox."
            value: _mainaccount@example.com
          cpanel-user:
            summary: The cPanel user's account name.
            value: example
          email:
            summary: A valid email account.
            value: user@example.com
      - name: mailbox
        in: query
        description: |-
          The mailbox to operate on.

          **Note:**

          * Use the `Mailboxes::get_mailbox_status_list` function to list possible values for the mailbox parameter.
          * Because you cannot escape wildcard characters such as (`*`), we recommend that you use functions that use the `mailbox_guid` parameter instead. For example, the `Mailboxes::expunge_messages_for_mailbox_guid` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: INBOX.user@example_com
      - name: query
        in: query
        description: |-
          The Dovecot query to execute.

          **Note:**

          The query parameter prevents accidental removal of all messages in the mailbox. For more information, read Dovecot's [Search Query](http://wiki2.dovecot.org/Tools/Doveadm/SearchQuery) documentation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: savedbefore 52w
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_297"
  /Mailboxes/expunge_messages_for_mailbox_guid:
    get:
      tags:
      - Mailboxes
      - Mailbox Management
      summary: Delete selected messages in mailbox by GUID
      description: This function marks the selected mailbox's messages as deleted.
      operationId: expunge_messages_for_mailbox_guid
      parameters:
      - name: account
        in: query
        description: The email account's name.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/account_4"
        examples:
          _mainaccount:
            summary: "The `_mainaccount` alias, which represents the cPanel user's\
              \ mailbox."
            value: _mainaccount@example.com
          cpanel-user:
            summary: The cPanel user's account name.
            value: example
          email:
            summary: A valid email account.
            value: user@example.com
      - name: mailbox_guid
        in: query
        description: |-
          The mailbox's globally unique identifier (GUID).

          Use the `Mailboxes::get_mailbox_status_list` function to list possible values for the `mailbox_guid` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 2550860f0c58d158c92a000044f0d230
      - name: query
        in: query
        description: The query to select which messages you wish to remove from the
          mailbox.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: savedbefore 52w
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_298"
  /Mailboxes/get_mailbox_status_list:
    get:
      tags:
      - Mailboxes
      - Mailbox Management
      summary: Return cPanel account's mailbox status
      description: This function lists the account's mailbox size and globally unique
        identifier (GUID) by folder.
      operationId: get_mailbox_status_list
      parameters:
      - name: account
        in: query
        description: The email account for which you you wish to request the status.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_299"
  /Mailboxes/has_utf8_mailbox_names:
    get:
      tags:
      - Mailboxes
      - Mailbox Management
      summary: Return if cPanel account's mailboxes use UTF-8
      description: This function determines whether a cPanel user currently uses UTF-8
        character-encoded mailbox names.
      operationId: has_utf8_mailbox_names
      parameters:
      - name: user
        in: query
        description: |-
          The user for whom to determine whether they currently use UTF-8
          character-encoded mailbox names.

          **Note:**

          This parameter defaults to the currently-logged in user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_300"
  /Mailboxes/set_utf8_mailbox_names:
    get:
      tags:
      - Mailboxes
      - Mailbox Management
      summary: Enable or disable Webmail mailbox UTF-8 encoding
      description: This function enables or disables UTF-8-encoded mailbox names on
        Roundcube webmail for a cPanel user's email accounts.
      operationId: set_utf8_mailbox_names
      parameters:
      - name: enabled
        in: query
        description: |-
          Whether to enable or disable UTF-8 character-encoded mailbox
          names.

          * `1` - Enable UTF-8 encoded mailbox names.
          * `0` - Disable UTF-8 encoded mailbox names.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_301"
  /Market/cancel_pending_ssl_certificate:
    get:
      tags:
      - Market
      - SSL Certificates
      summary: Delete an order
      description: This function cancels an order and removes the polling for a pending
        certificate.
      operationId: cancel_pending_ssl_certificate
      parameters:
      - name: order_item_id
        in: query
        description: The ID of the ordered item to cancel.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "10427508"
      - name: provider
        in: query
        description: TheÂ cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_302"
  /Market/create_shopping_cart:
    get:
      tags:
      - Market
      - Market Integration
      summary: Create shopping cart
      description: "This function creates a shopping cart with which the system sends\
        \ an order to the cPanel Store. Typically, the system will send shopping cart\
        \ orders for SSL certificates to UAPIâs `Market::request_ssl_certificates`\
        \ function."
      operationId: create_shopping_cart
      parameters:
      - name: access_token
        in: query
        description: The access token to connect to the provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: uuid
          example: 1a676e6f-99fc-11e6-9ab6-e60a769b73bc
      - name: item
        in: query
        description: |-
          The items to add to the shopping cart.

          **Note**:

            The value is a JSON string.

            This object has one required key, `product_id`, which is a string.

            The other keys/values in this object vary depending on the provider.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: json
        example:
        - "{\"product_id\":123456,\"provider-specfic-key\":\"provider-specfic-value\"\
          ,\"another-provider-specfic-key\":\"another-provider-specfic-value\"}"
        - "{\"product_id\":123457,\"provider-specfic-key\":\"provider-specfic-value\"\
          ,\"another-provider-specfic-key\":\"another-provider-specfic-value\"}"
      - name: provider
        in: query
        description: TheÂ cPanel Market providerâs name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: url_after_checkout
        in: query
        description: The location to which the provider directs the user after the
          checkout process is complete.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://www.example.com/thenextplace
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_303"
  /Market/get_all_products:
    get:
      tags:
      - Market
      - Market Integration
      summary: Return provider's available products
      description: This function lists all products available through all enabledÂ cPanel
        Market providers.
      operationId: Market-get_all_products
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_304"
              examples:
                ssl_certificate:
                  description: product_group=ssl_certificate
                  value:
                    apiversion: 3
                    func: get_all_products
                    module: Market
                    result:
                      data:
                      - base_name: ""
                        billing_type: one-time
                        description: An extended-validated (EV) SSL certificate signed
                          by COMODO.
                        display_name: Comodo EV SSL Certificate
                        enabled: 1
                        icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
                        icon_mime_type: image/svg+xml
                        license_term: 0
                        price_unit: USD
                        product: Comodo EV Certificate
                        product_category: N/A
                        product_group: ssl_certificate
                        product_id: 155
                        provider_display_name: cPanel Store
                        provider_name: cPStore
                        recommended: 0
                        requires_ip: 0
                        x_certificate_term:
                        - 1
                        - year
                        x_identity_verification:
                        - label: Organization Name
                          name: organizationName
                        - is_optional: 1
                          label: Department Name
                          name: organizationalUnitName
                        - description: 9 consecutive digits or â##-###-####â (More
                            information (https://go.cpanel.net/get_duns))
                          is_optional: 1
                          label: Dun & Bradstreet D-U-N-S (Data Universal Numbering
                            System) Number
                          name: duns_number
                          pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                        - label: Street Address
                          name: streetAddress
                        - label: City
                          name: localityName
                        - label: State or Province
                          name: stateOrProvinceName
                        - label: Postal Code
                          name: postalCode
                        - label: Country Code
                          name: countryName
                          type: country_code
                        - label: Representativeâs Given (First) Name
                          name: rep_forename
                        - label: Representativeâs Surname (Last Name)
                          name: rep_surname
                        - label: Representativeâs Email Address
                          name: rep_email_address
                          type: email
                        - description: This should be one of the organizationâs publicly-listed
                            telephone numbers.
                          is_optional: 1
                          label: Representativeâs Telephone Number
                          name: rep_telephone
                          type: tel
                        - description: Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/)
                            for more information about this fieldâs options.
                          label: Business Category
                          name: business_category
                          options:
                          - - b
                            - Incorporated Business (âPrivate Organizationâ)
                          - - d
                            - Non-incorporated Business (âBusiness Entityâ)
                          - - c
                            - Government Entity (âGovernment Entityâ)
                          type: choose_one
                        - is_optional: 1
                          label: City Where Incorporated (JOI (Jurisdiction of Incorporation))
                          name: joi_locality_name
                        - is_optional: 1
                          label: State or Province Where Incorporated (JOI (Jurisdiction
                            of Incorporation))
                          name: joi_state_or_province_name
                        - label: Country Code Where Incorporated (JOI (Jurisdiction
                            of Incorporation))
                          name: joi_country_name
                          type: country_code
                        - is_optional: 1
                          label: Date of Incorporation
                          name: date_of_incorporation
                          type: date
                        - is_optional: 1
                          label: Assumed Name (DBA (Doing Business As))
                          name: assumed_name
                        x_max_http_redirects: 0
                        x_payment_trigger: checkout
                        x_price_per_domain: 108
                        x_price_per_domain_maximum: 1080
                        x_price_per_domain_minimum: 108
                        x_ssl_per_domain_pricing: 1
                        x_supports_dns_dcv: 1
                        x_validation_type: ev
                        x_warn_after: 604800
                      - base_name: ""
                        billing_type: one-time
                        description: An organization-validated (OV) SSL certificate
                          signed by COMODO.
                        display_name: Comodo OV SSL Certificate
                        enabled: 1
                        icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
                        icon_mime_type: image/svg+xml
                        license_term: 0
                        price_unit: USD
                        product: Comodo OV Certificate
                        product_category: N/A
                        product_group: ssl_certificate
                        product_id: 217
                        provider_display_name: cPanel Store
                        provider_name: cPStore
                        recommended: 0
                        requires_ip: 0
                        x_certificate_term:
                        - 1
                        - year
                        x_identity_verification:
                        - label: Organization Name
                          name: organizationName
                        - is_optional: 1
                          label: Department Name
                          name: organizationalUnitName
                        - description: 9 consecutive digits or â##-###-####â (More
                            information (https://go.cpanel.net/get_duns))
                          is_optional: 1
                          label: Dun & Bradstreet D-U-N-S (Data Universal Numbering
                            System) Number
                          name: duns_number
                          pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                        - label: Street Address
                          name: streetAddress
                        - label: City
                          name: localityName
                        - label: State or Province
                          name: stateOrProvinceName
                        - label: Postal Code
                          name: postalCode
                        - label: Country Code
                          name: countryName
                          type: country_code
                        - label: Representativeâs Given (First) Name
                          name: rep_forename
                        - label: Representativeâs Surname (Last Name)
                          name: rep_surname
                        - label: Representativeâs Email Address
                          name: rep_email_address
                          type: email
                        - description: This should be one of the organizationâs publicly-listed
                            telephone numbers.
                          is_optional: 1
                          label: Representativeâs Telephone Number
                          name: rep_telephone
                          type: tel
                        x_max_http_redirects: 0
                        x_payment_trigger: checkout
                        x_price_per_domain: 36
                        x_price_per_domain_maximum: 360
                        x_price_per_domain_minimum: 36
                        x_price_per_wildcard_domain: "150.00"
                        x_price_per_wildcard_domain_maximum: "1500.00"
                        x_price_per_wildcard_domain_minimum: "150.00"
                        x_ssl_per_domain_pricing: 1
                        x_supports_dns_dcv: 1
                        x_validation_type: ov
                        x_warn_after: 604800
                        x_wildcard_parent_domain_free: 1
                      - base_name: ""
                        billing_type: one-time
                        description: A domain-validated (DV) SSL certificate signed
                          by cPanel.
                        display_name: cPanel DV SSL Certificate
                        enabled: 1
                        icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
                        icon_mime_type: image/svg+xml
                        license_term: 0
                        price_unit: USD
                        product: cPanel DV Certificate
                        product_category: N/A
                        product_group: ssl_certificate
                        product_id: 159
                        provider_display_name: cPanel Store
                        provider_name: cPStore
                        recommended: 0
                        requires_ip: 0
                        x_certificate_term:
                        - 1
                        - year
                        x_max_http_redirects: 0
                        x_payment_trigger: issuance
                        x_price_per_domain: 9
                        x_price_per_domain_maximum: 30
                        x_price_per_domain_minimum: 3
                        x_price_per_wildcard_domain: "75.00"
                        x_price_per_wildcard_domain_maximum: "750.00"
                        x_price_per_wildcard_domain_minimum: "75.00"
                        x_ssl_per_domain_pricing: 1
                        x_supports_dns_dcv: 1
                        x_validation_type: dv
                        x_warn_after: 604800
                        x_wildcard_parent_domain_free: 1
                      - base_name: ""
                        billing_type: one-time
                        description: An organization-validated (OV) SSL certificate
                          signed by cPanel.
                        display_name: cPanel OV SSL Certificate
                        enabled: 1
                        icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
                        icon_mime_type: image/svg+xml
                        license_term: 0
                        price_unit: USD
                        product: cPanel OV Certificate
                        product_category: N/A
                        product_group: ssl_certificate
                        product_id: 213
                        provider_display_name: cPanel Store
                        provider_name: cPStore
                        recommended: 0
                        requires_ip: 0
                        x_certificate_term:
                        - 1
                        - year
                        x_identity_verification:
                        - label: Organization Name
                          name: organizationName
                        - is_optional: 1
                          label: Department Name
                          name: organizationalUnitName
                        - description: 9 consecutive digits or â##-###-####â (More
                            information (https://go.cpanel.net/get_duns))
                          is_optional: 1
                          label: Dun & Bradstreet D-U-N-S (Data Universal Numbering
                            System) Number
                          name: duns_number
                          pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                        - label: Street Address
                          name: streetAddress
                        - label: City
                          name: localityName
                        - label: State or Province
                          name: stateOrProvinceName
                        - label: Postal Code
                          name: postalCode
                        - label: Country Code
                          name: countryName
                          type: country_code
                        - label: Representativeâs Given (First) Name
                          name: rep_forename
                        - label: Representativeâs Surname (Last Name)
                          name: rep_surname
                        - label: Representativeâs Email Address
                          name: rep_email_address
                          type: email
                        - description: This should be one of the organizationâs publicly-listed
                            telephone numbers.
                          is_optional: 1
                          label: Representativeâs Telephone Number
                          name: rep_telephone
                          type: tel
                        x_max_http_redirects: 0
                        x_payment_trigger: checkout
                        x_price_per_domain: 30
                        x_price_per_domain_maximum: 300
                        x_price_per_domain_minimum: 30
                        x_price_per_wildcard_domain: "99.00"
                        x_price_per_wildcard_domain_maximum: "990.00"
                        x_price_per_wildcard_domain_minimum: "99.00"
                        x_ssl_per_domain_pricing: 1
                        x_supports_dns_dcv: 1
                        x_validation_type: ov
                        x_warn_after: 604800
                        x_wildcard_parent_domain_free: 1
                      - base_name: ""
                        billing_type: one-time
                        description: A domain-validated (DV) SSL certificate signed
                          by COMODO.
                        display_name: Comodo DV SSL Certificate
                        enabled: 1
                        icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
                        icon_mime_type: image/svg+xml
                        license_term: 0
                        price_unit: USD
                        product: Comodo DV Certificate
                        product_category: N/A
                        product_group: ssl_certificate
                        product_id: 151
                        provider_display_name: cPanel Store
                        provider_name: cPStore
                        recommended: 0
                        requires_ip: 0
                        x_certificate_term:
                        - 1
                        - year
                        x_max_http_redirects: 0
                        x_payment_trigger: issuance
                        x_price_per_domain: 12
                        x_price_per_domain_maximum: 120
                        x_price_per_domain_minimum: 12
                        x_price_per_wildcard_domain: "99.00"
                        x_price_per_wildcard_domain_maximum: "990.00"
                        x_price_per_wildcard_domain_minimum: "99.00"
                        x_ssl_per_domain_pricing: 1
                        x_supports_dns_dcv: 1
                        x_validation_type: dv
                        x_warn_after: 604800
                        x_wildcard_parent_domain_free: 1
                      - base_name: ""
                        billing_type: one-time
                        description: An extended-validated (EV) SSL certificate signed
                          by cPanel.
                        display_name: cPanel EV SSL Certificate
                        enabled: 1
                        icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
                        icon_mime_type: image/svg+xml
                        license_term: 0
                        price_unit: USD
                        product: cPanel EV Certificate
                        product_category: N/A
                        product_group: ssl_certificate
                        product_id: 209
                        provider_display_name: cPanel Store
                        provider_name: cPStore
                        recommended: 0
                        requires_ip: 0
                        x_certificate_term:
                        - 1
                        - year
                        x_identity_verification:
                        - label: Organization Name
                          name: organizationName
                        - is_optional: 1
                          label: Department Name
                          name: organizationalUnitName
                        - description: 9 consecutive digits or â##-###-####â (More
                            information (https://go.cpanel.net/get_duns))
                          is_optional: 1
                          label: Dun & Bradstreet D-U-N-S (Data Universal Numbering
                            System) Number
                          name: duns_number
                          pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                        - label: Street Address
                          name: streetAddress
                        - label: City
                          name: localityName
                        - label: State or Province
                          name: stateOrProvinceName
                        - label: Postal Code
                          name: postalCode
                        - label: Country Code
                          name: countryName
                          type: country_code
                        - label: Representativeâs Given (First) Name
                          name: rep_forename
                        - label: Representativeâs Surname (Last Name)
                          name: rep_surname
                        - label: Representativeâs Email Address
                          name: rep_email_address
                          type: email
                        - description: This should be one of the organizationâs publicly-listed
                            telephone numbers.
                          is_optional: 1
                          label: Representativeâs Telephone Number
                          name: rep_telephone
                          type: tel
                        - description: Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/)
                            for more information about this fieldâs options.
                          label: Business Category
                          name: business_category
                          options:
                          - - b
                            - Incorporated Business (âPrivate Organizationâ)
                          - - d
                            - Non-incorporated Business (âBusiness Entityâ)
                          - - c
                            - Government Entity (âGovernment Entityâ)
                          type: choose_one
                        - is_optional: 1
                          label: City Where Incorporated (JOI (Jurisdiction of Incorporation))
                          name: joi_locality_name
                        - is_optional: 1
                          label: State or Province Where Incorporated (JOI (Jurisdiction
                            of Incorporation))
                          name: joi_state_or_province_name
                        - label: Country Code Where Incorporated (JOI (Jurisdiction
                            of Incorporation))
                          name: joi_country_name
                          type: country_code
                        - is_optional: 1
                          label: Date of Incorporation
                          name: date_of_incorporation
                          type: date
                        - is_optional: 1
                          label: Assumed Name (DBA (Doing Business As))
                          name: assumed_name
                        x_max_http_redirects: 0
                        x_payment_trigger: checkout
                        x_price_per_domain: 60
                        x_price_per_domain_maximum: 600
                        x_price_per_domain_minimum: 60
                        x_ssl_per_domain_pricing: 1
                        x_supports_dns_dcv: 1
                        x_validation_type: ev
                        x_warn_after: 604800
                      metadata:
                        transformed: 1
                      status: 1
  /Market/get_certificate_status_details:
    get:
      tags:
      - Market
      - SSL Certificates
      summary: Return provider's SSL certificate request status
      description: |-
        This function returns the status of an SSL certificate request. The returns include
        actionable URLs for users to expedite the validation process, if applicable.

        **Important:**

        Because this function returns data from a dynamic source, the returns in each
        object can vary.
      operationId: get_certificate_status_details
      parameters:
      - name: order_item_id
        in: query
        description: The order ID that theÂ cPanel Market provider assigned.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1234567890
      - name: provider
        in: query
        description: TheÂ cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_305"
  /Market/get_login_url:
    get:
      tags:
      - Market
      - Market Integration
      summary: Return provider's login URL
      description: This function retrieves the login URL for the cPanel Market provider.
      operationId: get_login_url
      parameters:
      - name: provider
        in: query
        description: TheÂ cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: url_after_login
        in: query
        description: Where the cPanel Market provider redirects the user's browser
          after they log in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://hostname.example.com/redirectionlocation.cgi?state
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_306"
  /Market/get_pending_ssl_certificates:
    get:
      tags:
      - Market
      - SSL Certificates
      summary: Return provider's pending SSL certificates
      description: This function lists all pending SSL certificates from a cPanel
        Market provider for which the system currently polls.
      operationId: get_pending_ssl_certificates
      parameters:
      - name: provider
        in: query
        description: TheÂ cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_307"
  /Market/get_provider_specific_dcv_constraints:
    get:
      tags:
      - Market
      - SSL Certificates
      summary: Return provider's DCV filename requirements
      description: This function returns the provider's filename requirements for
        Domain Control Validation (DCV) checks.
      operationId: Market-get_provider_specific_dcv_constraints
      parameters:
      - name: provider
        in: query
        description: The cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_308"
  /Market/get_providers_list:
    get:
      tags:
      - Market
      - Market Integration
      summary: Return enabled providers
      description: This function lists the names of enabled cPanel Market providers.
      operationId: Market-get_providers_list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_309"
  /Market/get_ssl_certificate_if_available:
    get:
      tags:
      - Market
      - SSL Certificates
      summary: Return provider's available SSL certificates
      description: This function retrieves SSL certificates when they are available
        from theÂ cPanel Market provider.
      operationId: get_ssl_certificate_if_available
      parameters:
      - name: order_item_id
        in: query
        description: The order item for which to poll.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "8675309"
      - name: provider
        in: query
        description: TheÂ cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_310"
  /Market/process_ssl_pending_queue:
    get:
      tags:
      - Market
      - SSL Certificates
      summary: Start processing pending queue's SSL certificates
      description: This function manually processes the cPanel Market's SSL certificate
        request pending queue.
      operationId: process_ssl_pending_queue
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_311"
  /Market/request_ssl_certificates:
    get:
      tags:
      - Market
      - SSL Certificates
      summary: Request SSL certificate order
      description: This function submits a request for a certificate order to the
        cPanel Market provider.
      operationId: request_ssl_certificates
      parameters:
      - name: access_token
        in: query
        description: The access token for the session to theÂ cPanel Market provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 725431a1-d5bc-11e5-a28b-8b0e09a93f05
      - name: certificate
        in: query
        description: |-
          A JSON-encoded string that contains the details of the certificate.

          **Note:**

          To request multiple certificates, duplicate or increment the parameter name.
          For example, to request three certificates, use the `certificate` parameter multiple times or use the `certificate-1`,
          `certificate-2`, and `certificate-3` parameters.
        required: true
        content:
          application/json:
            schema:
              required:
              - price
              - product_id
              - subject_names
              - validity_period
              properties:
                price:
                  type: number
                  description: The certificate's price.
                  format: currency
                product_id:
                  type: string
                  description: The product's ID.
                subject_names:
                  description: |-
                    An array of strings or array of objects containing the certificate's subject names:

                    **For HTTP-based DCV only:**

                    Use an array of strings that contains `dNSName` and the domain.

                    For example:

                    `[["dNSName","example.com"],["dNSName","example.org"]]`

                    **DNS-based DCV or HTTP-based DCV:**

                    Use an array of objects that consits of:

                    * `type:dNSName`
                    * `name` â The domain name.
                    * `dcv_method` â Either the `dns` or `http` value for for DNS-based or HTTP-based Domain Control Validation (DCV).

                    For example:

                    `[{type:âdNSNameâ,name:âtext.example.comâ,dcv_method:âdnsâ},{type:âdNSNameâ,name:âtext.example.comâ,dcv_method:âhttpâ}]`

                    **Note:**

                    * Custom provider modules that include DNS-based DCV requests **must** use the array of
                    objects format, **not** the array of strings format.
                    * This function does **not** automatically include the corresponding `www.` subdomain for each domain
                    that you declare in this parameter.
                    * If you wish to order the `www.` subdomain for a domain, you **must** explicitly declare it in an additional
                    array or object within the `subject_names` parameter.
                  anyOf:
                  - type: array
                    description: HTTP-based DCV only.
                    items:
                      type: string
                  - type: array
                    description: DNS-based DCV or HTTP-based DCV.
                    items:
                      type: object
                validity_period:
                  type: array
                  description: |-
                    The period of time the certificate will remain valid.
                    This array consists of a number value and string that represents a unit of time (for example, `year`).
                  items:
                    type: string
                vhost_names:
                  type: array
                  description: |-
                    A comma-separated list of web virtual hosts (vhosts) for which the system will install the certificate.

                    **Note:**

                    An asterisk (`*`) chraracter represents every vhost with which the certificate is compatible.
                  items:
                    type: string
              example:
                price: 6
                product_id: "143"
                subject_names:
                - dNSName: example.com
                - dNSName: example.org
                validity_period:
                - "1, \"year\""
                vhost_names:
                - example.com
      - name: provider
        in: query
        description: TheÂ cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: identity_verification
        in: query
        description: |-
          An object containing the required information for an EV or OV certificate. This information depends on the provider of the certificate.

          **Note:**

          The function returns this object for OV or EV certificate requests.
        required: false
        content:
          application/json:
            schema:
              type: object
              example:
                countryName: US
                duns_number: 12-345-6789
                localityName: City Name
                organizationName: "Company, Inc."
                organizationalUnitName: "Team Company,"
                postalCode: 55555
                rep_email_address: username@example.com
                rep_forename: First Name
                rep_surname: Last Name
                rep_telephone: 123-456-7891
                stateOrProvinceName: ST
                streetAddress: 555 Street Name
      - name: url_after_checkout
        in: query
        description: |-
          The URL to send the browser after the user checks out.

          **Note:**

          This URL does **not** contain a query string.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://checkout.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_312"
  /Market/set_status_of_pending_queue_items:
    get:
      tags:
      - Market
      - Market Integration
      summary: Update status of items in pending queue
      description: This function sets the status of an item or items in the cPanel
        Market pending queue.
      operationId: set_status_of_pending_queue_items
      parameters:
      - name: order_item_id
        in: query
        description: |-
          The ID of the ordered item.

          **Note:**

          To set the status for multiple items, duplicate or increment the parameter name. For example, to change the status for three certificates, use theÂ `order_item_id`Â parameter multiple times or use theÂ `order_item_id-1`, `order_item_id-2`, andÂ `order_item_id-3`Â parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple IDs.
            value: order_item_id-1=12345&order_item_id-2=12346&order_item_id-3=12347
          multiple-alternative:
            summary: Multiple IDs alternative.
            value: order_item_id=12345&order_item_id=12346&order_item_id=12347
          single:
            summary: A single ID.
            value: "12345"
      - name: provider
        in: query
        description: TheÂ cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: status
        in: query
        description: |-
          The new status of the item in the cPanel Market pending queue.

          * `confirmed` â The system confirmed payment for the item with the provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: confirmed
          enum:
          - confirmed
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_313"
              examples:
                failure:
                  summary: The function failed.
                  value:
                    apiversion: 3
                    func: set_status_of_pending_queue_items
                    module: Market
                    result:
                      data:
                        error_type: EntryDoesNotExist
                        order_item_ids:
                        - 8675309
                      errors:
                      - The order item ID â8675309â does not match any entries in
                        the pending queue.
                      metadata: {}
                      status: 0
                success:
                  summary: The function succeeded.
                  value:
                    apiversion: 3
                    func: set_status_of_pending_queue_items
                    module: Market
                    result:
                      metadata: {}
                      status: 1
  /Market/set_url_after_checkout:
    get:
      tags:
      - Market
      - Market Integration
      summary: Update URL after checkout
      description: This function updates the URL to which a provider sends a user
        after they check out.
      operationId: set_url_after_checkout
      parameters:
      - name: access_token
        in: query
        description: The access token for the session to theÂ cPanel Market provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 725431a1-d5bc-11e5-a28b-8b0e09a93f05
      - name: order_id
        in: query
        description: The order ID that theÂ cPanel Market provider assigned.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 123456
      - name: provider
        in: query
        description: TheÂ cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: url_after_checkout
        in: query
        description: The URL to send the browser after the user checks out.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://checkout.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_314"
  /Market/validate_login_token:
    get:
      tags:
      - Market
      - Market Integration
      summary: Validate login token
      description: This function validates a login token to aÂ cPanel Market provider
        and returns an access token.
      operationId: validate_login_token
      parameters:
      - name: login_token
        in: query
        description: The login token for the cPanel Market provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "8675309"
      - name: provider
        in: query
        description: The name of theÂ cPanel Market provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: url_after_login
        in: query
        description: The `url_after_login` value that you sent to UAPI's `Market::get_login_url`
          function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://hostname.example.com/redirectionlocation.cgi?state
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_315"
  /Mime/add_handler:
    get:
      tags:
      - Mime
      - Handler Management
      summary: Add web server MIME type handler
      description: |-
        This function creates an Apache MIME type handler for a file extension.

        **Important:**

        When you disable the [Web Server](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: add_handler
      parameters:
      - name: extension
        in: query
        description: The file extension.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: .foo
      - name: handler
        in: query
        description: The Apache MIME handler.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: txt-foo
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_316"
  /Mime/add_hotlink:
    get:
      tags:
      - Mime
      - Direct Link Protection (Hotlink)
      summary: Enable hotlink protection
      description: |-
        This function adds hotlink protection for a site. Hotlink protection will redirect users to another URL if they navigate to a file with a specified extension, but an allowed URL did not refer them.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_hotlink
      parameters:
      - name: extensions
        in: query
        description: |-
          File types to hotlink protect.

          **Note:**

          To protect multiple file types, use a comma-separated list.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Add hotlink protection for multiple file extensions.
            value: "foo,bar"
          single:
            summary: Add hotlink protection for a single file extension.
            value: foo
      - name: redirect_url
        in: query
        description: The URL to which the system sends hotlinkers.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://redirect.example.com/
      - name: urls
        in: query
        description: |-
          The site to hotlink protect.

          **Note:**

          To protect multiple URLs, separate each URL with a newline character.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Add hotlink protection for multiple sites.
            value: |-
              http://example.com/
              http://foobar.com/
          single:
            summary: Add hotlink protection for a single site.
            value: http://example.com/
      - name: allow_null
        in: query
        description: |-
          Whether the domain allows hotlinks.
          * `1` - Allows.
          * `0` - Does **not** allow.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_317"
  /Mime/add_mime:
    get:
      tags:
      - Mime
      - Mime Type Management
      summary: Add MIME type to web server
      description: |-
        This function adds a MIME type to Apache.

        **Important:**

        When you disable the [Web Server](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: add_mime
      parameters:
      - name: extension
        in: query
        description: The file extension.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: .foo
      - name: type
        in: query
        description: The MIME type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: MIME
          example: text/foo
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_318"
  /Mime/add_redirect:
    get:
      tags:
      - Mime
      - Domain Redirection
      summary: Add redirect to domain
      description: |-
        This function adds a redirect to a domain.

        **Important:**

          When you disable the [*Web Server* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_redirect
      parameters:
      - name: domain
        in: query
        description: The domain from which to redirect.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: redirect
        in: query
        description: The URL to which to redirect.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://example.com/
      - name: redirect_wildcard
        in: query
        description: |-
          Whether to redirect all files within a directory to the same
          filename within the destination directory.
          * `1` - Redirect all files within the directory.
          * `0` - Do **not** redirect all files within the directory.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: redirect_www
        in: query
        description: |-
          Whether to redirect domains with or without `www`.
          * `2` - Redirect with `www`.
          * `1` - Redirect without `www`.
          * `0` - Redirect with **and** without `www`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
      - name: src
        in: query
        description: A specific page from which to redirect.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: url-path
          example: /specific-page
          default: /
      - name: type
        in: query
        description: |-
          Whether the redirect is temporary.
           * `permanent`
           * `temp`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: permanent
          default: permanent
          enum:
          - permanent
          - temp
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_319"
  /Mime/delete_handler:
    get:
      tags:
      - Mime
      - Handler Management
      summary: Remove web server MIME type handler
      description: |-
        This function deletes an Apache MIME type handler.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_handler
      parameters:
      - name: extension
        in: query
        description: The file extension.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: .foo
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_320"
  /Mime/delete_hotlink:
    get:
      tags:
      - Mime
      - Direct Link Protection (Hotlink)
      summary: Disable hotlink protection
      description: |-
        This function removes hotlink protection.

        **Important:**

          When you disable the [Web Server](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: delete_hotlink
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_321"
  /Mime/delete_mime:
    get:
      tags:
      - Mime
      - Mime Type Management
      summary: Remove MIME type from web server
      description: |-
        This function removes a MIME type from Apache.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_mime
      parameters:
      - name: type
        in: query
        description: The MIME type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: text/foo
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_322"
  /Mime/delete_redirect:
    get:
      tags:
      - Mime
      - Domain Redirection
      summary: Remove redirect from domain
      description: |-
        This function removes a redirect from a domain.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: delete_redirect
      parameters:
      - name: domain
        in: query
        description: The domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: args
        in: query
        description: An argument string that contains the arguments of a `Redirect`
          orÂ `RedirectMatch` directives.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: redirectmeÂ http://redirectme.com/
          default: ""
      - name: docroot
        in: query
        description: |-
          The absolute file path to the document root containing the `.htaccess` file to change.

          If you don't pass this parameter, the system looks up the document root from the `domain` parameter's value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/public_html/
      - name: src
        in: query
        description: The specific page that redirects visitors.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: redirectpage.html
          default: ""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_323"
  /Mime/get_redirect:
    get:
      tags:
      - Mime
      - Domain Redirection
      summary: Return redirect URL for domain
      description: This function retrieves a redirection URL for a domain.
      operationId: get_redirect
      parameters:
      - name: domain
        in: query
        description: The domain's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_324"
  /Mime/list_handlers:
    get:
      tags:
      - Mime
      - Handler Management
      summary: Return web server's MIME handlers
      description: |-
        This function lists all of Apache's MIME handlers.

        **Important:**

          When you disable the [WebServer role](https://go.cpanel.net/serverroles),
          the system **disables** this function.
      operationId: list_handlers
      parameters:
      - name: type
        in: query
        description: Whether to retrieve system or user handlers.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
          enum:
          - system
          - user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_325"
  /Mime/list_hotlinks:
    get:
      tags:
      - Mime
      - Direct Link Protection (Hotlink)
      summary: Return domains with hotlink protection
      description: |-
        This function lists domains with hotlink protection.

        **Important:**

        When you **disable** the [Web Server](https://go.cpanel.net/serverroles) role, the system **disables** this function.
      operationId: list_hotlinks
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_326"
  /Mime/list_mime:
    get:
      tags:
      - Mime
      - Mime Type Management
      summary: Return web server's MIME types
      description: |-
        This function lists all of Apache's MIME types.

        **Note:**

          This function does **not** list PHP versions with MIME types when the user or domain enables PHP-FPM. The system displays **only** custom MIME types.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_mime
      parameters:
      - name: type
        in: query
        description: |-
          The MIME types to list.
          * `system` â List the Apache system MIME types.
          * `user` â List the Apache user MIME types.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
          enum:
          - system
          - user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_327"
  /Mime/list_redirects:
    get:
      tags:
      - Mime
      - Domain Redirection
      summary: Return .htaccess files' redirects
      description: |-
        This function lists the redirects in an account's .htaccess files.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: list_redirects
      parameters:
      - name: destination
        in: query
        description: |-
          The string with which to filter results.

          ** Note: **

          This will **only** return results that match the `destination` parameter **exactly**.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: http://example.tld
      - name: regex
        in: query
        description: A Perl regular expression that filters the results. The system
          matches the regular expression to the `sourceurl` return value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "\"^[a-z0-9_-]{6,18}$\""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_328"
  /Mime/redirect_info:
    get:
      tags:
      - Mime
      - Handler Management
      summary: Return redirect information
      description: |-
        This function retrieves redirect information for a URL or `** All Public Domains **`.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: redirect_info
      parameters:
      - name: domain
        in: query
        description: The domain for which to retrieve redirector information.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: url
        in: query
        description: The URL for which to retrieve redirector information.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://redirect.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_329"
      x-cpanel-internal-only: false
  /ModSecurity/disable_all_domains:
    get:
      tags:
      - ModSecurity
      summary: Disable ModSecurity for all domains
      description: |-
        This function disables ModSecurityâ¢ on a cPanel account's domains.

        **Important:**

        When you disable the [WebServer role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: disable_all_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_330"
  /ModSecurity/disable_domains:
    get:
      tags:
      - ModSecurity
      summary: Disable ModSecurity for selected domains
      description: |-
        This function disables ModSecurityâ¢ on specified domains.

        **Important:**

        When you disable the [WebServer role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: disable_domains
      parameters:
      - name: domains
        in: query
        description: |-
          A comma-separated list of domains that the cPanel account owns.

          **Important:**

          The authenticated cPanel account **must** own these domains.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "example.com,dallas.example.com,galveston.example.com"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_331"
  /ModSecurity/enable_all_domains:
    get:
      tags:
      - ModSecurity
      summary: Enable ModSecurity for all domains
      description: |-
        This function enables ModSecurityâ¢ on a cPanel account's domains.

        **Important:**

        When you disable the [WebServer role](https://go.cpanel.net/serverroles#roles), the system **disables** this function
      operationId: enable_all_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_332"
  /ModSecurity/enable_domains:
    get:
      tags:
      - ModSecurity
      summary: Enable ModSecurity for selected domains
      description: |-
        This function enables ModSecurityâ¢ for specified domains.

        **Important:**

        When you disable the [WebServer role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: enable_domains
      parameters:
      - name: domains
        in: query
        description: |-
          A comma-separated list of domains for which to enable ModSecurity.

          **Important:**

          The authenticated cPanel account **must** own these domains.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "example.com,dallas.example.com,galveston.example.com"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_333"
  /ModSecurity/has_modsecurity_installed:
    get:
      tags:
      - ModSecurity
      summary: Return ModSecurity installation status
      description: |-
        This function checks whether ModSecurityâ¢ is installed on a server.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: has_modsecurity_installed
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_334"
  /ModSecurity/list_domains:
    get:
      tags:
      - ModSecurity
      summary: Return ModSecurity domains' status
      description: |-
        This function returns ModSecurity'sâ¢ status for a cPanel account's domains.

        **Important:**

        When you disable the [WebServer role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: ModSecurity-list_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_335"
  /Mysql/add_host:
    get:
      tags:
      - Mysql
      - Remote Databases
      summary: Enable remote MySQL host access
      description: |-
        This function authorizes a remote MySQLÂ® host to access the account's databases.

        **Important:**

        When you disable the [MySQL role](https://go.cpanel.net/serverroles)
         and remote MySQL is **not** already configured,
         the system **disables** this function.
      operationId: add_host
      parameters:
      - name: host
        in: query
        description: |-
          The remote MySQL server's hostname or IP address.

          You may use the following IP address formats:

          * `192.168.1.6` â IP address.
          * `192.168.%.%` â Range with the percent (%) symbol as a wildcard.
          * `192.168.0.0/16` â Range in CIDR format.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_3"
        example: 192.168.1.6
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_336"
  /Mysql/add_host_note:
    get:
      tags:
      - Mysql
      - Remote Databases
      summary: Add remote MySQL host note
      description: |-
        This function adds a note about a remote MySQLÂ® server.

        **Important:**

        * If you attempt to add a note to an unauthorized remote MySQL server, the function will fail.
        * When you **disable** the [MySQL role](https://go.cpanel.net/serverroles), the system disables this function.
      operationId: Mysql-add_host_note
      parameters:
      - name: host
        in: query
        description: |-
          The remote MySQL server's hostname or IP address.

          You may use the following IP address formats:

          * `192.168.1.6` â IP address.
          * `192.168.%.%` â Range with the percent (%) symbol as a wildcard.
          * `192.168.0.0/16` â Range in CIDR format.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_4"
        example: 192.168.1.6
      - name: note
        in: query
        description: note that describes the remote MySQL server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: A remote mysql server for storing my data
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_337"
  /Mysql/check_database:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Validate MySQL database integrity
      description: |-
        This function checks for errors in all of the tables in aÂ MySQLÂ® database.

        **Important:**

        When you disable the [MySQL role](https://go.cpanel.net/serverroles) **and**
        remote MySQL is **not** already configured, the system **disables** this function.
      operationId: Mysql-check_database
      parameters:
      - name: name
        in: query
        description: The database's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_test
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_338"
  /Mysql/create_database:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Create MySQL database
      description: |-
        This function creates a MySQLÂ® database.

        **Important:**

          When you disable the [MySQL/MariaDB role](https://go.cpanel.net/howtouseserverprofiles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: create_database
      parameters:
      - name: name
        in: query
        description: The new database's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: newdb
      - name: prefix-size
        in: query
        description: The desired prefix size.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 16
          default: 16
          enum:
          - 8
          - 16
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_339"
  /Mysql/create_user:
    get:
      tags:
      - Mysql
      - User Management
      summary: Create MySQL user
      description: |-
        This function creates a MySQLÂ® database user.

        **Important:**

        When you **disable** the [MySQL role](https://go.cpanel.net/serverroles) and remote MySQL is not already configured, the system disables this function.
      operationId: Mysql-create_user
      parameters:
      - name: name
        in: query
        description: |-
          A valid database username.

          Important:
          ====

          To learn more about database username limits, check your database type:

          MySQL 5.6
          ----

          MySQL version 5.6 limits the database username to 16 characters. The server uses the first nine characters of this limit for the database prefix. The database prefix uses the cPanel account's username and an underscore (`_`). The server only applies the first eight characters of the cPanel account's username.

          For example:

          * A `db_` database prefix allows MySQL usernames of up to 13 characters.
          * An `example_` database prefix allows MySQL usernames of up to eight characters.

          MySQL 5.7+
          ----

          MySQL versions 5.7 and later limit the database username to 32 characters. The server uses the first nine characters of this limit for the database prefix. The database prefix uses the cPanel account's username and an underscore (`_`). The server only applies the first eight characters of the cPanel account's username.

          For example:

          * A `db_` database prefix allows MySQL usernames of up to 29 characters.
          * An `example_` database prefix allows MySQL usernames of up to 24 characters.

          MariaDB
          ----

          MariaDB limits the database username to 47 characters. The server uses the first nine characters of this limit for the database prefix. The database prefix uses the cPanel account's username and an underscore (`_`). The server only applies the first eight characters of the cPanel account's username.

          For example:

          * A `db_` database prefix allows MariaDB usernames of up to 44 characters.
          * An `example_` database prefix allows MariaDB usernames of up to 39 characters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      - name: password
        in: query
        description: The new user's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: prefix-size
        in: query
        description: The desired prefix size.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 16
          default: 16
          enum:
          - 8
          - 16
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_340"
  /Mysql/delete_database:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Delete MySQL database
      description: |-
        This function deletes a MySQLÂ® database.

        **Important:**

        when you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles#roles) **and**
        remote MySQL is **not** already configured, the system **disables** this function.
      operationId: delete_database
      parameters:
      - name: name
        in: query
        description: The database's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_341"
  /Mysql/delete_host:
    get:
      tags:
      - Mysql
      - Remote Databases
      summary: Disable remote MySQL host access
      description: |-
        This function removes a remote MySQLÂ® host's access to the account's databases.

        **Important:**

        When you disable the [MySQL role](https://go.cpanel.net/serverroles) and remote MySQL is not already configured, the system **disables** this function.
      operationId: delete_host
      parameters:
      - name: host
        in: query
        description: |-
          The remote MySQL server's hostname, IP Address, or IP address range.

          **Note:**
          You may use the following IP address formats:

          192.168.1.6 â IP address.
          192.168.%.% â Range with the percent (%) symbol as a wildcard.
          192.168.0.0/16 â Range in CIDR format.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: remote.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_342"
  /Mysql/delete_user:
    get:
      tags:
      - Mysql
      - User Management
      summary: Delete MySQL user
      description: |-
        This function deletes a MySQLÂ® user.

        **Important:**

        When you disable the [MySQL role](https://go.cpanel.net/serverroles) and remote MySQL is not already configured, the system **disables** this function.
      operationId: Mysql::delete_user
      parameters:
      - name: name
        in: query
        description: The MySQL user's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_343"
  /Mysql/dump_database_schema:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Return MySQL database schema
      description: |-
        This function returns a string that you can give to MySQLÂ® to recreate a particular databaseâs schema.

        **Important:**

          When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) **and** remote MySQL is **not** configured, the system **disables** this function.
      operationId: dump_database_schema
      parameters:
      - name: dbname
        in: query
        description: The database's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username_example_db
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_344"
  /Mysql/get_host_notes:
    get:
      tags:
      - Mysql
      - Remote Databases
      summary: Return remote MySQL host notes
      description: |-
        This function returns the notes associated with the account's remote MySQLÂ® hosts.

        **Important:**

          When you disable the [*MySQL/MariaDB* role](https://go.cpanel.net/serverroles)
          **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: get_host_notes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_345"
  /Mysql/get_privileges_on_database:
    get:
      tags:
      - Mysql
      - User Management
      summary: Return MySQL user privileges
      description: |-
        This function lists a MySQLÂ® database user's privileges.

        **Important:**

        When you disable the [MySQL role](https://go.cpanel.net/serverroles)
        and remote MySQL is not already configured, the system disables this function.
      operationId: Mysql-get_privileges_on_database
      parameters:
      - name: database
        in: query
        description: The database name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mydb
      - name: user
        in: query
        description: |-
          The database user's name.

          **Important:**

          If database prefixing is enabled, you **must** prefix this value with the account prefix and an underscore (`_`).

          For example, for the `dbuser` user on the `user` cPanel account, pass in a value of `user_dbuser`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_346"
  /Mysql/get_restrictions:
    get:
      tags:
      - Mysql
      - User Management
      summary: Return MySQL name length restrictions
      description: |-
        This function lists a MySQLÂ® database's name, username length restrictions, and database prefix.

        **Important:**

          When you disable the [*MySQL/MariaDB* role](https://go.cpanel.net/serverroles)
          **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: get_restrictions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_347"
  /Mysql/get_server_information:
    get:
      tags:
      - Mysql
      - Database Information
      summary: Return MySQL server host information and version
      description: |-
        This function returns information about the account's MySQLÂ® host.

        **Important:**

          When you disable the [MySQL role](https://go.cpanel.net/serverroles) **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: get_server_information
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_348"
  /Mysql/list_databases:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Return MySQL databases
      description: |-
        This function lists an account's MySQLÂ® databases.

        **Important:**

        When you disable the [*MySQL/MariaDB* role](https://go.cpanel.net/serverroles) **and** remote MySQL is **not** configured, the system **disables** this function.
      operationId: list_databases
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_349"
  /Mysql/list_routines:
    get:
      tags:
      - Mysql
      - User Management
      summary: Return MySQL user routines
      description: |-
        This function returns a database user's MySQLÂ® routines.

        **Important:**

          When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) **and**
          remote MySQL is **not** configured, the system **disables** this function.
      operationId: list_routines
      parameters:
      - name: database_user
        in: query
        description: "The database user for whom to return MySQL routines. If you\
          \ don't specify a database user, this function returns the MySQL routines\
          \ for all database users."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: db_user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_350"
  /Mysql/list_users:
    get:
      tags:
      - Mysql
      - User Management
      summary: Return MySQL users
      description: |-
        This function lists an account's MySQLÂ® database users.

        **Important:**

          When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) **and**
          remote MySQL is **not** configured, the system **disables** this function.
      operationId: Mysql-list_users
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_351"
  /Mysql/locate_server:
    get:
      tags:
      - Mysql
      - Database Information
      summary: Return MySQL server host information
      description: |-
        This function returns information about the account's MySQLÂ® host.

        **Important:**

        When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: locate_server
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_352"
  /Mysql/rename_database:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Update MySQL database name
      description: |-
        This function renames a MySQLÂ® database.

        MySQL does not allow you to rename a database. When cPanel & WHM "renames" a database, the
        system performs the following steps:
        1. The system creates a new database.
        2. The system moves data from the old database to the new database.
        3. The system recreates grants and stored code in the new database.
        4. The system deletes the old database and its grants.

        **Warning:**

        * It is potentially dangerous to rename a MySQL database. We **strongly** recommend that you
        perform a backup of the database before you attempt to rename it.
        * If any of the first three steps fail, the system returns an error and attempts to restore the database's original state.
         If the restoration process fails, the API function's error response describes these additional failures.
        * In rare cases, the system creates the second database successfully, but fails to delete the old database or grants.
         The system treats the rename action as a success; however,
         the API function returns warnings that describe the failure to delete the old database or grants.

        **Important:**

        When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles)
        **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: Mysql-rename_database
      parameters:
      - name: newname
        in: query
        description: |-
          The database's new name.

          **Important:**

          * If database prefixing is enabled, you **must** prefix this value with the account prefix
          and an underscore (`_`). For example, for the `dbuser` database on the user cPanel account,
          pass in a value of `user_dbuser`.
          * The maximum length of the database name is 64 characters. However, due to the method that
          cPanel & WHM uses to store MySQL database names, each underscore character requires two
          characters of that limit. Therefore, if you enable database prefixing, the maximum length of
          the database name is 63 characters, which includes both the database prefix and the
          underscore character. Each additional underscore requires another two characters of that
          limit.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 64
          type: string
          example: newlyrenamed
      - name: oldname
        in: query
        description: The database's current name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mydb
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_353"
  /Mysql/rename_user:
    get:
      tags:
      - Mysql
      - User Management
      summary: Update MySQL username
      description: |-
        This function renames a MySQLÂ® database user.

        **Important:**

        When you disable the [MySQL role](https://go.cpanel.net/serverroles)
         and remote MySQL is **not** already configured,
         the system **disables** this function.
      operationId: rename_user
      parameters:
      - name: newname
        in: query
        description: |-
          The user's new name.

          Important:
          ====

          To learn more about database username limits, check your database type:

          MySQL 5.6
          ----

          MySQL version 5.6 limits the database username to 16 characters. The server uses the first nine characters of this limit for the database prefix. The database prefix uses the cPanel account's username and an underscore (`_`). The server only applies the first eight characters of the cPanel account's username.

          For example:

          * A `db_` database prefix allows MySQL usernames of up to 13 characters.
          * An `example_` database prefix allows MySQL usernames of up to eight characters.

          MySQL 5.7+
          ----

          MySQL versions 5.7 and later limit the database username to 32 characters. The server uses the first nine characters of this limit for the database prefix. The database prefix uses the cPanel account's username and an underscore (`_`). The server only applies the first eight characters of the cPanel account's username.

          For example:

          * A `db_` database prefix allows MySQL usernames of up to 29 characters.
          * An `example_` database prefix allows MySQL usernames of up to 24 characters.

          MariaDB
          ----

          MariaDB limits the database username to 47 characters. The server uses the first nine characters of this limit for the database prefix. The database prefix uses the cPanel account's username and an underscore (`_`). The server only applies the first eight characters of the cPanel account's username.

          For example:

          * A `db_` database prefix allows MariaDB usernames of up to 44 characters.
          * An `example_` database prefix allows MariaDB usernames of up to 39 characters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mynewusername
      - name: oldname
        in: query
        description: The user's current name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_354"
  /Mysql/repair_database:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Repair MySQL database tables
      description: |-
        This function repairs all of the tables in a MySQLÂ® database.

        **Important:**

        When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles)
        **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: repair_database
      parameters:
      - name: name
        in: query
        description: The database's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_db
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_355"
  /Mysql/revoke_access_to_database:
    get:
      tags:
      - Mysql
      - User Management
      summary: Remove MySQL user privileges
      description: |-
        This function revokes a MySQLÂ® database user's privileges.

        **Important:**

        When you disable the [MySQL role](https://go.cpanel.net/serverroles) **and**
        remote MySQL is **not** already configured, the system **disables** this function.
      operationId: revoke_access_to_database
      parameters:
      - name: database
        in: query
        description: The database's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mydb
      - name: user
        in: query
        description: "The database user's name.\n\n**Important:**\n\nIf database prefixing\
          \ is enabled, you **must** prefix this value with the account\nprefix and\
          \ an underscore (`_`).\n\nFor example, for the `dbuser` user on the `user`\
          \ cPanel account, pass in a value\nof `user_dbuser`. "
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_356"
  /Mysql/set_password:
    get:
      tags:
      - Mysql
      - User Management
      summary: Update MySQL user password
      description: |-
        This function sets a MySQLÂ® database user's password.

        **Important:**

        When you disable the [MySQL role](https://go.cpanel.net/serverroles)
         and remote MySQL is **not** already configured,
         the system **disables** this function.
      operationId: Mysql-set_password
      parameters:
      - name: password
        in: query
        description: The user's new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: user
        in: query
        description: The MySQL database user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_357"
  /Mysql/set_privileges_on_database:
    get:
      tags:
      - Mysql
      - User Management
      summary: Update MySQL user privileges
      description: |-
        This function sets a MySQLÂ® database user's privileges.

        **Important:**

        When you disable the [*MySQL/MariaDB* role](https://go.cpanel.net/serverroles), **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: set_privileges_on_database
      parameters:
      - name: database
        in: query
        description: |-
          The database's name.

          **Important:**

          If database prefixing is enabled, you **must** prefix this value with the account prefix and an underscore (`_`). For example, for the `db` database on the `user` cPanel account, pass in a value of `user_db`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpuser_dbname
      - name: user
        in: query
        description: |-
          The database user's name.

          **Important:**

          If database prefixing is enabled, you **must** prefix this value with the account prefix and an underscore (`_`). For example, for the `dbuser` user on the `user` cPanel account, pass in a value of `user_dbuser`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpuser_dbuser
      - name: privileges
        in: query
        description: |-
          * `ALL PRIVILEGES`
          * A comma-separated list of one or more of the following individual privileges:
            * `ALTER`
            * `ALTER ROUTINE`
            * `CREATE`
            * `CREATE ROUTINE`
            * `CREATE TEMPORARY TABLES`
            * `CREATE VIEW`
            * `DELETE`
            * `DROP`
            * `EVENT`
            * `EXECUTE`
            * `INDEX`
            * `INSERT`
            * `LOCK TABLES`
            * `REFERENCES`
            * `SELECT`
            * `SHOW VIEW`
            * `TRIGGER`
            * `UPDATE`

          **Note:**

          * This list replaces, rather than adds to, the existing privilege list.
          * In browser-based and command line calls, separate multiple values with `%2C` and replace spaces with `%20`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "DELETE,UPDATE,CREATE,ALTER"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_358"
  /Mysql/setup_db_and_user:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Create a randomly named MySQL username/database set.
      description: |-
        This function creates a randomly named MySQLÂ® database and user. This allows a 3rdparty tool to create its own DB without needing any knowledge of cPanel internals such as quotas or other limits. These will simply be passed back as an error.

        **Important:**

          When you disable the [MySQL/MariaDB role](https://go.cpanel.net/howtouseserverprofiles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: setup_db_and_user
      parameters:
      - name: prefix
        in: query
        description: "An optional string to prepend to the randomly generated database\
          \ name. This is in addition to the cPanel user which will appear prior to\
          \ this. The prefix should be 6 characters or less and be only alphanumeric\
          \ characters. WARNING: longer prexies lead to less entropy in the random\
          \ username. Keep it short if you can!"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: wp
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_359"
  /Mysql/update_privileges:
    get:
      tags:
      - Mysql
      - Database Management
      summary: Update MySQLÂ® privileges
      description: |-
        This function updates privileges for all MySQLÂ® databases and users on an account.

        **Important:**

        When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) **and**
        remote MySQL is **not** configured, the system **disables** this function.
      operationId: Mysql-update_privileges
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_360"
      x-cpanel-internal-only: false
  /NginxCaching/clear_cache:
    get:
      tags:
      - NginxCaching
      summary: Delete NGINX cache contents.
      description: |-
        This function clears the user's NGINX cache.

        **Note:**

          - You can **only** use this function if you installed the `ea-nginx` package.
      operationId: clear_cache
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_361"
  /NginxCaching/disable_cache:
    get:
      tags:
      - NginxCaching
      summary: Disable the user's NGINX cache
      description: |-
        This function disables the user's NGINX cache.

        **Note:**

          - You can **only** use this function if you installed the `ea-nginx` package.
      operationId: disable_cache
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_362"
  /NginxCaching/enable_cache:
    get:
      tags:
      - NginxCaching
      summary: Enable the user's NGINX cache
      description: |-
        This function enables the user's NGINX cache.

        **Note:**

          - You can **only** use this function if you installed the `ea-nginx` package.
      operationId: enable_cache
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_363"
  /NginxCaching/reset_cache_config:
    get:
      tags:
      - NginxCaching
      summary: Reset the user's NGINX cache configuration
      description: |-
        This function resets the user's NGINX caching configuration.

        **Note:**

          - You can **only** use this function if you installed the `ea-nginx` package.
      operationId: reset_cache_config
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_364"
  /Notifications/get_notifications_count:
    get:
      tags:
      - Notifications
      summary: Return server notifications total
      description: This function returns the number of server-wide notifications on
        an account.
      operationId: get_notifications_count
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_365"
  /Parser/firstfile_relative_uri:
    get:
      tags:
      - Parser
      - URL Parsing
      summary: Return session relative URI
      description: "This function reports the first file's URI, relative to the cPanel\
        \ base directory."
      operationId: firstfile_relative_uri
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_366"
  /PassengerApps/disable_application:
    get:
      tags:
      - PassengerApps
      - Application Manager
      summary: Disable Passenger application
      description: |-
        This function disables a Passenger application on an account.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: disable_application
      parameters:
      - name: name
        in: query
        description: The application to disable.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: slippers
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_367"
  /PassengerApps/edit_application:
    get:
      tags:
      - PassengerApps
      - Application Manager
      summary: Update Passenger application settings
      description: |-
        This function edits a Passenger application for an account.

        **Note**:

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: edit_application
      parameters:
      - name: name
        in: query
        description: The applicationâs current name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Ruby Slippers
      - name: clear_envvars
        in: query
        description: Whether to clear the applicationâs environment variables.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: deployment_mode
        in: query
        description: |-
          The new server environment in which to run the application. If you do not use this parameter, the function does not change the applicationâs server environment.

            * `development` â Sets the application to run in a development environment.
            * `production` â Sets the application to run in a production environment.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: production
          enum:
          - production
          - development
      - name: domain
        in: query
        description: "The applicationâs new domain. If you do not use this parameter,\
          \ the function does not change the applicationâs domain."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: toto.com
      - name: enabled
        in: query
        description: |-
          Whether to enable the application and generate the web server configuration for it.

            * `1` â Enable the application and generate the web server configuration.
            * `0` â Donât enable the application and generate the web server configuration.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: envvar_name
        in: query
        description: |-
          New set of environment variables for the application.

          **Important**:

           The function replaces all current environment variables with the variables that you pass in this parameter.

          **Note**:

            For each `envvar_name` parameter you send you **must** include an `envvar_value` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: array
          example:
          - SCARECROW
          - TINMAN
          - LION
          items:
            type: string
      - name: envvar_value
        in: query
        description: |-
          Each environment variableâs value.

          **Note**:

            For each `envvar_name` parameter you send you **must** include an `envvar_value` parameter.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 1024
          minLength: 1
          type: array
          example:
          - brain
          - heart
          - courage
          items:
            type: string
      - name: new_name
        in: query
        description: "The applicationâs new name. If you do not use this parameter,\
          \ the function does not change the application's name."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Little Dog
      - name: path
        in: query
        description: "The applicationâs new filepath. If you do not use this parameter,\
          \ the function does not change the applicationâs filepath."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/dorothy/littledog
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_368"
              example:
                data:
                  Little Dog:
                    base_uri: /littledog
                    deployment_mode: production
                    domain: toto.com
                    enabled: 1
                    envvars:
                      LION: courage
                      SCARECROW: brain
                      TINMAN: heart
                    name: Little Dog
                    path: /home/dorothy/littledog
                metadata: {}
                status: 1
  /PassengerApps/enable_application:
    get:
      tags:
      - PassengerApps
      - Application Manager
      summary: Enable Passenger application
      description: "This function enables a Passenger application and generates the\
        \ Apache configuration on an account.\n\n**Important:**\n\nWhen you disable\
        \ the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles),\
        \ the system **disables** this function. "
      operationId: enable_application
      parameters:
      - name: name
        in: query
        description: The Passenger application to enable on the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: slippers
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_369"
  /PassengerApps/ensure_deps:
    get:
      tags:
      - PassengerApps
      - Application Manager
      summary: Install Passenger application dependencies
      description: |-
        This function installs the dependencies for a Passenger application.

        **Note**:

          This function starts the installation process. This may take a long time to complete.

        **Important**:

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: ensure_deps
      parameters:
      - name: app_path
        in: query
        description: The applicationâs filepath.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/my-app/
      - name: type
        in: query
        description: |-
          The applicationâs type.

          * `gem` â Ensure ruby gems in the applicationâs `Gemfile` file.
          * `npm` â Ensure node packages in the applicationâs `package.json` file.
          * `pip` â Ensure python pips in the applicationâs `requirements.txt` file.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: npm
          enum:
          - gem
          - npm
          - pip
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_370"
  /PassengerApps/list_applications:
    get:
      tags:
      - PassengerApps
      - Application Manager
      summary: Return Passenger applications
      description: |-
        This function lists an accountâs Passenger applications.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_applications
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_371"
  /PassengerApps/register_application:
    get:
      tags:
      - PassengerApps
      - Application Manager
      summary: Register Passenger application
      description: |-
        This function registers a Passenger application for an account.

        **Important**:

          * This function **only** registers an application. It does **not** create the application. You **must** create an application **before** you register the application. For an example of how to do this, read our [How to Create Ruby Web Applications](https://go.cpanel.net/howtocreaterubyapps) documentation.
          * When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: register_application
      parameters:
      - name: domain
        in: query
        description: The domain for which to register the application.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: dorothy.com
      - name: name
        in: query
        description: The applicationâs name.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 50
          minLength: 1
          type: string
          example: Name of Application
      - name: path
        in: query
        description: The applicationâs filepath relative to the userâs home directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /slippers
      - name: base_uri
        in: query
        description: The applicationâs base URI.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: url-path
          example: /ruby
          default: /
      - name: deployment_mode
        in: query
        description: |-
          The type of server environment in which to run the application.

            * `development` â Sets the application to run in a development environment.
            * `production` â Sets the application to run in a production environment.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: production
          default: production
          enum:
          - production
          - development
      - name: enabled
        in: query
        description: |-
          Whether to enable the application and generate the web server configuration for it.

            * `1` â Enable the application and generate the web server configuration.
            * `0` â Donât enable the application and generate the web server configuration.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: envvar_name
        in: query
        description: |-
          Environment variables that the application needs.

          **Note**:

            For each `envvar_name` parameter youÂ send, you **must** include an `envvar_value` parameter.

            This parameter's value can only contain letters, numbers, underscores, and dashes, and cannot begin with a number. This parameter's value must also not exceed 256 characters.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 256
          type: array
          example:
          - SHOES
          - TINMAN
          items:
            type: string
      - name: envvar_value
        in: query
        description: |-
          Each environment variableâs value.

          **Note**:

            For each `envvar_name` parameter youÂ send, you **must** include an `envvar_value` parameter.

            An environment variable value must contain 1024 or fewer ASCII-printable characters.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 1024
          type: array
          example:
          - ruby
          - heart
          items:
            type: string
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_372"
  /PassengerApps/unregister_application:
    get:
      tags:
      - PassengerApps
      - Application Manager
      summary: Unregister Passenger application
      description: |-
        This function unregisters a [Passenger application](https://go.cpanel.net/cpaneldocsApplicationManager) on an account.

        **Note:**

          * This function **only** unregisters an application. It does **not** delete the application. You **must** manually delete the application from your system.
          * When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: unregister_application
      parameters:
      - name: name
        in: query
        description: The application to unregister.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: slippers
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_373"
  /PasswdStrength/get_required_strength:
    get:
      tags:
      - PasswdStrength
      - Password Strength
      summary: Return minimum required password strength
      description: This function retrieves an application's minimum required password
        strength.
      operationId: get_required_strength
      parameters:
      - name: app
        in: query
        description: The application's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: webdisk
          enum:
          - cpaddons
          - createacct
          - ftp
          - htaccess
          - mysql
          - passwd
          - pop
          - postgres
          - sshkey
          - webdisk
          - virtual
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_374"
  /Personalization/get:
    post:
      tags:
      - Personalization
      summary: Retrieve NVData data from file
      description: |-
        This function retrieves the data from an NVData file on disk.Â cPanel
        NVData is a per-account configuration storage mechanism that you can use to
        maintain persistent cPanel & WHM settings across multiple sessions. This includes
        custom settings for your own themes and plugins.

        **Note:**

        NVData keys and values are limited to 128 and 2048 bytes, respectively.
      operationId: Personalization::get
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Personalization_get_body"
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_375"
  /Personalization/set:
    post:
      tags:
      - Personalization
      summary: Save NVData data to file
      description: |-
        This function saves its data to an NVData file on disk.Â cPanel
        NVData is a per-account configuration storage mechanism that you can use to
        maintain persistent cPanel & WHM settings across multiple sessions. This includes
        custom settings for your own themes and plugins.

        **Note:**

        NVData keys and values are limited to 128 and 2048 bytes, respectively.
      operationId: Personalization-set
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Personalization_set_body"
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_376"
  /Plugins/can_show_promotions:
    get:
      tags:
      - Plugins
      summary: Enable plugin promotions
      description: This function determines if plugin promotions show in cPanel.
      operationId: Plugins-can_show_promotions
      parameters:
      - name: plugin
        in: query
        description: |-
          The plugin whose promotions to target.

          **Note:**

          The only valid value is 'koality', which targets Site Quality Monitoring.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: koality
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_377"
      x-cpanel-plugin: Plugins
  /Postgresql/create_database:
    get:
      tags:
      - Postgresql
      - PostgreSQL Database Management
      summary: Create PostgreSQL database
      description: |-
        This function creates a PostgreSQLÂ® database.

        **Important:**

        When you disable the [PostgreSQL role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: Postgresql::create_database
      parameters:
      - name: name
        in: query
        description: |-
          The database's name.

          **Note**:

            If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_378"
  /Postgresql/create_user:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Create PostgreSQL user
      description: |-
        This function creates a PostgreSQLÂ® database user.

        **Important:**

        When you disable the [*PostgreSQL* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: create_user
      parameters:
      - name: name
        in: query
        description: |-
          The database user's name.

          **Note:**

          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      - name: password
        in: query
        description: The new user's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_379"
  /Postgresql/delete_database:
    get:
      tags:
      - Postgresql
      - PostgreSQL Database Management
      summary: Delete PostgreSQL database
      description: |-
        This function deletes a PostgreSQLÂ® database.

        **Important:**

          When you disable the [Postgres role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: Postgresql::delete_database
      parameters:
      - name: name
        in: query
        description: The database's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_380"
  /Postgresql/delete_user:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Delete PostgreSQL user
      description: |-
        This function deletes a PostgreSQLÂ® user.

        **Important:**

          When you disable the [PostgreSQL role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: Postgresql::delete_user
      parameters:
      - name: name
        in: query
        description: The PostgreSQL user's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_381"
  /Postgresql/get_restrictions:
    get:
      tags:
      - Postgresql
      - PostgreSQL Database Management
      summary: Return PostgreSQL name length restrictions
      description: "This function retrieves the PostgreSQLÂ® user and database name\
        \ length restrictions.\n\n**Important:**\n\nWhen you disable the [*PostgreSQL*\
        \ role](https://go.cpanel.net/serverroles), the system **disables** this function.\
        \      "
      operationId: Postgresql::get_restrictions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_382"
  /Postgresql/grant_all_privileges:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Enable all user privileges on PostgreSQL database
      description: |-
        This function grants all privileges for a PostgreSQLÂ® database to a database user.

        **Important:**

        When you disable the [*PostgreSQL* role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: grant_all_privileges
      parameters:
      - name: database
        in: query
        description: |-
          The database's name.

          **Note**

          If database prefixing is enabled, this value **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_database
      - name: user
        in: query
        description: |-
          The database user's name.

          **Note**

          If database prefixing is enabled, this value **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_dbuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_383"
  /Postgresql/list_databases:
    get:
      tags:
      - Postgresql
      - PostgreSQL Database Management
      summary: Return PostgreSQL databases
      description: |-
        This function lists an account's PostgreSQLÂ® databases.

        **Important:**

          When you disable the [*Postgres* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: Postgresql-list_databases
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_384"
  /Postgresql/list_users:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Return PostgreSQL users
      description: |-
        This function lists an account's PostgreSQLÂ® database users.

        **Important:**

        When you disable the [*PostgreSQL* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: Postgresql::list_users
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_385"
  /Postgresql/rename_database:
    get:
      tags:
      - Postgresql
      - PostgreSQL Database Management
      summary: Update PostgreSQL database name
      description: |-
        This function renames a PostgreSQLÂ® database.

        **Important:**

        When you disable the [*PostgreSQL* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: rename_database
      parameters:
      - name: newname
        in: query
        description: |-
          The database's new name.

          **Note:**

          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database2
      - name: oldname
        in: query
        description: |-
          The database's current name.

          **Note:**

          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_386"
  /Postgresql/rename_user:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Update PostgreSQL username
      description: |-
        This function renames a PostgreSQLÂ® database user.

        **Important:**

        When you disable the [*PostgreSQL* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: Postgresql::rename_user
      parameters:
      - name: newname
        in: query
        description: |-
          The database user's new name.

          **Note:**

          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser2
      - name: oldname
        in: query
        description: |-
          The database user's current name.

          **Note:**

          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      - name: password
        in: query
        description: The database user's new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_387"
  /Postgresql/rename_user_no_password:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Update PostgreSQL username without password
      description: |-
        This function renames a PostgreSQLÂ® database user.

        **Warning:**

        * If you rename a PostgreSQL user, you **must** set the password for the database user. This is required because of the md5 hash that PostgreSQL creates to store user passwords.
        * We **strongly** recommend that you use the `Postgresql::rename_user function` instead of this one.

        **Important:**

        When you disable the  [*PostgreSQL* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: rename_user_no_password
      parameters:
      - name: newname
        in: query
        description: |-
          The database user's new name.

          **Note:**

          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser2
      - name: oldname
        in: query
        description: |-
          The database user's current name.

          **Note:**

          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_388"
  /Postgresql/revoke_all_privileges:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Remove PostgreSQL user privileges
      description: |-
        This function revokes all privileges for a PostgreSQLÂ® database from a database user.

        **Important:**

        When you disable the [*PostgreSQL* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: revoke_all_privileges
      parameters:
      - name: database
        in: query
        description: |-
          The database's name.

          **Note**

          If database prefixing is enabled, this value **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_database
      - name: user
        in: query
        description: |-
          The database user's name.

          **Note**

          If database prefixing is enabled, this value **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_dbuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_389"
  /Postgresql/set_password:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Update PostgreSQL user password
      description: |-
        This function changes a PostgreSQLÂ® database user's password.

        **Important:**

          When you disable the [Postgres role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_password
      parameters:
      - name: password
        in: query
        description: The user's new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: user
        in: query
        description: |-
          The database user'sÂ name.

          **Note:**

          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dbuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_390"
  /Postgresql/update_privileges:
    get:
      tags:
      - Postgresql
      - PostgreSQL User Management
      summary: Update PostgreSQLÂ® privileges
      description: |-
        This function synchronizes PostgreSQLÂ® database user privileges on an account.

        Some versions of PostgreSQL are ANSI SQL-92 compliant and do not support recursive grants,
        wildcard grants, or future grants. If you use phpPgAdmin, or manually create new tables, and
        you want multiple PostgreSQL users to access your PostgreSQL tables, you may either call this
        API function or click _Synchronize Grants_ in the _PostgreSQL Databases_ interface
        (_Home >> Databases >> PostgreSQL Databases_) after you add a table.

        **Important:**

        When you disable the [PostgreSQL role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: Postgresql-update_privileges
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_391"
  /Pushbullet/send_test_message:
    get:
      tags:
      - Pushbullet
      summary: Validate Pushbullet token
      description: This function sends a Pushbulletâ¢ test message to determine that
        the token is valid and that the account holder can receive the message.
      operationId: send_test_message
      parameters:
      - name: access_token
        in: query
        description: |-
          The Pushbullet access token.

          **Note:**

          * Your Pushbullet token is available on
          [Pushbullet's My Account](https://www.pushbullet.com/account) page under
          the *Access Token* heading.
          * This is confidential information that your server sends via a secure channel.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: a1b2c3d4e5f6g7h8i9j0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_392"
  /Quota/get_local_quota_info:
    get:
      tags:
      - Quota
      - Disk Quotas
      summary: Return local disk quota information
      description: |-
        This function retrieves the cPanel account's quota for the server where you run the function. For example, a [distributed cPanel account](https://go.cpanel.net/glossaryD) could approach its quota. The servers will balance that cPanel user's quota between the parent and the child node.

        **Note:**

          This function runs on **only** the local server. To retrieve the cPanel account's total quota, use the UAPI `Quota::get_quota` function instead.
      operationId: get_local_quota_info
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_393"
  /Quota/get_quota_info:
    get:
      tags:
      - Quota
      - Disk Quotas
      summary: Return disk quota information
      description: This function retrieves the cPanel account's quota.
      operationId: get_quota_info
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_394"
  /Resellers/list_accounts:
    get:
      tags:
      - Resellers
      - Account Information
      summary: Return reseller's cPanel accounts
      description: This function lists all of a reseller's cPanel accounts.
      operationId: list_accounts
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_395"
  /ResourceUsage/get_usages:
    get:
      tags:
      - ResourceUsage
      - Resource Usage and Statistics
      summary: Return resource usage and custom statistics
      description: This function retrieves resource usage and custom statistics for
        a cPanel user account.
      operationId: get_usages
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_396"
  /Restore/directory_listing:
    get:
      tags:
      - File Restoration
      summary: Return backups in home directory
      description: |-
        This function lists all of the backup files and directories in the user's home directory.

        **Important:**

        When you disable the [File Storage role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: directory_listing
      parameters:
      - name: path
        in: query
        description: |-
          A path to a subdirectory within the user's home directory, or any level below it.

          **Note:**

          The value of this parameter **must** begin and end with a forward slash (`/`) for security purposes.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /public_html/
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_397"
  /Restore/get_users:
    get:
      tags:
      - File Restoration
      summary: Return cPanel accounts with backup metadata
      description: |-
        This function lists a reseller's users that have existing backup metadata.

        **Note:**

        When you disable the [File Storage role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_users
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_398"
  /Restore/query_file_info:
    get:
      tags:
      - File Restoration
      summary: Return backup storage locations
      description: |-
        This function lists all of an item's backup locations. An item can be a file, a directory, or a symlink.

        **Important:**

        When you disable the [File Storage role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: query_file_info
      parameters:
      - name: path
        in: query
        description: |-
          A file, directory, or symlink in the user's directory tree.

          **Note:**

          The value of this parameter **must** begin with a forward slash (`/`).
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /public_html/index.php
      - name: exists
        in: query
        description: |-
          Whether to show the `exist` return, which indicates whether the item exists in the
          local disk or only in the backup.

          * `1` âÂ Show the `exist` return's value.
          * `0` âÂ Do **not** show the `exists` return's value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_399"
  /Restore/restore_file:
    get:
      tags:
      - File Restoration
      summary: Restore file or directory
      description: |-
        This function restores a file or directory from a backup to the file or directory's original location.

        **Important:**

        When you disable the [File Storage role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: restore_file
      parameters:
      - name: backupID
        in: query
        description: |-
          The backup's identification.

          * `YYYY-MM-DD` âÂ Restore a daily backup from the specified backup date.
          * `incremental` â Restore a daily incremental backup.
          * `weekly/YYYY-MM-DD` â Restore a weekly backup from the specified backup date.
          * `monthly/YYYY-MM-DD` â Restore a monthly backup from the specified backup date.
          * `weekly/incremental` â Restore a weekly incremental backup.
          * `monthly/incremental` â Restore a monthly incremental backup.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/backupID"
      - name: overwrite
        in: query
        description: |-
          Whether to overwrite the file or directory on the disc with its backup replacement.

          * `1` âÂ Overwrite the file or directory.
          * `0` âÂ Do **not** overwrite the file or directory.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: path
        in: query
        description: |-
          The absolute file or directory's path, within a backup, that you wish to restore.

          **Important:**

          * The value of this parameter **must** begin with a forward slash (/).
          * YouÂ **must** parse filenames properly to prevent a cross-site scripting (XSS) attack.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /public_html/index.php
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_400"
  /SSH/get_port:
    get:
      tags:
      - SSH
      summary: Return SSH port
      description: This function retrieves the server's SSH port.
      operationId: SSH-get_port
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_401"
  /SSL/add_autossl_excluded_domains:
    get:
      tags:
      - SSL
      - Auto-generated SSL Certificates
      summary: Disable AutoSSL for domains
      description: |-
        This function disables AutoSSL for the domains that you specify.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: add_autossl_excluded_domains
      parameters:
      - name: domains
        in: query
        description: |-
          A comma-separated list of domains for which to disable AutoSSL.

          **Note:**

          For browser-based calls, use a URI encoded comma (`%2C`).
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: "example.com,example2.com"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_402"
  /SSL/can_ssl_redirect:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return whether domains can redirect to secure URL
      description: This function determines whether the system can automatically redirect
        domains on a cPanel account to use SSL.
      operationId: can_ssl_redirect
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_403"
  /SSL/check_shared_cert:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return whether shared SSL certificate exists
      description: This function checks whether a shared SSL certificate is associated
        with the account.
      operationId: check_shared_cert
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_404"
      deprecated: true
  /SSL/delete_cert:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Delete SSL certificate
      description: |-
        This function deletes an SSL certificate.

        **Note:**

        * When you call this function, you **must** include the `id` or the `friendly_name`
        parameter.
        * This function **only** deletes certificates from SSL storage. To end SSL
        coverage for a domain, use the UAPI `SSL::delete_ssl` function instead.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        and Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: delete_cert
      parameters:
      - name: friendly_name
        in: query
        description: The certificate's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestCert
      - name: id
        in: query
        description: The certificate's ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example_com_cb497_a394d_1397249671_d1272da8f13a1fd837493a5ad1f0a0f3
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_405"
  /SSL/delete_csr:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Delete certificate signing request
      description: |-
        This function deletes a certificate signing request (CSR).

        **Note:**

        * When you call this function, you **must** include the `id` or the `friendly_name`
        parameter.
        * To delete a private key, use the UAPI `SSL::delete_key` function instead.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        and Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: delete_csr
      parameters:
      - name: friendly_name
        in: query
        description: The CSR's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestCSR
      - name: id
        in: query
        description: The CSR's ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example_com_e095f_0ab2f_ebcbe4a571276f48562241411556647f
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_406"
  /SSL/delete_key:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Delete private key
      description: |-
        This function deletes a private key.

        **Note:**

        * When you call this function, you **must** include the `id` or the `friendly_name`
        parameter.
        * To delete a certificate signing request (CSR), use the UAPI `SSL::delete_csr`
        function instead.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        and Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: delete_key
      parameters:
      - name: friendly_name
        in: query
        description: The private key's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      - name: id
        in: query
        description: The private key's ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example_com_e095f_0ab2f_ebcbe4a571276f48562241411556647f
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_407"
  /SSL/delete_ssl:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Remove SSL for domain
      description: |-
        This function removes SSL from a domain.

        **Note:**

        This function removes domains from the current certificate to end SSL coverage for those
        domains. To delete certificates from SSL storage, use the UAPI function `SSL::delete_cert`
        instead.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, **and** Web Server
        [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: delete_ssl
      parameters:
      - name: domain
        in: query
        description: The domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_408"
  /SSL/disable_mail_sni:
    get:
      tags:
      - SSL
      - SNI Email Settings
      summary: Disable SNI mail services for domain
      description: |-
        This function disables SNI mail services on the specified domains.

        **Note:**

          Mail SNI is **always** enabled.

          * After you change the SNI status, you **must** run UAPI's `rebuild_mail_sni_config` function.
          * Functions that enable Mail SNI succeed with a warning that Mail SNI is always enabled.
          * Functions that disable Mail SNI fail and make no changes.
      operationId: disable_mail_sni
      parameters:
      - name: domains
        in: query
        description: A pipe-delimited list of the account's domains.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com|example1.com|example2.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_409"
  /SSL/enable_mail_sni:
    get:
      tags:
      - SSL
      - SNI Email Settings
      summary: Enable SNI mail services for domain
      description: |-
        This function enables SNI mail services on the specified domains.

        **Warning:**

        Mail SNI is **always** enabled.
        * Mail SNI is **not** compatible with Webmail and will **not** function for any Webmail connection. Webmail connections use the cPanel service SSL certificate.
        * Functions that enable Mail SNI succeed with a warning that Mail SNI is always enabled.
        * Functions that disable Mail SNI fail and make no changes.

        **Important:**

          When you disable the *Calendars and Contacts*, *Mail Receive*, *Web Disk*, *Webmail*, **and** *Web Server* [roles](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: enable_mail_sni
      parameters:
      - name: domains
        in: query
        description: A pipe-delimited list of the account's domains.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com|example1.com|example2.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_410"
  /SSL/fetch_best_for_domain:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Request best SSL certificate
      description: |-
        This function retrieves the best-available certificate for the domain. The function also
        retrieves the certificate's associated private key and CA bundle, if available.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: fetch_best_for_domain
      parameters:
      - name: domain
        in: query
        description: The domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_411"
  /SSL/fetch_cert_info:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return SSL certificate information
      description: |-
        This function retrieves all of a certificate's available information.

        **Important:**

        * You **must** call either the `friendly_name` or `id` parameter.
        * When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: fetch_cert_info
      parameters:
      - name: friendly_name
        in: query
        description: The certificate's human readable name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestCert
      - name: id
        in: query
        description: The certificate's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_com_cb497_a394d_1397249671_d1272da8f13a1fd837493a5ad1f0a0f3
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_412"
  /SSL/fetch_certificates_for_fqdns:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return SSL certificate information for all FQDN
      description: This function retrieves the certificate information for all fully
        qualified domain names (FQDNs) that the account owns.
      operationId: fetch_certificates_for_fqdns
      parameters:
      - name: domains
        in: query
        description: A domain or comma-delimited list of domains for which to retrieve
          information.
        required: true
        style: form
        explode: false
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: "domains=example1.com,example2.com"
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_413"
  /SSL/fetch_key_and_cabundle_for_certificate:
    post:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return private key and CA bundle
      description: |-
        This function extracts the private key and CA bundle information from a certificate.

        **Note:**

        Due to the limited field length of `HTTP GET` method calls, you **must** use the `HTTP POST` method. For this reason, you **cannot** use a cPanel or Webmail session URL to call this function.
      operationId: fetch_key_and_cabundle_for_certificate
      parameters:
      - name: certificate
        in: query
        description: An SSL certificate.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-certificate
          example: '-----BEGIN CERTIFICATE-----MIIDcTCCAlmgAwIBAgIFAU+BNVgwDQYJKoZIhvcNAQEFBQAwUTESMBAGA1UEAwwJc2lza28udGxkMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGY1BhbmVsMQswCQYDVQQIDAJUWDEQMA4GA1UEBwwHSG91c3RvbjAeFw0xNDEwMDYyMjI2MTlaFw0xNTEwMDYyMjI2MTlaMFExEjAQBgNVBAMMCXNpc2tvLnRsZDELMAkGA1UEBhMCVVMxDzANBgNVBAoMBmNQYW5lbDELMAkGA1UECAwCVFgxEDAOBgNVBAcMB0hvdXN0b24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9zx6zGiHdmWA0dKtoXmJiWXpZ9E3PXx3YHsjFEWW7e5pH0vZ+jVMzDmm5nsJ7RXrAkZO1IvpIpVLvoQfiJOWVvkD+o9fWvoK1tWJS72FSgPju+58mA2ieBuc87A790Pzuv1P3NR3zFLAjUR99zkHR1fpri/daM3PBWO8ET48FWkyU1kOeZaUlF67/+wrEiNgg+t1qhKOCAB61PdNVkLaSGHimksuC+Czk8Kq9nuS0E0TCnDtjjEyJ455FUcaCfczlTb8xkB/F9ORe74yTzD+vlk0tFMG6PLj/ajIwWqwO0qmQ8wX3NRxkWgGz5kVO1wrVJarKQ5EYQ3/mgvit0v6dAgMBAAGjUDBOMB0GA1UdDgQWBBRw+wKBo34+bgexjAa3EMDsgSCd7zAfBgNVHSMEGDAWgBRw+wKBo34+bgexjAa3EMDsgSCd7zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCHRXIs53opzKM2rM8Qe8lcw524WK6hqy2EWrZHp78N7rU7/6DQ/I3hv3WhcDDIO04I2/Xhe88MLBaLoM367Ya+vy7CaLr14aLi/SfQszMA0ALBvMao+Fis0iVwFYq/NLgSXw+fgnpFskt8v8iQZ+4Kaal8U8e9sVgu8m0RgO7rzym1eRiIKpsKd1rh/SD7LbSN7M7TRL3QqF7ltw9sQhAAsQcRaBBF21pdWrqhiGZ+Eioo3hhgwNavH2agqz78ddHwrFpHFwrEeUk1OfpPb76MYIce7xIy/4oQNdg6fOq4l/FrajBv+WkzDVPaKm6r7YmwfLN/YMZBHXSR58oOGP9W-----END
            CERTIFICATE-----'
      requestBody:
        description: The certificate's contents.
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SSL_fetch_key_and_cabundle_for_certificate_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_414"
  /SSL/find_certificates_for_key:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return SSL certificate for private key
      description: |-
        This function retrieves SSL certificates for a private key.

        **Note:**

        When you call this function, you **must** include either the `id`
        **or** the `friendly_name` parameter.
      operationId: find_certificates_for_key
      parameters:
      - name: friendly_name
        in: query
        description: The key's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      - name: id
        in: query
        description: The key's ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example_com_cb497_a394d_1397249671_d1272da8f13a1fd837493a5ad1f0a0f3
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_415"
  /SSL/find_csrs_for_key:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return private key's certificate signing requests
      description: |-
        This function retrieves certificate signing requests (CSR) for
        a private key.

        **Note:**

        When you call this function, you **must** include either the `id`
        or the `friendly_name` parameter.
      operationId: find_csrs_for_key
      parameters:
      - name: friendly_name
        in: query
        description: The key's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      - name: id
        in: query
        description: The key's ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example_com_cb497_a394d_1397249671_d1272da8f13a1fd837493a5ad1f0a0f3
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_416"
  /SSL/generate_cert:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Create self-signed SSL certificate
      description: |-
        This function generates a self-signed SSL certificate.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        and Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: generate_cert
      parameters:
      - name: countryName
        in: query
        description: The two-letter country code.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166-1 (alpha-2)
          example: US
      - name: domains
        in: query
        description: A comma-separated list of domains for which to generate the certificate.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Generate certificates for multiple domains.
            value: "domains=example1.com,example2.com,example3.com"
          single:
            summary: Generate a certificate for a domain.
            value: example.com
      - name: key_id
        in: query
        description: The key's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_com_cb497_a394d_1397249671_d1272da8f13a1fd837493a5ad1f0a0f3
      - name: localityName
        in: query
        description: The certificate's city or locality name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Houston
      - name: organizationName
        in: query
        description: The certificate's Organization Name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Organization
      - name: stateOrProvinceName
        in: query
        description: The two-letter state or locality abbreviation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TX
      - name: emailAddress
        in: query
        description: An email address to associate with the certificate.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
          default: ""
      - name: friendly_name
        in: query
        description: |-
          A friendly name for the new certificate.

          This parameter defaults to the domain's name for which you generated the
          certificate.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestCert
      - name: organizationalUnitName
        in: query
        description: The certificate's organizational unit or department name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Department
          default: ""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_417"
  /SSL/generate_csr:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Create certificate signing request
      description: |-
        This function generates a certificate signing request (CSR).

        **Note:**

        This function **requires** a valid key in the account's `ssl` directory.
        You can generate a key with UAPI's `SSL::generate_key` function.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        and WebServer [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: generate_csr
      parameters:
      - name: countryName
        in: query
        description: The two-letter country code.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166-1 (alpha-2)
          example: US
      - name: domains
        in: query
        description: A comma-separated list of the domains for which to generate the
          certificate.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Generate a certificate for multiple domains.
            value: "domains=example-1.com,example-1.com,example-2.com"
          single:
            summary: Generate a certificate for a single domain.
            value: example.com
      - name: key_id
        in: query
        description: The key's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_com_cb497_a394d_1397249671_d1272da8f13a1fd837493a5ad1f0a0f3
      - name: localityName
        in: query
        description: The certificate's city or locality name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Houston
      - name: organizationName
        in: query
        description: The certificate's organization.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Organization
      - name: stateOrProvinceName
        in: query
        description: The certificate's state or locality name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Texas
      - name: emailAddress
        in: query
        description: An email address to associate with the certificate.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
          default: ""
      - name: friendly_name
        in: query
        description: |-
          A friendly name for the new certificate.

          This parameter defaults to the domain name for which you generated the
          certificate.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestCert
      - name: organizationalUnitName
        in: query
        description: The certificate's organizational unit or department name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Department
          default: ""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_418"
  /SSL/generate_key:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Create private key
      description: |-
        This function generates a private key.

        **Important:**

        * You **cannot** call both the `keytype` and `keysize` parameters in a single call.
        * When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, **and**
        Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: SSL-generate_key
      parameters:
      - name: friendly_name
        in: query
        description: |-
          A friendly name for the new key.

          This parameter defaults to the key's type, creation date, and creation time.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      - name: keysize
        in: query
        description: |-
          The key's modulus size.

          **Note:**

          Use the `keytype` parameter.
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: integer
          example: 2048
          default: 2048
      - name: keytype
        in: query
        description: |-
          The key's type.

          * `system` â The system's default value.
          * `rsa-2048` â 2,408-bit RSA.
          * `rsa-4096` â 4,096-bit RSA.
          * `ecdsa-prime256v1` â ECDSA prime256v1 ("P-256").
          * `ecdsa-secp384r1` â ECDSA secp384r1 ("P-384").

          This parameter defaults to the user's
          [default SSL/TLS key type](https://go.cpanel.net/cpaneldocsSSLTLS#default-ssl-tls-key-type).

          **Note:**

          If you do **not** use this parameter, the system defaults to the `keysize` parameter's default value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: rsa-2048
          enum:
          - system
          - rsa-2048
          - rsa-4096
          - ecdsa-prime256v1
          - ecdsa-secp384r1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_419"
  /SSL/get_autossl_excluded_domains:
    get:
      tags:
      - SSL
      - Auto-generated SSL Certificates
      summary: Return AutoSSL disabled domains
      description: This function lists the domains with AutoSSL disabled.
      operationId: get_autossl_excluded_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_420"
  /SSL/get_autossl_problems:
    get:
      tags:
      - SSL
      - Auto-generated SSL Certificates
      summary: Return domains with AutoSSL problems
      description: |-
        This function retrieves a list of domains that possess AutoSSL problems.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_autossl_problems
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_421"
  /SSL/get_cabundle:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return certificate's CA bundle and hostname
      description: |-
        This function retrieves a certificate's Certificate Authority (CA) bundle and hostname.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: get_cabundle
      parameters:
      - name: cert
        in: query
        description: The certificate's text.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-certificate
          example: '-----BEGIN CERTIFICATE-----\r\nMIIDcTCCAlmgAwIBAgIFAU+BNVgwDQYJKoZIhvcNAQEFBQAwUTESMBAGA1UEAwwJ\r\nc2lza28udGxkMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGY1BhbmVsMQswCQYDVQQI\r\nDAJUWDEQMA4GA1UEBwwHSG91c3RvbjAeFw0xNDEwMDYyMjI2MTlaFw0xNTEwMDYy\r\nMjI2MTlaMFExEjAQBgNVBAMMCXNpc2tvLnRsZDELMAkGA1UEBhMCVVMxDzANBgNV\r\nBAoMBmNQYW5lbDELMAkGA1UECAwCVFgxEDAOBgNVBAcMB0hvdXN0b24wggEiMA0G\r\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9zx6zGiHdmWA0dKtoXmJiWXpZ9E3P\r\nXx3YHsjFEWW7e5pH0vZ+jVMzDmm5nsJ7RXrAkZO1IvpIpVLvoQfiJOWVvkD+o9fW\r\nvoK1tWJS72FSgPju+58mA2ieBuc87A790Pzuv1P3NR3zFLAjUR99zkHR1fpri/da\r\nM3PBWO8ET48FWkyU1kOeZaUlF67/+wrEiNgg+t1qhKOCAB61PdNVkLaSGHimksuC\r\n+Czk8Kq9nuS0E0TCnDtjjEyJ455FUcaCfczlTb8xkB/F9ORe74yTzD+vlk0tFMG6\r\nPLj/ajIwWqwO0qmQ8wX3NRxkWgGz5kVO1wrVJarKQ5EYQ3/mgvit0v6dAgMBAAGj\r\nUDBOMB0GA1UdDgQWBBRw+wKBo34+bgexjAa3EMDsgSCd7zAfBgNVHSMEGDAWgBRw\r\n+wKBo34+bgexjAa3EMDsgSCd7zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUA\r\nA4IBAQCHRXIs53opzKM2rM8Qe8lcw524WK6hqy2EWrZHp78N7rU7/6DQ/I3hv3Wh\r\ncDDIO04I2/Xhe88MLBaLoM367Ya+vy7CaLr14aLi/SfQszMA0ALBvMao+Fis0iVw\r\nFYq/NLgSXw+fgnpFskt8v8iQZ+4Kaal8U8e9sVgu8m0RgO7rzym1eRiIKpsKd1rh\r\n/SD7LbSN7M7TRL3QqF7ltw9sQhAAsQcRaBBF21pdWrqhiGZ+Eioo3hhgwNavH2ag\r\nqz78ddHwrFpHFwrEeUk1OfpPb76MYIce7xIy/4oQNdg6fOq4l/FrajBv+WkzDVPa\r\nKm6r7YmwfLN/YMZBHXSR58oOGP9W\r\n-----END
            CERTIFICATE-----'
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_422"
  /SSL/get_cn_name:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Request best SSL domain for service
      description: This function retrieves the most secure domain for a service.
      operationId: get_cn_name
      parameters:
      - name: domain
        in: query
        description: "A domain name, cPanel username, or email address."
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/domain"
        example: example.com
      - name: service
        in: query
        description: |-
          The service's name.

          * `cpanel`
          * `imap`
          * `pop3`
          * `smtp`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel
          enum:
          - cpanel
          - imap
          - pop3
          - smtp
      - name: add_mail_subdomain
        in: query
        description: |-
          Whether to append `mail` to the `domain` value to find the best match.

          For example, if you specify the domain `example.com` and call this parameter, the
          function only searches the `mail.example.com` service domains.

          * `1` â Append `mail` to the `domain` value during the search.
          * `0` â Match on the specified `domain` value **only**.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_423"
  /SSL/install_ssl:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Install SSL certificate
      description: |-
        This function installs an SSL certificate.

        **Note:**

        Due to their inherent complexities, SSL-related functions often present problems for third-party developers. For the additional steps required to successfully call this function, read our [Call UAPI's SSL::install_ssl Function in Custom Code](https://go.cpanel.net/tutorial-call-uapis-ssl-install-ssl-function-in-custom-code) documentation.

        **Important:**

        When you disable the *Calendars and Contacts*, *Receive Mail*, *Web Disk*, *Webmail*, and *Web Server* [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: install_ssl
      parameters:
      - name: cert
        in: query
        description: |-
          The certificate to install.

          **Note:**

          * You **must** URI-encode this value.
          * You can use a Perl command to URI-encode your SSL certificate for this parameter.
          For example, you can use the following string, where `CERT.FILE` is the SSL certificate file:

            ```$(perl -MURI::Escape -ne 'print uri_escape($_);' CERT.FILE)```
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-certificate
          example: '-----BEGIN%20CERTIFICATE-----%0AMIIEEzCCAvugAwIBAgIJALF%2FjFpw6p1bMA0GCSqGSIb3DQEBBQUAMIGfMRYwFAYD%0AVQQDEw10ZXN0c2ltb24uY29tMRYwFAYDVQQLEw1Eb2N1bWVudGF0aW9uMQswCQYD%0AVQQGEwJVUzEoMCYGCSqGSIb3DQEJARYZbGF1cmVuY2Uuc2ltb25AY3BhbmVsLm5l%0AdDEUMBIGA1UEChMLY1BhbmVsIEluYy4xDjAMBgNVBAgTBVRleGFzMRAwDgYDVQQH%0AEwdIb3VzdG9uMB4XDTEzMDUxNzE2MTMwN1oXDTE0MDUxNzE2MTMwN1owgZ8xFjAU%0ABgNVBAMTDXRlc3RzaW1vbi5jb20xFjAUBgNVBAsTDURvY3VtZW50YXRpb24xCzAJ%0ABgNVBAYTAlVTMSgwJgYJKoZIhvcNAQkBFhlsYXVyZW5jZS5zaW1vbkBjcGFuZWwu%0AbmV0MRQwEgYDVQQKEwtjUGFuZWwgSW5jLjEOMAwGA1UECBMFVGV4YXMxEDAOBgNV%0ABAcTB0hvdXN0b24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDRO0AP%0AN5XtjDqkEyJ6ctfYqUtt9yUXyRuCETFjW6opNLSmZSHeF6L2aZka646lhj02CFyl%0AkzsNSxysN66tY%2BWZcTmvgPisJdQFpFvjroJZgDjYRV0QqokKdRy%2F5BU0%2BtHXoYpj%0A9JOQlbvEWxiGR3R80sL1ma4AfSE6Gv8M%2FPULTadan51eHaikXqjOXdPJQKuWP3g9%0AFnIuf38WRYwzGrre88qsZrpsMrADX5dotHWgqAf7Tap6xfA4CUAgQo9tldariuVi%0ABz%2BsRJ%2FSjgxnhw1HYWGttBuBZFhMpdHpPnTJ7DIFMd%2FFN5gG%2Ftah30SapWpo35Ux%0A3BpJcdUjtazy82K5AgMBAAGjUDBOMB0GA1UdDgQWBBQAlv7%2FtALOYb7zAXbYG2%2B9%0AAMI3xjAfBgNVHSMEGDAWgBQAlv7%2FtALOYb7zAXbYG2%2B9AMI3xjAMBgNVHRMEBTAD%0AAQH%2FMA0GCSqGSIb3DQEBBQUAA4IBAQCxzpe71Hc7Es0dqIN7bhIFYIIgcr6wxM6a%0Aa9d%2BQG%2BQPH0x0KAqV8EgUbZysvyxEF0bPxW3ZAr1Is1wk80PMuU3bToFFVbFFIIr%0AHRNfKLGvxiMXnZA1c6L4N0lowvXHgZxTTUXtDFLXyrcwrLsvUErEV7rbizuxqfPw%0AcaRtXn4uc%2Bt6HYuW7yWesBauCWnJNiKbjN%2FF%2BuCTurN3QMAeWf3ZJtsfkAgk8dyq%0AR%2F83a3kDtSPrpt%2BjX%2BqdjKEpRtQ5Qpm6XT2gCOQPgnfiUtOCH419pp922P%2FAAGc%2B%0AZUhYoWcRWKw%2Fy6gI7Ru%2B%2B9%2B8%2BwkadL9EbKMZxhVwD5qVm4ZlWK2a%5Cr%5Cn%0A-----END%20CERTIFICATE-----'
      - name: domain
        in: query
        description: The domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key
        in: query
        description: |-
          The certificate's key.

          **Note:**

          * You **must** URI-encode this value.
          * You can use a Perl command to URI-encode your SSL certificate for this parameter.
          For example, you can use the following string, where `KEY.FILE` is the SSL certificate file:

            ```$(perl -MURI::Escape -ne 'print uri_escape($_);' KEY.FILE)```
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-private-key
          example: '-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEpAIBAAKCAQEA4AVM6J4Qg3DIFWr%2FeJ5GRmIATYsJIepKbrDy70sq%2BudcO8R8%0Axxak0oMZ%2F9mUdpjSNK%2FfLVTuCO0kxTfQ9VUWJllX7ThD6Zh9ZvlC%2Fnf%2FOEZLm3Zb%0ABgu8rbC8E9wuDOkKbJLnINgdhtowIydLK2MJ%2B%2Bq62bFV89jkHWTMcKyyqHENo3h%0Ac%2Blkpd9vnp8rZTinaVb7nX26uQqAFZYRo%2BWU0G%2FNPsq40QVSMoqPxyEz4qXo0hvu%0AIlCXmzFZq%2F6fCVPEKPLhQgMmpdBkMz4dVOazREfqXdjMD2%2BQXSNiA1AwWr8l0r4r%0AtzlxEYDJIR41yXp0xMl3KoolxMyvLBqZy32niQIDAQABAoIBAQCmbGmhWmPsMeoC%0At1WJFxQgD4goE0U6k%2BKt7vjbOt14Pk6v%2FB2yjaju1wSGpO59WLS4%2FXrwI2se6IXr%0Amba7u3VUEgWXLriNHoLy7%2FSMNTs%2BZEKhAMG36eNe3tVdT7busTag31r6sEMGGwCs%0AIwpU%2Bazosk0oylWLEX%2Fm%2FuHWEs1eaIEWWWtgHB%2BKZrrP7Rr9RYfVQ144DxmOxS3C%0Aa9%2BmST62WqAVPR6POWGEfZqnZl%2FePWZPcQYbFrhwnnefNoYBl%2FbnLZBo8rbNWxAq%0AOEOuKfkrBzglKG%2F39WKPw8rj4JIVzY0yOuFCW6xCDWRkOrhU8Ol%2F3FvwDa3uJpkp%0AmgPr4TgxAoGBAPGPLmxSuOYR97mDAXxrs037F2GCbqWvI6m7%2FezWe9yn%2BbMpjSIW%0Afsgtq4FsyqzPueEkDdQWi3xh6nu2WI%2F1Tl875opGAqEIJMqss%2Fu11tnva5wzu1cC%0AL6H85A5%2BHMOBvP3sm6CObKcVw92h7kxynVIUJJWhjfeZMN8gBFFpKIVFAoGBAO1p%0AtXBmXLC%2FYKKvtHI3M16%2FZopvM8ZqU2HcAHaw214Refw9JJ%2Fe3%2FxTNfSerVTyCAQO%0A1AdWTzJKBN8jmSYv1Mk1D3RpQPNR7wVzi46KR081AU41uMpqIGVOwHtyVnW%2FZfLr%0Ac1DLIK8Cx8aHfoxffwzoMO5SEQSooeZfOLhsfDN1AoGBAKQTUEINsj%2B75psgbAr6%0AELGgItJ9yPBLVRr%2BcUzEpx9LDWVvjMihpP4NX1gq8EOPWT%2BewLHVmmsjCyV6xw8J%0AXXF8e2xif3in0m3D%2FwCzE7u2T06rKM3B017hKnrZmGoHnrqPU2osM4sOUpshWX6d%0Av1Q4EF1%2BfbK3YCW%2BVpCBsB9NAoGAQo%2BuhNLODee56iKkzpjXWCsFTq6ar3hD5F3P%0A63buKdNwhd2GlSPhXFbf%2B7M5GWW6BZk6rMvv7EOAVice2uvyFm8%2F4%2F1WbmF8R%2BT7%0ALX1rPLO5p%2Fm701QpvP11TabiwqRkqtSEQhSRF0AKTojSW%2FyyHCZFAawUhV%2FZ9EKi%0AHmKb97kCgYAyzmFc2it0HqnsOnRybop603nqMtWGTQO4cxa93HUDpYajuK2K3Dfr%0AxUj6lG3z%2FoKJGGE2JqgZ6LBAhNJtJWJu2ox3pKGE63QjLJnVwb8y1NFYpe%2FcrbLe%0APuBwIR0L7drXxfv7O5btY7h6QI2d1%2FUIAQPAWbxLoTM%2BndQ%2FuPEdfA%3D%3D%0A-----END%20RSA%20PRIVATE%20KEY-----'
      - name: cabundle
        in: query
        description: |-
          The Certificate Authority (CA) bundle data,Â if the certificate requires it.

          **Note:**

          * You **must** URI-encode this value.
          * You can use a Perl command to URI-encode your SSL certificate for this parameter.
          For example, you can use the following string, where `CABUNDLE.FILE` is the SSL certificate file:

            ```$(perl -MURI::Escape -ne 'print uri_escape($_);' CABUNDLE.FILE)```
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: pem-certificate
          example: '-----BEGIN%20CERTIFICATE-----%0AMIIB%2BjCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k%2B625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz%2BiCWaEVh43KRuH6X4M%0AypqfpX%2F1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt%2F5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD%2BfQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4%2F5ODFlitppK%2BULdjG%2BBqXH%2F9Apy%0AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----'
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_424"
  /SSL/installed_host:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return SSL certificate's info for dedicated IP
      description: |-
        This function retrieves information about a certificate that is installed on a domain's dedicated IP address.

        **Important:**

          * If you do **not** possess a dedicated IP address, this function will **fail**. For non-dedicated IP addresses, use the `SSL::installed_hosts` function.
          * When you disable the _Calendars and Contacts_, _Receive Mail_, _Web Disk_ , _Webmail_ , **and**  _Web Server_ [roles](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: installed_host
      parameters:
      - name: domain
        in: query
        description: |-
          The domain name.

          **Note:**

          The parameter defaults to the account's main domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: verify_certificate
        in: query
        description: |-
          Verify the certificate.
          * `1` â Verify the certificate.
          * `0` â Do **not** verify the certificate.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_425"
  /SSL/installed_hosts:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return domains with SSL certificate information
      description: |-
        This function retrieves a list of the account's websites, their domains, and certificate information.

        **Important:**

          For a dedicated IP address, use the UAPI `SSL::installed_host` function.

        **Important:**

         When you disable the *CalendarContact* , *MailReceive* , *WebDisk* , *Webmail* , and  *WebServer* [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: installed_hosts
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_426"
  /SSL/is_autossl_check_in_progress:
    get:
      tags:
      - SSL
      - Auto-generated SSL Certificates
      summary: Return whether AutoSSL check in progress
      description: |-
        This function verifies whether the `autossl_check` task is in progress for the current user.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: is_autossl_check_in_progress
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_427"
  /SSL/is_mail_sni_supported:
    get:
      tags:
      - SSL
      - SNI Email Settings
      summary: Return whether mail SNI is enabled
      description: |-
        This function checks whether the sslinstall feature is enabled.

        **Warning:**

        Mail SNI is always enabled.
        * Mail SNI is **not** compatible with Webmail and will **not** function for any Webmail connection. Webmail connections use the cPanel service SSL certificate.
        * Functions that enable Mail SNI succeed with a warning that Mail SNI is always enabled.
        * Functions that disable Mail SNI will fail and make no changes.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: is_mail_sni_supported
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_428"
  /SSL/is_sni_supported:
    get:
      tags:
      - SSL
      - SNI Email Settings
      summary: Return whether Apache web server supports mail SNI
      description: |-
        This function checks whether the Apache web server supports SNI.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: is_sni_supported
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_429"
  /SSL/list_certs:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return all SSL certificates
      description: |-
        This function lists an account's certificates.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        and Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: list_certs
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_430"
  /SSL/list_csrs:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return all certificate signing requests
      description: |-
        This function lists an account's certificate signing requests (CSR).

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk,
        Webmail, and Web Server
        [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: list_csrs
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_431"
  /SSL/list_keys:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return all private keys
      description: |-
        This function lists an account's private keys.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        and Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: list_keys
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_432"
  /SSL/list_ssl_items:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Return SSL-related items
      description: |-
        This function lists SSL-related items on a domain.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.com/serverroles), the system **disables** this function.
      operationId: list_ssl_items
      parameters:
      - name: domains
        in: query
        description: The domain name or names.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: domains=example1.com|example2.com
          single:
            summary: A single domain.
            value: example.com
      - name: item
        in: query
        description: |-
          The SSL item type or types.
          * `key`
          * `csr`
          * `crt`
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: key
        examples:
          multiple:
            summary: Multiple item types.
            value: item=key|csr
          single:
            summary: A single item type.
            value: key
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_433"
  /SSL/mail_sni_status:
    get:
      tags:
      - SSL
      - SNI Email Settings
      summary: Return status of domain's SNI mail services
      description: |-
        This function retrieves the status of the domain's SNI mail services.

        **Warning:**

        Mail SNI is **not** compatible with Webmail and will not function for any Webmail connection. Webmail connections use the cPanel service SSL certificate.

        **Note:**

        Mail SNI is always enabled.
        * Functions that enable Mail SNI succeed with a warning that Mail SNI is always enabled.
        * Functions that disable Mail SNI fail and make no changes.
      operationId: mail_sni_status
      parameters:
      - name: domain
        in: query
        description: The account's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_434"
  /SSL/rebuild_mail_sni_config:
    get:
      tags:
      - SSL
      - SNI Email Settings
      summary: Start SNI configuration files rebuild
      description: |-
        This function rebuilds the SNI configuration files.

        **Note:**

        * You **must** run this function after you change the SNI status through the UAPI's `enable_mail_sni` or `disable_mail_sni` functions.
        * Mail SNI is **always** enabled.
          * Functions that enable Mail SNI succeed with a warning that Mail SNI is always enabled. Functions that disable Mail SNI fail and make no changes.
          * Functions that disable Mail SNI will fail and make no changes.

        **Important:**

         When you disable the _Calendars and Contacts_, _Receive Mail_, _Web Disk_, _Webmail_, **and**  _Web Server_ [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: rebuild_mail_sni_config
      parameters:
      - name: reload_dovecot
        in: query
        description: |-
          Whether to reload the Dovecot service after the system rebuilds
          the configuration files.
          * `1` - Reload Dovecot.
          * `0` - Do **not** reload Dovecot.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_435"
  /SSL/rebuildssldb:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Start SSL database rebuild
      description: This function rebuilds the account's SSL database.
      operationId: rebuildssldb
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_436"
  /SSL/remove_autossl_excluded_domains:
    get:
      tags:
      - SSL
      - Auto-generated SSL Certificates
      summary: Enable AutoSSL for specifed domains
      description: |-
        This function enables AutoSSL for the domains that you specify.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: remove_autossl_excluded_domains
      parameters:
      - name: domains
        in: query
        description: Enable AutoSSL for this domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: "domains=example1.com,example2.com"
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_437"
  /SSL/set_autossl_excluded_domains:
    get:
      tags:
      - SSL
      - Auto-generated SSL Certificates
      summary: Disable AutoSSL for specifed domains
      description: |-
        This function disables AutoSSL for every domain that you specify.

        **Warning:**

        This function **replaces** the list of any domains that you previously excluded. To add domains to the list of excluded domains, use the UAPI function `SSL::add_autossl_excluded_domains`.

        **Important:**

        When you disable the the [Calendar and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_autossl_excluded_domains
      parameters:
      - name: domains
        in: query
        description: |-
          A comma-separated list of domains for which to disable AutoSSL.

          **Note:**

          If you do not include this parameter, the function will **enable** AutoSSL for every domain on the account.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "example.com,example.net"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_438"
  /SSL/set_cert_friendly_name:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Update SSL certificate's friendly name
      description: |-
        This function changes a certificate's friendly name.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_cert_friendly_name
      parameters:
      - name: friendly_name
        in: query
        description: The certificate's friendly name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestCert
      - name: new_friendly_name
        in: query
        description: The certificate's new friendly name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestCert2
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_439"
  /SSL/set_csr_friendly_name:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Update certificate signing request's friendly name
      description: |-
        This function changes a certificate signing request's (CSR) friendly name.

        **Important:**

        * You **must** call either the `friendly_name` or `id` parameter.
        * When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_csr_friendly_name
      parameters:
      - name: friendly_name
        in: query
        description: The CSR's friendly name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestCSR
      - name: id
        in: query
        description: |-
          The CSR's ID.

          **Note:**

          To retrieve a CSR's ID, use the UAPI `list_csrs` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_com_eda9d_543fb_a3009b4b01a592390866ab3a47c0df18
      - name: new_friendly_name
        in: query
        description: The CSR's new friendly name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestCSR2
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_440"
  /SSL/set_default_key_type:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Update SSL TLS key type
      description: This function sets a userâs preferred SSL/TLS key type.
      operationId: SSL::set_default_key_type
      parameters:
      - name: type
        in: query
        description: |-
          The key type to set.

          * `system` â Use the systemâs `ssl_default_key_type` value.
          * `rsa-2048` â 2,048-bit RSA.
          * `rsa-4096` â 4,096-bit RSA.
          * `ecdsa-prime256v1` â ECDSA prime256v1 (âP-256â).
          * `ecdsa-secp384r1` â ECDSA secp384r1 (âP-384â).
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - system
          - rsa-2048
          - rsa-4096
          - ecdsa-prime256v1
          - ecdsa-secp384r1
        example: ecdsa-prime256v1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_441"
  /SSL/set_key_friendly_name:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Update private key's friendly name
      description: |-
        This function changes a key's friendly name.

        **Important:**

        * You **must** call either the `friendly_name` or `id` parameter.
        * When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_key_friendly_name
      parameters:
      - name: friendly_name
        in: query
        description: The key's friendly name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      - name: id
        in: query
        description: The key's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: a9b72_63971_2cb6d8897b362cfb1548e047d8428b8d
      - name: new_friendly_name
        in: query
        description: The key's new friendly name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestKey2
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_442"
  /SSL/set_primary_ssl:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Update SSL website for dedicated IP address
      description: |-
        This function sets a new primary SSL website for a dedicated IP address.

        **Important:**

        When you disable the [Calendars and Contacts, Receive Mail, Web Disk, Webmail, and Web Server roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_primary_ssl
      parameters:
      - name: servername
        in: query
        description: The primary SSL website's servername.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: hostname.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_443"
  /SSL/show_cert:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Export SSL certificate
      description: |-
        This function retrieves a certificate.

        **Note:**

        When you call this parameter, you **must** include either the `id` or
        the `friendly_name` parameter.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk,
        Webmail, **and** Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: show_cert
      parameters:
      - name: friendly_name
        in: query
        description: The certificate's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestCert
      - name: id
        in: query
        description: The certificate's ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_444"
  /SSL/show_csr:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Export certificate signing request
      description: |-
        This function retrieves a certificate signing request (CSR).

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        and Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.

        **Note:**

        When you call this function, you **must** include either the `id`
        or the `friendly_name` parameter.
      operationId: show_csr
      parameters:
      - name: friendly_name
        in: query
        description: The CSR's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestCSR
      - name: id
        in: query
        description: The CSR's ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example_com_e095f_0ab2f_ebcbe4a571276f48562241411556647f
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_445"
  /SSL/show_key:
    get:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Export private key
      description: |-
        This function retrieves a private key.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, **and** Web Server [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: show_key
      parameters:
      - name: friendly_name
        in: query
        description: |-
          The key's friendly name.

          **Note:**

          You **must** use either the `id` or the `friendly_name` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      - name: id
        in: query
        description: |-
          The key's ID.

          **Note:**

          You **must** use either the `id` or the `friendly_name` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_446"
  /SSL/start_autossl_check:
    get:
      tags:
      - SSL
      - Auto-generated SSL Certificates
      summary: Start AutoSSL for current user
      description: |-
        This function initiates an [AutoSSL](https://go.cpanel.net/whmdocsManageAutoSSL) check for the user.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail, and  Web Server [roles](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: start_autossl_check
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_447"
  /SSL/toggle_ssl_redirect_for_domains:
    get:
      tags:
      - SSL
      - cPanel Account SSL Management
      summary: Enable or disable secure redirects
      description: |-
        This function enables or disables secure redirects (HTTPS) for the cPanel account's domains that you specify.

        **Important:**

        To call this function, one of the following conditions **must** exist:

        * AutoSSL **must** exist on the domains for which you enable secure redirects.
        * A valid SSL certificate **must** exist for each domain for which you wish to enable secure redirects.
        * You **must** own the domains for which you wish to enable secure redirects.
      operationId: toggle_ssl_redirect_for_domains
      parameters:
      - name: domains
        in: query
        description: |-
          A comma-separated list of the cPanel account's domains for which to enable or disable secure redirects.

          **Important:**

          To enable or disable redirects for addon domains, you **must** pass the addon domain **and** its subdomain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "main.example,addon.example,addon.main.example"
      - name: state
        in: query
        description: |-
          Whether to enable or disable redirects for the specified domains.

          * `1` â Enable.
          * `0` â Disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_448"
  /SSL/upload_cert:
    post:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Import SSL certificate
      description: |-
        This function uploads a certificate.

        **Important:**

        * Due to the limited field length of HTTP GET method calls, you **must** use the HTTP
        POST method. For this reason, you **cannot** use a cPanel or Webmail session URL to
        call this function.
        * When you disable the Calendar and Contacts, Receive Mail, Web Disk, Webmail, and
        Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: upload_cert
      parameters:
      - name: crt
        in: query
        description: The certificate's contents.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-certificate
          example: '"-----BEGIN CERTIFICATE-----/nMIIDcTCCAlmgAwIBAgIFAU+BNVgwDQYJKoZIhvcNAQEFBQAwUTESMBAGA1UEAwwJc2lza28udGxkMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGY1BhbmVsMQswCQYDVQQIDAJUWDEQMA4GA1UEBwwHSG91c3RvbjAeFw0xNDEwMDYyMjI2MTlaFw0xNTEwMDYyMjI2MTlaMFExEjAQBgNVBAMMCXNpc2tvLnRsZDELMAkGA1UEBhMCVVMxDzANBgNVBAoMBmNQYW5lbDELMAkGA1UECAwCVFgxEDAOBgNVBAcMB0hvdXN0b24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9zx6zGiHdmWA0dKtoXmJiWXpZ9E3PXx3YHsjFEWW7e5pH0vZ+jVMzDmm5nsJ7RXrAkZO1IvpIpVLvoQfiJOWVvkD+o9fWvoK1tWJS72FSgPju+58mA2ieBuc87A790Pzuv1P3NR3zFLAjUR99zkHR1fpri/daM3PBWO8ET48FWkyU1kOeZaUlF67/+wrEiNgg+t1qhKOCAB61PdNVkLaSGHimksuC+Czk8Kq9nuS0E0TCnDtjjEyJ455FUcaCfczlTb8xkB/F9ORe74yTzD+vlk0tFMG6PLj/ajIwWqwO0qmQ8wX3NRxkWgGz5kVO1wrVJarKQ5EYQ3/mgvit0v6dAgMBAAGjUDBOMB0GA1UdDgQWBBRw+wKBo34+bgexjAa3EMDsgSCd7zAfBgNVHSMEGDAWgBRw+wKBo34+bgexjAa3EMDsgSCd7zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCHRXIs53opzKM2rM8Qe8lcw524WK6hqy2EWrZHp78N7rU7/6DQ/I3hv3WhcDDIO04I2/Xhe88MLBaLoM367Ya+vy7CaLr14aLi/SfQszMA0ALBvMao+Fis0iVwFYq/NLgSXw+fgnpFskt8v8iQZ+4Kaal8U8e9sVgu8m0RgO7rzym1eRiIKpsKd1rh/SD7LbSN7M7TRL3QqF7ltw9sQhAAsQcRaBBF21pdWrqhiGZ+Eioo3hhgwNavH2agqz78ddHwrFpHFwrEeUk1OfpPb76MYIce7xIy/4oQNdg6fOq4l/FrajBv+WkzDVPaKm6r7YmwfLN/YMZBHXSR58oOGP9W/n-----END
            CERTIFICATE-----"'
      - name: friendly_name
        in: query
        description: The certificate's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestCert
      requestBody:
        description: The certificate's contents.
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SSL_upload_cert_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_449"
  /SSL/upload_key:
    post:
      tags:
      - SSL
      - SSL Certificate Management
      summary: Import private key
      description: |-
        This function uploads a private key.

        **Note:**

        Due to the limited field length of HTTP GET method calls, you **must** use
        the HTTP POST method. For this reason, you **cannot** use a cPanel or Webmail
        session URL to call this function.

        **Important:**

        When you disable the Calendars and Contacts, Receive Mail, Web Disk, Webmail,
        **and** Web Server [roles](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: upload_key
      parameters:
      - name: key
        in: query
        description: The key's contents.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-private-key
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAyeiHvMuJuVk8ZEY6wMzUS1g0eWaHaIWmIRe+Qrn6SwiRrm1p\npsJCiGPPPQGOSg4FzrMXqE0zsi/Tk3hUO/EEsi7CcZe8cUanjlUeXhiwrb86FCMF\nOb9siRHQvlss7VCg8ZGXXTWZgf5yD3A1xPwdayYwF2Tc7GkNcZGUAI58geuYaq+U\nGiLczRGZep1IQ0b1cZnqDvGMx6AS6hiDqLISjnmXYY2OhG6Uyp+SuinjYzLPJ6eO\nN/7i9qqbcGmt0ssddmhR897+bTEom5SlSuyi03KZ9Rn4ZmNJgOsup9MclSBGxBys\nb6MuuM3N0/tF5QuwmDc8H6h2rNBP9vGV7RTTXQIDAQABAoIBAFS/WVoRRLmbjxG3\nuKl8UA9f8oaSVnu0vUpeoOl5Dmm4Kw2/tvzbxPlii3Xb1VGYGS/tVBy8atp74J6h\nfxm5zHLN1afAPMR/F41ShPCSBHapMUOKf4MBqhjOdYOw2Way1RsQNSxWdxxtJIr+\nWlNYTzDOUpk/KMvCPHZS2IBzTidpcFpDQ3pyDXjOoKJJH0EQWPtvxJNGrFqmU29D\n9WBqQemHnDrzg3s7JzQ5cGpbbCE+QX8IckNkslAkyhm771CtqWdeo+c45e6YfGcx\nKuAy1zGSVzQBuitzYoMUOL5olXLEj8fHzXd/cZP4yCyyabcGz2vi6luxF+28l1OL\nG1axyLECgYEA+bD5B+Y/Dp5hZ/uVR1bbvyraQpwbDesS1zgnJ53KOIl926dnWzIt\nUvM46+c9IF+UJrtzwIB6IvjAQioNFrK36bHgNGzNf9WQ54NN172qveaFLdW34z/i\nGR2ix/efm9OC41QREQ/5IKV07TibCwVazVBWascMPkH7FnguTvTCiosCgYEAzwJ+\nGPlIWjK+sqkK5JMUyuH43qAvgVfkZV906JpNRQH0Mob3bC0nXN95EoTwWXk68ULT\no1GHv9XLbj8e+Ok7kpJQZT5vEZnDN+cy3jdTLCvcjU5Q3ToImOTp9isSAFWRTbtk\nyabLNoIIsTR/ZwwPFTZcRiK2d8k7ZhcRKdfGnrcCgYAPZ06FoTukoDqsGoYkB4S4\n72DVmSHGIwlfg5ROylouULUV9ubWZmsLYfvR+cr4k0zlcsz6RDLEs4nQyx1RmCbm\nYNXPBiNLTpaI4b3MoGPHIVB3+mZEu60sFXr0UR9kkpDRi18eKVkaHXrwI3zVGjh2\n0Az0u2DS+mkOAs4AivLxbwKBgQC0XPqbLc+Bb0dCCREJmLD8GCkrZ6wcaQUB4krN\nQ2vhnVM0Fu5K3Yi3XapynUuA2aSmgtA9MxMw7MkjlHGa9DPIgBz2KZDCaBN0iMeE\nX/XivZCbucmxBxhohsLmjh5QFj3U2Vp2bBIQuvlx1EjQ8uvNUqDRJvuOoNFVIPH+\nYBeZPwKBgA//kXfNtNMHOpch699i3rgTzbRFDmGwsr1otzvJsXw7Pr2bM4WIzUJy\nG2SUSUlQRSZK4+BBKT9S0d7TynJD6X/6R7IBotZbfXs1myYxEsKj89/BQmr47x2h\nHjYVCClNoJlsbd5C2yu1R3PikweWGoVaxE3c+AN5knqjwJ0g21Cf\n-----END
            RSA PRIVATE KEY-----"'
      - name: friendly_name
        in: query
        description: The key's friendly name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      requestBody:
        description: The certificate's contents.
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SSL_upload_key_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_450"
  /ServerInformation/get_information:
    get:
      tags:
      - ServerInformation
      - cPanel Server Information
      summary: Return service and device status
      description: |-
        This function returns the status of each
        [cPanel service (daemon)](https://go.cpanel.net/ThecPanelWHMServiceDaemons),
        device, and server health check point on your server.
      operationId: get_information
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_451"
  /ServiceProxy/get_service_proxy_backends:
    get:
      tags:
      - ServiceProxy
      summary: Return a cPanel accountâs service proxying setup
      description: |-
        This function reports a cPanel account's
        [service proxying](https://go.cpanel.net/ServiceProxying)
        configuration.
      operationId: serviceproxy-get_service_proxy_backends
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_452"
  /ServiceProxy/set_service_proxy_backends:
    get:
      tags:
      - ServiceProxy
      summary: Add cPanel account service proxying
      description: |-
        This function lets you configure a cPanel account's
        [service proxying](https://go.cpanel.net/ServiceProxying).

        **Note:**

        * If the [Web Server](https://go.cpanel.net/howtouseserverprofiles#roles) role is active
        on the server, this function rebuilds the user's web virtual hosts (vhosts) and restarts
        the web server.
        * If the system cannot rebuild the user's vhosts, the API call will still succeed. However,
        the function returns a failure warning in the metadata.
        * To remove an account's service proxying, use the UAPI `unset_all_service_proxy_backends`
        function.
      operationId: serviceproxy-set_service_proxy_backends
      parameters:
      - name: general
        in: query
        description: |-
          The hostname or IP address to assign as the server that handles
          the account's service proxy requests.

          This parameter defaults to the existing service proxy configuration,
          if one exists.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/general"
      - name: service_group
        in: query
        description: |-
          The name of a service group for which to assign a proxy backend. The
          corresponding `service_group_backend` value will be the service group's
          new proxy backend.

          * `Mail` â The [Mail service group](https://go.cpanel.net/ServiceProxying#Mail).

          This parameter defaults to the existing setting, if one exists.

          **Note:**

           * When you call this parameter, you **must** include a corresponding
           `service_group_backend` value.
           * To add multiple `service_group` values, increment the parameter name. For example,
           `service_group`, `service_group-1`, and `service_group-2`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Mail
        examples:
          multiple:
            summary: Add multiple service backend groups.
            value: Mail&service-group-1=Mail&service-group-2=Mail
          single:
            summary: Add a single service backend group.
            value: Mail
      - name: service_group_backend
        in: query
        description: |-
          The hostname or IP address of the server to assign as the corresponding
          `service_group` value's proxy backend server.

          This parameter defaults to the existing setting, if one exists.

          **Note:**

           * When you call this parameter, you **must** include a corresponding `service_group`
           value.
           * To add multiple `service_group_backend` values, increment the parameter name.
           For example, `service_group_backend`, `service_group_backend-1`,
           and `service_group_backend-2`.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/service_group_backend"
        examples:
          multiple:
            summary: Add multiple service group backend servers.
            value: mail.example.com&service_group_backend-1=mail.example1.com&service_group_backend-2=mail.example2.com
          single:
            summary: Add a single service group backend server.
            value: mail.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_453"
  /ServiceProxy/unset_all_service_proxy_backends:
    get:
      tags:
      - ServiceProxy
      summary: Remove cPanel account service proxying
      description: |-
        This function removes a cPanel account's
        [service proxying](https://go.cpanel.net/ServiceProxying).

        **Note:**

        * If the [Web Server](https://go.cpanel.net/howtouseserverprofiles#roles) role is active on
        the server, this function rebuilds the cPanel user's web virtual hosts (vhosts) and restarts
        the web server.
        * If the system **cannot** rebuild the cPanel user's vhosts, the API call will still succeed.
        However, the function returns a failure warning in the metadata.
        * To set a service proxying for a cPanel account, use the UAPI
        `set_service_proxy_backends` function.
      operationId: serviceproxy-unset_all_service_proxy_backends
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_454"
  /Session/create_temp_user:
    get:
      tags:
      - Session
      - Webmail Sessions
      summary: Create user session with existing session
      description: |-
        This function creates a temporary user session.

        **Important:**

        * Because this function requires a valid cPanel session ID, you **must** call it via a cPanel or Webmail session URL. If you call this function via the command line or Template Toolkit, it will **not** create a temporary user session. You **must** use the WHM API 1 `create_user_session` function to create a temporary user session.
        * Third-party plugins that require access to temporary MySQL users **must** call this function via the URL. It will create the temporary users before they are available. You can find these users in the `$ENV{'REMOTE_DBOWNER'}` environment variable.
        * If you **cannot** update your system, update your scripts to call the `Cgi::phpmyadminlink` function. This will create a temporary user session for you.
      operationId: create_temp_user
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_455"
      x-cpanel-cli-support: false
  /Session/create_webmail_session_for_mail_user:
    get:
      tags:
      - Session
      - Webmail Sessions
      summary: Create Webmail session
      description: |-
        Create a temporary session for a cPanel user to connect to Webmail.

        **Note:**

        The cPanel user must own the Webmail account.

        ### How to use this API

        After you successfully call this API, you will need to log in to [Webmail](https://go.cpanel.net/webmailinterface).
        To do this, send an HTTP POST to `https://$URL_AUTHTY:2096$token/login` with a message body of `session=$session` where:

        * `$URL_AUTHTY` represents the value from the `hostname` return.
          * If the `hostname` return value is `null`, enter the hostname of the server that answered the API function.
          * `$token` represents the value from the token return.
        * `$session` represents the value of the session return.

        For example, an HTTP POST may resemble the following:

        ```https://hostname.example.com:2096/cpsess2462418786/login```

        With a message body of:

        ```session=username:D7NiAZv1nf4bXeg9:CREATE_WEBMAIL_SESSION_FOR_MAIL_USER,728fb86a7df1cf20690c65f349ac3137```
      operationId: create_webmail_session_for_mail_user
      parameters:
      - name: domain
        in: query
        description: The domain for the Webmail account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: login
        in: query
        description: The Webmail account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: locale
        in: query
        description: |-
          TheÂ [locale](https://go.cpanel.net/localedocs)Â that the new session will use.

          **Note:**

          * You must **only** enter lowercase characters.
          * This parameter defaults to the cPanel user's locale.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: en
      - name: remote_address
        in: query
        description: |-
          The session's client IP address.

          **Note:**

          * If you run this function from the command line, this parameter is **required**.
          * This parameter defaults to the API caller's IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.0.1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_456"
  /Session/create_webmail_session_for_mail_user_check_password:
    get:
      tags:
      - Session
      - Webmail Sessions
      summary: Create Webmail session with credentials
      description: |-
        This function creates a temporary session with a password for the calling cPanel user to connect to Webmail.

        **Note:**

        * The cPanel user must own the Webmail account.
        * This function works like the UAPI Session::create_webmail_session_for_mail_user function with one exception. This function requires a correct password to create the Webmail session. If you use an incorrect password or attempt to connect to a suspended account, the login will fail.

        ### How to use this API

        After you successfully call this API, you will need to log in to [Webmail](https://go.cpanel.net/webmailinterface).
        To do this, send an HTTP POST to `https://$URL_AUTHTY:2096$token/login` with a message body of `session=$session` where:

        * `$URL_AUTHTY` represents the value from the `hostname` return.
          * If the `hostname` return value is `null`, enter the hostname of the server that answered the API function.
          * `$token` represents the value from the token return.
        * `$session` represents the value of the session return.

        For example, an HTTP POST may resemble the following:

        ```https://hostname.example.com:2096/cpsess2462418786/login```

        With a message body of:

        ```session=username:D7NiAZv1nf4bXeg9:CREATE_WEBMAIL_SESSION_FOR_MAIL_USER,728fb86a7df1cf20690c65f349ac3137```
      operationId: create_webmail_session_for_mail_user_check_password
      parameters:
      - name: domain
        in: query
        description: The domain for theÂ Webmail account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: login
        in: query
        description: The Webmail account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: password
        in: query
        description: The password for the Webmail account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: luggage12345
      - name: locale
        in: query
        description: |-
          TheÂ [locale](https://go.cpanel.net/localedocs)Â that the new session will use.

          **Note:**

          * You must **only** enter lowercase characters.
          * This parameter defaults to the cPanel user's locale.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: en
      - name: remote_address
        in: query
        description: |-
          The session's account's client IP address.

          **Note:**

          * If you run this function from the command line, this parameter is **required**.
          * This parameter defaults to the API caller's IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.0.1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_457"
  /Session/create_webmail_session_for_self:
    get:
      tags:
      - Session
      - Webmail Sessions
      summary: Create Webmail session for current user
      description: |-
        Create a temporary session to connect to WebmailÂ for the authenticated cPanel user.

        ### How to use this API

        After you successfully call this API, you will need to log in to [Webmail](https://go.cpanel.net/webmailinterface).
        To do this, send an HTTP POST to `https://$URL_AUTHTY:2096$token/login` with a message body of `session=$session` where:

        * `$URL_AUTHTY` represents the value from the `hostname` return.
          * If the `hostname` return value is `null`, enter the hostname of the server that answered the API function.
          * `$token` represents the value from the token return.
        * `$session` represents the value of the session return.

        For example, an HTTP POST may resemble the following:

        ```https://hostname.example.com:2096/cpsess2462418786/login```

        With a message body of:

        ```session=username:D7NiAZv1nf4bXeg9:CREATE_WEBMAIL_SESSION_FOR_MAIL_USER,728fb86a7df1cf20690c65f349ac3137```
      operationId: create_webmail_session_for_self
      parameters:
      - name: locale
        in: query
        description: |-
          TheÂ [locale](https://go.cpanel.net/localedocs)Â that the new session will use.

          Use UAPI `Locale::list_locales` to see a list of valid locales.

          **Note:**

          * You must **only** enter lowercase characters.
          * This parameter defaults to the cPanel user's locale.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: en
      - name: remote_address
        in: query
        description: |-
          The session's client IP address.

          **Note:**

          * If you run this function from the command line, this parameter is **required**.
          * This parameter defaults to the API caller's IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.0.1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_458"
  /SiteQuality/create_project:
    post:
      tags:
      - SiteQuality
      summary: Add domain to monitoring
      description: This function creates a Site Quality Monitoring project. A project
        bundles together one or more URLs with a shared domain for monitoring.
      operationId: SiteQuality-create_project
      parameters:
      - name: name
        in: query
        description: The name of the project to create.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MyProject
      - name: url
        in: query
        description: The URL to monitor.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: https://example.com
      - name: standard_alerting
        in: query
        description: |-
          Whether to enable standard email alerts.
            * `1` - Enable standard alerting.
            * `0` - Do not enable standard alerting.
            * `null` - Do not enable standard alerting.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          nullable: true
          example: 0
          enum:
          - 0
          - 1
      - name: system_type
        in: query
        description: The monitoring template to use for the project.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Website
          default: Website
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_459"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/create_site_quality_user:
    post:
      tags:
      - SiteQuality
      summary: Register cPanel user for monitoring
      description: This function creates a Site Quality Monitoring user account associated
        with a cPanel user account.
      operationId: SiteQuality-create_site_quality_user
      parameters:
      - name: email
        in: query
        description: The cPanel account's email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username@example.com
      - name: password
        in: query
        description: |-
          The account's password.

          **Note:**

          If no password is given, one is auto-generated.

          The system does not save this value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: An3xample!?
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_460"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/delete_site_quality_user:
    get:
      tags:
      - SiteQuality
      summary: Delete Site Quality Monitoring account
      description: This function initiates the deletion of the Site Quality Monitoring
        user account associated with a cPanel user account.
      operationId: SiteQuality-delete_site_quality_user
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_461"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/get_all_scores:
    post:
      tags:
      - SiteQuality
      summary: Return all projects' monitoring results
      description: This function returns information about the cPanel user's Site
        Quality Monitoring projects' most recent monitoring check results.
      operationId: SiteQuality-get_all_scores
      parameters:
      - name: verbose
        in: query
        description: |-
          Whether to enable verbose output.

          ** Note: **

          This includes information about the user's Site Quality Monitoring project's most recent results in each monitoring check subcategory.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          nullable: true
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_462"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/get_app_token:
    get:
      tags:
      - SiteQuality
      summary: Return koality authentication token
      description: This function returns the long-lived application token used to
        authenticate with <a href="https://go.cpanel.net/5k" target="_blank">koality's</a>
        authentication servers.
      operationId: SiteQuality-get_app_token
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_463"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/has_site_quality_user:
    get:
      tags:
      - SiteQuality
      summary: Validate monitoring account existence
      description: This function returns whether the cPanel user has an associated
        Site Quality Monitoring account.
      operationId: SiteQuality-has_site_quality_user
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_464"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/is_site_quality_user_enabled:
    get:
      tags:
      - SiteQuality
      summary: Validate monitoring account enablement
      description: This function verifies that <a href="https://go.cpanel.net/5k"
        target="_blank">koality</a> has enabled the cPanel user's Site Quality Monitoring
        account.
      operationId: SiteQuality-is_site_quality_user_enabled
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_465"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/reset_config:
    get:
      tags:
      - SiteQuality
      summary: Remove monitoring user from cPanel configuration
      description: |-
        This function will remove Site Quality Monitoring account data from the cPanel user's configuration.

        **Note:**
        * This function will prevent cPanel & WHM from automatically logging the user into their Site Quality Monitoring account.
        * This function does not delete the Site Quality Monitoring account from the <a href="https://go.cpanel.net/5k" target="_blank">koality</a> servers.
      operationId: SiteQuality-reset_config
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_466"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/send_activation_email:
    get:
      tags:
      - SiteQuality
      summary: Request activation email
      description: |-
        This function sends a Site Quality Monitoring activation email to the currently-authenticated Site Quality Monitoring user.

        **Note:**
        This email contains the Site Quality Monitoring activation code.
      operationId: SiteQuality-send_activation_email
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_467"
      x-cpanel-plugin: SiteQuality
  /SiteQuality/verify_code:
    get:
      tags:
      - SiteQuality
      summary: Validate activation code
      description: This function validates the activation code in a cPanel user's
        Site Quality Monitoring registration email.
      operationId: SiteQuality-verify_code
      parameters:
      - name: code
        in: query
        description: |-
          The user's Site Quality Monitoring activation code.

          **Note:**

          A user will receive an email with their activation code when they create a Site Quality Monitoring user account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "123456"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_468"
      x-cpanel-plugin: SiteQuality
  /SiteTemplates/list_site_templates:
    get:
      tags:
      - SiteTemplates
      - Site Publisher Management
      summary: Return available Site Publisher templates
      description: |-
        This function lists available templates for cPanel's [Site Publisher](https://go.cpanel.net/cpaneldocsSitePublisher) feature.

        * If you call this function as the `root` or `system` user, the function lists the `root` user's templates.
        * If you call this function as a reseller, the function lists the `root` user's templates **and** the reseller's templates.
        * If you call this function as a cPanel user, the function's output depends on the account's owner:
          * If the `root` user owns the account, the function only lists the `root` user's templates.
          * If a reseller owns the account, the function lists the `root` user's templates **and** that reseller's templates.

        **Note:**

          The template directory's location depends on whether the `root` user or a reseller owns the template:
          * `/var/cpanel/customizations/site_templates/` âÂ The `root` user's templates.
          * `/home/username/var/cpanel/reseller/site_templates/` â A reseller's templates, where `username` represents the reseller's username.
          * `/usr/local/cpanel/3rdparty/share/site_templates/` â cPanel-provided templates.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: list_site_templates
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_469"
  /SiteTemplates/list_user_settings:
    get:
      tags:
      - SiteTemplates
      - Site Publisher Management
      summary: Return Site Publisher websites' information
      description: |-
        This function lists information for the cPanel account's [Site Publisher](https://go.cpanel.net/cpaneldocsSitePublisher) websites.

        **Note:**

          To retrieve the list of Site Publisher website information, the function queries the `configurations.json` file in each domain's document root. For more information, read our [Guide to Site Publisher Templates](https://go.cpanel.net/SitePublisherTemplates) documentation.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: list_user_settings
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_470"
  /SiteTemplates/publish:
    get:
      tags:
      - SiteTemplates
      - Site Publisher Management
      summary: Add Site Publisher website
      description: |-
        This function publishes a [Site Publisher](https://go.cpanel.net/cpaneldocsSitePublisher) website.
        * This function uses the `/scripts/process_site_template` script to publish the Site Publisher website.
        * This function creates the `configurations.json` file in the specified directory.
          * This file contains the user-entered data for the Site Publisher website and uses `0700` permissions.
          * For more information, read our [Guide to Site Publisher Templates](https://go.cpanel.net/SitePublisherTemplates) documentation.
        * When users publish a Site Publisher website, the system first creates a backup tarball of the target directory's contents in the `/site_publisher/backups/` directory within the user's home directory.

        **Notes:**

          * When users publish a Site Publisher website, the system logs template information and the target directory to the `/usr/local/cpanel/logs/error_log` file.
          * The template directory's location depends on whether the `root` user or a reseller owns the template:
            * `/var/cpanel/customizations/site_templates/` â The `root` user's templates.
            * `/home/username/var/cpanel/reseller/site_templates/` â A reseller's templates, where `username` represents the reseller's username.
            * `/usr/local/cpanel/3rdparty/share/site_templates/` â cPanel-provided templates.

        **Important:**

          When you disable the [_Web Server_](https://go.cpanel.net/howtouseserverprofiles#roles) role, the system **disables** this function.
      operationId: publish
      parameters:
      - name: target  or  docroot
        in: query
        description: The directory that will contain the Site Publisher website.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/public_html
      - name: parameter_name
        in: query
        description: |-
          The template's variables and values.

          **Note:**

          * Use each variable's name as a parameter name for a parameter and value pair.
          * The template that you specify determines the values to define.
          * You **must** include the appropriate data for the selected template. If you use a cPanel-provided template, read our [Guide to Site Publisher Templates](https://go.cpanel.net/guide-to-site-publisher-templates-template-files) documentation for more information. If you use a third-party template, consult that template's documentation or its `meta.json` file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: My Website
      - name: path
        in: query
        description: |-
          The directory that contains the template's source directory.
          * `/var/cpanel/customizations/site_templates/` â The `root` user's templates.
          * `/home/username/var/cpanel/reseller/site_templates/` â A reseller's templates, where `username` represents the reseller's username.
          * `/usr/local/cpanel/3rdparty/share/site_templates/` â cPanel-provided templates.

          **Note:**

          You **must** include either the `source` parameter **or** the `path` and `template` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /usr/local/cpanel/3rdparty/share/site_templates/
      - name: source
        in: query
        description: |-
          The absolute path to a template directory that exists in one of the following directories:

          * `/var/cpanel/customizations/site_templates/` â The `root` user's templates.
          * `/home/username/var/cpanel/reseller/site_templates/` â A reseller's templates, where `username` represents the reseller's username.
          * `/usr/local/cpanel/3rdparty/share/site_templates/` â cPanel-provided templates.

          If you do not specify a value, the system uses the path and template values to determine the template's source directory.

          **Note:**

           You **must** include either the `source` parameter **or** the `path` and `template` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /usr/local/cpanel/3rdparty/share/site_templates/under_construction
      - name: template
        in: query
        description: |-
          The template's directory's name.

          **Note:**

          You **must** include either the `source` parameter **or** the `path` and `template` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: under_construction
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_471"
  /Sitejet/add_api_token:
    get:
      tags:
      - Sitejet
      summary: Add an existing Sitejet API token.
      description: "This function adds an existing Sitejet API token to a cPanel user.\n\
        \n**Note:** \n\nYou can create a Sitejet API token with the `Sitejet:create_account`\
        \ function."
      operationId: add_sitejet_api_token
      parameters:
      - name: api_token
        in: query
        description: The Sitejet API token to add.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: hexadecimal
          example: d35d8ea651007ccd25f96486cdcdXXXX
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_472"
  /Sitejet/create_account:
    get:
      tags:
      - Sitejet
      summary: Generate a Sitejet API key.
      description: This function creates a Sitejet API token for a cPanel account.
      operationId: create_sitejet_account
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_473"
  /Sitejet/create_restore_point:
    get:
      tags:
      - Sitejet
      summary: Create a restore point.
      description: This function creates a restore point for a domain's document root
        and removes the domain's files.
      operationId: create_restore_point
      parameters:
      - name: domain
        in: query
        description: A cPanel account's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_474"
  /Sitejet/create_website:
    get:
      tags:
      - Sitejet
      summary: Create Sitejet domain ID
      description: |-
        This function creates a Sitejet ID for the specified domain.

        **Note:**

        A unique Sitejet ID is assigned to each domain on the cPanel account.
      operationId: create_sitejet_website
      parameters:
      - name: company
        in: query
        description: The name of the company the website represents.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPanel
      - name: domain
        in: query
        description: A cPanel account's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: assignTo
        in: query
        description: Assign website to other user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: SallySmith@example.com
      - name: city
        in: query
        description: The city where the company or website owner is located.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Capitol City
      - name: country
        in: query
        description: The country where the company or website owner is located.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166
          example: US
      - name: email
        in: query
        description: The email address of the website owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: JohnSmith@example.com
      - name: firstname
        in: query
        description: The first name of the website owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: John
      - name: language
        in: query
        description: The language to use for the Sitejet Website Builder.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO-639
          example: en
      - name: lastname
        in: query
        description: The last name of the website owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Smith
      - name: metadata
        in: query
        description: Additional metadata for the website.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: encoded JSON
          example: "{\"Attribute1\":9,\"Attribute2\":3,\"Attribute3\":5}"
      - name: note
        in: query
        description: Additional notes about the website.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: This is my website for my business.
      - name: phone
        in: query
        description: The phone number of the company or website owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 000-123-4567
      - name: street
        in: query
        description: The street address of the company or website owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 1234 Main St
      - name: title
        in: query
        description: The website title.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Example Website
      - name: zip
        in: query
        description: The zip code where the company or website owner is located.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "99999"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_475"
  /Sitejet/get_all_user_sitejet_info:
    get:
      tags:
      - Sitejet
      summary: Return Sitejet domains
      description: This function returns the Sitejet domains' information for the
        cPanel account.
      operationId: get_all_user_sitejet_info
      parameters:
      - name: domain
        in: query
        description: The single domain to return Sitejet information.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_476"
  /Sitejet/get_api_token:
    get:
      tags:
      - Sitejet
      summary: Return Sitejet API token
      description: This function returns the cPanel account's Sitejet API token.
      operationId: get_sitejet_api_token
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_477"
  /Sitejet/get_preview_url:
    get:
      tags:
      - Sitejet
      summary: Return Sitejet preview URL
      description: This function returns a Sitejet website's preview URL.
      operationId: get_sitejet_preview_url
      parameters:
      - name: websiteId
        in: query
        description: The Sitejet website ID for the domain.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 123456
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_478"
  /Sitejet/get_sso_link:
    get:
      tags:
      - Sitejet
      summary: Return Sitejet SSO URL
      description: This function returns a Sitejet website's SSO URL.
      operationId: get_sitejet_sso_link
      parameters:
      - name: domain
        in: query
        description: The cPanel account's Sitejet domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: referrer
        in: query
        description: The cPanel interface referral URL.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: https://example.com:2083/cpsess##########/frontend/jupiter/sitejet/index.html%23
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_479"
  /Sitejet/get_templates:
    get:
      tags:
      - Sitejet
      summary: Return Sitejet templates
      description: This function fetches the list of available Sitejet templates.
      operationId: get_sitejet_templates
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_480"
      deprecated: true
  /Sitejet/restore_document_root:
    get:
      tags:
      - Sitejet
      summary: Restore a domain from the restore point.
      description: This function reverts a document root to the restore point.
      operationId: restore_document_root
      parameters:
      - name: domain
        in: query
        description: A cPanel account's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_481"
  /Sitejet/set_template:
    get:
      tags:
      - Sitejet
      summary: Update Sitejet template
      description: This function sets a Sitejet website's template.
      operationId: set_sitejet_template
      parameters:
      - name: domain
        in: query
        description: A cPanel account's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: templateId
        in: query
        description: The Sitejet template's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "12345"
      - name: templateName
        in: query
        description: The Sitejet template name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: A great template
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_482"
      deprecated: true
  /Sitejet/start_publish:
    get:
      tags:
      - Sitejet
      summary: Publish Sitejet domain
      description: This function publishes a domain's Sitejet website.
      operationId: start_publish_sitejet
      parameters:
      - name: domain
        in: query
        description: The domain for the Sitejet website.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: cleanup
        in: query
        description: |-
          Whether to cleanup the domain's `document_root` directory during the publication process.
          * `1` â Remove previous files in domain's `document_root` directory during the publication process.
          * `0` â Do **not** remove any files in domain's `document_root` directory during the publication process.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_483"
  /SpamAssassin/clear_spam_box:
    get:
      tags:
      - SpamAssassin
      - Spam Management
      summary: Delete spam box contents
      description: |-
        This function clears the spam box of all its contents for all email accounts.

        **Important:**

        This function deletes the Spam Box folder contents for every email address on the account, which includes the system user email account.
      operationId: clear_spam_box
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_484"
  /SpamAssassin/get_symbolic_test_names:
    get:
      tags:
      - SpamAssassin
      - Spam Management
      summary: Return SpamAssassinâ¢ symbolic test scores
      description: This function lists the Apache SpamAssassinâ¢ scores for each symbolic
        test.
      operationId: get_symbolic_test_names
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_485"
  /SpamAssassin/get_user_preferences:
    get:
      tags:
      - SpamAssassin
      - Spam Management
      summary: Return SpamAssassinâ¢ settings
      description: |-
        This function lists the Apache SpamAssassinâ¢ settings for the account.

        **Note:**

        Additional customizations may appear in the returns. Form more information read the [Apache SpamAssassinâ¢ configuration file](https://spamassassin.apache.org/full/3.1.x/doc/Mail_SpamAssassin_Conf.html#user_preferences) documentation.
      operationId: get_user_preferences
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_486"
  /SpamAssassin/update_user_preference:
    get:
      tags:
      - SpamAssassin
      - Spam Management
      summary: Update SpamAssassinâ¢ settings
      description: |-
        This function sets the Apache SpamAssassinâ¢ settings for the account.

        **Note:**

        Additional customizations may appear in the function's return. For more information,
        read the [Apache SpamAssassin configuration file documentation](https://spamassassin.apache.org/full/3.1.x/doc/Mail_SpamAssassin_Conf.html#user_preferences).
      operationId: update_user_preference
      parameters:
      - name: preference
        in: query
        description: |-
          The variable that you want to manipulate.

          * `score`
          * `required_score`
          * `whitelist_from`
          * `blacklist_from`
          * A [custom SpamAssassin variable](https://spamassassin.apache.org/full/3.1.x/doc/Mail_SpamAssassin_Conf.html#user_preferences).

          **Important:**

          * You can **only** choose one of these possible values per call.
          * If you enter a value for the `preference` parameter, but you do **not** define a value for the `value` parameter, the function will remove any previous settings.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: score
      - name: value
        in: query
        description: |-
          The value for the preference of the variable that you want to manipulate.

          * A valid SpamAssassin "`TEST_NAME SCORE`" value when the value of the `preference` parameter is `score`, where:

              * `TEST_NAME` represents the symbolic name of the test. For list of symbolic test names, run the UAPI `SpamAssassin::get_symbolic_test_names` function.
              * `SCORE` represents the floating-point value that SpamAssassin assigns to the mail when the test result is true. The score value must be greater than `0`, and less than `1000`.

          * A valid floating-point number if the value of the `preference` parameter is `required_score`.
          * A valid email address if the value of the `preference` parameter is `whitelist_from` or `blacklist_from`.
          * A [custom SpamAssassin variable](https://spamassassin.apache.org/full/3.1.x/doc/Mail_SpamAssassin_Conf.html#user_preferences) value.

          **Note:**

          To enter multiple values, increment the parameter name. For example, use the `value-0` and `value-1` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ACT_NOW_CAPS 5.0
        examples:
          multiple:
            summary: Define multiple variable values.
            value: value-0=ACT_NOW_CAPS 5.0 value-1=INVALID_DATE 3.2
          single:
            summary: Define a single variable value.
            value: ACT_NOW_CAPS 5.0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_487"
  /Stats/get_bandwidth:
    get:
      tags:
      - Stats
      - Domain Statistics
      summary: Return bandwidth statistics for all domains
      description: |-
        This function retrieves a list of bandwidth records for the domains on a cPanel account.

        **Note:**

        This function also returns the bandwidth use of a [distributed cPanel account](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-glossary#distributed-cpanel-account).

        **Warning:**

        This function requires the _Bandwidth Stats_ feature. To enable this feature, use WHM's [_Feature Manager_](https://go.cpanel.net/whmdocsFeatureManager)
        interface (_WHM >> Home >> Packages >> Feature Manager_).
      operationId: get_bandwidth
      parameters:
      - name: timezone
        in: query
        description: |-
          The timezone in which to report the data, in [Olson tz format](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).

          **Note:**

          This parameterÂ defaults to the server's timezone.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: America/Chicago
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_488"
  /Stats/get_site_errors:
    get:
      tags:
      - Stats
      - Domain Statistics
      summary: Return specified domain access log
      description: This functionÂ returns entries from a domain's error log.
      operationId: get_site_errors
      parameters:
      - name: domain
        in: query
        description: The domain for which to return error log entries.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: log
        in: query
        description: |-
          The [Apache log file](https://go.cpanel.net/cpanellogfiles) to query.
          This parameter defaults toÂ error.

          * `error` - The `/var/log/apache2/error_log` file.
          * `suexec` - The `/var/log/apache2/suexec_log` file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: suexec
          enum:
          - error
          - suexec
      - name: maxlines
        in: query
        description: The number of lines to retrieve from the error log.
        required: false
        style: form
        explode: true
        schema:
          maximum: 5000
          minimum: 1
          type: integer
          example: 250
          default: 300
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_489"
  /Stats/list_sites:
    get:
      tags:
      - Stats
      - Domain Statistics
      summary: Return Analog statistics for all domains
      description: This function displays the Analog statistics for the domains on
        a cPanel account.
      operationId: list_sites
      parameters:
      - name: engine
        in: query
        description: |-
          The statistics engine.
          * `webalizer`
          * `analog`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: webalizer
          enum:
          - webalizer
          - analog
      - name: traffic
        in: query
        description: |-
          The web traffic type.
           * `http`
           * `ftp`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: http
          default: http
          enum:
          - http
          - ftp
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_490"
  /Stats/list_stats_by_domain:
    get:
      tags:
      - Stats
      - Domain Statistics
      summary: Return Analog statistics for specified domain
      description: This function returns a domain's Analog statistics.
      operationId: list_stats_by_domain
      parameters:
      - name: domain
        in: query
        description: The domain from which to retrieve statistics.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: engine
        in: query
        description: The statistics engine. `analog` is the only possible value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: analog
          enum:
          - analog
      - name: ssl
        in: query
        description: |-
          Whether to return statistics from SSL requests.
            * `1` - Return statistics for SSL requests.
            * `0` - Return statistics for non-SSL requests.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_491"
  /StatsBar/get_stats:
    get:
      tags:
      - StatsBar
      - Resource Usage and Statistics
      summary: Return cPanel account statistics
      description: This function retrieves a cPanel account's statistics.
      operationId: get_stats
      parameters:
      - name: display
        in: query
        description: |-
          A pipe-delimited list of the account's statistics.

          <details>
            <summary>Click for a list of available display parameters.</summary>

            * `addondomains` â Information about the account's addon domains.
            * `apacheversion` â The server's Apache version.
            * `autoresponders` â Information about the account's auto-responders.
            * `bandwidthusage` â Information about the account's bandwidth usage.
            * `cachedlistdiskusage` â The amount of cached mailing list disk space the account currently uses.
            * `cachedmysqldiskusage` â The amount of cached disk space that the account's MySQLÂ® databases currently use.
            * `cachedpostgresdiskusage` â The amount of cached disk space that the account's PostgreSQL databases use.
            * `cpanelversion` â The server's cPanel version.
            * `dedicatedip` â Account websites that use dedicated IP addresses.
            * `diskusage` â Information the account's disk space usage.
            * `emailaccounts` â Information about the account's email accounts.
            * `emailfilters` â Information the account's email filters.
            * `emailforwarders` â Information about the account's forwarders.
            * `fileusage` â Information about the account's file usage.
            * `ftpaccounts` â Information about the account's FTP accounts.
            * `hostingpackage` â The account's hosting package.
            * `hostname` â The server's hostname.
            * `kernelversion` â The operating system's kernel version.
            * `localip` â Account websites that use local IP addresses.
            * `machinetype` â The type of operating system that the server uses.
            * `mailinglists` â Information the account's mailing lists.
            * `mysqldatabases` â The number of MySQL databases the account possesses.
            * `mysqldiskusage` â The amount of disk space that the account's MySQL databases use.
            * `mysqlversion` â The server's MySQL version.
            * `operatingsystem` â The server's operating system.
            * `parkeddomains` â Information about the account's parked domains (aliases).
            * `perlpath` â The Perl binary's absolute path.
            * `perlversion` â The server's Perl version.
            * `phpversion` â The server's PHP version.
            * `postgresqldatabases` â The number of PostgreSQL databases the cPanel account possesses.
            * `postgresdiskusage` â The amount of disk space that the cPanel account's PostgreSQL databases use.
            * `sendmailpath` â The path to the system's sendmail binary.
            * `sharedip` â Any of the account's websites that use a shared IP address.
            * `shorthostname` â The short version of your server's hostname.
            * `sqldatabases` â Information about the all of the account's SQL databases.
            * `subdomains` â Information about the account's subdomains.
            * `theme` â The account's current theme.
          </details>

          **Note:**

          * This function may require URI-encode format (`%7C`) or quotes (`"`) in some
          contexts, such as the command line tool.
          * Some display parameters may be unavailable based on the server's configuration.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: bandwidthusage|diskusage
      - name: infinityimg
        in: query
        description: The absolute file path to an alternative infinity symbol image.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: /home/example/infinity.png
      - name: infinitylang
        in: query
        description: A phrase to represent infinity that the locales system can use.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: infinity
      - name: rowcounter
        in: query
        description: |-
          The type of row.

          * `odd`
          * `even`
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: even
      - name: warninglevel
        in: query
        description: The minimum level at which to return warnings.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          nullable: true
          example: 87
      - name: warnings
        in: query
        description: |-
          Whether to return all results with a warning.

          * `1` âÂ Return only warnings that **exceed** the `warninglevel` parameter's
          value.
          * `0` âÂ Return all results.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          nullable: true
          example: 0
          enum:
          - 1
          - 0
      - name: warnout
        in: query
        description: |-
          Whether to display results with a value ofÂ `100%`.

          * `1`Â âÂ Display results with a value of `100%`.
          * `0` âÂ Hide results with a value of `100%`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          nullable: true
          example: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_492"
  /StatsManager/get_configuration:
    get:
      tags:
      - StatsManager
      - Weblog Settings
      summary: Returns weblog analyzers' configuration
      description: |-
        This function lists the configuration of the web log anayzers for each domain on the cPanel account.

        **Important:**

        When you disable the WebServer role the system disables this function. For more information, read our How to Use [Server Profiles documentation](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/).

        **Note**

        Additional web log analyzer configuration such as if the user can edit their own configuration is provided in the metadata section of the return.
      operationId: stats_manager_get_configuration
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_493"
  /StatsManager/save_configuration:
    post:
      tags:
      - StatsManager
      - Weblog Settings
      summary: Save current user's weblog analyzers configuration
      description: |-
        This function saves the users choice about which web log anayzers are enabled for each domain on their cPanel users account.
        If the log anayzers are controlled by the reseller or root account, the user cannot manage which log analyzers are enabled or disabled.

        **Important:**

        When you disable the WebServer role the system disables this function. For more information, read our How to Use Server Profiles documentation.
      operationId: stats_manager_save_configuration
      requestBody:
        description: List of domains and what web log analyzers to change.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatsManager_save_configuration_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_494"
  /SubDomain/addsubdomain:
    get:
      tags:
      - SubDomain
      summary: Create subdomain
      description: |-
        This function creates a subdomain.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: addsubdomain
      parameters:
      - name: domain
        in: query
        description: The subdomain name to create.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: subdomain
      - name: rootdomain
        in: query
        description: The domain on which to create the new subdomain.  The domain
          **must** already exist on the cPanel account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: canoff
        in: query
        description: |-
          Whether to use a canonical name (CNAME) in the [ApacheÂ® configuration for self-referential URLs](https://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname).
          * `1` - Use the CNAME.
          * `0` - Do **not** use the CNAME.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: dir
        in: query
        description: |-
          The subdomain's document `root` within the home directory, given as a valid directory path relative to the user's home directory.

          This value defaults to the user's home directory `/public_html/` path.

          **Note:**

          If the *Restrict document roots to public_html* value is set to *Off* in WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings#domains) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*), this parameter defaults to the `/username/` path. For example, the `username` user's subdomain `example` would default to the `/home/username/example` path.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /public_html/directory_name
      - name: disallowdot
        in: query
        description: |-
          Whether to remove the dot (`.`) characters from the `domain` value.
          * `1` - Remove dots from the domain.
          * `0` - Do **not** remove dots from the domain.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_495"
  /Team/add_roles:
    get:
      tags:
      - Team Users
      summary: Add roles to a team user
      description: |-
        This function adds roles to a team user.

        **Note:**

          This action may result in team users gaining access to team owner level privileges.
      operationId: add_roles
      parameters:
      - name: role
        in: query
        description: "The role or roles to add to the team user. Current roles include\
          \ admin, database, email, web."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_496"
  /Team/add_team_user:
    get:
      tags:
      - Team Users
      summary: Add a team user
      description: |-
        This function creates and adds a new team user.

        **Note:**

          This action may result in team users gaining access to team owner level privileges.
      operationId: add_team_user
      parameters:
      - name: email1
        in: query
        description: The contact email for the new team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser@example.com
      - name: user
        in: query
        description: The username of the team user. Follows cPanel standards.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      - name: activation_email
        in: query
        description: |-
          Send an email to the team user that allows them to set their own password.
          * `1` - Enabled.

          **Note:**

           * YouÂ mustÂ pass either the `password` or `activation_email` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
      - name: email2
        in: query
        description: The secondary email for the new team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: teamuser-backup@example.com
      - name: expire_date
        in: query
        description: "The epoch time on which the team user account expires, or the\
          \ offset from the current time, in days. Integers are treated as Unix Epoch\
          \ Time unless followed by 'days'."
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/expire_date"
        examples:
          offset:
            value: 120days
          unix-timestamp:
            value: 1649948169
      - name: expire_reason
        in: query
        description: The reason for expiration.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: teamUser gave a two week notice.
      - name: notes
        in: query
        description: Notes about the new team user. This field should not contain
          private information. Maximum of 100 characters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: This is a note about teamuser
      - name: password
        in: query
        description: |-
          The password to set for the new team user.

          **Note:**

           * YouÂ mustÂ pass either the `password` or `activation_email` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: securepassword
      - name: roles
        in: query
        description: "A comma-separated list of roles assigned to the new team user.\
          \ Current roles include admin, database, email, web."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "email,database"
      - name: services.email.enabled
        in: query
        description: |-
          Whether to create an email subaccount for the team user. A subaccount is always created for a team user, but it does not have any associated service subaccounts by default.

          * `1` - Create an email subaccount.
          * `0` - **Do Not** create an email subaccount.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.email.quota
        in: query
        description: |-
          The maximum amount of disk space, in megabytes (MB), allocated to the team user's email account.

          * `0` or `unlimited` - The subaccount has unlimited disk space.

          This value defaults to the defined system value.

          **Note:**

          This value **cannot** be larger than the system's maximum email quota.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "500"
      - name: services.ftp.enabled
        in: query
        description: |-
          Whether to create an FTP subaccount for the team user. A subaccount is always created for a team user, but it does not have any associated service subaccounts by default.

          * `1` - Create an FTP subaccount.
          * `0` - **Do Not** create an FTP subaccount.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.ftp.homedir
        in: query
        description: |-
          The team user's FTP home directory, relative to the cPanel account's home directory.

          **Note:**

          * This parameter is **required** if you enabled the `services.ftp.homedir` parameter.
          * The directory **must** exist.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /Teamusername
      - name: services.webdisk.enabled
        in: query
        description: |-
          Whether to create a Web Disk subaccount for the team user. A subaccount is always created for a team user, but it does not have any associated service subaccounts by default.

          * `1` - Create a Web Disk subaccount.
          * `0` - **Do Not** create a Web Disk subaccount.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.enabledigest
        in: query
        description: |-
          Whether to enable the Web Disk Digest Authentication.

          * `1` - Enabled.
          * `0` - Disabled.

          **Note:**

          * **Only** enable Digest Authentication for clients that require additional compatibility support on
            certain versions of WindowsÂ® operating systems. This compatibility support is **only** required on servers
            that use a self-signed certificate for the `cpsrvd` and `cpdavd` daemons.
          * We recommend that you do **not** use Digest Authentication.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.homedir
        in: query
        description: |-
          The team user's Web Disk home directory, relative to the cPanel account's home directory.

          **Note:**

          This parameter is **required** if you enable the `services.webdisk.enabled` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /Teamusername
      - name: services.webdisk.perms
        in: query
        description: |-
          The team user's file permissions for its Web Disk home directory.

          * `ro` - Read-only permissions.
          * `rw` - Read and write permissions.

          **Note:**

           The `services.webdisk.homedir` parameter determines the team user's Web Disk home directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: rw
          default: rw
      - name: services.webdisk.private
        in: query
        description: |-
          Whether to set the directory's permissions to public or private.

          * `1` - Private (`0700`).
          * `0` - Public (`0755`).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_497"
  /Team/cancel_expire:
    get:
      tags:
      - Team Users
      summary: Stop a team user from expiring
      description: This function stops a team user from expiring.
      operationId: cancel_expire
      parameters:
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamUser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_498"
  /Team/edit_team_user:
    get:
      tags:
      - Team Users
      summary: Edit a team user
      description: This function modifies a team user.
      operationId: edit_team_user
      parameters:
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamUser
      - name: add_role
        in: query
        description: The role or roles to add to the team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: database
      - name: email1
        in: query
        description: The primary contact email address to set for the team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: teamuser@example.com
      - name: email2
        in: query
        description: The secondary contact email address to set for the team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: teamuser@example.com
      - name: expire_reason
        in: query
        description: The reason for expiration.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: teamUser gave a two week notice.
      - name: notes
        in: query
        description: Notes about the new team user. This field should not contain
          private information.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: This is a note about teamUser
      - name: password
        in: query
        description: The password to set for the team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: securepassword
      - name: remove_role
        in: query
        description: The role or roles to remove from the team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: database
      - name: services.email.enabled
        in: query
        description: |-
          Whether to create or remove an email subaccount for the team user. A subaccount is always created for a team user, but it does not have any associated service subaccounts by default.

          * `1` - Create and associate an email subaccount.
          * `0` - Remove any associated email subaccounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.email.quota
        in: query
        description: |-
          The maximum amount of disk space, in megabytes (MB), allocated to the team user's email account.

          * `0` or `unlimited` - The subaccount has unlimited disk space.

          This value defaults to the defined system value.

          **Note:**

          This value **cannot** be larger than the system's maximum email quota.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "500"
      - name: services.ftp.enabled
        in: query
        description: |-
          Whether to create or remove an FTP subaccount for the team user. A subaccount is always created for a team user, but it does not have any associated service subaccounts by default.

          * `1` - Create and associate an FTP subaccount.
          * `0` - Remove any associated FTP subaccounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.ftp.homedir
        in: query
        description: |-
          The team user's FTP home directory, relative to the cPanel account's home directory.

          **Note:**

          * This parameter is **required** if you enabled the `services.ftp.homedir` parameter.
          * The directory **must** exist.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /Teamusername
      - name: services.webdisk.enabled
        in: query
        description: |-
          Whether to create or remove a Web Disk subaccount for the team user. A subaccount is always created for a team user, but it does not have any associated service subaccounts by default.

          * `1` - Create and associate a Web Disk subaccount.
          * `0` - Remove any associated Web Disk subaccounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.enabledigest
        in: query
        description: |-
          Whether to enable the Web Disk Digest Authentication.

          * `1` - Enabled.
          * `0` - Disabled.

          **Note:**

          * **Only** enable Digest Authentication for clients that require additional compatibility support on
            certain versions of WindowsÂ® operating systems. This compatibility support is **only** required on servers
            that use a self-signed certificate for the `cpsrvd` and `cpdavd` daemons.
          * We recommend that you do **not** use Digest Authentication.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.homedir
        in: query
        description: |-
          The team user's Web Disk home directory, relative to the cPanel account's home directory.

          **Note:**

          This parameter is **required** if you enable the `services.webdisk.enabled` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /Teamusername
      - name: services.webdisk.perms
        in: query
        description: |-
          The team user's file permissions for its Web Disk home directory.

          * `ro` - Read-only permissions.
          * `rw` - Read and write permissions.

          **Note:**

           The `services.webdisk.homedir` parameter determines the team user's Web Disk home directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: rw
          default: rw
      - name: services.webdisk.private
        in: query
        description: |-
          Whether to set the directory's permissions to public or private.

          * `1` - Private (`0700`).
          * `0` - Public (`0755`).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: set_expire
        in: query
        description: The epoch time the team user account expires on or the offset
          in days.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/set_expire"
        examples:
          offset:
            value: 120days
          unix-timestamp:
            value: 1649948169
      - name: set_role
        in: query
        description: The role or roles to set for the team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: email
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_499"
  /Team/get_team_users_with_roles_count:
    get:
      tags:
      - Team Users
      summary: Get number of team users with roles
      description: This function returns the current and maximum number of team users
        with roles.
      operationId: get_team_users_with_roles_count
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_500"
  /Team/list_team:
    get:
      tags:
      - Team Users
      summary: List Team Users
      description: |-
        This function lists the team users connected to a cPanel account.
        This list is given in an array by default, but can be given in a hash.
      operationId: list_team
      parameters:
      - name: format
        in: query
        description: The format in which the team data is listed.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: array
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_501"
  /Team/password_reset_request:
    get:
      tags:
      - Team Users
      summary: Sends a password reset request link to team user.
      description: This function enables a team user to reset the password by sending
        a password reset request link.
      operationId: password_reset_request
      parameters:
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_502"
  /Team/reinstate_team_user:
    get:
      tags:
      - Team Users
      summary: Reinstate a team user
      description: This function reinstates a team user by removing any suspended
        or expired statuses. The reason field is also cleared.
      operationId: reinstate_team_user
      parameters:
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamUser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_503"
  /Team/remove_roles:
    get:
      tags:
      - Team Users
      summary: Remove roles from a team user
      description: This function removes roles from a team user.
      operationId: remove_roles
      parameters:
      - name: role
        in: query
        description: The role or roles to remove from the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_504"
  /Team/remove_team_user:
    get:
      tags:
      - Team Users
      summary: Remove a team user
      description: This function removes a team user.
      operationId: remove_team_user
      parameters:
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_505"
  /Team/set_contact_email:
    get:
      tags:
      - Team Users
      summary: Set a contact email address for a team user
      description: This function sets or changes primary and secondary email addresses.
      operationId: set_team_user_contact_email
      parameters:
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamUser
      - name: email1
        in: query
        description: The primary contact email address to set for the team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: email1@example.com
      - name: email2
        in: query
        description: The secondary contact email address to set for the team user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: email2@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_506"
  /Team/set_expire:
    get:
      tags:
      - Team Users
      summary: Set a team user to expire
      description: |-
        This function expires a team user after a specified amount of time.

        If the team user already has an expire date set, it's replaced with a new date and reason.
      operationId: set_expire
      parameters:
      - name: date
        in: query
        description: "The epoch time on which the team user account expires, or the\
          \ offset from the current time, in days. Integers are treated as Unix Epoch\
          \ Time unless followed by 'days'."
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/date"
        examples:
          offset:
            value: 120days
          unix-timestamp:
            value: 1649948169
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamUser
      - name: reason
        in: query
        description: The reason for expiration.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: teamUser gave a two week notice.
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_507"
  /Team/set_locale:
    get:
      tags:
      - Team Users
      summary: Set locale for a team user
      description: This function sets locale for a team user.
      operationId: Team::set_locale
      parameters:
      - name: locale
        in: query
        description: The new locale for the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: es_es
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_508"
  /Team/set_notes:
    get:
      tags:
      - Team Users
      summary: Set notes for a team user
      description: This function replaces the current notes field with new text.
      operationId: set_team_user_notes
      parameters:
      - name: notes
        in: query
        description: The content of the notes field.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamUser is a good employee
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamUser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_509"
  /Team/set_password:
    get:
      tags:
      - Team Users
      summary: Set password for a team user
      description: This function replaces the current password with a new one.
      operationId: set_team_user_password
      parameters:
      - name: password
        in: query
        description: The password to set for the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: securepassword
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_510"
  /Team/set_roles:
    get:
      tags:
      - Team Users
      summary: Set roles for a team user
      description: |-
        This function sets roles for a team user.

        **Note:**

          This action may result in team users gaining access to team owner level privileges.
      operationId: set_roles
      parameters:
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      - name: role
        in: query
        description: "The role or roles to set for the team user. Current roles include\
          \ admin, database, email, web."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: database
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_511"
  /Team/suspend_team_user:
    get:
      tags:
      - Team Users
      summary: Suspend a team user
      description: This function immediately suspends a team user.
      operationId: suspend_team_user
      parameters:
      - name: user
        in: query
        description: The username of the team user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: teamuser
      - name: reason
        in: query
        description: The reason for suspension.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: teamuser is on vacation
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_512"
  /TeamRoles/list_feature_descriptions:
    get:
      tags:
      - Team Roles
      summary: List all role feature descriptions
      description: This function gives a list of all team roles and their included
        features.
      operationId: list_feature_descriptions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_513"
  /Themes/get_theme_base:
    get:
      tags:
      - Themes
      - Theme Settings
      summary: Return current theme
      description: This function is deprecated and does not return useful output.
      operationId: get_theme_base
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_514"
      deprecated: true
  /Themes/list:
    get:
      tags:
      - Themes
      - Theme Settings
      summary: Return available themes
      description: |-
        This function lists available themes.

        **Note:**

          The `/usr/local/cpanel/scripts/modify_accounts` script allows you to modify the style and theme for many or all accounts on the server. For more information, read our [The modify_accounts Script](https://go.cpanel.net/modifyaccounts) documentation.
      operationId: Themes::list
      parameters:
      - name: show_mail_themes
        in: query
        description: |-
          Whether to list the account's mail themes.
          * `1` â List mail themes.
          * `0` â Do **not** list mail themes.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_515"
  /Themes/update:
    get:
      tags:
      - Themes
      - Theme Settings
      summary: Update current theme
      description: |-
        This function applies a new theme to the cPanel interface.

        **Note:**

          The `/usr/local/cpanel/scripts/modify_accounts` script allows you to modify the theme for many or all accounts on the server. For more information, read our [The modify_accounts Script](https://go.cpanel.net/modifyaccounts) documentation.
      operationId: Themes::update
      parameters:
      - name: theme
        in: query
        description: The theme name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_516"
  /Tokens/create_full_access:
    get:
      tags:
      - Tokens
      - API Token Management
      summary: Create cPanel API token
      description: |-
        This function creates a new API token with full access to all of a cPanel account's features.

        **Note:**

        The token **only** grants access to the features that the account has access to. For example,
        if you disable the [*File Manager*](https://go.cpanel.net/cpaneldocsFileManager) feature, the
        token can't access it.
      operationId: create_full_access
      parameters:
      - name: name
        in: query
        description: |-
          The API token's name.

          **Note:**

          The name may **only** contain alphanumeric characters, dashes (`-`), and underscores (`_`).
        required: true
        style: form
        explode: true
        schema:
          maxLength: 50
          type: string
          example: example
      - name: expires_at
        in: query
        description: |-
          The API token's expiration time.

          **Important:**

          * When an API token expires the system doesÂ **not** delete it. You **must** manually delete expired API tokens.
          * If you do not use this parameter, the API token will **not** expire.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1609372800
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_517"
  /Tokens/list:
    get:
      tags:
      - Tokens
      - API Token Management
      summary: Return cPanel API tokens
      description: This function returns a list of a cPanel account's API tokens.
      operationId: Tokens-list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_518"
  /Tokens/rename:
    get:
      tags:
      - Tokens
      - API Token Management
      summary: Update cPanel API token's name
      description: This function renames a cPanel account's existing API token.
      operationId: rename
      parameters:
      - name: name
        in: query
        description: The API token's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      - name: new_name
        in: query
        description: |-
          The new name for the API token.

          **Note:**

          The name may only contain alphanumeric characters, dashes (`-`), and underscores (`_`).
        required: true
        style: form
        explode: true
        schema:
          maxLength: 50
          type: string
          example: newexample
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_519"
  /Tokens/revoke:
    get:
      tags:
      - Tokens
      - API Token Management
      summary: Remove cPanel API token
      description: This function removes an API token from a cPanel account.
      operationId: revoke
      parameters:
      - name: name
        in: query
        description: The API token to remove.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_520"
  /TwoFactorAuth/generate_user_configuration:
    get:
      tags:
      - TwoFactorAuth
      - Two-Factor Settings
      summary: Create 2FA authentication code
      description: This function generates an authentication code to enable configuration
        of two-factor authentication.
      operationId: generate_user_configuration
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_521"
  /TwoFactorAuth/get_team_user_configuration:
    get:
      tags:
      - TwoFactorAuth
      - Two-Factor Settings
      summary: Return team user 2FA config
      description: "This function retrieves a [team user's](https://go.cpanel.net/manage-team)\
        \ configuration settings for two-factor authentication."
      operationId: get_team_user_configuration
      parameters:
      - name: team_user
        in: query
        description: |-
          The team user's username.

          **Note:**

          The username will always precede the cPanel account's primary domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_522"
  /TwoFactorAuth/get_user_configuration:
    get:
      tags:
      - TwoFactorAuth
      - Two-Factor Settings
      summary: Return cPanel account 2FA config
      description: This function retrieves the cPanel account user's configuration
        settings for two-factor authentication.
      operationId: get_user_configuration
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_523"
  /TwoFactorAuth/remove_user_configuration:
    get:
      tags:
      - TwoFactorAuth
      - Two-Factor Settings
      summary: Remove 2FA config
      description: This function removes the user from the two-factor authentication
        `userdata` file.
      operationId: remove_user_configuration
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_524"
  /TwoFactorAuth/set_user_configuration:
    get:
      tags:
      - TwoFactorAuth
      - Two-Factor Settings
      summary: Save 2FA config
      description: This function configures the two-factor authentication settings
        for an account.
      operationId: set_user_configuration
      parameters:
      - name: secret
        in: query
        description: The 16-character string that UAPI's `TwoFactorAuth::generate_user_configuration`
          function generates.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 16
          type: string
          example: JBSWY3DPEHPK3PXP
      - name: tfa_token
        in: query
        description: The six-digit security code that the time-based one-time password
          (TOTP) authentication app generates.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 6
          type: integer
          example: 528112
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_525"
  /UserManager/change_password:
    get:
      tags:
      - UserManager
      - Account Management
      summary: Update cPanel account password
      description: This function updates the cPanel account's password.
      operationId: change_password
      parameters:
      - name: newpass
        in: query
        description: The new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: password
          example: MyNewPassw0rd!
      - name: oldpass
        in: query
        description: The current password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: password
          example: ThisWasMyPassword!
      - name: enablemysql
        in: query
        description: |-
          Whether to update the cPanel account's MySQL password.
          * `1` - Update MySQL password.
          * `0` - Do not update MySQL passowrd.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_526"
  /UserManager/check_account_conflicts:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Return Subaccounts and service accounts conflicts
      description: |-
        This function lists the other Subaccounts or services accounts that conflict
        with the specified username.

        **Note:**

        If the function returns more than one account, it will return some values
        multiple times within the return arrays.
      operationId: check_account_conflicts
      parameters:
      - name: full_username
        in: query
        description: The Subaccount's username and domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_527"
  /UserManager/create_user:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Create Subaccount
      description: This function creates a Subaccount.
      operationId: UserManager::create_user
      parameters:
      - name: domain
        in: query
        description: The Subaccount user's associated domain that the cPanel account
          owns.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: password
        in: query
        description: |-
          The Subaccount's password.

          **Note:**

           Email, FTP, and Web Disk services use this password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: password
          example: 123456luggage
      - name: username
        in: query
        description: |-
          The username for the Subaccount. The username can only contain alphanumeric characters, dots (`.`), hyphens (`-`), and underscores (`_`).

          **Note:**

          This value does **not** include the domain name.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 64
          type: string
          format: username
          example: example
      - name: alternate_email
        in: query
        description: |-
          An alternate email address for the Subaccount's user.

          **Note:**

           You **must** use this parameter if you set the `send_invite` value to `1`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: avatar_url
        in: query
        description: |-
          The URL path to the user's Subaccount profile photo.

          **Note:**

          You **must** use the HTTPS protocol to prevent mixed content warnings when users view the image from another HTTPS URL.

          **Warning:**

          We reserved this parameter for future use. Do **not** use this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: https://img.example.com/avatars/example.jpg
      - name: phone_number
        in: query
        description: |-
          A phone number for the Subaccount user that conforms to
          [ITU-T](https://en.wikipedia.org/wiki/ITU-T)'s [E.164](https://en.wikipedia.org/wiki/E.164)
          standards.

          **Warning:**

          We reserved this parameter for future use. Do **not** use this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "+15551234567"
      - name: real_name
        in: query
        description: The Subaccount user's first and/or last name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: John Doe
      - name: send_invite
        in: query
        description: |-
          Whether to send a reset password email to the Subaccount's alternate email address.

          * `1` - Send.
          * `0` - Do not send.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: services.email.enabled
        in: query
        description: |-
          Whether to grant the Subaccount email access.

          * `1` - Can access.
          * `0` - **Cannot** access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.email.quota
        in: query
        description: |-
          The maximum amount of disk space, in megabytes (MB), allocated to Subaccount's email account.

          * `0` or `unlimited` - The subaccount has unlimited disk space.

          This value defaults to the defined system value.

          **Note:**

          This value **cannot** be larger than the system's maximum email quota.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "500"
      - name: services.email.send_welcome_email
        in: query
        description: |-
          Whether to send client configuration instructions to the account.

          * `1` - Send the instructions.
          * `0` - Do **not** send the instructions.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.ftp.enabled
        in: query
        description: |-
          Whether to grant the Subaccount FTP access.

          * `1` - Can access.
          * `0` - **Cannot** access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.ftp.homedir
        in: query
        description: |-
          The Subaccount's FTP home directory, relative to the cPanel account's home directory.

          **Note:**

          * This parameter is **required** if you enabled the `services.ftp.homedir` parameter.
          * The directory **must** exist.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /Subaccount
      - name: services.webdisk.enabled
        in: query
        description: |-
          Whether to grant the Subaccount Web Disk access.

          * `1` _ Can access.
          * `0` - **Cannot** access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.enabledigest
        in: query
        description: |-
          Whether to enable the Web Disk Digest Authentication.

          * `1` - Enabled.
          * `0` - Disabled.

          **Note:**

          * **Only** enable Digest Authentication for clients that require additional compatibility support on
            certain versions of WindowsÂ® operating systems. This compatibility support is **only** required on servers
            that use a self-signed certificate for the `cpsrvd` and `cpdavd` daemons.
          * We recommend that you do **not** use Digest Authentication.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.homedir
        in: query
        description: |-
          The Subaccount's Web Disk home directory, relative to the cPanel account's home directory.

          **Note:**

          This parameter is **required** if you enable the `services.webdisk.enabled` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /Subaccount
      - name: services.webdisk.perms
        in: query
        description: |-
          The Subaccount's file permissions for its Web Disk home directory.

          * `ro` - Read-only permissions.
          * `rw` - Read and write permissions.

          **Note:**

           The `services.webdisk.homedir` parameter determines the Subaccount's Web Disk home directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: rw
          default: rw
      - name: services.webdisk.private
        in: query
        description: |-
          Whether to set the directory's permissions to public or private.

          * `1` - Private (`0700`).
          * `0` - Public (`0755`).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: type
        in: query
        description: |-
          The type of account.

          * `sub` - A Subaccount.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: sub
          default: sub
          enum:
          - sub
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_528"
  /UserManager/delete_user:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Delete Subaccount
      description: |-
        This function deletes a Subaccount. This function returns only metadata if no other service accounts exist with the same username and domain.
        * If one service account uses the same username and domain, the function returns the service account's information.
        * If two or more service accounts use the same username and domain, the function returns a hypothetical Subaccount.

        **Note:**

        * A hypothetical Subaccount consists of two or more service accounts that use the same username and domain.
        * This function returns only metadata if the specified username and domain do **not** match any service accounts or hypothetical Subaccounts.
      operationId: UserManager::delete_user
      parameters:
      - name: domain
        in: query
        description: The Subaccount's associated domain.  The domain **must** be one
          that the cPanel account owns.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: username
        in: query
        description: |-
          The Subaccount's username.
          * Characters â `a-z`, `A-Z`, `0-9`, dot (`.`), hyphen (`-`), underscore (`_`)

          **Note:**

          This value does **not** include the domain name.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 64
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_529"
  /UserManager/dismiss_merge:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Remove service account link request
      description: |-
        This function removes a service account as a link candidate to create a subaccount or
        link to a subaccount. When you use this function, the system removes the *Link* option in
        cPanel's [*User Manager*](https://go.cpanel.net/cpaneldocsUserManager)Â interface (_cPanel >> Home >> Preferences >> User Manager_).

        **Note:**

        You **must** use at least one of the following parameters:
        * `services.email.dismiss`
        * `services.ftp.dismiss`
        * `services.webdisk.dismiss`
      operationId: dismiss_merge
      parameters:
      - name: domain
        in: query
        description: The service account's associated domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: username
        in: query
        description: |-
          The username for the service account.

          **Note:**

          This parameter does **not** include the domain name.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 64
          type: string
          format: username
          example: example1
      - name: services.email.dismiss
        in: query
        description: |-
          Whether to dismiss the merge of the email service account.

          * `1` - Dismiss.
          * `0` - Do **not** dismiss.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.ftp.dismiss
        in: query
        description: |-
          Whether to dismiss the merge of the FTP service account.

          * `1` - Dismiss.
          * `0` - Do **not** dismiss.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.dismiss
        in: query
        description: |-
          Whether to dismiss the merge of the Web Disk service account.

          * `1` - Dismiss.
          * `0` - Do **not** dismiss.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_530"
  /UserManager/edit_user:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Update Subaccount settings
      description: This function edits a Subaccount.
      operationId: edit_user
      parameters:
      - name: domain
        in: query
        description: |-
          The Subaccount user's associated domain.

          A domain that the cPanel account owns.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: username
        in: query
        description: |-
          The Subaccount's username.

          * Length - 64 characters.
          * Characters - `a-z`, `A-Z`, `0-9`, dot (`.`), hyphen (`-`), underscore (`_`).

          **Note:**

           This value does **not** include the domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      - name: alternate_email
        in: query
        description: |-
          An alternate email address for the Subaccount's user.

          **Note:**

           The cPanel account user could use this email address to contact the Subaccount user if their primary email address's domain is unavailable.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          nullable: true
          example: user@example.com
      - name: avatar_url
        in: query
        description: |-
          **Warning:**

           We reserved this parameter for future use. Do **not** use this parameter.

          The user's Subaccount profile photo.

          **Note:**

           You **must** use the HTTPS protocol to prevent mixed content warnings when users view the photo from another HTTPS URL.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: url
          nullable: true
          example: https://img.example.com/avatars/example.jpg
      - name: password
        in: query
        description: |-
          The Subaccount's new password.

          **Note:**

           The Subaccount uses this password for email, FTP, and Web Disk services.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: phone_number
        in: query
        description: |-
          The Subaccount user's phone number.

          **Warning:**

           We reserved this parameter for future use. Do **not** use this parameter.

          The number conforms to the [ITU-T](https://en.wikipedia.org/wiki/ITU-T)'s [E.164](https://en.wikipedia.org/wiki/E.164)-recommended standard for the representation of telephone numbers.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: "+15551234567"
      - name: real_name
        in: query
        description: |-
          The Subaccount user's name.

          * A first name.
          * A last name.
          * A first name and last name.
          * An empty string.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: John Doe
      - name: services.email.enabled
        in: query
        description: |-
          Whether to grant the Subaccount email access.

          * `1` - Can access.
          * `0` - **Cannot** access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.email.quota
        in: query
        description: |-
          The maximum amount of disk space, in megabytes (MB), that the subaccount's email account may use.

          If you do not declare a value, the system defaults to the defined system value.

          **Note:**

           This value **cannot** be greater than the maximum email quota.

          * `0` or `unlimited` - The subaccount possesses unlimited disk space.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 500
      - name: services.ftp.enabled
        in: query
        description: |-
          Whether to grant the Subaccount FTP access.

          * `1` - Can access.
          * `0` - **Cannot** access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.ftp.homedir
        in: query
        description: |-
          The Subaccount's FTP home directory.

          **Note:**

           This parameter is **required** if you enable FTP access.

          A relative path from the cPanel account's home directory.

          **Note:**

           The specified directory **must** exist.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /Subaccount
      - name: services.webdisk.enabled
        in: query
        description: |-
          Whether to grant the Subaccount Web Disk access.

          * `1` - Can access.
          * `0` - **Cannot** access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.enabledigest
        in: query
        description: |-
          Whether to enable Web Disk digest authentication.

          **Notes:**

           * **Only** enable Digest Authentication for clients that require additional compatibility support on certain versions of WindowsÂ® operating systems. This compatibility support is **only** required on servers that use a self-signed certificate for the `cpsrvd` and `cpdavd` daemons.
           * We recommend that you do **not** use Digest Authentication.


          * `1` - Enabled
          * `0` - Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.homedir
        in: query
        description: |-
          The Subaccount's Web Disk home directory.

          **Note:**

           This parameter is **required** if you enable Web Disk access.

          A relative path from the cPanel account's home directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /Subaccount
      - name: services.webdisk.perms
        in: query
        description: |-
          Whether to grant write permissions to the Subaccount.

          **Note:**

           The `services.webdisk.homedir` parameter determines the Subaccount's Web Disk home directory.

          * `ro` - Read-only permissions.
          * `rw` - Read and write permissions.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: rw
          default: rw
          enum:
          - ro
          - rw
      - name: services.webdisk.private
        in: query
        description: |-
          Whether to set the Web Disk directory's permissions to public or private.

          * `1` - Private (`0700`).
          * `0` - Public (`0755`).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: type
        in: query
        description: |-
          The type of account.

          * `sub` - A Subaccount.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: sub
          default: sub
          enum:
          - sub
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_531"
  /UserManager/list_users:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Return cPanel account's Subaccounts
      description: This function lists the cPanel account's Subaccounts.
      operationId: UserManager-list_users
      parameters:
      - name: flat
        in: query
        description: |-
          Whether to return Subaccounts with the same name under the merge_candidates array.
          * `1` - Do **not** return.
          * `0` - Return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_532"
  /UserManager/lookup_service_account:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Return service account's information
      description: This function lists a service account's information.
      operationId: lookup_service_account
      parameters:
      - name: full_username
        in: query
        description: The full username for the system account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username@example.com
      - name: type
        in: query
        description: |-
          TheÂ type of system account.
          * `email`
          * `ftp`
          * `webdisk`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: email
          enum:
          - email
          - ftp
          - webdisk
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_533"
  /UserManager/lookup_user:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Return Subaccount's information
      description: This function lists a single Subaccount's information.
      operationId: lookup_user
      parameters:
      - name: guid
        in: query
        description: TheÂ Subaccount'sÂ unique identifier.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: EXAMPLE1:EXAMPLE.COM:564CD663%3AFE50072F2620B50988EA4E5F46022546FBE6BDDE3C36C2F2534F4967C661EC37
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_534"
  /UserManager/merge_service_account:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Register service account to Subaccount
      description: |-
        This function links service accounts to subaccounts and creates a subaccount if one does not exist.

        **Note:**

        You can only link email, FTP, or Web Disk accounts.

        **Important**

        You must use at least **one** of the following parameters:

        * services.email.merge
        * services.ftp.merge
        * services.webdisk.merge

        To link multiple service accounts, the service accounts **must** share the same username and domain.
      operationId: merge_service_account
      parameters:
      - name: domain
        in: query
        description: The service account's associated domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: username
        in: query
        description: |-
          The username for the service account that meets the account name limitations.

          * Length - 64 characters
          * Characters â `a-z`, `A-Z`, `0-9`, dot (`.`), hyphen (`-`), underscore (`_`).

          **Note:**

          This value does **not** include the domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      - name: services.email.merge
        in: query
        description: |-
          Whether to link the email account to the subaccount.

          * `1` - Merge.
          * `0` - Do **not** merge.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.ftp.merge
        in: query
        description: |-
          Whether to link the FTP account to the subaccount.

          * `1` - Merge.
          * `0` - Do **not** merge.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: services.webdisk.merge
        in: query
        description: |-
          Whether to link the Web Disk account to the subaccount.

          * `1` - Merge.
          * `0` - Do **not** merge.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_535"
  /UserManager/unlink_service_account:
    get:
      tags:
      - UserManager
      - Subaccount Management
      summary: Unregister service account from Subaccount
      description: This function unlinks a service account from a subaccount.
      operationId: unlink_service_account
      parameters:
      - name: domain
        in: query
        description: The subaccount's associated domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: service
        in: query
        description: |-
          The service to unlink.

          * `email`
          * `ftp`
          * `webdisk`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ftp
          enum:
          - email
          - ftp
          - webdisk
      - name: username
        in: query
        description: |-
          The subaccount's username.

          **Note:**

          This value does **not** include the domain name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      - name: dismiss
        in: query
        description: |-
          Whether to dismiss the service account as a merge candidate.
          * `1` - Dismiss as merge candidate.
          * `0` - Display as merge candidate.

          **Note:**

           If any email, FTP, or Web Disk accounts use the same username, cPanel'sÂ [*User Manager*](https://go.cpanel.net/cpaneldocsUserManager)Â interface (*cPanel >> Home >> Preferences >> User Manager*) allows you to merge those accounts into aÂ subaccount.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_536"
  /UserTasks/delete:
    get:
      tags:
      - UserTasks
      - SSE Task Management
      summary: Remove item from task queue
      description: |-
        This function deletes a process from the user task queue.

        Each cPanel account uses a separate user task queue in order to ensure that
        processes for one user do not impede another user on the server.

        * For example, the [*Git Version Control*](https://go.cpanel.net/GitVersionControl)
        interface (*cPanel >> Home >> Files >> Git Version Control*) uses the user task queue
        to clone repositories (via the `VersionControl::create` function).
        * For more information, read our
        [Task Queue Monitor](https://go.cpanel.net/whmdocsTaskQueueMonitor) documentation.
      operationId: UserTasks::delete
      parameters:
      - name: id
        in: query
        description: The task's ID number.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 00000000\/5a9ec8dd4c345d
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_537"
  /UserTasks/retrieve:
    get:
      tags:
      - UserTasks
      - SSE Task Management
      summary: Return task queue information
      description: |-
        This function retrieves a cPanel account's user task queue information.

        Each cPanel account uses a separate user task queue in order to ensure that
        processes for one user do not impede another user on the server.

        * For example, the [*Git Version Control*](https://go.cpanel.net/GitVersionControl)
        interface (*cPanel >> Home >> Files >> Git Version Control*) uses the user task queue
        to clone repositories (via the `VersionControl::create` function).
        * For more information, read our
        [Task Queue Monitor](https://go.cpanel.net/whmdocsTaskQueueMonitor) documentation.
      operationId: retrieve
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_538"
  /Variables/get_server_information:
    get:
      tags:
      - cPanel Server Information
      - Variables
      summary: Return server's configuration settings
      description: "This function retrieves the configuration settings for the cPanel\
        \ & WHM server on which an account exists. This is useful, for example, to\
        \ verify which applications and functionality are available on the account."
      operationId: Variables-get_server_information
      parameters:
      - name: name
        in: query
        description: "The server configuration settings to return.\n\n<details>\n\
          <summary>Click to view information about the available server configuration\
          \ settings.</summary>\n\n* `default_theme` - The cPanel interface's default\
          \ theme.\n* `email_filter_storage_directory` - The location of the Exim\
          \ email filter storage directory.\n* `allow_park_subdomain_on_hostname`\
          \ - Whether the system allows users to park subdomains of the server's hostname.\n\
          * `allow_remote_domains` - Whether the system allows users to create addon\
          \ domains or aliases that resolve to other servers.\n* `allow_unregistered_domains`\
          \ - Whether the system allows users to add domains they didn't register\
          \ with a domain name registrar.\n* `apache_port` - The IP address or IP\
          \ address with a firewall port number that ApacheÂ® uses to listen for requests\
          \ and serve web pages over an unsecured connection.\n* `apache_ssl_port`\
          \ - The port or IP address that Apache uses to listen for requests and serve\
          \ web pages over a secure connection.\n* `api_shell` - Whether the user\
          \ can access cPanel's [*API Shell*](https://go.cpanel.net/cpaneldocsAPIShell)\
          \ interface (*cPanel >> Home >> Advanced >> API Shell*).\n* `awstats_browser_update`\
          \ - Whether the user can update their [AWStats](http://awstats.sourceforge.net/)\
          \ software.\n* `awstats_reverse_dns` - Whether the AWStats statistical analysis\
          \ software interprets visitors' domain names as IP addresses.\n* `cpanel_root_directory`\
          \ - The cPanel `root` directory.\n* `database_prefix_required` - Whether\
          \ the account requires database prefixing.\n* `display_cpanel_doclinks`\
          \ - Whether the system displays links to cPanel feature documentation in\
          \ the cPanel interface.\n* `dnsadmin_app` - The application that processes\
          \ DNS management requests.\n* `empty_trash_days` - The minimum age of files\
          \ that the system will automatically purge from `.trash` folders in user\
          \ home directories.\n* `enable_file_protect` - Whether [EasyApache 4's *FileProtect*\
          \ option](https://go.cpanel.net/EasyApache4FileprotectOption) is enabled.\n\
          * `file_upload_maximum_bytes` - The maximum file size, in megabytes (MB),\
          \ that a user can upload to a server.\n* `file_upload_must_leave_bytes`\
          \ - The minimum filesystem quota that the system requires after a file uploads\
          \ to a server.\n* `file_usage` - Whether file usage information displays\
          \ in the cPanel *Home* interface's statistics bar.\n* `ftp_server` - The\
          \ FTP server.\n* `htaccess_check_recurse` - The maximum number of directories\
          \ deep to look for `.htaccess` files when you change the PHP handler.\n\
          * `invite_sub` - Whether cPanel account users can send invitations to new\
          \ Subaccount users via cPanel's [*User Manager*](https://go.cpanel.net/cpaneldocsUserManager)\
          \ interface (*cPanel >> Home >> Preferences >> User Manager*).\n* `ipv6_listen`\
          \ - Whether the `cpsrvd` daemon and other cPanel & WHM services listen on\
          \ IPv6.\n* `local_nameserver_type` - The DNS nameserver's type.\n* `logout_redirect_url`\
          \ - The logout redirection URL.\n* `mailbox_storage_format` - The mailbox\
          \ storage format for new accounts.\n* `mail_server` - The mailserver type.\n\
          * `minimum_password_strength` - The minimum strength for cPanel account\
          \ passwords. \n* `minimum_password_strength_mysql` - The minimum strength\
          \ for MySQLÂ® or MariaDBÂ® passwords.\n* `mysql_host` - The MySQL or MariaDB\
          \ hostname or IP address.\n* `mysql_version` - The MySQL or MariaDB version.\n\
          * `php_maximum_execution_time` - The number of seconds that a PHP script\
          \ can run before the system terminates it.\n* `php_post_maximum_size` -\
          \ The maximum size, in megabytes (MB), of a POST request.\n* `php_system_default_version`\
          \ - The system's default version of PHP.\n* `php_upload_maximum_filesize`\
          \ - The maximum file size, in megabytes (MB), that a PHP script may upload.\n\
          * `php_loader` - The PHP loaders through which the system executes internal\
          \ PHP scripts.\n* `php_open_basedir_home` - Whether PHP `open_basedir` protection\
          \ is enabled on the server.\n* `phpmyadmin_disable_search_info_schema` -\
          \ Whether the user can search for the phpMyAdmin information schema.\n*\
          \ `docroots_in_public_html_only` - Whether the system restricts users from\
          \ creating addon domains and subdomains outside of their `public_html` directory.\n\
          * `require_ssl` - Whether the system requires passwords and other sensitive\
          \ information use SSL encryption.\n* `allow_reset_password` - Whether cPanel's\
          \ [*Reset Password*](https://go.cpanel.net/resetsubaccountpass) feature\
          \ is enabled for the account.\n* `allow_reset_password_for_subaccounts`\
          \ - Whether cPanel's [*Reset Password*](https://go.cpanel.net/resetsubaccountpass)\
          \ feature is enabled for subaccounts on the account.\n* `disable_analog`\
          \ - Whether users can access the [*Analog Stats*](https://go.cpanel.net/cpaneldocsAnalogStats)\
          \ interface (*cPanel >> Home >> Metrics >> Analog Stats*).\n* `skip_apache_clients_optimizer`\
          \ - Whether the Apache Client Optimizer is enabled.\n* `disable_awstats`\
          \ - Whether the [AWStats](http://awstats.sourceforge.net/) software is enabled.\n\
          * `skip_mailbox_warnings_check` - Whether mailbox usage warnings are enabled.\n\
          * `disable_boxtrapper` - Whether [*BoxTrapper*](https://go.cpanel.net/cpaneldocsBoxTrapper)\
          \ is enabled.\n* `skip_bandwidth_limit_check` - Whether the system automatically\
          \ suspends HTTP service for accounts that exceed their bandwidth limit.\n\
          * `disable_mailman` - Whether Mailman mailing lists are enabled.\n* `disable_roundcube`\
          \ - Whether [Roundcube webmail](https://roundcube.net/) is enabled.\n* `disable_spamassassin`\
          \ - Whether the Apache SpamAssassinâ¢ spam filter is enabled.\n* `disable_spambox`\
          \ - Whether Apache SpamAssassin's spam box feature is enabled.\n* `disable_webalizer`\
          \ - Whether the [Webalizer](https://docs.cpanel.net/cpanel/metrics/webalizer/)\
          \ statistics program is enabled.\n* `ssl_default_key_type` - The default\
          \ SSL/TLS encryption algorithm used by the system.\n* `use_information_schema`\
          \ - Whether the system uses the MySQLÂ® `INFORMATION_SCHEMA` view. This view\
          \ includes disk usage by all MySQL tables in the disk usage totals.\n* `use_mail_for_mailman_url`\
          \ - Whether the system prefixes Mailman URLs with the `mail` prefix. For\
          \ example, `http://mail.domain.com/mailman`.\n* `is_mod_userdir_enabled`\
          \ - Whether the [Apache `mod_userdir` Tweak](https://go.cpanel.net/whmdocsApachemod_userdirTweak)\
          \ is enabled.\n* `version` - The system's LinuxÂ® kernel version.\n</details>\n\
          \n**Note:**\n\n* If you don't use this parameter, this function returns\
          \ **all** of the server's configuration settings.\n* To retrieve multiple\
          \ variables, increment this parameter. For example, `name-1=variable`, `name-2=variable`,\
          \ `name-3=variable`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - default_theme
          - email_filter_storage_directory
          - allow_park_subdomain_on_hostname
          - allow_remote_domains
          - allow_unregistered_domains
          - apache_port
          - apache_ssl_port
          - api_shell
          - awstats_browser_update
          - awstats_reverse_dns
          - cpanel_root_directory
          - database_prefix_required
          - display_cpanel_doclinks
          - dnsadmin_app
          - empty_trash_days
          - enable_file_protect
          - file_upload_maximum_bytes
          - file_upload_must_leave_bytes
          - file_usage
          - ftp_server
          - htaccess_check_recurse
          - invite_sub
          - ipv6_listen
          - local_nameserver_type
          - logout_redirect_url
          - mailbox_storage_format
          - mail_server
          - minimum_password_strength
          - minimum_password_strength_mysql
          - mysql_host
          - mysql_version
          - php_maximum_execution_time
          - php_post_maximum_size
          - php_system_default_version
          - php_upload_maximum_filesize
          - php_loader
          - php_open_basedir_home
          - phpmyadmin_disable_search_info_schema
          - docroots_in_public_html_only
          - require_ssl
          - allow_reset_password
          - allow_reset_password_for_subaccounts
          - disable_analog
          - skip_apache_clients_optimizer
          - disable_awstats
          - skip_mailbox_warnings_check
          - disable_boxtrapper
          - skip_bandwidth_limit_check
          - disable_mailman
          - disable_roundcube
          - disable_spamassassin
          - disable_spambox
          - disable_webalizer
          - ssl_default_key_type
          - use_information_schema
          - use_mail_for_mailman_url
          - is_mod_userdir_enabled
          - version
        examples:
          multiple:
            summary: Get multiple configuration settings.
            value: name=allow_park_subdomain_on_hostname&name=allow_remote_domains&name=allow_reset_password
          single:
            summary: Get a single configuration setting.
            value: allow_park_subdomain_on_hostname
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_539"
  /Variables/get_session_information:
    get:
      tags:
      - Variables
      - Login Information
      summary: Return web server's hostname
      description: This function retrieves a web server's hostname.
      operationId: get_session_information
      parameters:
      - name: name
        in: query
        description: |-
          The web server environment variable to retrieve. You can **only**
          retrieve the web server's hostname.

          * `host` is the only possible value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: host
          default: host
          enum:
          - host
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_540"
  /Variables/get_user_information:
    get:
      tags:
      - Variables
      - Account Information
      summary: Return cPanel account's configuration settings
      description: This function retrieves the user's account configuration settings.
      operationId: Variables-get_user_information
      parameters:
      - name: name
        in: query
        description: |-
          The user configuration variables to retrieve. If you don't use this parameter, this function returns **all** of the user's configuration data.

          **Note:**

          To retrieve multiple account configuration settings for a user, increment the parameter name. For example: `name-0`, `name-1`, and `name-2`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: domain
        examples:
          multiple:
            summary: Get multiple account configuration settings.
            value: name-1=mailbox_format&name-2=home&name-3=shell
          single:
            summary: Get a single account configuration setting.
            value: mailbox_format
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_541"
  /VersionControl/create:
    get:
      tags:
      - VersionControl
      - Repository Management
      summary: Create Git repository
      description: |-
        This function creates a new Gitâ¢ repository on a cPanel account.

        * For more information about support for version control in cPanel & WHM, read our
        [Git Version Control](https://go.cpanel.net/GitVersionControl) and
        [Guide to Git](https://go.cpanel.net/GitDeployment) documentation.
        * For a list of configuration changes, repository restrictions, and troubleshooting steps,
        read our [Guide to Git - For System Administrators](https://go.cpanel.net/GuidetoGitForSystemAdministrators) documentation.

        **Important:**

        The system logs errors for this function in the `~/.cpanel/logs/vc_TIMESTAMP_git_create.log`
        file, where `TIMESTAMP` represents the time of the error in Unix epoch time.
      operationId: VersionControl::create
      parameters:
      - name: name
        in: query
        description: The new repository's display name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      - name: repository_root
        in: query
        description: |-
          The absolute path to the directory in which to store the repository, relative to the
          user's `home` directory.

          **Note:**

          * If the directory does **not** exist, the system will create it.
          * If the specified directory already contains a repository, the system will
          automatically add it to the list of cPanel-managed repositories.
          * This feature enforces several restrictions on repository paths. For more information,
          read our [Guide to Git - For System Administrators](https://go.cpanel.net/GuidetoGitForSystemAdministrators) documentation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/user/public_html/example
      - name: type
        in: query
        description: |-
          The repository type.

          * `git` â A [Git](https://git-scm.com/) repository.

          **Note:**

          `git` is the only possible value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: git
          enum:
          - git
      - name: source_repository
        in: query
        description: |-
          A JSON-formatted object containing information about the source repository that the
          system will clone.

          **Note:**

          If you do **not** include source repository data, the function creates an empty repository.
        required: false
        content:
          application/json:
            schema:
              required:
              - url
              properties:
                remote_name:
                  type: string
                  description: The source repository's name.
                  default: origin
                url:
                  type: string
                  description: The source repository's clone URL.
              example:
                remote_name: origin
                url: ssh://clone.domain.com/cloneme
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_542"
  /VersionControl/delete:
    get:
      tags:
      - VersionControl
      - Repository Management
      summary: Delete Git repository
      description: |-
        This function deletes a cPanel account's Gitâ¢ repository. For more information about
        support for version control in cPanel & WHM, read our
        [Git Version Control](https://go.cpanel.net/GitVersionControl) and
        [Guide to Git](https://go.cpanel.net/GitDeployment) documentation.

        **Warning:**

        * When you call this function, the system **permanently deletes** the entire contents
        of the specified directory. You **cannot** recover this data after deletion.
        * You **cannot** use this function to delete any repositories that do not appear in
        the cache of repositories (for example, repositories that contain invalid characters or
        exist within cPanel-controlled directories).
      operationId: VersionControl::delete
      parameters:
      - name: repository_root
        in: query
        description: The absolute directory path in the user's `home` directory containing
          the repository to delete.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /home/user/example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_543"
  /VersionControl/retrieve:
    get:
      tags:
      - VersionControl
      - Repository Management
      summary: Return Git repositories
      description: |-
        This function lists Gitâ¢ repositories on a cPanel account. For more information
        about support for version control in cPanel & WHM, read our
        [Git Version Control](https://go.cpanel.net/GitVersionControl) and
        [Guide to Git](https://go.cpanel.net/GitDeployment) documentation.

        **Important:**

        * This feature does **not** allow the following characters in repository paths:
          ``\ * | " ' < > & @ ` $ { } [ ] ( ) ; ? : = % #``
        * This function does **not** allow repositories that exist in the following
        cPanel-controlled directories:

          * `.cpanel`
          * `.htpasswds`
          * `.ssh`
          * `.trash`
          * `access-logs`
          * `cgi-bin`
          * `etc`
          * `logs`
          * `perl5`
          * `mail`
          * `spamassassin`
          * `ssl`
          * `tmp`
          * `var`

        Users can create repositories in some of these directories on the command line.
        They may appear in the list of repositories in Gitweb, but users may see an error
        message if they try to access them.
      operationId: VersionControl::retrieve
      parameters:
      - name: fields
        in: query
        description: |-
          A comma-separated list of desired return values.

          **Note:**

          Use a wildcard (`*`) to list all possible return values.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "name,type,branch,last_update"
          default: '*'
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_544"
  /VersionControl/update:
    get:
      tags:
      - VersionControl
      - Repository Management
      summary: Update Git repository settings
      description: |-
        This function modifies a Gitâ¢ repository's basic settings. For more information about support
        for version control in cPanel & WHM, read our
        [Git Version Control](https://go.cpanel.net/GitVersionControl)
        and [Guide to Git](https://go.cpanel.net/GitDeployment) documentation.

        **Note:**

        * This function **only** pulls changes from the remote repository if you specify a `branch` value.
        * You **cannot** modify the `type`, `repository_root`, or `url` values for existing repositories.
        * You **must** include the `repository_root` parameter in order to identify the repository to
        update.
        * All other input parameters are **optional**. Use them to assign the **new** values to the
        account. If you do not include a parameter or specify its existing value, no change will occur.
      operationId: VersionControl::update
      parameters:
      - name: repository_root
        in: query
        description: The absolute directory path that contains the repository to update.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/user/public_html/example
      - name: branch
        in: query
        description: |-
          The new branch to use.

          If you do not specify a value, the function does **not** update this parameter.

          **Remember:**

          This function **only** pulls changes from the remote repository if you specify
          this value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: master
      - name: name
        in: query
        description: |-
          The repository's new display name.

          If you do not specify a value, the function does **not** update this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example
      - name: source_repository
        in: query
        description: |-
          A JSON-encoded object containing information about the source repository.

          If you do not specify a value, the function does **not** update this parameter.

          **Important:**

          * You **cannot** modify the source repository's URL.
          * You **must** JSON-encode the contents of this object.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                remote_name:
                  type: string
                  description: "The source repository's name. If you do not specify\
                    \ a value, the function does **not** update this parameter."
              example:
                remote_name: origin
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_545"
  /VersionControlDeployment/create:
    get:
      tags:
      - VersionControlDeployment
      - Deployment Settings
      summary: Create Git deployment task
      description: |-
        This function deploys the changes from a cPanel-managed repository.

        **Important:**

        The system logs messages for this function in the `~/.cpanel/logs/vc_TIMESTAMP_git_deploy.log` file, where TIMESTAMP represents the time in Unix epoch time. The system pulls changes with the `--ff-only` option and will only succeed if the branch's HEAD commit is up-to-date or Git can fast forward it. For more information about our suggested deployment configuration and how users can set it up, read our [Guide to Gitâ¢ - Deployment](https://go.cpanel.net/GitDeployment) documentation. Before deployment, repositories must meet the following requirements:
          * A valid checked-in `.cpanel.yml` file in the top-level directory.
          * One or more local or remote branches.
          * A clean working tree.

        If a repository does **not** meet these requirements, the system will **not** display deployment information. Also, it will disable deployment functionality. For more information, read our [Guide to Gitâ¢ - Deployment](https://go.cpanel.net/GitDeployment) documentation.
      operationId: VersionControlDeployment::create
      parameters:
      - name: repository_root
        in: query
        description: The repository's directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/user/public_html/example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_546"
  /VersionControlDeployment/delete:
    get:
      tags:
      - VersionControlDeployment
      - Deployment Settings
      summary: Delete Git deployment task
      description: "This function deletes a deployment task. For more information,\
        \ read our\_[Guide to Git - Deployment](https://go.cpanel.net/GitDeployment)\
        \ documentation."
      operationId: delete
      parameters:
      - name: deploy_id
        in: query
        description: "The [Task Queue system's](https://go.cpanel.net/whmdocsTaskQueueMonitor)\
          \ task ID number."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "13"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_547"
  /VersionControlDeployment/retrieve:
    get:
      tags:
      - VersionControlDeployment
      - Deployment Settings
      summary: Return Git deployment task status
      description: |-
        This function retrieves the status of deployment tasks. Before deployment, repositories must meet the following requirements:
          * A valid checked-in `.cpanel.yml` file in the top-level directory.
          * One or more local or remote branches.
          * A clean working tree.

        If a repository does **not** meet these requirements, the system will **not** display deployment information. Also, it will disable deployment functionality. For more information, read our [Guide to Gitâ¢ - Deployment](https://go.cpanel.net/GitDeployment) documentation.

        **Important:**

        The system logs messages for this function in the `~/.cpanel/logs/vc_TIMESTAMP_git_deploy.log` file, where `TIMESTAMP` represents the time in Unix epoch time.
      operationId: VersionControlDeployment::retrieve
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_548"
  /WebDisk/delete_user:
    get:
      tags:
      - WebDisk
      - WebDisk Settings
      summary: Delete Web Disk account
      description: |-
        This function deletes a Web Disk account.

        **Important:**

        When you disable the [Web Disk role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: WebDisk::delete_user
      parameters:
      - name: destroy
        in: query
        description: |-
          Whether to recursively delete the Web Disk account's folder and all of its contents.

          * `1` - Delete the folder for the Web Disk account
          * `0` - Do **not** delete the folder for the Web Disk account.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: user
        in: query
        description: The Web Disk account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: example1@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_549"
  /WebDisk/set_homedir:
    get:
      tags:
      - WebDisk
      - WebDisk Settings
      summary: Update Web Disk home directory location
      description: |-
        This function changes the home directory for a Web Disk account.

        **Important:**

        When you disable the [Web Disk role](https://go.cpanel.net/serveroles), the system **disables** this function.
      operationId: WebDisk::set_homedir
      parameters:
      - name: homedir
        in: query
        description: The Web Disk account's home directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: example1/
      - name: user
        in: query
        description: The Web Disk account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: example1@example.com
      - name: private
        in: query
        description: |-
          Whether to set the Web Disk directory's permissions to public or private.

          * `1` - Private (`0700`)
          * `0` - Public (`0755`)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_550"
  /WebDisk/set_password:
    get:
      tags:
      - WebDisk
      - WebDisk Settings
      summary: Update Web Disk account password
      description: |-
        This function changes the Web Disk account's password.

        **Important:**

        When you disable the [Web Disk role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: WebDisk::set_password
      parameters:
      - name: password
        in: query
        description: The Web Disk account's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: user
        in: query
        description: The Web Disk account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: example1@example.com
      - name: enabledigest
        in: query
        description: |-
          Whether to enable Digest Authentication.

          * `1` - Enable Digest Authentication.
          * `0` - Disable Digest Authentication.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_551"
  /WebDisk/set_permissions:
    get:
      tags:
      - WebDisk
      - WebDisk Settings
      summary: Update Web Disk home directory permissions
      description: |-
        This function changes the Web Disk home directory's permissions.

        **Important:**

        When you disable the [Web Disk role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: set_permissions
      parameters:
      - name: perms
        in: query
        description: |-
          The Web Disk account's home directory file permissions.

          * `ro` â Read-only permissions.
          * `rw` â Read and write permissions.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: rw
          enum:
          - ro
          - rw
      - name: user
        in: query
        description: The Web Disk account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: example1@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_552"
  /WebVhosts/list_domains:
    get:
      tags:
      - WebVhosts
      - Virtual Host Information
      summary: Return virtual host names for domains
      description: This function lists virtual host names for each domain.
      operationId: WebVhosts::list_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_553"
  /WebVhosts/list_ssl_capable_domains:
    get:
      tags:
      - WebVhosts
      - Virtual Host Information
      summary: Return domains that allow SSL certificate purchase
      description: "This function lists every domain for which you may purchase an\
        \ SSL certificate. The possible domains for the Secure Sockets Layer (SSL)\
        \ certificate include applicable [service subdomains.](https://go.cpanel.net/ServiceProxySubdomains)"
      operationId: list_ssl_capable_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_554"
  /WebmailApps/list_webmail_apps:
    get:
      tags:
      - WebmailApps
      - Webmail Applications
      summary: Return available webmail clients
      description: "This function lists the account's available webmail clients.\n\
        \n**Important:**\n\nWhen you disable the [Receive Mail role](https://go.cpanel.net/howtouseserverprofiles#roles),\
        \ the system **disables** this function. "
      operationId: list_webmail_apps
      parameters:
      - name: theme
        in: query
        description: The webmail theme.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
          default: the server's default theme
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_555"
  /WordPressBackup/any_running:
    get:
      tags:
      - WordPressBackup
      - WordPress Manager Backups
      summary: Return all WordPress sites' backup status
      description: |-
        This function checks for any active WordPressÂ® site backups on the cPanel account.

        **Note:**

        You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: any_running
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_556"
  /WordPressBackup/cancel:
    get:
      tags:
      - WordPressBackup
      - WordPress Manager Backups
      summary: Stop WordPress site backup
      description: |-
        This function cancels a WordPressÂ® site backup.

        **Note:**

          You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: cancel
      parameters:
      - name: site
        in: query
        description: The WordPress site's URL without the protocol prefix.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/site"
        example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_557"
  /WordPressBackup/cleanup:
    get:
      tags:
      - WordPressBackup
      - WordPress Manager Backups
      summary: Delete WordPress backup temporary files
      description: |-
        This function releases any system resources from a previous WordPressÂ® site backup.

        **Note:**

        You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: cleanup
      parameters:
      - name: site
        in: query
        description: The WordPress site's URL **without** the protocol prefix.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com/wordpress
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_558"
  /WordPressBackup/get_available_backups:
    get:
      tags:
      - WordPressBackup
      - WordPress Manager Backups
      summary: Return WordPress site backups
      description: |-
        This function retrieves a list of available WordPressÂ® site backups of a single site.

        **Note:**

        You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: get_available_backups
      parameters:
      - name: site
        in: query
        description: The WordPress site's URL **without** the protocol prefix.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com/wordpress
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_559"
  /WordPressBackup/is_running:
    get:
      tags:
      - WordPressBackup
      - WordPress Manager Backups
      summary: Return WordPress site backup status
      description: |-
        This function checks for an active WordPressÂ® site backup.

        **Note:**

        You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: is_running
      parameters:
      - name: site
        in: query
        description: The WordPress site's URL **without** `http://`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: |-
            example.com

            example.com/wordpress
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_560"
  /WordPressBackup/start:
    get:
      tags:
      - WordPressBackup
      - WordPress Manager Backups
      summary: Backup WordPress site
      description: |-
        This function starts a single WordPressÂ® site backup.

        **Note:**

        You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: start
      parameters:
      - name: site
        in: query
        description: The WordPress site's URL without the protocol prefix.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/site_1"
        example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_561"
  /WordPressInstanceManager/cancel_scan:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Stop WordPress site scan
      description: |-
        This function cancels a scan that you start with the `WordPressInstanceManager::start_scan` function.

        **Note:**

          You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: cancel_scan
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_562"
  /WordPressInstanceManager/change_admin_password:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Update WordPress site admin password
      description: |-
        This function updates a WordPressÂ® cPAddon instance's administrator password.

        **Note:**

          You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: change_admin_password
      parameters:
      - name: id
        in: query
        description: |-
          The cPAddon instance's unique ID.

          **Note:**

           You can retrieve an instance ID with the `get_instances` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPanel__Blogs__WordPressX.0.1491917088
      - name: password
        in: query
        description: The cPAddon instance's new administrator password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: luggage12345
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_563"
  /WordPressInstanceManager/cleanup_scan:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Remove scan log after completed scan
      description: |-
        This function cleans up the scan log file after you complete a scan with the WordPressInstanceManager::start_scan function. To read more information about the complete scan process, read ourÂ UAPI Functions - WordPressInstanceManager::start_scan documentation.

        **Note:**

          You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: cleanup_scan
      parameters:
      - name: guid
        in: query
        description: The scanâs unique ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: B3A27B96-51F7-11E8-92E3-CC90C4F823F0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_564"
  /WordPressInstanceManager/configure_autoupdate:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Update WordPress site automatic update settings
      description: |-
        This function configures a WordPress cPAddon instance's automatic updates settings. If you enable automatic updates for a legacy WordPress cPAddon instance, the function will convert it to use the RPM-based WordPress cPAddon.

        **Important:**

          This function changes the instance's automatic update setting in the `wp-config.php` file. Before you run this function, you should verify that a filter does **not** exist for the automatic update settings. Use the `get_instance_by_id` function and view the `autoupdate.core.has_filter` return to determine if a filter exists.

        **Note:**

          You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: configure_autoupdate
      parameters:
      - name: autoupdate.core.major
        in: query
        description: |-
          Whether to enable automatic updates for major releases.
          * `1` - Enable.
          * `0` - Disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: autoupdate.core.minor
        in: query
        description: |-
          Whether to enable automatic updates for minor releases.
          * `1` - Enable.
          * `0` - Disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: id
        in: query
        description: |-
          The cPAddon instance's unique ID.

          **Note:**

           You can retrieve an instance ID with the `get_instances` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPanel__Blogs__WordPressX.0.1491917088
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_565"
  /WordPressInstanceManager/get_api_version:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Return WordPress Manager plugin version
      description: |-
        This function retrieves the WordPress Manager plugin's version.

        **Note:**

          You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: get_api_version
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_566"
  /WordPressInstanceManager/get_instance_by_id:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Return WordPress site settings
      description: |-
        This function retrieves a WordPressÂ® instance's configuration.

        **Note:**

        * You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
        * This function retrieves some data that the system stored during the WordPress installation. That data may not reflect the most recent user changes.
      operationId: get_instance_by_id
      parameters:
      - name: id
        in: query
        description: |-
          The WordPress instance's unique ID.

          **Note:**

           You can retrieve an instance ID with the `get_instances` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPanel__Blogs__WordPressX.0.1528208546
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_567"
  /WordPressInstanceManager/get_instances:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Return WordPress sites
      description: |-
        This function lists an account's WordPressÂ® instances.

        **Note:**

        * You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
        * This function retrieves data that the system stored during the WordPress installation. That data may not reflect the most recent user changes.
      operationId: get_instances
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_568"
  /WordPressInstanceManager/get_latest_wordpress_version_from_wordpress_org:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Return latest wordpress.org updates
      description: |-
        This function returns the available WordPressÂ® updates from wordpress.org.

        **Note:**

          You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: get_latest_wordpress_version_from_wordpress_org
      parameters:
      - name: cache_time
        in: query
        description: The length of time in seconds to cache the database between requests
          to wordpress.org.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 3600
          default: 86400
      - name: force
        in: query
        description: |-
          Whether to force a reload from the remote API. Otherwise, the
          function returns information stored in local cache.
          * `1` â Force reload
          * `0` â Read local cashe.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_569"
  /WordPressInstanceManager/get_scan_results:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Return WordPress site scan results
      description: |-
        This function checks the status of a completed scan and reports the results. To find more information about the scan process, read ourÂ UAPI documentation for `WordPressInstanceManager::start_scan`.

        **Note:**

          You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: get_scan_results
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_570"
  /WordPressInstanceManager/is_installable_addon_available:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Verify WordPress cPAddon availability
      description: |-
        This function verifies that the RPM-based WordPressÂ® cPAddon exists on the system.

        **Note:**

          You must install the WordPress Manager cPanel plugin to access this API function.
      operationId: is_installable_addon_available
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_571"
  /WordPressInstanceManager/start_scan:
    get:
      tags:
      - WordPressInstanceManager
      - WordPress Manager Settings
      summary: Start WordPress sites scan
      description: "This function scans for WordPressÂ® instances installed on a cPanel\
        \ account. The system will populate cPanel's WordPress Manager interface with\
        \ any newly discovered instances.\n\n**Note:**\n\nYou **must** install the\
        \ [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin\
        \ to access this API function.\n\n### Server Sent Events (SSE)\n\nThis function\
        \ uses the following SSE events:\n\n* `register` â\_The scan operation discovered\
        \ a WordPress instance and registered it. The data is a\nJSON-encoded object\
        \ containing the attributes of the instance, with the same format used in\
        \ the\nUAPI `get_instances` and UAPI `get_instance_by_id` functions.\n* `found`\
        \ â\_The scan operation found a WordPress instance. If the WordPress instance\
        \ is newly\ndiscovered, the system will also generate a `register` event for\
        \ the instance. The data is a\nJSON-encoded object containing the following:\n\
        \  * `path` â\_The absolute file path to the instance.\n* `done` â\_The scan\
        \ is finished. The data is a JSON-encoded object that contains:\n  * `found`\
        \ â\_An array of strings that represents the absolute path to the discovered\
        \ instances and\n  any instances that the system already registered.\n  *\
        \ `converted`\_â An array of converted instances that the system returns in\
        \ the same format\n  provided in the UAPI `get_instances` and UAPI `get_instance_by_id`\
        \ functions.\n* `terminated` â\_The system or user terminated the scan.\t\n\
        * `timedout` â\_The scan timed out before it completed.\n* `register-failed`\
        \ â\_The system failed to build the instance registry.\tThe data is a JSON-encoded\n\
        string that contains the error message.\n* `register-load-failed` â\_The system\
        \ could not load the registry after building the instance\nregistry. The data\
        \ is a JSON-encoded string that contains the error message.\n\nFor more information\
        \ about server sent events, read Mozilla's [Using server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events)\
        \ documentation."
      operationId: WordPressInstanceManager-start_scan
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_572"
  /WordPressRestore/any_running:
    get:
      tags:
      - WordPressRestore
      - WordPress Manager Backups
      summary: Return WordPress site restore status
      description: |-
        This function returns whether a WordPressÂ® site backup restoration is in progress.

        **Note:**

        * You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
        * The output of this function changes, depending on the state of the backup restoration.
      operationId: WordPressRestore::any_running
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_573"
              examples:
                InProgress:
                  summary: Example output of a backup restore in progress.
                  value:
                    data:
                      any_running: 1
                      sites:
                      - site: example.com
                        type: restore
                    metadata: {}
                    status: 1
                NotInProgress:
                  summary: Example output of a backup restore not in progress.
                  value:
                    data:
                      any_running: 0
                      last_outcome:
                        error: ""
                        have_outcome: 1
                        site: example.com
                        status: success
                      sites: []
                    metadata: {}
                    status: 1
  /WordPressRestore/cleanup:
    get:
      tags:
      - WordPressRestore
      - WordPress Manager Backups
      summary: Delete restored WordPress site's temporary files
      description: |-
        This function cleans up any temporary system resources after a WordPressÂ® site backup restoration.

        **Note:**

        You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: WordPressRestore-cleanup
      parameters:
      - name: site
        in: query
        description: The WordPress site's URL **without** the protocol prefix.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          single-domain:
            summary: Just a domain.
            value: example.com
          single-path:
            summary: Domain with path.
            value: example.com/wordpress
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_574"
  /WordPressRestore/start:
    get:
      tags:
      - WordPressRestore
      - WordPress Manager Backups
      summary: Restore WordPress site
      description: |-
        This function starts a single WordPressÂ® site backup restoration.

        **Note:**

        You **must** install the [WordPress Manager](https://go.cpanel.net/wordpressmanager) cPanel plugin to access this API function.
      operationId: WordPressRestore-start
      parameters:
      - name: backup_path
        in: query
        description: The file path to the backup archive.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /home/example/wordpress-backups/example.com__2018-11-13T11:11:31-0600.tar.gz
      - name: site
        in: query
        description: The WordPress site's URL to restore.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          single-domain:
            summary: Just a domain.
            value: example.com
          single-path:
            summary: Domain with path.
            value: example.com/wordpress
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_575"
  /WordPressSite/create:
    get:
      tags:
      - WordPressSite
      - Site Installation
      summary: Install WordPress site
      description: This function installs a WordPress site for cPanel user's primary
        domain.
      operationId: WordPressSite::create
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_576"
  /WordPressSite/retrieve:
    get:
      tags:
      - WordPressSite
      - Site Information
      summary: Return WordPress site information
      description: This function retrieves the installation status and detailed information
        of the WordPress site for cPanel user's primary domain.
      operationId: WordPressSite::retrieve
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_577"
  /cPAddons/get_available_addons:
    get:
      tags:
      - cPAddons
      - cPanel Addons (cPAddons)
      summary: Return available cPAddons
      description: This function lists an account's available cPAddons.
      operationId: get_available_addons
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_578"
  /cPAddons/get_instance_settings:
    get:
      tags:
      - cPAddons
      - cPanel Addons (cPAddons)
      summary: Return deployed cPAddons instance's settings
      description: This function lists a cPAddons instance's settings.
      operationId: get_instance_settings
      parameters:
      - name: unique_id
        in: query
        description: |-
          The unique identifier of the cPAddon.

          **Note:**

          To find this identifier, run the `list_addon_instances` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPanel::Blogs::WordPressX.0.1486754861
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_579"
  /cPAddons/list_addon_instances:
    get:
      tags:
      - cPAddons
      - cPanel Addons (cPAddons)
      summary: Return deployed cPAddons instances
      description: This function lists an account's deployed cPAddons instances.
      operationId: list_addon_instances
      parameters:
      - name: addon
        in: query
        description: The cPAddon for which to return the instances data.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: cPanel::Blogs::WordPressX
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_580"
  /cPGreyList/disable_all_domains:
    get:
      tags:
      - cPGreyList
      - Spam Filtering (Greylisting)
      summary: Disable Greylisting for all domains
      description: This function disables Greylisting on a cPanel account's domains.
      operationId: cPGreyList-disable_all_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_581"
  /cPGreyList/disable_domains:
    get:
      tags:
      - cPGreyList
      - Spam Filtering (Greylisting)
      summary: Disable Greylisting for specified domains
      description: This function disables Greylisting on a cPanel account's selected
        domains.
      operationId: cPGreyList-disable_domains
      parameters:
      - name: domains
        in: query
        description: |-
          The domain on which to disable Greylisting.

          **Note:**

          To disable Greylisting on multiple domains, use theÂ `domains` parameter multiple times.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            description: Multiple domains.
            value: domain=example.com domain=example1.com domain=example2.com
          single:
            description: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_582"
  /cPGreyList/enable_all_domains:
    get:
      tags:
      - cPGreyList
      - Spam Filtering (Greylisting)
      summary: Enable Greylisting for all domains
      description: This function enables Greylisting on all of the cPanel account's
        domains.
      operationId: cPGreyList-enable_all_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_583"
  /cPGreyList/enable_domains:
    get:
      tags:
      - cPGreyList
      - Spam Filtering (Greylisting)
      summary: Enable Greylisting for specified domains
      description: This function enables Greylisting on a cPanel account's selected
        domains.
      operationId: cPGreyList-enable_domains
      parameters:
      - name: domains
        in: query
        description: |-
          The domain on which to enable Greylisting.

          **Note:**

           To enable Greylisting on multiple domains, use theÂ `domains`Â parameter multiple times.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example.com&domain=example1.com&domain=example2.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_584"
  /cPGreyList/has_greylisting_enabled:
    get:
      tags:
      - cPGreyList
      - Spam Filtering (Greylisting)
      summary: Return whether Greylisting is enabled
      description: This function checks whether Greylisting is enabled for the cPanel
        account.
      operationId: has_greylisting_enabled
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_585"
  /cPGreyList/list_domains:
    get:
      tags:
      - cPGreyList
      - Spam Filtering (Greylisting)
      summary: Return Greylisting status for domains
      description: This function returns Greylisting's status for a cPanel account's
        domains.
      operationId: cPGreyList::list_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_586"
  /get_php_recommendations:
    get:
      tags:
      - PHP
      summary: Get custom PHP recommendations.
      description: This function returns a list of recommended PHP versions.
      operationId: EA4::get_php_recommendations
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_587"
  /get_recommendations:
    get:
      tags:
      - EA4
      summary: Get EA4 configuration recommendations
      description: This function retrieves a list of EasyApache 4Â (EA4) configuration
        recommendations.
      operationId: get_recommendations
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_588"
components:
  schemas:
    Contents:
      properties:
        all_aliases_valid:
          type: integer
          description: |-
            Whether a valid SSL certificate exists on the domain's aliases.

            * `1` âÂ A valid SSL certificate exists.
            * `0`Â âÂ A valid SSL certificate does **not** exist.

            **Note:**

            This return **only** appears if you set the `return_https_redirects_status` parameter to `1`.
          enum:
          - 1
          - 0
        can_https_redirect:
          type: integer
          description: |-
            Whether a valid SSL certificate exists or AutoSSL runs on the domain.

            * `1` âÂ A valid SSL certificate exists or AutoSSL runs.
            * `0` âÂ A valid SSL certificate does **not** exist and AutoSSL does **not** run.

            **Note:**

            This return **only** appears if you set the `return_https_redirects_status` parameter to `1`.
          enum:
          - 1
          - 0
        documentroot:
          type: string
          description: The absolute path to the domain's document root.
          format: path
        domain:
          type: string
          description: The domain's name.
          format: domain
        group:
          type: string
          description: The domain's group.
        hascgi:
          type: integer
          description: |-
            Whether CGI is enabled for the domain.

            * `1` âÂ Enabled.
            * `0` âÂ Disabled.
          enum:
          - 1
          - 0
        homedir:
          type: string
          description: The absolute path to the cPanel account's home directory.
          format: path
        ip:
          type: string
          description: The domain's IPv4 address.
          format: ipv4
        ipv6:
          type: string
          description: |-
            The domain's IPv6 address.

            * null âÂ The account does **not** use IPv6.
          format: ipv6
          nullable: true
        is_https_redirecting:
          type: integer
          description: |-
            Whether the domain redirects to `https`.

            * `1` âÂ The domain redirects to `https`.
            * `0` âÂ The domain does **not** redirect to `https`.

            **Note:**

            This return **only** appears if you set the `return_https_redirects_status` parameter to `1`.
          enum:
          - 1
          - 0
        no_cache_update:
          type: integer
          description: |-
            Whether the domain is subject to cache updates.

            * `1` âÂ The domain updates caches.
            * `0` âÂ The domain does **not** update caches.
          enum:
          - 1
          - 0
        owner:
          type: string
          description: The WHM account (`root` or a reseller) that owns the cPanel
            account.
        serveradmin:
          type: string
          description: The domain's administrator's contact email address.
          format: email
        serveralias:
          type: string
          description: A space-separated list of the domain's aliases.
          format: domain
        servername:
          type: string
          description: The domain's identifier on the server.
          format: domain
        type:
          type: string
          description: |-
            The type of domain:

            * `addon_domain` âÂ The domain is an addon domain.
            * `sub_domain` âÂ The domain is a subdomain.
            * `parked_domain` â The domain is a parked domain (domain alias).
          enum:
          - addon_domain
          - sub_domain
          - parked_domains
        usecanonicalname:
          type: string
          description: |-
            The domain's Canonical Name (CNAME) setting.

            * `On` âÂ Use the domain's CNAME.
            * `Off` âÂ Do **not** use the domain's CNAME.
          enum:
          - "On"
          - "Off"
        user:
          type: string
          description: The cPanel account's username.
          format: username
        userdirprotect:
          type: integer
          description: |-
            The domain's [Apache `mod_userdir` Tweak](https://go.cpanel.net/whmdocsApachemod_userdirTweak)
            setting.

            * `1` âÂ Enabled.
            * `0` âÂ Disabled.
          enum:
          - 1
          - 0
    CreateUserResponse:
      allOf:
      - $ref: "#/components/schemas/SubaccountBase"
      - type: object
        properties:
          dismissed_merge_candidates:
            type: array
            description: An array of objects containing service candidates that the
              system dismissed from merges.
            items:
              $ref: "#/components/schemas/SubaccountBase"
          has_expired_invite:
            type: integer
            description: |-
              Whether an expired account login invitation exists.
              * `1` - Expired account invitation exists.
              * `0` - Expired account invitation does **not** exist.
            example: 0
            enum:
            - 0
            - 1
          has_invite:
            type: integer
            description: |-
              Whether an account login invitation exists.
              * `1` - Account invitation exists.
              * `0` - Account invitation does **not** exist.
            example: 0
            enum:
            - 0
            - 1
          invite_expiration:
            type: integer
            description: When the invitation expires. A date in Unix time format.
            format: unix_timestamp
            example: 1591718154
          merge_candidates:
            type: array
            description: |-
              An array of objects that represents the service accounts that the system could merge for
              this subaccount.
            items:
              $ref: "#/components/schemas/SubaccountBase"
    EditUserSubaccountBase:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the subaccount's user.
          format: email
          example: user@example.com
        avatar_url:
          type: string
          description: The user's subaccount profile photo.
          format: url
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the subaccount.

            * `1` - Can delete.
            * `0` - **Cannot** delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's password.

            * `1` - Can change.
            * `0` - **Cannot** change.

            **Note:**

              The function returns a `0` value for subaccounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's disk usage quota.

            * `1` - Can change.
            * `0` - **Cannot** change.
          example: 0
          enum:
          - 0
          - 1
        dismissed:
          type: integer
          description: |-
            Whether the cPanel account user dismissed the merge prompt for the service account.

            **Note:**

              **Only** service accounts return this value.

            * `1` - Dismissed.
            * `0` - Did **not** dismiss.
          example: 1
          enum:
          - 0
          - 1
        domain:
          type: string
          description: |-
            The Subaccount user's associated domain.

            A domain that the cPanel account owns.
          format: domain
          example: example.com
        full_username:
          type: string
          description: The subaccount's username and domain name.
          example: user@example.com
        guid:
          type: string
          description: The subaccount unique identifier.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_expired_invite:
          type: integer
          description: |-
            Whether an expired account login invitation exists.

            * `1` - Expired account invitation exists.
            * `0` - Expired account invitation does **not** exist.
          example: 0
          enum:
          - 0
          - 1
        has_invite:
          type: integer
          description: |-
            Whether an account login invitation exists.

            * `1` - Account invitation exists.
            * `0` - Account invitation does **not** exist.
          example: 0
          enum:
          - 0
          - 1
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a `full_username` value with another service account.

            * `1` - Shares.
            * `0` - Does **not** share.
          example: 0
          enum:
          - 0
          - 1
        invite_expiration:
          type: integer
          description: When the invitation expires.
          format: unix_timestamp
          example: 1591718154
        issues:
          type: array
          description: Information about any issues or problems with the subaccount.
          items:
            $ref: "#/components/schemas/EditUserSubaccountBase_issues"
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.

            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** yet exist, but the user could create as part of a merge.
            * `null`- **Not** a merge candidate.
          example: hypothetical
        phone_number:
          type: string
          description: |-
            The subaccount user's phone number.

            The number conforms to the [ITU-T](https://en.wikipedia.org/wiki/ITU-T)'s [E.164](https://en.wikipedia.org/wiki/E.164)-recommended standard for the representation of telephone numbers.
          example: "+15551234567"
        real_name:
          type: string
          description: |-
            The name of the subaccount's user.

            * A first name, a last name, or a first name and last name.
            * An empty string.
          example: John Doe
        services:
          $ref: "#/components/schemas/EditUserSubaccountBase_services"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.

            * `1` - A special account.
            * `0` - **Not** a special account.
          example: 1
          enum:
          - 0
          - 1
        sub_account_exists:
          type: integer
          description: |-
            Whether a subaccount exists with the same username.

            * `1` - Exists.
            * `0` - Does **not** exist.

            **Note:**

              The function returns a `null` value if the account is **not** a service account.
          example: 0
          enum:
          - 0
          - 1
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the subaccount's service accounts.

            * `1` - Synchronized.
            * `0` - **Not** synchronized.

            **Note:**

              The function returns a `null` value if the account is **not** a subaccount.
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of account.

            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** exist, but that the user could create as part of a merge.
            * `service` - A service account.
            * `cpanel` - The cPanel account.
          example: sub
        username:
          type: string
          description: |-
            The username for the subaccount.

            * Length - 64 characters.
            * Characters - `a-z`, `A-Z`, `0-9`, dot (`.`), hyphen (`-`), underscore (`_`).

            **Note:**

              This value does **not** include the domain name.
          example: example
    FeatureDescriptions:
      properties:
        features:
          type: array
          description: The list of features in a role.
          example:
          - Backup
          - MySQLÂ® Databases
          - PHP
          items:
            type: string
        id:
          type: string
          description: The role's ID.
          example: database
        title:
          type: string
          description: The role's title.
          example: Database
    HashOutput:
      type: object
      properties:
        addon_domains:
          type: array
          description: An array of objects containing information about each addon
            domain.
          items:
            $ref: "#/components/schemas/Contents"
        main_domain:
          type: array
          description: An array of objects containing information about the main domain.
          items:
            $ref: "#/components/schemas/MainDomainContents"
        parked_domains:
          type: array
          description: An array of objects containing information about each parked
            domain.
          items:
            $ref: "#/components/schemas/Contents"
        sub_domains:
          type: array
          description: An array of objects containing information about each subdomain.
          items:
            $ref: "#/components/schemas/Contents"
    ListOutput:
      anyOf:
      - $ref: "#/components/schemas/Contents"
      - $ref: "#/components/schemas/MainDomainContents"
    LookupServiceAccountSubaccountBase:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the subaccount's user.
          format: email
          example: user@example.com
        avatar_url:
          type: string
          description: The user's subaccount profile photo.
          format: url
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the subaccount.

            * `1` - Can delete.
            * `0` - **Cannot** delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's password.

            * `1` - Can change.
            * `0` - **Cannot** change.

            **Note:**

              The function returns a `0` value for subaccounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's disk usage quota.

            * `1` - Can change.
            * `0` - **Cannot** change.
          example: 0
          enum:
          - 0
          - 1
        dismissed:
          type: integer
          description: |-
            Whether the cPanel account user dismissed the merge prompt for the service account.

            **Note:**

              **Only** service accounts return this value.

            * `1` - Dismissed.
            * `0` - Did **not** dismiss.
          example: 1
          enum:
          - 0
          - 1
        domain:
          type: string
          description: |-
            The Subaccount user's associated domain.

            A domain that the cPanel account owns.
          format: domain
          example: example.com
        full_username:
          type: string
          description: The subaccount's username and domain name.
          example: user@example.com
        guid:
          type: string
          description: The subaccount unique identifier.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_expired_invite:
          type: integer
          description: |-
            Whether an expired account login invitation exists.

            * `1` - Expired account invitation exists.
            * `0` - Expired account invitation does **not** exist.
          example: 0
          enum:
          - 0
          - 1
        has_invite:
          type: integer
          description: |-
            Whether an account login invitation exists.

            * `1` - Account invitation exists.
            * `0` - Account invitation does **not** exist.
          example: 0
          enum:
          - 0
          - 1
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a `full_username` value with another service account.

            * `1` - Shares.
            * `0` - Does **not** share.
          example: 0
          enum:
          - 0
          - 1
        invite_expiration:
          type: integer
          description: When the invitation expires.
          format: unix_timestamp
          example: 1591718154
        issues:
          type: array
          description: Information about any issues or problems with the subaccount.
          items:
            $ref: "#/components/schemas/EditUserSubaccountBase_issues"
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.

            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** yet exist, but the user could create as part of a merge.
            * `null`- **Not** a merge candidate.
          example: hypothetical
        phone_number:
          type: string
          description: |-
            The subaccount user's phone number.

            The number conforms to the [ITU-T](https://en.wikipedia.org/wiki/ITU-T)'s [E.164](https://en.wikipedia.org/wiki/E.164)-recommended standard for the representation of telephone numbers.
          example: "+15551234567"
        real_name:
          type: string
          description: |-
            The name of the subaccount's user.

            * A first name, a last name, or a first name and last name.
            * An empty string.
          example: John Doe
        services:
          $ref: "#/components/schemas/EditUserSubaccountBase_services"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.

            * `1` - A special account.
            * `0` - **Not** a special account.
          example: 1
          enum:
          - 0
          - 1
        sub_account_exists:
          type: integer
          description: |-
            Whether a subaccount exists with the same username.

            * `1` - Exists.
            * `0` - Does **not** exist.

            **Note:**

              The function returns a `null` value if the account is **not** a service account.
          example: 0
          enum:
          - 0
          - 1
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the subaccount's service accounts.

            * `1` - Synchronized.
            * `0` - **Not** synchronized.

            **Note:**

              The function returns a `null` value if the account is **not** a subaccount.
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of account.

            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** exist, but that the user could create as part of a merge.
            * `service` - A service account.
            * `cpanel` - The cPanel account.
          example: sub
        username:
          type: string
          description: |-
            The username for the subaccount.

            * Length - 64 characters.
            * Characters - `a-z`, `A-Z`, `0-9`, dot (`.`), hyphen (`-`), underscore (`_`).

            **Note:**

              This value does **not** include the domain name.
          example: example
    LookupServiceAccountSubaccountMergeCandidates:
      type: object
      properties:
        merge_candidates:
          type: array
          description: An array of objects that represents the service accounts that
            the system could merge for this subaccount.
          items:
            allOf:
            - $ref: "#/components/schemas/LookupServiceAccountSubaccountBase"
            - $ref: "#/components/schemas/LookupServiceAccountSubaccountMergeCandidatesEmpty"
    LookupServiceAccountSubaccountMergeCandidatesEmpty:
      type: object
      properties:
        merge_candidates:
          type: array
          description: An array of objects that represents the service accounts that
            the system could merge for this subaccount.
          items:
            type: object
    MainDomainContents:
      properties:
        all_aliases_valid:
          type: integer
          description: |-
            Whether a valid SSL certificate exists on the domain's aliases.

            * `1` âÂ A valid SSL certificate exists.
            * `0`Â âÂ A valid SSL certificate does **not** exist.

            **Note:**

            This return **only** appears if you set the `return_https_redirects_status` parameter to `1`.
          enum:
          - 1
          - 0
        can_https_redirect:
          type: integer
          description: |-
            Whether a valid SSL certificate exists or AutoSSL runs on the domain.

            * `1` âÂ A valid SSL certificate exists or AutoSSL runs.
            * `0` âÂ A valid SSL certificate does **not** exist and AutoSSL does **not** run.

            **Note:**

            This return **only** appears if you set the `return_https_redirects_status` parameter to `1`.
          enum:
          - 1
          - 0
        customlog:
          $ref: "#/components/schemas/MainDomainContents_customlog"
        documentroot:
          type: string
          description: The absolute path to the domain's document root.
          format: path
        domain:
          type: string
          description: The domain's name.
          format: domain
        group:
          type: string
          description: The domain's group.
        hascgi:
          type: integer
          description: |-
            Whether CGI is enabled for the domain.

            * `1` âÂ Enabled.
            * `0` âÂ Disabled.
          enum:
          - 1
          - 0
        homedir:
          type: string
          description: The absolute path to the cPanel account's home directory.
          format: path
        ifmodulemodsuphpc:
          $ref: "#/components/schemas/MainDomainContents_ifmodulemodsuphpc"
        ip:
          type: string
          description: The domain's IPv4 address.
          format: ipv4
        ipv6:
          type: string
          description: |-
            The domain's IPv6 address.

            * null âÂ The account does **not** use IPv6.
          format: ipv6
          nullable: true
        is_https_redirecting:
          type: integer
          description: |-
            Whether the domain redirects to `https`.

            * `1` âÂ The domain redirects to `https`.
            * `0` âÂ The domain does **not** redirect to `https`.

            **Note:**

            This return **only** appears if you set the `return_https_redirects_status` parameter to `1`.
          enum:
          - 1
          - 0
        no_cache_update:
          type: integer
          description: |-
            Whether the domain is subject to cache updates.

            * `1` âÂ The domain updates caches.
            * `0` âÂ The domain does **not** update caches.
          enum:
          - 1
          - 0
        owner:
          type: string
          description: The WHM account (`root` or a reseller) that owns the cPanel
            account.
        scriptalias:
          $ref: "#/components/schemas/MainDomainContents_scriptalias"
        serveradmin:
          type: string
          description: The domain's administrator's contact email address.
          format: email
        serveralias:
          type: string
          description: A space-separated list of the domain's aliases.
          format: domain
        servername:
          type: string
          description: The domain's identifier on the server.
          format: domain
        type:
          type: string
          description: |-
            The domain is the cPanel account's main domain.

            * `main_domain` is the only possible value.
          enum:
          - main_domain
        usecanonicalname:
          type: string
          description: |-
            The domain's Canonical Name (CNAME) setting.

            * `On` âÂ Use the domain's CNAME.
            * `Off` âÂ Do **not** use the domain's CNAME.
          enum:
          - "On"
          - "Off"
        user:
          type: string
          description: The cPanel account's username.
          format: username
        userdirprotect:
          type: integer
          description: |-
            The domain's [Apache `mod_userdir` Tweak](https://go.cpanel.net/whmdocsApachemod_userdirTweak)
            setting.

            * `1` âÂ Enabled.
            * `0` âÂ Disabled.
          enum:
          - 1
          - 0
    MarketProviderProductMetaData:
      type: object
      properties:
        base_name:
          type: string
          description: The provider's base name.
          nullable: true
        billing_type:
          type: string
          description: The provider's billing type
          example: one-time
        description:
          type: string
          description: The product's description.
          example: An Extended Validation (EV) SLL Certificate. Browsers consider
            this to be more secure a domain validated (DV) certificate.
        display_name:
          type: string
          description: The product's display name.
          example: cPanel DV Certificate
        enabled:
          type: integer
          description: |-
            Whether the product is enabled in the cPanel Market.
            * `1` - Enabled.
            * `0` - Not enabled.
          example: 1
          enum:
          - 0
          - 1
        icon:
          type: string
          description: The product's display icon.
          format: base64 image
          example: iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAKq2lDQ1BJQ0MgUHJvZmlsZQAASImV
            lgdQU+kWx7970xstAQEpoffeQUroofcmKiGhhBJiICDYEXEFVhQRacqCrjQFV6XIKiIWRFkUG/YF
            WRTUdbFgQ+Vd4BHee/N23rwzc3J/c+Z8/3vul++b+QNAvsfi81NgCQBSeRmCIA9nekRkFB33O8AC
            JUAC2kCFxU7nMwICfMDfxoe7AJp73jKY0/r7vv8akpy4dDYAUADCsZx0dirCp5DsZvMFGQCgkARq
            WRn8OS5HmCZABkT46BwnLHDPHMcu8O35npAgF4QnAMCTWSxBAgCk90idnslOQHTINISNeRwuD2FX
            hB3YiSwOwnkI66emps3xcYS1Y/9FJ+HfNGNFmixWgogXvmU+8K7cdH4KK/v/3I7/HakpwsV3qCJJ
            ThR4BiFPGWTPGpLTvEXMi/XzX2QuZ75/nhOFnqGLzE53iVpkDsvVe5GFyaGMRWYJltZyM5ghiyxI
            CxLpx6W7BYv045g+ohlS/EQcz3VnLnJOYkj4Imdyw/wWOT052Hupx0VUFwiDRDPHC9xF35iavjQb
            m7U0Q0ZiiOfSbBGiGThxrm6iOi9U1M/PcBZp8lMCRP1xKR6ienpmsGhtBnLAFjmJ5RWwpBMg2h/A
            AMEgFEk6CAOewBSYI4lMlRG3bu5MA5c0fraAm5CYQWcgtyaOzuSxDfXppsYmFgDM3cGFv/jd9fm7
            BcnGLtWykPUrviNnkbBUi3gKwDGkJs9aqmluBkAaBUBbL1soyFyooed+MIAIxAENyCF3XA254wbI
            ZJbADjgBN+AF/EEIiASrARskglQgAFlgA9gK8kEh2A32gUpQAw6BBnAMnAAd4Aw4Dy6Da+AGuAMe
            ghEwDl6CKfABzEAQhIMoEBWSg5QhDUgPMoWsIQfIDfKBgqBIKAZKgHiQENoAbYMKoRKoEqqFGqFf
            oNPQeagfGoLuQ6PQJPQW+gKjYDJMgxVhTdgItoYZsDccAq+CE+C1cA6cB++Cy+E6+CjcDp+Hr8F3
            4BH4JTyNAigSSgalgjJAWaNcUP6oKFQ8SoDahCpAlaHqUC2oLlQf6hZqBPUK9RmNRVPRdLQB2g7t
            iQ5Fs9Fr0ZvQRehKdAO6HX0RfQs9ip5Cf8dQMAoYPYwthomJwCRgsjD5mDLMEUwb5hLmDmYc8wGL
            xcpgtbBWWE9sJDYJux5bhD2AbcX2YIewY9hpHA4nh9PD2eP8cSxcBi4fV4E7ijuHu4kbx33Ck/DK
            eFO8Oz4Kz8Pn4svwTfhu/E38c/wMQYKgQbAl+BM4hGxCMeEwoYtwnTBOmCFKErWI9sQQYhJxK7Gc
            2EK8RHxEfEcikVRJNqRAEpe0hVROOk66QholfSZLkXXJLuRospC8i1xP7iHfJ7+jUCiaFCdKFCWD
            sovSSLlAeUL5JEYVMxRjinHENotVibWL3RR7LU4Q1xBniK8WzxEvEz8pfl38lQRBQlPCRYIlsUmi
            SuK0xLDEtCRV0kTSXzJVskiySbJfckIKJ6Up5SbFkcqTOiR1QWqMiqKqUV2obOo26mHqJeo4DUvT
            ojFpSbRC2jHaIG1KWkraXDpMep10lfRZ6REZlIymDFMmRaZY5oTMXZkvyxSXMZbFLdu5rGXZzWUf
            ZZfLOsnGyRbItsrekf0iR5dzk0uW2yPXIfdYHi2vKx8onyV/UP6S/KvltOV2y9nLC5afWP5AAVbQ
            VQhSWK9wSGFAYVpRSdFDka9YoXhB8ZWSjJKTUpJSqVK30qQyVdlBmatcqnxO+QVdms6gp9DL6Rfp
            UyoKKp4qQpValUGVGVUt1VDVXNVW1cdqRDVrtXi1UrVetSl1ZXVf9Q3qzeoPNAga1hqJGvs1+jQ+
            ampphmvu0OzQnNCS1WJq5Wg1az3Spmg7aq/VrtO+rYPVsdZJ1jmgc0MX1rXQTdSt0r2uB+tZ6nH1
            DugN6WP0bfR5+nX6wwZkA4ZBpkGzwaihjKGPYa5hh+FrI3WjKKM9Rn1G340tjFOMDxs/NJEy8TLJ
            NekyeWuqa8o2rTK9bUYxczfbbNZp9sZczzzO/KD5PQuqha/FDotei2+WVpYCyxbLSSt1qxiraqth
            a5p1gHWR9RUbjI2zzWabMzafbS1tM2xP2P5lZ2CXbNdkN7FCa0XcisMrxuxV7Vn2tfYjDnSHGIef
            HEYcVRxZjnWOT53UnDhOR5yeM3QYSYyjjNfOxs4C5zbnjy62LhtdelxRrh6uBa6DblJuoW6Vbk/c
            Vd0T3JvdpzwsPNZ79HhiPL0993gOMxWZbGYjc8rLymuj10Vvsnewd6X3Ux9dH4FPly/s6+W71/eR
            n4Yfz6/DH/gz/ff6Pw7QClgb8GsgNjAgsCrwWZBJ0IagvmBq8JrgpuAPIc4hxSEPQ7VDhaG9YeJh
            0WGNYR/DXcNLwkcijCI2RlyLlI/kRnZG4aLCoo5ETa90W7lv5Xi0RXR+9N1VWqvWrepfLb86ZfXZ
            NeJrWGtOxmBiwmOaYr6y/Fl1rOlYZmx17BTbhb2f/ZLjxCnlTMbZx5XEPY+3jy+Jn0iwT9ibMJno
            mFiW+Irrwq3kvknyTKpJ+pjsn1yfPJsSntKaik+NST3Nk+Il8y6mKaWtSxvi6/Hz+SNrbdfuWzsl
            8BYcSYfSV6V3ZtAQszMg1BZuF45mOmRWZX7KCss6uU5yHW/dQLZu9s7s5znuOT+vR69nr+/doLJh
            64bRjYyNtZugTbGbejerbc7bPL7FY0vDVuLW5K2/5RrnluS+3xa+rStPMW9L3th2j+3N+WL5gvzh
            HXY7an5A/8D9YXCn2c6Knd8LOAVXC40Lywq/FrGLrv5o8mP5j7O74ncNFlsWH9yN3c3bfXeP456G
            EsmSnJKxvb5720vppQWl7/et2ddfZl5Ws5+4X7h/pNynvLNCvWJ3xdfKxMo7Vc5VrdUK1TurPx7g
            HLh50OlgS41iTWHNl5+4P92r9ahtr9OsKzuEPZR56NnhsMN9P1v/3HhE/kjhkW/1vPqRhqCGi41W
            jY1NCk3FzXCzsHnyaPTRG8dcj3W2GLTUtsq0Fh4Hx4XHX/wS88vdE94nek9an2w5pXGquo3aVtAO
            tWe3T3Ukdox0RnYOnfY63dtl19X2q+Gv9WdUzlSdlT5b3E3szuuePZdzbrqH3/PqfML5sd41vQ8v
            RFy4fTHw4uAl70tXLrtfvtDH6Dt3xf7KmX7b/tNXra92XLO81j5gMdD2m8VvbYOWg+3Xra533rC5
            0TW0Yqj7puPN87dcb12+zbx97Y7fnaG7oXfvDUcPj9zj3Ju4n3L/zYPMBzMPtzzCPCp4LPG47InC
            k7rfdX5vHbEcOTvqOjrwNPjpwzH22Ms/0v/4Op73jPKs7Lny88YJ04kzk+6TN16sfDH+kv9y5lX+
            n5J/Vr/Wfn3qL6e/BqYipsbfCN7Mvi16J/eu/r35+97pgOknH1I/zHws+CT3qeGz9ee+L+Ffns9k
            fcV9Lf+m863ru/f3R7Ops7N8loA1bwUQZwDg+HgA3tYDQIkEgHoDAKLYgkeeD2jB188T+Dte8NHz
            YQnA4R4A5qwa0wmACoS1EKZuAWDOIiHWCDYzE+U/Iz3ezHRBiyyPWJOe2dm3swDgYgD4Njg7O1M+
            O/utDBkW8dfn/Ba8+byP4QKg/g7AOjX9jXVbwH/EPwCGGQVDbR7I2wAAAAlwSFlzAAALEwAACxMB
            AJqcGAAAAgRpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRv
            YmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6
            cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAg
            PHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0
            cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnRpZmY9Imh0dHA6
            Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9u
            PjM5MzwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWERpbWVuc2lv
            bj41MTU8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4x
            PC90aWZmOk9yaWVudGF0aW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRG
            Pgo8L3g6eG1wbWV0YT4KxfVkQAAACgpJREFUWAmNV1lvG9cZPTMcLsN9EUmJlCzJ+9oEaZAu6WIU
            CVD0pb+lr31x3/oL8hKgaOOiQVugRV10SZG2dlGntqPElmzZliWLEimJkkhxEfchh5ye71LMQ2Cg
            HXI4w5k793zL+c53R3McZ4T/Y+M4NUrTNHUcjYYYDm11brgMaLpLnTtwoPHzv7YJrPHliV/1oIyZ
            AA/6XTx//CmKu3nYgyH6/QEE78rrb+HC5dehiZ3jn1dN9aVrGnSZeDK5AE32ycgJeHHnJSqlAtwe
            E51mHceVffQ6NTTqFRQL27j1y/ewuvIZwTWMRuNoTeZ41VECKsHUD4q76HbbaszEmIlBo9FIGbeb
            38CtX/wUrUZFjZs5dRr+oB8ejwfBkIlIPIFgfA4f/eG3KB3uQdd15cirgCfXxpnU4Dozl7mR29zA
            Pg1pt5oYjmy4XC643W410WBg4Y8fvodWs4OF8+cxlV5QwAd7GzSoBZfhQnwqBq/P5PMWnj1+gFgy
            icRU+gsjJg5NwCdHuW643F40jluoVmp4uvoUhttAOBJBPJHA/OIi2rVDHOS34I/GGe4an+0TzIDH
            68dxowCfPwgzOMSFqxe4X8L6sw38+oMP8KMf/wTBQFBhSRplm6RT/ZH//Bg2may5NLgNLzyayUtA
            q9VBu9PFxtoKuod59G0X6kUJv0PiDWhkALMLZ7D29KlKkdc0MbB6+Oc//o3l53v4zpuXUC5uwz1/
            bhxJTVeYr4qEIXdUroXK2gjMOgxDg1ezkMu9RK9tMRKz+Nb3vst7OnIvPsfC6TOYnklhevYUKpUq
            U+bmuA5e5Kr45EUZ0zE/0o/v4b33f4ZAOIZsJouZ6TTS6TRi0RiCwSCjE4DP9MEYDGzmdJzvISVB
            rCwVC9h8toqdwwbOz6cxf3oej5ZX0Kx38e73r2Nl6QEuXbuKuYV5HB830LcsVkUVn9+7j93NEqw3
            stg/alEbdOXM/sEunj9/hkq1gS7H+v0mkskEMplpGH/501+Ryc4gNZ1CNB5HIBjA6vOXOCqUkT01
            i7m5Gdy9ex+f5i28/do5FHLb8IfCrJwen5vFTn4HAf5vVOpYnI4AzTJqlQpWn72ESQ4kOGf2VAap
            qZTihEGC2/aQz3dRrzfg8jj6jZer63jy6Cm2clsolcowmYJTmSnYFJlINIBHT9ZhUW9WN/IIDDs4
            e+40UjMM59QUmo0mfD4fRiRaMkrSuU3uHhgs0Xari4P9A2yu57C2to7t7QKqtSqEd5KGbDYDw8s8
            mAG/IsnAtrWVpcfOO+98jWXEXMWGWq8/cEL+APJPt5XAtFuzrJpjlp+blRBFeiaDWrVMHYjCzYq4
            du0iljfyGlPruGmEyzDg9XhVuXY7PWxsbDEdG5TxIdOja/poOCKzbQgXmH4nkghj/7CCkdvFHM84
            NZaox+dHLGLira9eQIq5K1fr6Pb6NJq5TKdU5TSbTbhIrMpxE8f1uiNixLqDQzGzbVvt/MOqcCEU
            DmAqEUc0GnMMqUUpr5HDKmBbklotHpRx9z99xONhjJgvP6O0eO4s5skHw+OCTo8GtgVn2ACVS+V6
            UKqhzxK9/MZrqLR76PVtiszYiJEzlAJTBMdQg+3YPJDwOnuBAPKrrBULpSSFKM1Gh9qew1GFHtEr
            h5M0qA9dhk60/rjWQP1oh2NHiJLVsWgUnY6lyOVnSvd29tCllgw5dlz/DC+Bxl1U5hjvrlQ8foO+
            QwLA+9KZVJuVUtE9hkZeiEKgUathmhGYSsaVuHg8BlLRCCKJGDQaFaAU23Sk37dQKOzig5sfolNr
            oUxSt6kRkgZp08IJg7vIvUaBUkI0JICgy5f4TAfoTRce0+cM+n006bmb0bSsvpLqKIGlEbXqdSQS
            EQST5+ANVfEV3cB6bgtrlPQgQrB6HVSKh1hfXqaEAeFYCkk6kWTJx6YS5EBUDKDbdF/CI+eOhIJW
            WATuk5hyTdJyjVq/ub6FK1cvYo51PTs7gw7Fp16tIBHJwGHTSqcSFJsqlj7+F+KZOWbUgS8SIFVZ
            nlwjCJ92Xmxi7fEjoRvi3giYgtgN3lVA45XMybmUBI3SGapyqY4LFxYRCQVUiNOsFL/XgOn1KRJG
            kmGs3L4NG26kZ7MUFzd+/+ePkGbFdFttusCokqzs/jB8HopdmDoQhsY0koQTcN7nKWOgTuQoBsjd
            TqevJHeBkpyjGH3y8R0Ut/NIZrPokPHN4gGqrR5uvv9zHLCCrr97nU+BXTMArxkg+JBz0QhZxjEK
            0tAGFLkheaEiMAGVhwRepUOWVSot7A0Mc4rCdO3qeaSnkySfH8lMho0miifLT3Dnb7dZuhVs7JSw
            VThk81pAkVXw6dIjhMMhpQVDgo+XamMMqTjBMtSv8pM3CKowxXtVtzo6vR5CpheF7T2l4abfhxBJ
            GI5PsVsWcO+zxziotGhMCKn5OeS2d2Dee4jM3Cmm5A4FzlLSSyw1pxIEpkKcFh+FnGqTC/JRFvAg
            obcZujZzGGRJFkoHVMgjyrwPJapjqXKM7fwu1pgSf8BUHbXB5mJ3W9jObamKCZF+smISLZCoisfi
            oEJS/7kgcUSiFA8IOhISqGGKpV1670glcHkm205+D4uLc2rxsbu7rxqRTcUrU7qbzQaOKNE7+SLe
            +uabFKEeTK4XRzZXEeLNiQECr7KrrjECCk9NLz8CLhvlkmSRRYZouiZPcOuzNK12F/IG0OL60SGz
            q/Um7t5/iFxhDy222KNGGVeunOGiZQalZlUq+gRc/JZKkBAw/yxtkWhyQCbnKMk/zyaWihBpDJ0u
            5o/xWUKiYroy5JjipDkuZGen8WB5HSOOYwPE21//Bi5fPoNc3iuzcbnHfIuyjcOg4E6mU/Oy88vG
            S2Icj5INa0ARojeqmchVGilkabLkNOqCpEVC17O6XNWk8cMffFtx5ezZWVykXkQpPpFIiE/wjUlW
            11xzDhkt6QnKzS8sUCQUwSHISZglPF0VZnlroXCI5SRjOhbHk2ebBO1DI7Es8kOiIxGZyyRx9dJp
            zGeTFBifCm+AxIVBIwjqD/uVECnckx8xRD66m8vwkdTcyQ0BGHL54+bEkmu+OinS+Px+VI4OsXtQ
            Yo/g5Lwr7BYDfaJuAR9Ljrxh5ERocly6wa6pdaE/HOH0KsQKRqBU5Hmim14vJ1LtiI46ir0Crlqo
            jDoZqR4y/Li/tIIBx8diIZYe1wbMsURClRkHieqVyxXcuXOfD5toNNtclh1xHOlG4k1IILQQr3Uv
            u5pcFJweV6w0X02osBX4eKCLQCm24pWVJ0zFBvXeBS/zyzdBjNcdLDcSRafxD6iAS9xnZuIq9/LO
            MM7+JPCCLhFhmoVo8no9YNlZJ8RT6jQB51idr94Wjev2LIRCEfzmd3/H9s6hYrjX64bJpiIeyLRL
            D5/j5q9ucd0wTTKPu6mLTkqEtBNHxRj15f//Ah9jPXoBZ9CgAAAAAElFTkSuQmCC
        icon_mime_type:
          type: string
          description: The icon's file type.
          format: MIME
          example: image/svg+xml
        license_term:
          minimum: 0
          type: integer
          description: The providers license term
          example: 0
        max_users:
          minimum: 0
          type: integer
          description: The maximum number of users.
          nullable: true
          example: 5
        maximum_server_price:
          type: number
          description: The maximum price that the system will allow for the product.
          format: currency
          nullable: true
          example: 500.1
        minimum_server_price:
          type: number
          description: The minimum price that the system will allow for the product.
          format: currency
          nullable: true
          example: 3
        price:
          type: number
          description: The product's price.
          format: currency
          nullable: true
          example: 3
        price_unit:
          type: string
          description: The currency code of the product's price.
          format: ISO-4217
          example: USD
        product:
          type: string
          description: The product name.
          example: Comodo EV Certificate
        product_category:
          type: string
          description: The product's category.
          example: N/A
        product_group:
          type: string
          description: The product's group.
          example: ssl_certificate
        product_id:
          minimum: 1
          type: integer
          description: The product's ID.
          example: 176
        provider_display_name:
          type: string
          description: |-
            The cPanel Market provider's display name.

            **Note:**

            The `_DISPLAY_NAME` attribute in the cPanel Market provider module contains this value.
          example: cPStore
        provider_name:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
        recommended:
          type: integer
          description: |-
            Whether the product is recommended.
            * `1` â We recommend the product.
            * `0` â We do not recommend the product.
          example: 1
          enum:
          - 0
          - 1
        requires_ip:
          type: integer
          description: |-
            Whether the product requires an IP address.
            * `1` â Requires an IP.
            * `0` â Does **not** require an IP.
          example: 1
          enum:
          - 0
          - 1
    MarketProviderProductMetaDataType:
      discriminator:
        propertyName: product_group
        mapping:
          ssl_certificate: "#/components/schemas/SSLMarketProviderProductMetaData"
      anyOf:
      - $ref: "#/components/schemas/MarketProviderProductMetaData"
      - $ref: "#/components/schemas/SSLMarketProviderProductMetaData"
    Payload:
      type: array
      description: The zoneâs content.
      items:
        discriminator:
          propertyName: type
          mapping:
            comment: "#/components/schemas/ResponseComment"
            control: "#/components/schemas/ResponseControl"
            record: "#/components/schemas/ResponseRR"
        oneOf:
        - $ref: "#/components/schemas/ResponseRR"
        - $ref: "#/components/schemas/ResponseControl"
        - $ref: "#/components/schemas/ResponseComment"
    ResponseBase:
      type: object
      properties:
        line_index:
          minimum: 0
          type: integer
          description: The lineâs index in the zone file.
          example: 22
        type:
          type: string
          description: |-
            The type of object in the zone file:

            * `record` - A resource record.
            * `control` - A control statement.
            * `comment` - A line comment.
          enum:
          - record
          - control
          - comment
    ResponseComment:
      title: Comment
      allOf:
      - $ref: "#/components/schemas/ResponseControlOrComment"
    ResponseControl:
      title: Control
      allOf:
      - $ref: "#/components/schemas/ResponseControlOrComment"
    ResponseControlOrComment:
      allOf:
      - $ref: "#/components/schemas/ResponseBase"
      - type: object
        properties:
          text_b64:
            type: string
            description: "The lineâs text, encoded to base64."
            format: base64
            example: OyBab25lIGZpbGUgZm9yIHRleGFzLmNvbQ==
    ResponseRR:
      title: Resource Record
      allOf:
      - $ref: "#/components/schemas/ResponseBase"
      - type: object
        properties:
          data_b64:
            type: array
            description: "The resource recordâs content, encoded to base64."
            items:
              type: string
              format: base64
              example: dGV4YXMuY29tLg==
          dname_b64:
            type: string
            description: "The resource recordâs owner, encoded to base64. A base64-decoded\
              \ owner that lacks a trailing period (`.`) is a subdomain of the zone."
            format: base64
            example: dGV4YXMuY29tLg==
          record_type:
            type: string
            description: The resource recordâs type.
            example: MX
          ttl:
            minimum: 0
            type: integer
            description: The resource recordâs TTL (Time-to-Live).
            example: 14400
    RestoreInProgress:
      properties:
        any_running:
          type: integer
          description: |-
            Whether the system is processing a backup restoration.

            * `1` - Restoration in progress. This is the only possible value.
          enum:
          - 1
        sites:
          type: array
          description: |-
            Information about the site that the system is actively restoring.

            **Note:**

            We have not implemented this return.
          items:
            $ref: "#/components/schemas/RestoreInProgress_sites"
    RestoreNotInProgress:
      properties:
        any_running:
          type: integer
          description: |-
            Whether the system is processing a backup restoration.

            * `0` - No restoration in progress. This is the only possible value.
          enum:
          - 0
        last_outcome:
          $ref: "#/components/schemas/RestoreNotInProgress_last_outcome"
        sites:
          type: object
          description: |-
            Information about the site that the system is actively restoring.

            **Note:**

            * This function returns an empty array when there is **not** an active
            backup restoration. This is the only possible value.
            * We have not implemented this return.
    SSLMarketProviderProductMetaData:
      type: object
      allOf:
      - $ref: "#/components/schemas/MarketProviderProductMetaData"
      - properties:
          x_certificate_term:
            type: array
            description: An array that indicates the length of time and unit of time
              that the product secures for.
            example:
            - "1"
            - year
            items:
              type: string
          x_identity_verification:
            $ref: "#/components/schemas/SSLMarketProviderProductMetaData_x_identity_verification"
          x_max_http_redirects:
            minimum: 1
            type: integer
            description: The maximum number of HTTP redirections that the provider
              allows during a Domain Control Validation (DCV) check of the domain
              or domains in the certificate.
          x_payment_trigger:
            type: string
            description: |-
              Indicates whether the provider charges immediately or when they issue the Secure Sockets Layer (SSL) certificate.

              * `checkout` â Collect payment and finalize immediately after checkout. Any failures to issue the certificate must prompt a separate refund.
              * `issuance` â Collect payment when the provider issues the certificate to the user.

              **Note:**

              For more information, read the _For certificate orders_ section of our [Guide to cPanel Market Provider Modules](https://go.cpanel.net/featureshowcasemarket) documentation.
            enum:
            - checkout
            - issuance
          x_price_per_domain:
            minimum: 1
            type: number
            description: The product's price per domain.
            example: 3
          x_price_per_domain_maximum:
            minimum: 1
            type: number
            description: The maximum `x_price_per_domain` value.
            example: 30
          x_price_per_domain_minimum:
            minimum: 1
            type: number
            description: The minimum `x_price_per_domain` value.
            example: 3
          x_price_per_wildcard_domain:
            minimum: 1
            type: number
            description: The price per domain for a wildcard certificate.
            example: 99
          x_price_per_wildcard_domain_maximum:
            minimum: 1
            type: number
            description: The maximum `x_prive_per_wildcard_domain` value.
            example: 30
          x_price_per_wildcard_domain_minimum:
            minimum: 1
            type: number
            description: The minimum `x_prive_per_wildcard_domain` value.
            example: 99
          x_ssl_per_domain_pricing:
            type: integer
            description: |-
              Whether the provider uses per-domain pricing for this certificate.
              * `1` â Uses per-domain pricing.
              * `0` â Does **not** use per-domain pricing.
            enum:
            - 0
            - 1
          x_supports_dns_dcv:
            type: integer
            description: |-
              Whether this product supports DNS-based DCV.
              * `1` â Supports DNS DCV.
              * `0` â Does `not` support DNS DCV.
            enum:
            - 0
            - 1
          x_validation_type:
            type: string
            description: The validation type.
            example: ev
          x_warn_after:
            minimum: 1
            type: integer
            description: "A length of time, in seconds, after which the cPanel interface\
              \ warns the user that a problem may exist with the order. The warning\
              \ suggests that they contact the cPanel Market provider's support contact."
            example: 14400
          x_wildcard_parent_domain_free:
            type: integer
            description: |-
              Indicates if a wildcard domain includes its parent domain. For example, `*.example.com` would include the `example.com` parent domain.

              * `1` â The domain does include its parent domain.
              * `0` â The domain does **not** include its parent domain.
            enum:
            - 0
            - 1
    Score:
      type: object
      properties:
        master:
          $ref: "#/components/schemas/Score_master"
        sub_scores:
          type: array
          description: |-
            Monitoring checks subcategory results.

            ** Note: **

            We use the check subcategory results to calculate the master results.
          example: []
          items:
            $ref: "#/components/schemas/Score_sub_scores"
          default: []
    ServiceAccount:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the subaccount's user.
          format: email
          nullable: true
          example: user@example.com
        avatar_url:
          type: string
          description: The user's subaccount profile photo.
          format: url
          nullable: true
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the subaccount.
            * `1` - Can delete.
            * `0` - Cannot delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's password.
            * `1` - Can change.
            * `0` - Cannot change.

            **Note:**

              The function returns a `0` value for subaccounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's disk usage quota.
            * `1` - Can change.
            * `0` - Cannot change.
          example: 0
          enum:
          - 0
          - 1
        dismissed:
          type: integer
          description: |-
            Whether the cPanel account user dismissed the merge prompt for the service account.
            * `1` - Dismissed.
            * `0` - Did not dismiss.

            **Note:**

              Only service accounts return this value.
          example: 1
          enum:
          - 0
          - 1
        domain:
          type: string
          description: The subaccount user's associated domain.
          format: domain
          nullable: true
          example: example.com
        full_username:
          type: string
          description: "The subaccount's username and domain name. A valid username,\
            \ the `@` character, and the associated domain."
          example: user@example.com
        guid:
          type: string
          description: The subaccount unique identifier.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a `full_username` value with another service account.
            * `1` - Shares.
            * `0` - Does not share.
          example: 0
          enum:
          - 0
          - 1
        issues:
          type: array
          description: Information about any issues or problems with the subaccount.
          items:
            $ref: "#/components/schemas/ServiceAccount_issues"
        merge_candidates:
          type: array
          description: An array of service account objects that the system could merge
            for this subaccount.
          items:
            $ref: "#/components/schemas/ServiceAccount"
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.
            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does not yet exist, but the user could create as part of a merge.
            * `null` - Not a merge candidate.
          nullable: true
          example: hypothetical
          enum:
          - sub
          - hypothetical
        phone_number:
          type: string
          description: "The subaccount user's phone number. A valid phone number that\
            \ conforms to [ITU-T's E.164-recommended standard](https://en.wikipedia.org/wiki/ITU-T)\
            \ for the representation of telephone numbers."
          nullable: true
          example: "+15551234567"
        real_name:
          type: string
          description: |-
            The name of the subaccount's user.
            * A first name, a last name, or a first name and last name.
            * An empty or null string.
          nullable: true
          example: John Doe
        services:
          $ref: "#/components/schemas/ServiceAccount_services"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.
            * `1` - A special account.
            * `0` - Not a special account.
          example: 0
          enum:
          - 0
          - 1
        sub_account_exists:
          type: integer
          description: |-
            Whether a subaccount exists with the same username.
            * `1` - Exists.
            * `0` - Does not exist.

            **Note:**

              The function returns a null value if the account is not a service account.
          example: 0
          enum:
          - 0
          - 1
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the subaccount's service accounts.
            * `1` - Synchronized.
            * `0` - Not synchronized.

            **Note:**

              The function returns a null value if the account is not a subaccount.
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of account.
            * `cpanel` - The cPanel account.
            * `hypothetical` - A hypothetical subaccount that does not exist, but that the user could create as part of a merge.
            * `service` - A service account.
            * `sub` - A subaccount.
          example: sub
          enum:
          - cpanel
          - hypothetical
          - service
          - sub
        username:
          type: string
          description: The username for the subaccount.
          format: username
          example: example
    Services:
      type: object
      properties:
        email:
          type: string
          example: 500*2**20
        ftp:
          type: integer
          example: 1
        webdisk:
          type: string
          example: rw
    SubaccountBase:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the subaccount's user.
          format: email
          example: user@example.com
        avatar_url:
          type: string
          description: The HTTPS URL to the user's subaccount profile photo image
            file.
          format: url
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the subaccount.
            * `1` - Can delete.
            * `0` - **Cannot** delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's password.
            * `1` - Can change.
            * `0` - **Cannot** change.

            **Note:**

              The function returns a `0` value for subaccounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's disk usage quota.
            * `1` - Can change.
            * `0` - **Cannot** change.
          example: 0
          enum:
          - 0
          - 1
        dismissed:
          type: integer
          description: |-
            Whether the cPanel account user dismissed the merge prompt for the service account.

            * `1` - Dismissed.
            * `0` - Did **not** dismiss.

            **Note:**

            **Only** service accounts return this value.
          example: 1
          enum:
          - 0
          - 1
        domain:
          type: string
          description: The subaccount user's associated domain.
          format: domain
          example: example.com
        full_username:
          type: string
          description: The subaccount's username and domain name.
          format: email
          example: user@example.com
        guid:
          type: string
          description: The subaccount unique identifier.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a `full_username` value with another service account.
            * `1` - Shares.
            * `0` - Does **not** share.
          example: 0
          enum:
          - 0
          - 1
        issues:
          type: array
          description: Information about any issues or problems with the subaccount.
          items:
            $ref: "#/components/schemas/SubaccountBase_issues"
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.
            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** yet exist, but the user could create as part of a merge.
            * `null` - **Not** a merge candidate.
          nullable: true
          example: hypothetical
        phone_number:
          type: string
          description: |-
            The subaccount user's phone number. A valid phone number that conforms to
            [ITU-T](https://en.wikipedia.org/wiki/ITU-T)'s
            [E.164](https://en.wikipedia.org/wiki/E.164)-recommended standard for the representation
            of telephone numbers.
          example: "+15551234567"
        real_name:
          type: string
          description: "The name of the subaccount's user, if provided."
          example: John Doe
        services:
          $ref: "#/components/schemas/SubaccountBase_services"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.
            * `1` - A special account.
            * `0` - **Not** a special account.
          example: 1
          enum:
          - 0
          - 1
        sub_account_exists:
          type: integer
          description: |-
            Whether a subaccount exists with the same username.
            * `1` - Exists.
            * `0` - Does not exist.

            **Note:**

            The function returns a null value if the account is **not** a service account.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the subaccount's service accounts.
            * `1` - Synchronized.
            * `0` - **Not** synchronized.

            **Note:**

            The function returns a null value if the account is **not** a subaccount.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of account.
            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does not exist, but that the user could create as part of a merge.
            * `service` - A service account.
            * `cpanel` - The cPanel account.
          example: sub
          enum:
          - sub
          - hypothetical
          - service
          - cpanel
        username:
          type: string
          description: The subaccount's username.
          example: example
    SubaccountMergeCandidates:
      type: object
      properties:
        merge_candidates:
          type: array
          description: An array of objects that represents the service accounts that
            the system could merge for this subaccount.
          items:
            allOf:
            - $ref: "#/components/schemas/EditUserSubaccountBase"
            - $ref: "#/components/schemas/SubaccountMergeCandidatesEmpty"
    SubaccountMergeCandidatesEmpty:
      type: object
      properties:
        merge_candidates:
          type: array
          description: An array of objects that represents the service accounts that
            the system could merge for this subaccount.
          items:
            type: object
    TeamArray:
      type: array
      items:
        $ref: "#/components/schemas/TeamArray_inner"
    TeamHash:
      type: object
      properties:
        owner:
          type: string
          example: cPanelUser
        users:
          $ref: "#/components/schemas/TeamHash_users"
    index_type:
      type: string
      description: |-
        The directory's indexing type.

        * `standard` - The directory uses directory indexing with standard formatting.
        * `disabled` - The directory doesn't use directory indexing.
        * `inherit` - The directory uses the system's default settings.
        * `fancy` - The directory uses directory indexing with ApacheÂ® `httpd`âs `FancyIndexing` directive. The directory will include additional information such as file size and the date of the file's last update.
      example: inherit
      enum:
      - standard
      - disabled
      - inherit
      - fancy
    trace_deliveryResponseBase:
      properties:
        address:
          type: string
          description: The email address of an email message recipient.
          format: email
          example: username@example.com
        type:
          type: string
          description: |-
            A type of trace node. The system returns this value to indicate the **end** of routing.
            * `bounce` - The system rejected the email's delivery.
            * `command` - The system will run a command when it receives an email.
            * `defer` - The system deferred the email.
            * `discard` - The system discarded the email.
            * `error` - The system encountered an error.
            * `local_delivery` - The system sent the email to a local mailbox.
            * `remote_delivery` - The system sent the email via Simple Mail Transfer Protocol (SMTP).
            * `routed` - The system routed the email elsewhere.

            **Note:**
            * The structure of the `destinations` return changes depending on the `type` return value.
            * The `routed` type can return any other type's data structure as part of the `destinations` return value.

            For more information, see the return structure for each `type` return value below:
          example: local_delivery
    trace_deliveryResponseBounce:
      allOf:
      - $ref: "#/components/schemas/trace_deliveryResponseBase"
      - type: object
        properties:
          destinations:
            $ref: "#/components/schemas/trace_deliveryResponseBounce_destinations"
    trace_deliveryResponseCommand:
      allOf:
      - $ref: "#/components/schemas/trace_deliveryResponseBase"
      - type: object
        properties:
          destinations:
            $ref: "#/components/schemas/trace_deliveryResponseCommand_destinations"
    trace_deliveryResponseDefer:
      allOf:
      - $ref: "#/components/schemas/trace_deliveryResponseBase"
      - type: object
        properties:
          destinations:
            $ref: "#/components/schemas/trace_deliveryResponseDefer_destinations"
    trace_deliveryResponseDiscard:
      allOf:
      - $ref: "#/components/schemas/trace_deliveryResponseBase"
      - type: object
        properties:
          destinations:
            $ref: "#/components/schemas/trace_deliveryResponseDiscard_destinations"
    trace_deliveryResponseError:
      allOf:
      - $ref: "#/components/schemas/trace_deliveryResponseBase"
      - type: object
        properties:
          destinations:
            $ref: "#/components/schemas/trace_deliveryResponseError_destinations"
    trace_deliveryResponseLocalDelivery:
      allOf:
      - $ref: "#/components/schemas/trace_deliveryResponseBase"
      - type: object
        properties:
          destinations:
            $ref: "#/components/schemas/trace_deliveryResponseLocalDelivery_destinations"
    trace_deliveryResponseRemoteDelivery:
      allOf:
      - $ref: "#/components/schemas/trace_deliveryResponseBase"
      - properties:
          destinations:
            type: array
            items:
              $ref: "#/components/schemas/trace_deliveryResponseRemoteDelivery_destinations"
    trace_deliveryType:
      discriminator:
        propertyName: type
        mapping:
          bounce: "#/components/schemas/trace_deliveryResponseBounce"
          command: "#/components/schemas/trace_deliveryResponseCommand"
          defer: "#/components/schemas/trace_deliveryResponseDefer"
          discard: "#/components/schemas/trace_deliveryResponseDiscard"
          error: "#/components/schemas/trace_deliveryResponseError"
          local_delivery: "#/components/schemas/trace_deliveryResponseLocalDelivery"
          remote_delivery: "#/components/schemas/trace_deliveryResponseRemoteDelivery"
      anyOf:
      - $ref: "#/components/schemas/trace_deliveryResponseBounce"
      - $ref: "#/components/schemas/trace_deliveryResponseCommand"
      - $ref: "#/components/schemas/trace_deliveryResponseDefer"
      - $ref: "#/components/schemas/trace_deliveryResponseDiscard"
      - $ref: "#/components/schemas/trace_deliveryResponseError"
      - $ref: "#/components/schemas/trace_deliveryResponseLocalDelivery"
      - $ref: "#/components/schemas/trace_deliveryResponseRemoteDelivery"
    trace_deliveryTypeDescription:
      type: string
      description: |-
        A type of trace node. The system returns this value to indicate the **end** of routing.
        * `bounce` - The system rejected the email's delivery.
        * `command` - The system will run a command when it receives an email.
        * `defer` - The system deferred the email.
        * `discard` - The system discarded the email.
        * `error` - The system encountered an error.
        * `local_delivery` - The system sent the email to a local mailbox.
        * `remote_delivery` - The system sent the email via Simple Mail Transfer Protocol (SMTP).
        * `routed` - The system routed the email elsewhere.

        **Note:**
        * The structure of the `destinations` return changes depending on the `type` return value.
        * The `routed` type can return any other type's data structure as part of the `destinations` return value.
      example: local_delivery
    schemas-TeamArray:
      type: array
      items:
        $ref: "#/components/schemas/schemasTeamArray_inner"
    inline_response_200:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list
        module:
          type: string
          description: The name of the module called.
          example: AccountEnhancements
        result:
          $ref: "#/components/schemas/inline_response_200_result"
    inline_response_200_1:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list
        module:
          type: string
          description: The name of the module called.
          example: AccountEnhancements
        result:
          $ref: "#/components/schemas/inline_response_200_1_result"
    host:
      type: string
      example: example.com
      oneOf:
      - type: string
        description: A valid hostname.
        format: hostname
      - type: string
        description: A valid IP address.
        format: ipv4
    inline_response_200_2:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fullbackup_to_ftp
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_2_result"
    inline_response_200_3:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fullbackup_to_homedir
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_2_result"
    host_1:
      type: string
      example: example.com
      oneOf:
      - type: string
        description: A valid hostname.
        format: hostname
      - type: string
        description: A valid IP address.
        format: ipv4
    inline_response_200_4:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fullbackup_to_scp_with_key
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_2_result"
    host_2:
      type: string
      example: example.com
      oneOf:
      - type: string
        description: A valid ipv4 address.
        format: ipv4
      - type: string
        description: A valid hostname.
        format: hostname
    inline_response_200_5:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fullbackup_to_scp_with_password
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_2_result"
    inline_response_200_6:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_backups
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_6_result"
    Backup_restore_databases_body:
      type: object
      properties:
        file:
          type: string
          format: binary
    inline_response_200_7:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: restore_databases
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_7_result"
    Backup_restore_email_filters_body:
      type: object
      properties:
        backup:
          type: string
          format: binary
    inline_response_200_8:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: restore_email_filters
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_8_result"
    Backup_restore_email_forwarders_body:
      type: object
      properties:
        backup:
          type: string
          format: binary
    inline_response_200_9:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: restore_email_forwarders
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_9_result"
    Backup_restore_files_body:
      type: object
      properties:
        backup:
          type: string
          format: binary
    inline_response_200_10:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: restore_files
        module:
          type: string
          description: The name of the module called.
          example: Backup
        result:
          $ref: "#/components/schemas/inline_response_200_10_result"
    inline_response_200_11:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_enabled_protocols
        module:
          type: string
          description: The name of the module called.
          example: Bandwidth
        result:
          $ref: "#/components/schemas/inline_response_200_11_result"
    inline_response_200_12:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_retention_periods
        module:
          type: string
          description: The name of the module called.
          example: Bandwidth
        result:
          $ref: "#/components/schemas/inline_response_200_12_result"
    grouping:
      anyOf:
      - type: string
        enum:
        - domain
        - protocol
      - type: string
        enum:
        - year
        - year_month
        - year_month_day
        - year_month_day_hour
        - year_month_day_hour_minute
    inline_response_200_13:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: query
        module:
          type: string
          description: The name of the module called.
          example: Bandwidth
        result:
          $ref: "#/components/schemas/inline_response_200_13_result"
    inline_response_200_14:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: strict
        module:
          type: string
          description: The name of the module called.
          example: Batch
        result:
          $ref: "#/components/schemas/inline_response_200_14_result"
    inline_response_200_15:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_ip
        module:
          type: string
          description: The name of the module called.
          example: BlockIP
        result:
          $ref: "#/components/schemas/inline_response_200_15_result"
    inline_response_200_16:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_ip
        module:
          type: string
          description: The name of the module called.
          example: BlockIP
        result:
          $ref: "#/components/schemas/inline_response_200_16_result"
    inline_response_200_17:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: blacklist_messages
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_17_result"
    inline_response_200_18:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_messages
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_18_result"
    inline_response_200_19:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: deliver_messages
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_19_result"
    inline_response_200_20:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_allowlist
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_20_result"
    inline_response_200_21:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_blocklist
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_21_result"
    inline_response_200_22:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_configuration
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_22_result"
    inline_response_200_23:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_email_template
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_23_result"
    inline_response_200_24:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_forwarders
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_24_result"
    inline_response_200_25:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_ignorelist
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_25_result"
    inline_response_200_26:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_log
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_26_result"
    email:
      anyOf:
      - type: string
        format: email
        example: user@example.com
      - type: string
        format: username
        example: exampleuser
    inline_response_200_27:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_message
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_27_result"
    inline_response_200_28:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_status
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_28_result"
    inline_response_200_29:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: ignore_messages
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_29_result"
    inline_response_200_30:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_email_templates
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_30_result"
    inline_response_200_31:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_queued_messages
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_31_result"
    inline_response_200_32:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: process_messages
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_32_result"
    inline_response_200_33:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: reset_email_template
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_33_result"
    inline_response_200_34:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: save_configuration
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_34_result"
    inline_response_200_35:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: save_email_template
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_36:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_allowlist
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_36_result"
    inline_response_200_37:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_blocklist
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_36_result"
    inline_response_200_38:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_forwarders
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_39:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_ignorelist
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_36_result"
    email_1:
      oneOf:
      - type: string
        format: email
        example: user@example.com
      - type: string
        format: username
        example: exampleuser
    inline_response_200_40:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_status
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_41:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: whitelist_messages
        module:
          type: string
          description: The name of the module called.
          example: BoxTrapper
        result:
          $ref: "#/components/schemas/inline_response_200_41_result"
    inline_response_200_42:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_application_information
        module:
          type: string
          description: The name of the module called.
          example: Branding
        result:
          $ref: "#/components/schemas/inline_response_200_42_result"
    inline_response_200_43:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_applications
        module:
          type: string
          description: The name of the module called.
          example: Branding
        result:
          $ref: "#/components/schemas/inline_response_200_43_result"
    inline_response_200_44:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_available_applications
        module:
          type: string
          description: The name of the module called.
          example: Branding
        result:
          $ref: "#/components/schemas/inline_response_200_44_result"
    inline_response_200_45:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_information_for_applications
        module:
          type: string
          description: The name of the module called.
          example: Branding
        result:
          $ref: "#/components/schemas/inline_response_200_45_result"
    inline_response_200_46:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_delegate
        module:
          type: string
          description: The name of the module called.
          example: CCS
        result:
          $ref: "#/components/schemas/inline_response_200_46_result"
    inline_response_200_47:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_delegates
        module:
          type: string
          description: The name of the module called.
          example: CCS
        result:
          $ref: "#/components/schemas/inline_response_200_47_result"
    inline_response_200_48:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_users
        module:
          type: string
          description: The name of the module called.
          example: CCS
        result:
          $ref: "#/components/schemas/inline_response_200_48_result"
    inline_response_200_49:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_delegate
        module:
          type: string
          description: The name of the module called.
          example: CCS
        result:
          $ref: "#/components/schemas/inline_response_200_46_result"
    inline_response_200_50:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update_delegate
        module:
          type: string
          description: The name of the module called.
          example: CCS
        result:
          $ref: "#/components/schemas/inline_response_200_46_result"
    inline_response_200_51:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_delegate
        module:
          type: string
          description: The name of the module called.
          example: CPDAVD
        result:
          $ref: "#/components/schemas/inline_response_200_51_result"
    inline_response_200_52:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_delegates
        module:
          type: string
          description: The name of the module called.
          example: CPDAVD
        result:
          $ref: "#/components/schemas/inline_response_200_52_result"
    inline_response_200_53:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_users
        module:
          type: string
          description: The name of the module called.
          example: CPDAVD
        result:
          $ref: "#/components/schemas/inline_response_200_53_result"
    inline_response_200_54:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: manage_collection
        module:
          type: string
          description: The name of the module called.
          example: CPDAVD
        result:
          $ref: "#/components/schemas/inline_response_200_54_result"
    inline_response_200_55:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_delegate
        module:
          type: string
          description: The name of the module called.
          example: CPDAVD
        result:
          $ref: "#/components/schemas/inline_response_200_55_result"
    inline_response_200_56:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update_delegate
        module:
          type: string
          description: The name of the module called.
          example: CPDAVD
        result:
          $ref: "#/components/schemas/inline_response_200_51_result"
    inline_response_200_57:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: doimport
        module:
          type: string
          description: The name of the module called.
          example: CSVImport
        result:
          $ref: "#/components/schemas/inline_response_200_57_result"
    inline_response_200_58:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: read
        module:
          type: string
          description: The name of the module called.
          example: CacheBuster
        result:
          $ref: "#/components/schemas/inline_response_200_58_result"
    inline_response_200_59:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update
        module:
          type: string
          description: The name of the module called.
          example: CacheBuster
        result:
          $ref: "#/components/schemas/inline_response_200_59_result"
    inline_response_200_60:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_exim_ports
        module:
          type: string
          description: The name of the module called.
          example: Chkservd
        result:
          $ref: "#/components/schemas/inline_response_200_60_result"
    inline_response_200_61:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_exim_ports_ssl
        module:
          type: string
          description: The name of the module called.
          example: Chkservd
        result:
          $ref: "#/components/schemas/inline_response_200_61_result"
    inline_response_200_62:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_dom
        module:
          type: string
          description: The name of the module called.
          example: Chrome
        result:
          $ref: "#/components/schemas/inline_response_200_62_result"
    inline_response_200_63:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: check_disinfection_status
        module:
          type: string
          description: The name of the module called.
          example: ClamScanner
        result:
          $ref: "#/components/schemas/inline_response_200_63_result"
    ClamScanner_disinfect_files_body:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: string
            description: |-
              The name of the property is a path to the file. The path may be either a full path to the file or a users home directory relative path to the file.

              The value of the property is on of the following:

              * `cleanse_mailbox` â Cleanse the specified mailbox.
              * `delete` â Delete the file.
              * `quarantine` â Move the file to the quarantine directory.
              * `ignore` - Ignore the file.

              **Note**

              Only include files that the scanner identified as containing a virus. All other file paths passed will be ignored.
            enum:
            - cleanse_mailbox
            - delete
            - quarantine
            - ignore
          description: The user provides the actions to perform on each specific infected
            file found in the scan.
          example:
            home/unsure: ignore
            home/virus1: delete
            home/virus2: quarantine
    inline_response_200_64:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disinfect_files
        module:
          type: string
          description: The name of the module called.
          example: ClamScanner
        result:
          $ref: "#/components/schemas/inline_response_200_64_result"
    inline_response_200_65:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_scan_paths
        module:
          type: string
          description: The name of the module called.
          example: ClamScanner
        result:
          $ref: "#/components/schemas/inline_response_200_65_result"
    inline_response_200_66:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_scan_status
        module:
          type: string
          description: The name of the module called.
          example: ClamScanner
        result:
          $ref: "#/components/schemas/inline_response_200_66_result"
    inline_response_200_67:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_infected_files
        module:
          type: string
          description: The name of the module called.
          example: ClamScanner
        result:
          $ref: "#/components/schemas/inline_response_200_67_result"
    inline_response_200_68:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: start_scan
        module:
          type: string
          description: The name of the module called.
          example: ClamScanner
        result:
          $ref: "#/components/schemas/inline_response_200_36_result"
    inline_response_200_69:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_email_addresses
        module:
          type: string
          description: The name of the module called.
          example: ContactInformation
        result:
          $ref: "#/components/schemas/inline_response_200_69_result"
    inline_response_200_70:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create
        module:
          type: string
          description: The name of the module called.
          example: DynamicDNS
        result:
          $ref: "#/components/schemas/inline_response_200_70_result"
    inline_response_200_71:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_enabled
        module:
          type: string
          description: The name of the module called.
          example: Contactus
        result:
          $ref: "#/components/schemas/inline_response_200_71_result"
    inline_response_200_72:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_shared_global_addressbook
        module:
          type: string
          description: The name of the module called.
          example: DAV
        result:
          $ref: "#/components/schemas/inline_response_200_72_result"
    inline_response_200_73:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_shared_global_addressbook
        module:
          type: string
          description: The name of the module called.
          example: DAV
        result:
          $ref: "#/components/schemas/inline_response_200_73_result"
    user:
      oneOf:
      - type: string
        description: A cPanel account.
        format: username
        example: username
      - type: string
        description: A valid email account.
        format: email
        example: username@example.com
    inline_response_200_74:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_calendar_contacts_config
        module:
          type: string
          description: The name of the module called.
          example: DAV
        result:
          $ref: "#/components/schemas/inline_response_200_74_result"
    inline_response_200_75:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_shared_global_addressbook
        module:
          type: string
          description: The name of the module called.
          example: DAV
        result:
          $ref: "#/components/schemas/inline_response_200_75_result"
    inline_response_200_76:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_dav_service_enabled
        module:
          type: string
          description: The name of the module called.
          example: DAV
        result:
          $ref: "#/components/schemas/inline_response_200_76_result"
    inline_response_200_77:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_horde_enabled
        module:
          type: string
          description: The name of the module called.
          example: DAV
        result:
          $ref: "#/components/schemas/inline_response_200_77_result"
    inline_response_200_78:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: check_domains_via_dns
        module:
          type: string
          description: The name of the module called.
          example: DCV
        result:
          $ref: "#/components/schemas/inline_response_200_78_result"
    inline_response_200_79:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: check_domains_via_http
        module:
          type: string
          description: The name of the module called.
          example: DCV
        result:
          $ref: "#/components/schemas/inline_response_200_79_result"
    inline_response_200_80:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: ensure_domains_can_pass_dcv
        module:
          type: string
          description: The name of the module called.
          example: DCV
        result:
          $ref: "#/components/schemas/inline_response_200_80_result"
    inline_response_200_81:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: ensure_domains_reside_only_locally
        module:
          type: string
          description: The name of the module called.
          example: DNS
        result:
          $ref: "#/components/schemas/inline_response_200_81_result"
    inline_response_200_82:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_local_authority
        module:
          type: string
          description: The name of the module called.
          example: DNS
        result:
          $ref: "#/components/schemas/inline_response_200_82_result"
    inline_response_200_83:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_alias_available
        module:
          type: string
          description: The name of the module called.
          example: DNS
        result:
          $ref: "#/components/schemas/inline_response_200_83_result"
    inline_response_200_84:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: lookup
        module:
          type: string
          description: The name of the module called.
          example: DNS
        result:
          $ref: "#/components/schemas/inline_response_200_84_result"
    inline_response_200_85:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: mass_edit_zone
        module:
          type: string
          description: The name of the module called.
          example: DNS
        result:
          $ref: "#/components/schemas/inline_response_200_85_result"
    inline_response_200_86:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: parse_zone
        module:
          type: string
          description: The name of the module called.
          example: DNS
        result:
          $ref: "#/components/schemas/inline_response_200_86_result"
    inline_response_200_87:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: swap_ip_in_zones
        module:
          type: string
          description: The name of the module called.
          example: DNS
        result:
          $ref: "#/components/schemas/inline_response_200_87_result"
    inline_response_200_88:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: activate_zone_key
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_88_result"
    inline_response_200_89:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_zone_key
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_89_result"
    inline_response_200_90:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: deactivate_zone_key
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_90_result"
    inline_response_200_91:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_dnssec
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_91_result"
    inline_response_200_92:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_dnssec
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_92_result"
    inline_response_200_93:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: export_zone_dnskey
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_93_result"
    inline_response_200_94:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: export_zone_key
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_94_result"
    inline_response_200_95:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fetch_ds_records
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_95_result"
    inline_response_200_96:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: import_zone_key
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_96_result"
    inline_response_200_97:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_zone_key
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_97_result"
    inline_response_200_98:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_nsec3
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_98_result"
    inline_response_200_99:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: unset_nsec3
        module:
          type: string
          description: The name of the module called.
          example: DNSSEC
        result:
          $ref: "#/components/schemas/inline_response_200_99_result"
    inline_response_200_100:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_indexing
        module:
          type: string
          description: The name of the module called.
          example: DirectoryIndexes
        result:
          $ref: "#/components/schemas/inline_response_200_100_result"
    inline_response_200_101:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_directories
        module:
          type: string
          description: The name of the module called.
          example: DirectoryIndexes
        result:
          $ref: "#/components/schemas/inline_response_200_101_result"
    inline_response_200_102:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_indexing
        module:
          type: string
          description: The name of the module called.
          example: DirectoryIndexes
        result:
          $ref: "#/components/schemas/inline_response_200_102_result"
    inline_response_200_103:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_user
        module:
          type: string
          description: The name of the module called.
          example: DirectoryPrivacy
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_104:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: configure_directory_protection
        module:
          type: string
          description: The name of the module called.
          example: DirectoryPrivacy
        result:
          $ref: "#/components/schemas/inline_response_200_104_result"
    inline_response_200_105:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_user
        module:
          type: string
          description: The name of the module called.
          example: DirectoryPrivacy
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_106:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_directory_protected
        module:
          type: string
          description: The name of the module called.
          example: DirectoryPrivacy
        result:
          $ref: "#/components/schemas/inline_response_200_106_result"
    inline_response_200_107:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_directories
        module:
          type: string
          description: The name of the module called.
          example: DirectoryPrivacy
        result:
          $ref: "#/components/schemas/inline_response_200_107_result"
    inline_response_200_108:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_users
        module:
          type: string
          description: The name of the module called.
          example: DirectoryPrivacy
        result:
          $ref: "#/components/schemas/inline_response_200_108_result"
    inline_response_200_109:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_directories
        module:
          type: string
          description: The name of the module called.
          example: DirectoryProtection
        result:
          $ref: "#/components/schemas/inline_response_200_109_result"
    inline_response_200_110:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: domains_data
        module:
          type: string
          description: The name of the module called.
          example: DomainInfo
        result:
          $ref: "#/components/schemas/inline_response_200_110_result"
    inline_response_200_111:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_domains
        module:
          type: string
          description: The name of the module called.
          example: DomainInfo
        result:
          $ref: "#/components/schemas/inline_response_200_111_result"
    inline_response_200_112:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: main_domain_builtin_subdomain_aliases
        module:
          type: string
          description: The name of the module called.
          example: DomainInfo
        result:
          $ref: "#/components/schemas/inline_response_200_112_result"
    inline_response_200_113:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: single_domain_data
        module:
          type: string
          description: The name of the module called.
          example: DomainInfo
        result:
          $ref: "#/components/schemas/inline_response_200_113_result"
    inline_response_200_114:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create
        module:
          type: string
          description: The name of the module called.
          example: DynamicDNS
        result:
          $ref: "#/components/schemas/inline_response_200_114_result"
    inline_response_200_115:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete
        module:
          type: string
          description: The name of the module called.
          example: DynamicDNS
        result:
          $ref: "#/components/schemas/inline_response_200_115_result"
    inline_response_200_116:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list
        module:
          type: string
          description: The name of the module called.
          example: DynamicDNS
        result:
          $ref: "#/components/schemas/inline_response_200_116_result"
    inline_response_200_117:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: recreate
        module:
          type: string
          description: The name of the module called.
          example: DynamicDNS
        result:
          $ref: "#/components/schemas/inline_response_200_117_result"
    inline_response_200_118:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list
        module:
          type: string
          description: The name of the module called.
          example: DynamicDNS
        result:
          $ref: "#/components/schemas/inline_response_200_70_result"
    inline_response_200_119:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: account_name
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_119_result"
    inline_response_200_120:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_auto_responder
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_121:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_domain_forwarder
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_121_result"
    inline_response_200_122:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_forwarder
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_122_result"
    inline_response_200_123:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_list
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_123_result"
    inline_response_200_124:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_mailman_delegates
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_124_result"
    inline_response_200_125:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_mx
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_125_result"
    email_2:
      example: user
      oneOf:
      - type: string
        format: email
      - type: string
    quota:
      example: 500
      oneOf:
      - type: string
        enum:
        - unlimited
      - minimum: 0
        type: integer
      default: The defined system value.
    inline_response_200_126:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_pop
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_126_result"
    inline_response_200_127:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_spam_filter
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_123_result"
    inline_response_200_128:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: browse_mailbox
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_128_result"
    inline_response_200_129:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: change_mx
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_129_result"
    inline_response_200_130:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: check_fastmail
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_130_result"
    inline_response_200_131:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: count_auto_responders
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_131_result"
    inline_response_200_132:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: count_filters
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_132_result"
    inline_response_200_133:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: count_forwarders
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_133_result"
    inline_response_200_134:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: count_lists
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_134_result"
    inline_response_200_135:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: count_pops
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_135_result"
    inline_response_200_136:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_auto_responder
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_137:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_domain_forwarder
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_138:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_filter
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_123_result"
    inline_response_200_139:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_forwarder
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_140:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_held_messages
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_140_result"
    inline_response_200_141:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_list
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_123_result"
    inline_response_200_142:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_mx
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_142_result"
    email_3:
      anyOf:
      - type: string
        format: email
        example: user@domain.com
      - type: string
        example: user
    inline_response_200_143:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_pop
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_144:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_filter
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_144_result"
    inline_response_200_145:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_mailbox_autocreate
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_145_result"
    inline_response_200_146:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_spam_assassin
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_146_result"
    inline_response_200_147:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_spam_autodelete
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_147_result"
    inline_response_200_148:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_spam_box
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    account:
      oneOf:
      - type: string
        format: username
        example: username
      - type: string
        format: email
        example: username@example.com
    inline_response_200_149:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: dispatch_client_settings
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_149_result"
    inline_response_200_150:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: edit_pop_quota
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_150_result"
    inline_response_200_151:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_filter
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_151_result"
    inline_response_200_152:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_mailbox_autocreate
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_152_result"
    inline_response_200_153:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_spam_assassin
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_154:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_spam_box
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_155:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: export_lists
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_155_result"
    inline_response_200_156:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fetch_charmaps
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_156_result"
    inline_response_200_157:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fts_rescan_mailbox
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_157_result"
    inline_response_200_158:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: generate_mailman_otp
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_158_result"
    inline_response_200_159:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_auto_responder
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_159_result"
    inline_response_200_160:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_charsets
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_160_result"
    inline_response_200_161:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_client_settings
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_161_result"
    inline_response_200_162:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_default_email_quota
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_162_result"
    inline_response_200_163:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_default_email_quota_mib
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_163_result"
    inline_response_200_164:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_disk_usage
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_164_result"
    inline_response_200_165:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_filter
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_165_result"
    inline_response_200_166:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_held_message_count
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_166_result"
    inline_response_200_167:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_lists_total_disk_usage
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_167_result"
    inline_response_200_168:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_mailbox_autocreate
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_168_result"
    inline_response_200_169:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_mailman_delegates
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_169_result"
    inline_response_200_170:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_main_account_disk_usage
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_170_result"
    inline_response_200_171:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_main_account_disk_usage_bytes
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_171_result"
    inline_response_200_172:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_max_email_quota
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_172_result"
    inline_response_200_173:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_max_email_quota_mib
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_173_result"
    inline_response_200_174:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_pop_quota
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_174_result"
    inline_response_200_175:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_spam_settings
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_175_result"
    account_1:
      oneOf:
      - type: string
        format: email
        example: user@example.com
      - type: string
        format: username
        example: user
    inline_response_200_176:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_webmail_settings
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_176_result"
    inline_response_200_177:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_delegated_mailman_lists
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_177_result"
    inline_response_200_178:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_plaintext_authentication
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_178_result"
    inline_response_200_179:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: hold_outgoing
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_180:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_auto_responders
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_180_result"
    inline_response_200_181:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_default_address
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_181_result"
    inline_response_200_182:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_domain_forwarders
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_182_result"
    account_2:
      oneOf:
      - type: string
        format: email
        example: user@example.com
      - type: string
        format: username
        example: username
    inline_response_200_183:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_filters
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_183_result"
    inline_response_200_184:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_filters_backups
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_184_result"
    inline_response_200_185:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_forwarders
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_185_result"
    inline_response_200_186:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_forwarders_backups
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_186_result"
    inline_response_200_187:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_lists
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_187_result"
    inline_response_200_188:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_mail_domains
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_188_result"
    inline_response_200_189:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_mxs
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_189_result"
    inline_response_200_190:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_pops
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_190_result"
    inline_response_200_191:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_pops_with_disk
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_191_result"
    inline_response_200_192:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_system_filter_info
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_192_result"
    inline_response_200_193:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: passwd_list
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_193_result"
    email_4:
      anyOf:
      - type: string
        format: email
        example: username@example.com
      - type: string
        format: username
        example: username
    inline_response_200_194:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: passwd_pop
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_195:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: release_outgoing
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_196:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_mailman_delegates
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_196_result"
    inline_response_200_197:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: reorder_filters
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_193_result"
    inline_response_200_198:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_always_accept
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_198_result"
    inline_response_200_199:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_default_address
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_199_result"
    inline_response_200_200:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_list_privacy_options
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_123_result"
    mx_host:
      oneOf:
      - type: string
        description: A domain name.
        format: domain
      - type: string
        description: An IPv4 address.
        format: ipv4
      - type: string
        description: An IPv6 address.
        format: ipv6
    inline_response_200_201:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_manual_mx_redirects
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_201_result"
    inline_response_200_202:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: stats_db_status
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_202_result"
    action:
      anyOf:
      - type: string
        enum:
        - deliver
        - fail
        - finish
        - save
        - pipe
    match:
      anyOf:
      - type: string
        example: matches
        enum:
        - is
        - matches
        - contains
        - does not contain
        - begins
        - does not begin
        - ends
        - does not end
        - does not match
        - is above
        - is not above
        - is below
        - is not below
    part:
      anyOf:
      - type: string
        enum:
        - $h_x-Spam-Bar
        - $h_x-Spam-Score
        - $h_X-Spam-Status
        - $h_List-id
        - $header_from
        - $header_subject
        - $header_to
        - $reply_address
        - $message_body
        - $message_headers
        - "$h_to, $h_cc"
        - not delivered
        - error_message
    val:
      anyOf:
      - type: string
      - type: integer
    dest:
      anyOf:
      - type: string
        description: A valid email address.
        format: email
        example: cheesecloth@example.com
      - type: string
        description: A valid file or application path.
        format: path
        example: /path/to/thing
      default: ""
    opt:
      anyOf:
      - type: string
        enum:
        - and
        - or
      default: and
    inline_response_200_203:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: store_filter
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_203_result"
    inline_response_200_204:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: suspend_incoming
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_205:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: suspend_login
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_206:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: suspend_outgoing
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_206_result"
    inline_response_200_207:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_207_metadata"
    inline_response_200_208:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: trace_delivery
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_208_result"
    inline_response_200_209:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: trace_filter
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_209_result"
    inline_response_200_210:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: unset_manual_mx_redirects
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_210_result"
    inline_response_200_211:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: unsuspend_incoming
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_211_result"
    inline_response_200_212:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: unsuspend_login
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_212_result"
    inline_response_200_213:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: unsuspend_outgoing
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_212_result"
    inline_response_200_214:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: verify_password
        module:
          type: string
          description: The name of the module called.
          example: Email
        result:
          $ref: "#/components/schemas/inline_response_200_214_result"
    inline_response_200_215:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: apply_dmarc
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_215_result"
    inline_response_200_216:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_dkim
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_216_result"
    inline_response_200_217:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_dkim
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_217_result"
    inline_response_200_218:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: ensure_dkim_keys_exist
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_218_result"
    inline_response_200_219:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fetch_dkim_private_keys
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_219_result"
    inline_response_200_220:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: install_dkim_private_keys
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_220_result"
    inline_response_200_221:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: install_spf_records
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_221_result"
    inline_response_200_222:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_dmarc
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_222_result"
    inline_response_200_223:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: validate_current_dkims
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_223_result"
    inline_response_200_224:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: validate_current_dmarcs
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_224_result"
    inline_response_200_225:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: validate_current_ptrs
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_225_result"
    inline_response_200_226:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: validate_current_spfs
        module:
          type: string
          description: The name of the module called.
          example: EmailAuth
        result:
          $ref: "#/components/schemas/inline_response_200_226_result"
    inline_response_200_227:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_authn_link
        module:
          type: string
          description: The name of the module called.
          example: ExternalAuthentication
        result:
          $ref: "#/components/schemas/inline_response_200_227_result"
    inline_response_200_228:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: configured_modules
        module:
          type: string
          description: The name of the module called.
          example: ExternalAuthentication
        result:
          $ref: "#/components/schemas/inline_response_200_228_result"
    inline_response_200_229:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_authn_links
        module:
          type: string
          description: The name of the module called.
          example: ExternalAuthentication
        result:
          $ref: "#/components/schemas/inline_response_200_229_result"
    inline_response_200_230:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_external_auth_modules_configured
        module:
          type: string
          description: The name of the module called.
          example: ExternalAuthentication
        result:
          $ref: "#/components/schemas/inline_response_200_230_result"
    inline_response_200_231:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_authn_link
        module:
          type: string
          description: The name of the module called.
          example: ExternalAuthentication
        result:
          $ref: "#/components/schemas/inline_response_200_231_result"
    inline_response_200_232:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_feature_metadata
        module:
          type: string
          description: The name of the module called.
          example: Features
        result:
          $ref: "#/components/schemas/inline_response_200_232_result"
    inline_response_200_233:
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_feature
        module:
          type: string
          description: The name of the module called.
          example: Features
        result:
          $ref: "#/components/schemas/inline_response_200_233_result"
    inline_response_200_234:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_features
        module:
          type: string
          description: The name of the module called.
          example: Features
        result:
          $ref: "#/components/schemas/inline_response_200_234_result"
    inline_response_200_235:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: autocompletedir
        module:
          type: string
          description: The name of the module called.
          example: Fileman
        result:
          $ref: "#/components/schemas/inline_response_200_235_result"
    inline_response_200_236:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: empty_trash
        module:
          type: string
          description: The name of the module called.
          example: Fileman
        result:
          $ref: "#/components/schemas/inline_response_200_236_result"
    inline_response_200_237:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_file_content
        module:
          type: string
          description: The name of the module called.
          example: Fileman
        result:
          $ref: "#/components/schemas/inline_response_200_237_result"
    inline_response_200_238:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_file_information
        module:
          type: string
          description: The name of the module called.
          example: Fileman
        result:
          $ref: "#/components/schemas/inline_response_200_238_result"
    inline_response_200_239:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_files
        module:
          type: string
          description: The name of the module called.
          example: Fileman
        result:
          $ref: "#/components/schemas/inline_response_200_239_result"
    inline_response_200_240:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: save_file_content
        module:
          type: string
          description: The name of the module called.
          example: Fileman
        result:
          $ref: "#/components/schemas/inline_response_200_240_result"
    inline_response_200_241:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: transcode
        module:
          type: string
          description: The name of the module called.
          example: Fileman
        result:
          $ref: "#/components/schemas/inline_response_200_241_result"
    inline_response_200_242:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: upload_files
        module:
          type: string
          description: The name of the module called.
          example: Fileman
        result:
          $ref: "#/components/schemas/inline_response_200_242_result"
    inline_response_200_243:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_ftp
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_244:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: allows_anonymous_ftp
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_244_result"
    inline_response_200_245:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: allows_anonymous_ftp_incoming
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_245_result"
    inline_response_200_246:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_ftp
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_247:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: ftp_exists
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_247_result"
    inline_response_200_248:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_ftp_daemon_info
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_248_result"
    inline_response_200_249:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_port
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_249_result"
    inline_response_200_250:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_quota
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_250_result"
    inline_response_200_251:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_welcome_message
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_251_result"
    inline_response_200_252:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: kill_session
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_252_result"
    inline_response_200_253:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_ftp
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_253_result"
    inline_response_200_254:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_ftp_with_disk
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_254_result"
    inline_response_200_255:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_sessions
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_255_result"
    inline_response_200_256:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: passwd
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_257:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: server_name
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_257_result"
    inline_response_200_258:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_anonymous_ftp
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_259:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_anonymous_ftp_incoming
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_260:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_homedir
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_261:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_quota
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_262:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_welcome_message
        module:
          type: string
          description: The name of the module called.
          example: Ftp
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_263:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_keypair
        module:
          type: string
          description: The name of the module called.
          example: GPG
        result:
          $ref: "#/components/schemas/inline_response_200_263_result"
    inline_response_200_264:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: export_public_key
        module:
          type: string
          description: The name of the module called.
          example: GPG
        result:
          $ref: "#/components/schemas/inline_response_200_264_result"
    inline_response_200_265:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: export_secret_key
        module:
          type: string
          description: The name of the module called.
          example: GPG
        result:
          $ref: "#/components/schemas/inline_response_200_265_result"
    inline_response_200_266:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: generate_key
        module:
          type: string
          description: The name of the module called.
          example: GPG
        result:
          $ref: "#/components/schemas/inline_response_200_34_result"
    inline_response_200_267:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: import_key
        module:
          type: string
          description: The name of the module called.
          example: GPG
        result:
          $ref: "#/components/schemas/inline_response_200_267_result"
    inline_response_200_268:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_public_keys
        module:
          type: string
          description: The name of the module called.
          example: GPG
        result:
          $ref: "#/components/schemas/inline_response_200_268_result"
    inline_response_200_269:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_secret_keys
        module:
          type: string
          description: The name of the module called.
          example: GPG
        result:
          $ref: "#/components/schemas/inline_response_200_269_result"
    inline_response_200_270:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: convert_file
        module:
          type: string
          description: The name of the module called.
          example: ImageManager
        result:
          $ref: "#/components/schemas/inline_response_200_270_result"
    inline_response_200_271:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_thumbnails
        module:
          type: string
          description: The name of the module called.
          example: ImageManager
        result:
          $ref: "#/components/schemas/inline_response_200_271_result"
    inline_response_200_272:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_dimensions
        module:
          type: string
          description: The name of the module called.
          example: ImageManager
        result:
          $ref: "#/components/schemas/inline_response_200_272_result"
    inline_response_200_273:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: resize_image
        module:
          type: string
          description: The name of the module called.
          example: ImageManager
        result:
          $ref: "#/components/schemas/inline_response_200_273_result"
    inline_response_200_274:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fetch_url
        module:
          type: string
          description: The name of the module called.
          example: Integration
        result:
          $ref: "#/components/schemas/inline_response_200_274_result"
    host_name:
      oneOf:
      - type: string
        description: A valid hostname.
        format: hostname
        example: hostname.example.com
      - type: string
        description: A valid IP address.
        format: ipv4
        example: 192.0.2.102
    inline_response_200_275:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create
        module:
          type: string
          description: The name of the module called.
          example: KnownHosts
        result:
          $ref: "#/components/schemas/inline_response_200_275_result"
    host_name_1:
      example: host.example.com
      oneOf:
      - type: string
        format: hostname
      - type: string
        format: ipv4
    inline_response_200_276:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete
        module:
          type: string
          description: The name of the module called.
          example: KnownHosts
        result:
          $ref: "#/components/schemas/inline_response_200_231_result"
    host_name_2:
      example: host.example.com
      oneOf:
      - type: string
        format: hostname
      - type: string
        format: ipv4
    inline_response_200_277:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update
        module:
          type: string
          description: The name of the module called.
          example: KnownHosts
        result:
          $ref: "#/components/schemas/inline_response_200_277_result"
    host_name_3:
      example: host.example.com
      oneOf:
      - type: string
        format: ipv4
      - type: string
        format: domain
    inline_response_200_278:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: verify
        module:
          type: string
          description: The name of the module called.
          example: KnownHosts
        result:
          $ref: "#/components/schemas/inline_response_200_278_result"
    inline_response_200_279:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_get_domain_handler
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_279_result"
    inline_response_200_280:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_get_impacted_domains
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_280_result"
    inline_response_200_281:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_get_installed_versions
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_281_result"
    inline_response_200_282:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_get_system_default_version
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_282_result"
    inline_response_200_283:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_get_vhost_versions
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_283_result"
    inline_response_200_284:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_ini_get_user_basic_directives
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_284_result"
    inline_response_200_285:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_ini_get_user_content
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_285_result"
    inline_response_200_286:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_ini_get_user_paths
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_286_result"
    inline_response_200_287:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_ini_set_user_basic_directives
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_287_result"
    inline_response_200_288:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_ini_set_user_content
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_288_result"
    inline_response_200_289:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: php_set_vhost_versions
        module:
          type: string
          description: The name of the module called.
          example: LangPHP
        result:
          $ref: "#/components/schemas/inline_response_200_289_result"
    inline_response_200_290:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_last_or_current_logged_in_ip
        module:
          type: string
          description: The name of the module called.
          example: LastLogin
        result:
          $ref: "#/components/schemas/inline_response_200_290_result"
    inline_response_200_291:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_attributes
        module:
          type: string
          description: The name of the module called.
          example: Locale
        result:
          $ref: "#/components/schemas/inline_response_200_291_result"
    inline_response_200_292:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_locales
        module:
          type: string
          description: The name of the module called.
          example: Locale
        result:
          $ref: "#/components/schemas/inline_response_200_292_result"
    inline_response_200_293:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_locale
        module:
          type: string
          description: The name of the module called.
          example: Locale
        result:
          $ref: "#/components/schemas/inline_response_200_293_result"
    inline_response_200_294:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_settings
        module:
          type: string
          description: The name of the module called.
          example: LogManager
        result:
          $ref: "#/components/schemas/inline_response_200_294_result"
    inline_response_200_295:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_archives
        module:
          type: string
          description: The name of the module called.
          example: LogManager
        result:
          $ref: "#/components/schemas/inline_response_200_295_result"
    inline_response_200_296:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_settings
        module:
          type: string
          description: The name of the module called.
          example: LogManager
        result:
          $ref: "#/components/schemas/inline_response_200_296_result"
    account_3:
      anyOf:
      - type: string
        format: email
      - type: string
        format: username
    inline_response_200_297:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: expunge_mailbox_messages
        module:
          type: string
          description: The name of the module called.
          example: Mailboxes
        result:
          $ref: "#/components/schemas/inline_response_200_293_result"
    account_4:
      anyOf:
      - type: string
        format: email
      - type: string
        format: username
    inline_response_200_298:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: expunge_messages_for_mailbox_guid
        module:
          type: string
          description: The name of the module called.
          example: Mailboxes
        result:
          $ref: "#/components/schemas/inline_response_200_298_result"
    inline_response_200_299:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_mailbox_status_list
        module:
          type: string
          description: The name of the module called.
          example: Mailboxes
        result:
          $ref: "#/components/schemas/inline_response_200_299_result"
    inline_response_200_300:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_utf8_mailbox_names
        module:
          type: string
          description: The name of the module called.
          example: Mailboxes
        result:
          $ref: "#/components/schemas/inline_response_200_300_result"
    inline_response_200_301:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_utf8_mailbox_names
        module:
          type: string
          description: The name of the module called.
          example: Mailboxes
        result:
          $ref: "#/components/schemas/inline_response_200_301_result"
    inline_response_200_302:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: cancel_pending_ssl_certificate
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_302_result"
    inline_response_200_303:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_shopping_cart
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_303_result"
    inline_response_200_304:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_all_products
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_304_result"
    inline_response_200_305:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_certificate_status_details
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_305_result"
    inline_response_200_306:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_login_url
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_306_result"
    inline_response_200_307:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_pending_ssl_certificates
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_307_result"
    inline_response_200_308:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_provider_specific_dcv_constraints
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_308_result"
    inline_response_200_309:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_providers_list
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_309_result"
    inline_response_200_310:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_ssl_certificate_if_available
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_310_result"
    inline_response_200_311:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: process_ssl_pending_queue
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_311_result"
    inline_response_200_312:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: request_ssl_certificates
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_312_result"
    inline_response_200_313:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_status_of_pending_queue_items
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_313_result"
    inline_response_200_314:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_url_after_checkout
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_314_result"
    inline_response_200_315:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: validate_login_token
        module:
          type: string
          description: The name of the module called.
          example: Market
        result:
          $ref: "#/components/schemas/inline_response_200_315_result"
    inline_response_200_316:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_handler
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_316_result"
    inline_response_200_317:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_hotlink
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_318:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_mime
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_319:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_redirect
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_319_result"
    inline_response_200_320:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_handler
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_320_result"
    inline_response_200_321:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_hotlink
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_321_result"
    inline_response_200_322:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_mime
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_322_result"
    inline_response_200_323:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_redirect
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_324:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_redirect
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_324_result"
    inline_response_200_325:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_handlers
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_325_result"
    inline_response_200_326:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_hotlinks
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_326_result"
    inline_response_200_327:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_mime
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_327_result"
    inline_response_200_328:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_redirects
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_328_result"
    inline_response_200_329:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: redirect_info
        module:
          type: string
          description: The name of the module called.
          example: Mime
        result:
          $ref: "#/components/schemas/inline_response_200_329_result"
    inline_response_200_330:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_all_domains
        module:
          type: string
          description: The name of the module called.
          example: ModSecurity
        result:
          $ref: "#/components/schemas/inline_response_200_330_result"
    inline_response_200_331:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_domains
        module:
          type: string
          description: The name of the module called.
          example: ModSecurity
        result:
          $ref: "#/components/schemas/inline_response_200_331_result"
    inline_response_200_332:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_all_domains
        module:
          type: string
          description: The name of the module called.
          example: ModSecurity
        result:
          $ref: "#/components/schemas/inline_response_200_332_result"
    inline_response_200_333:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_domains
        module:
          type: string
          description: The name of the module called.
          example: ModSecurity
        result:
          $ref: "#/components/schemas/inline_response_200_333_result"
    inline_response_200_334:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_modsecurity_installed
        module:
          type: string
          description: The name of the module called.
          example: ModSecurity
        result:
          $ref: "#/components/schemas/inline_response_200_334_result"
    inline_response_200_335:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_domains
        module:
          type: string
          description: The name of the module called.
          example: ModSecurity
        result:
          $ref: "#/components/schemas/inline_response_200_335_result"
    host_3:
      oneOf:
      - type: string
        format: ipv4
        example: 192.168.1.6
      - type: string
        format: domain
        example: remote.example.com
      - type: string
        description: IP address range with the percent (%) symbol as a wildcard.
        example: 192.168.%.%
      - type: string
        description: IP address range in CIDR format.
        example: 192.168.0.0/16
    inline_response_200_336:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_host
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_336_result"
    host_4:
      oneOf:
      - type: string
        format: ipv4
        example: 192.168.1.6
      - type: string
        format: domain
        example: remote.example.com
      - type: string
        description: IP address range with the percent (%) symbol as a wildcard.
        example: 192.168.%.%
      - type: string
        description: IP address range in CIDR format.
        example: 192.168.0.0/16
    inline_response_200_337:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_host_note
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_337_result"
    inline_response_200_338:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: check_database
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_338_result"
    inline_response_200_339:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_database
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_339_result"
    inline_response_200_340:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_user
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_340_result"
    inline_response_200_341:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_database
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_336_result"
    inline_response_200_342:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_host
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_343:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_user
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_344:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: dump_database_schema
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_344_result"
    inline_response_200_345:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_host_notes
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_345_result"
    inline_response_200_346:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_privileges_on_database
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_346_result"
    inline_response_200_347:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_restrictions
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_347_result"
    inline_response_200_348:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_server_information
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_348_result"
    inline_response_200_349:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_databases
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_349_result"
    inline_response_200_350:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_routines
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_350_result"
    inline_response_200_351:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_users
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_351_result"
    inline_response_200_352:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: locate_server
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_352_result"
    inline_response_200_353:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: rename_database
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_353_result"
    inline_response_200_354:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: rename_user
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_150_result"
    inline_response_200_355:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: repair_database
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_355_result"
    inline_response_200_356:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: revoke_access_to_database
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_336_result"
    inline_response_200_357:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_password
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_357_result"
    inline_response_200_358:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_privileges_on_database
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_359:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: setup_db_and_user
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_359_result"
    inline_response_200_360:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update_privileges
        module:
          type: string
          description: The name of the module called.
          example: Mysql
        result:
          $ref: "#/components/schemas/inline_response_200_316_result"
    inline_response_200_361:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: clear_cache
        module:
          type: string
          description: The name of the module called.
          example: NginxCaching
        result:
          $ref: "#/components/schemas/inline_response_200_361_result"
    inline_response_200_362:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_cache
        module:
          type: string
          description: The name of the module called.
          example: NginxCaching
        result:
          $ref: "#/components/schemas/inline_response_200_361_result"
    inline_response_200_363:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_cache
        module:
          type: string
          description: The name of the module called.
          example: NginxCaching
        result:
          $ref: "#/components/schemas/inline_response_200_361_result"
    inline_response_200_364:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: reset_cache_config
        module:
          type: string
          description: The name of the module called.
          example: NginxCaching
        result:
          $ref: "#/components/schemas/inline_response_200_361_result"
    inline_response_200_365:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_notifications_count
        module:
          type: string
          description: The name of the module called.
          example: Notifications
        result:
          $ref: "#/components/schemas/inline_response_200_365_result"
    inline_response_200_366:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: firstfile_relative_uri
        module:
          type: string
          description: The name of the module called.
          example: Parser
        result:
          $ref: "#/components/schemas/inline_response_200_366_result"
    inline_response_200_367:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_application
        module:
          type: string
          description: The name of the module called.
          example: PassengerApps
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_368:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: edit_application
        module:
          type: string
          description: The name of the module called.
          example: PassengerApps
        result:
          $ref: "#/components/schemas/inline_response_200_368_result"
    inline_response_200_369:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_application
        module:
          type: string
          description: The name of the module called.
          example: PassengerApps
        result:
          $ref: "#/components/schemas/inline_response_200_369_result"
    inline_response_200_370:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: ensure_deps
        module:
          type: string
          description: The name of the module called.
          example: PassengerApps
        result:
          $ref: "#/components/schemas/inline_response_200_370_result"
    inline_response_200_371:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_applications
        module:
          type: string
          description: The name of the module called.
          example: PassengerApps
        result:
          $ref: "#/components/schemas/inline_response_200_371_result"
    inline_response_200_372:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: register_application
        module:
          type: string
          description: The name of the module called.
          example: PassengerApps
        result:
          $ref: "#/components/schemas/inline_response_200_372_result"
    inline_response_200_373:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: unregister_application
        module:
          type: string
          description: The name of the module called.
          example: PassengerApps
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_374:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_required_strength
        module:
          type: string
          description: The name of the module called.
          example: PasswdStrength
        result:
          $ref: "#/components/schemas/inline_response_200_374_result"
    Personalization_get_body:
      type: object
      properties:
        names:
          type: array
          description: List of NVData keys to query the server about.
          items:
            type: string
      example:
        names:
        - coffee
        - milk
    inline_response_200_375:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get
        module:
          type: string
          description: The name of the module called.
          example: Personalization
        result:
          $ref: "#/components/schemas/inline_response_200_375_result"
    Personalization_set_body:
      type: object
      properties:
        personalization:
          type: object
          additionalProperties:
            type: string
          description: The NVData keys and values to update.
      example:
        personalization:
          coffee: hot
          milk: cold
    inline_response_200_376:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set
        module:
          type: string
          description: The name of the module called.
          example: Personalization
        result:
          $ref: "#/components/schemas/inline_response_200_376_result"
    inline_response_200_377:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: can_show_promotions
        module:
          type: string
          description: The name of the module called.
          example: Plugins
        result:
          $ref: "#/components/schemas/inline_response_200_377_result"
    inline_response_200_378:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_database
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_33_result"
    inline_response_200_379:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_user
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_379_result"
    inline_response_200_380:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_database
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_381:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_user
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_381_result"
    inline_response_200_382:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_restrictions
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_382_result"
    inline_response_200_383:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: grant_all_privileges
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_383_result"
    inline_response_200_384:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_databases
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_384_result"
    inline_response_200_385:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_users
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_385_result"
    inline_response_200_386:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: rename_database
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_386_result"
    inline_response_200_387:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: rename_user
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_386_result"
    inline_response_200_388:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: rename_user_no_password
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_33_result"
    inline_response_200_389:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: revoke_all_privileges
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_33_result"
    inline_response_200_390:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_password
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_391:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update_privileges
        module:
          type: string
          description: The name of the module called.
          example: Postgresql
        result:
          $ref: "#/components/schemas/inline_response_200_316_result"
    inline_response_200_392:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: send_test_message
        module:
          type: string
          description: The name of the module called.
          example: Pushbullet
        result:
          $ref: "#/components/schemas/inline_response_200_392_result"
    inline_response_200_393:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_local_quota_info
        module:
          type: string
          description: The name of the module called.
          example: Quota
        result:
          $ref: "#/components/schemas/inline_response_200_393_result"
    inline_response_200_394:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_quota_info
        module:
          type: string
          description: The name of the module called.
          example: Quota
        result:
          $ref: "#/components/schemas/inline_response_200_394_result"
    inline_response_200_395:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_accounts
        module:
          type: string
          description: The name of the module called.
          example: Resellers
        result:
          $ref: "#/components/schemas/inline_response_200_395_result"
    inline_response_200_396:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_usages
        module:
          type: string
          description: The name of the module called.
          example: ResourceUsage
        result:
          $ref: "#/components/schemas/inline_response_200_396_result"
    inline_response_200_397:
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: directory_listing
        module:
          type: string
          description: The name of the module called.
          example: Restore
        result:
          $ref: "#/components/schemas/inline_response_200_397_result"
    inline_response_200_398:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_users
        module:
          type: string
          description: The name of the module called.
          example: Restore
        result:
          $ref: "#/components/schemas/inline_response_200_398_result"
    inline_response_200_399:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: query_file_info
        module:
          type: string
          description: The name of the module called.
          example: Restore
        result:
          $ref: "#/components/schemas/inline_response_200_399_result"
    backupID:
      example: weekly/2017-07-03
      anyOf:
      - type: string
        description: A daily backup file from a specified backup date.
        format: ISO-8601 Date
      - type: string
        description: An incremental daily backup.
        enum:
        - incremental
      - type: string
        description: A weekly or monthly incremental backup.
        enum:
        - weekly/incremental
        - monthly/incremental
      - type: string
        description: A weekly or monthly backup from a specified backup date.
    inline_response_200_400:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: restore_file
        module:
          type: string
          description: The name of the module called.
          example: Restore
        result:
          $ref: "#/components/schemas/inline_response_200_400_result"
    inline_response_200_401:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_port
        module:
          type: string
          description: The name of the module called.
          example: SSH
        result:
          $ref: "#/components/schemas/inline_response_200_401_result"
    inline_response_200_402:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_autossl_excluded_domains
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_403:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: can_ssl_redirect
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_403_result"
    inline_response_200_404:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: check_shared_cert
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_404_result"
    inline_response_200_405:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_cert
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_405_result"
    inline_response_200_406:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_csr
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_406_result"
    inline_response_200_407:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_key
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_407_result"
    inline_response_200_408:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_ssl
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_408_result"
    inline_response_200_409:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_mail_sni
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_409_result"
    inline_response_200_410:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_mail_sni
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_410_result"
    inline_response_200_411:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fetch_best_for_domain
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_411_result"
    inline_response_200_412:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fetch_cert_info
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_412_result"
    inline_response_200_413:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fetch_certificates_for_fqdns
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_413_result"
    SSL_fetch_key_and_cabundle_for_certificate_body:
      type: object
      properties:
        certificate:
          type: string
          description: The certificate file.
          format: pem-certificate
    inline_response_200_414:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: fetch_key_and_cabundle_for_certificate
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_414_result"
    inline_response_200_415:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: find_certificates_for_key
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_415_result"
    inline_response_200_416:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: find_csrs_for_key
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_416_result"
    inline_response_200_417:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: generate_cert
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_417_result"
    inline_response_200_418:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: generate_csr
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_418_result"
    inline_response_200_419:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: generate_key
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_419_result"
    inline_response_200_420:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_autossl_excluded_domains
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_420_result"
    inline_response_200_421:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_autossl_problems
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_421_result"
    inline_response_200_422:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_cabundle
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_422_result"
    domain:
      anyOf:
      - type: string
        description: A valid domain.
        format: domain
      - type: string
        description: A valid email address.
        format: email
      - type: string
        description: A valid cPanel username.
        format: username
    inline_response_200_423:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_cn_name
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_423_result"
    inline_response_200_424:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: install_ssl
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_424_result"
    inline_response_200_425:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: installed_host
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_425_result"
    inline_response_200_426:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: installed_hosts
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_426_result"
    inline_response_200_427:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_autossl_check_in_progress
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_427_result"
    inline_response_200_428:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_mail_sni_supported
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_428_result"
    inline_response_200_429:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_sni_supported
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_429_result"
    inline_response_200_430:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_certs
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_430_result"
    inline_response_200_431:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_csrs
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_431_result"
    inline_response_200_432:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_keys
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_432_result"
    inline_response_200_433:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_ssl_items
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_433_result"
    inline_response_200_434:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: mail_sni_status
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_434_result"
    inline_response_200_435:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: rebuild_mail_sni_config
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_435_result"
    inline_response_200_436:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: rebuildssldb
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_436_result"
    inline_response_200_437:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_autossl_excluded_domains
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_438:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_autossl_excluded_domains
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_439:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_cert_friendly_name
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_440:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_csr_friendly_name
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_441:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_default_key_type
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_441_result"
    inline_response_200_442:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_key_friendly_name
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_443:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_primary_ssl
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_444:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: show_cert
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_444_result"
    inline_response_200_445:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: show_csr
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_445_result"
    inline_response_200_446:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: show_key
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_446_result"
    inline_response_200_447:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: start_autossl_check
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_447_result"
    inline_response_200_448:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: toggle_ssl_redirect_for_domains
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_448_result"
    SSL_upload_cert_body:
      type: object
      properties:
        crt:
          type: string
          description: The certificate file.
          format: pem-certificate
        friendly_name:
          type: string
          description: The certificate's friendly name.
    inline_response_200_449:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: upload_cert
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_449_result"
    SSL_upload_key_body:
      type: object
      properties:
        crt:
          type: string
          description: The key's contents.
          format: pem-private-key
        friendly_name:
          type: string
          description: The key's friendly name.
    inline_response_200_450:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: upload_key
        module:
          type: string
          description: The name of the module called.
          example: SSL
        result:
          $ref: "#/components/schemas/inline_response_200_450_result"
    inline_response_200_451:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_information
        module:
          type: string
          description: The name of the module called.
          example: ServerInformation
        result:
          $ref: "#/components/schemas/inline_response_200_451_result"
    inline_response_200_452:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_service_proxy_backends
        module:
          type: string
          description: The name of the module called.
          example: ServiceProxy
        result:
          $ref: "#/components/schemas/inline_response_200_452_result"
    general:
      anyOf:
      - type: string
        description: A valid hostname.
        format: hostname
        example: hostname.example.com
      - type: string
        description: A valid IP address.
        format: ipv4
        example: 192.0.2.102
    service_group_backend:
      anyOf:
      - type: string
        description: A valid hostname.
        format: hostname
        example: hostname.example.com
      - type: string
        description: A valid IP address.
        format: ipv4
        example: 192.0.2.102
    inline_response_200_453:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_service_proxy_backends
        module:
          type: string
          description: The name of the module called.
          example: ServiceProxy
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_454:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: unset_all_service_proxy_backends
        module:
          type: string
          description: The name of the module called.
          example: ServiceProxy
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_455:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_temp_user
        module:
          type: string
          description: The name of the module called.
          example: Session
        result:
          $ref: "#/components/schemas/inline_response_200_455_result"
    inline_response_200_456:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_webmail_session_for_mail_user
        module:
          type: string
          description: The name of the module called.
          example: Session
        result:
          $ref: "#/components/schemas/inline_response_200_456_result"
    inline_response_200_457:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_webmail_session_for_mail_user_check_password
        module:
          type: string
          description: The name of the module called.
          example: Session
        result:
          $ref: "#/components/schemas/inline_response_200_457_result"
    inline_response_200_458:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_webmail_session_for_self
        module:
          type: string
          description: The name of the module called.
          example: Session
        result:
          $ref: "#/components/schemas/inline_response_200_458_result"
    inline_response_200_459:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_project
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_459_result"
    inline_response_200_460:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_site_quality_user
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_460_result"
    inline_response_200_461:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_site_quality_user
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_461_result"
    inline_response_200_462:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_all_scores
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_462_result"
    inline_response_200_463:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_app_token
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_463_result"
    inline_response_200_464:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_site_quality_user
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_464_result"
    inline_response_200_465:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_site_quality_user_enabled
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_465_result"
    inline_response_200_466:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: reset_config
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_466_result"
    inline_response_200_467:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: send_activation_email
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_467_result"
    inline_response_200_468:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: verify_code
        module:
          type: string
          description: The name of the module called.
          example: SiteQuality
        result:
          $ref: "#/components/schemas/inline_response_200_468_result"
    inline_response_200_469:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_site_templates
        module:
          type: string
          description: The name of the module called.
          example: SiteTemplates
        result:
          $ref: "#/components/schemas/inline_response_200_469_result"
    inline_response_200_470:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_user_settings
        module:
          type: string
          description: The name of the module called.
          example: SiteTemplates
        result:
          $ref: "#/components/schemas/inline_response_200_470_result"
    inline_response_200_471:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: publish
        module:
          type: string
          description: The name of the module called.
          example: SiteTemplates
        result:
          $ref: "#/components/schemas/inline_response_200_471_result"
    inline_response_200_472:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_api_token
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_472_result"
    inline_response_200_473:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_account
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_473_result"
    inline_response_200_474:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_restore_point
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_474_result"
    inline_response_200_475:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_website
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_475_result"
    inline_response_200_476:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_all_user_sitejet_info
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_476_result"
    inline_response_200_477:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_api_token
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_477_result"
    inline_response_200_478:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_preview_url
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_478_result"
    inline_response_200_479:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_sso_link
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_479_result"
    inline_response_200_480:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_templates
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_480_result"
    inline_response_200_481:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: restore_document_root
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_474_result"
    inline_response_200_482:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_template
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_472_result"
    inline_response_200_483:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: start_publish
        module:
          type: string
          description: The name of the module called.
          example: Sitejet
        result:
          $ref: "#/components/schemas/inline_response_200_483_result"
    inline_response_200_484:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: clear_spam_box
        module:
          type: string
          description: The name of the module called.
          example: SpamAssassin
        result:
          $ref: "#/components/schemas/inline_response_200_484_result"
    inline_response_200_485:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        errors: {}
        func:
          type: string
          description: The name of the method called.
          example: get_symbolic_test_names
        messages: {}
        module:
          type: string
          description: The name of the module called.
          example: SpamAssassin
        result:
          $ref: "#/components/schemas/inline_response_200_485_result"
        status: {}
    inline_response_200_486:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_user_preferences
        module:
          type: string
          description: The name of the module called.
          example: SpamAssassin
        result:
          $ref: "#/components/schemas/inline_response_200_486_result"
    inline_response_200_487:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update_user_preference
        module:
          type: string
          description: The name of the module called.
          example: SpamAssassin
        result:
          $ref: "#/components/schemas/inline_response_200_487_result"
    inline_response_200_488:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_bandwidth
        module:
          type: string
          description: The name of the module called.
          example: Stats
        result:
          $ref: "#/components/schemas/inline_response_200_488_result"
    inline_response_200_489:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_site_errors
        module:
          type: string
          description: The name of the module called.
          example: Stats
        result:
          $ref: "#/components/schemas/inline_response_200_489_result"
    inline_response_200_490:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_sites
        module:
          type: string
          description: The name of the module called.
          example: Stats
        result:
          $ref: "#/components/schemas/inline_response_200_490_result"
    inline_response_200_491:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_stats_by_domain
        module:
          type: string
          description: The name of the module called.
          example: Stats
        result:
          $ref: "#/components/schemas/inline_response_200_491_result"
    inline_response_200_492:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_stats
        module:
          type: string
          description: The name of the module called.
          example: StatsBar
        result:
          $ref: "#/components/schemas/inline_response_200_492_result"
    inline_response_200_493:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_configuration
        module:
          type: string
          description: The name of the module called.
          example: StatsManager
        result:
          $ref: "#/components/schemas/inline_response_200_493_result"
    StatsManagersave_configuration_analyzers:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the analyzer is turned on or off for the domain.

            - `1` - the analyzer is enabled.
            - `0` - the analyzer is disabled.
          enum:
          - 1
          - 0
        name:
          type: string
          description: |-
            Name of the analyzer.

            It must be one of the following:

            - `analog` - Analog weblog analyzer.
            - `awstats` - AWStats weblog analyzer.
            - `webalizer` - The Webalizer weblog analyzer.
          enum:
          - analog
          - awstats
          - webalizer
    StatsManagersave_configuration_changes:
      type: object
      properties:
        analyzers:
          type: array
          description: List of log analyzer configuration objects.
          example:
          - enabled: 1
            name: awstats
          - enabled: 0
            name: analog
          - enabled: 0
            name: webalizer
          items:
            $ref: "#/components/schemas/StatsManagersave_configuration_analyzers"
        domain:
          type: string
          description: Domain you want to configure.
          example: domain.com
    StatsManager_save_configuration_body:
      type: object
      properties:
        changes:
          type: array
          items:
            $ref: "#/components/schemas/StatsManagersave_configuration_changes"
    inline_response_200_494:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: save_configuration
        module:
          type: string
          description: The name of the module called.
          example: StatsManager
        result:
          $ref: "#/components/schemas/inline_response_200_494_result"
    inline_response_200_495:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: addsubdomain
        module:
          type: string
          description: The name of the module called.
          example: SubDomain
        result:
          $ref: "#/components/schemas/inline_response_200_150_result"
    inline_response_200_496:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_roles
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    expire_date:
      oneOf:
      - type: integer
      - type: string
    inline_response_200_497:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: add_team_user
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_497_result"
    inline_response_200_498:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: expire_team_user
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_498_result"
    set_expire:
      oneOf:
      - type: integer
      - type: string
    inline_response_200_499:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: edit_team_user
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    inline_response_200_500:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_team_users_with_roles_count
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_500_result"
    inline_response_200_501:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_team
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_501_result"
    inline_response_200_502:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: password_reset_request
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    inline_response_200_503:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: reinstate_team_user
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    inline_response_200_504:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_roles
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    inline_response_200_505:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_team_user
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    inline_response_200_506:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_contact_email
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    date:
      oneOf:
      - type: integer
      - type: string
    inline_response_200_507:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_expire
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_507_result"
    inline_response_200_508:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_locale
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_498_result"
    inline_response_200_509:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_notes
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    inline_response_200_510:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_password
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    inline_response_200_511:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_roles
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_511_result"
    inline_response_200_512:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: suspend_team_user
        module:
          type: string
          description: The name of the module called.
          example: Team
        result:
          $ref: "#/components/schemas/inline_response_200_496_result"
    inline_response_200_513:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_feature_descriptions
        module:
          type: string
          description: The name of the module called.
          example: TeamRoles
        result:
          $ref: "#/components/schemas/inline_response_200_513_result"
    inline_response_200_514:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_theme_base
        module:
          type: string
          description: The name of the module called.
          example: Themes
        result:
          $ref: "#/components/schemas/inline_response_200_514_result"
    inline_response_200_515:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list
        module:
          type: string
          description: The name of the module called.
          example: Themes
        result:
          $ref: "#/components/schemas/inline_response_200_515_result"
    inline_response_200_516:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update
        module:
          type: string
          description: The name of the module called.
          example: Themes
        result:
          $ref: "#/components/schemas/inline_response_200_516_result"
    inline_response_200_517:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_full_access
        module:
          type: string
          description: The name of the module called.
          example: Tokens
        result:
          $ref: "#/components/schemas/inline_response_200_517_result"
    inline_response_200_518:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list
        module:
          type: string
          description: The name of the module called.
          example: Tokens
        result:
          $ref: "#/components/schemas/inline_response_200_518_result"
    inline_response_200_519:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: rename
        module:
          type: string
          description: The name of the module called.
          example: Tokens
        result:
          $ref: "#/components/schemas/inline_response_200_120_result"
    inline_response_200_520:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: revoke
        module:
          type: string
          description: The name of the module called.
          example: Tokens
        result:
          $ref: "#/components/schemas/inline_response_200_520_result"
    inline_response_200_521:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: generate_user_configuration
        module:
          type: string
          description: The name of the module called.
          example: TwoFactorAuth
        result:
          $ref: "#/components/schemas/inline_response_200_521_result"
    inline_response_200_522:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_team_user_configuration
        module:
          type: string
          description: The name of the module called.
          example: TwoFactorAuth
        result:
          $ref: "#/components/schemas/inline_response_200_522_result"
    inline_response_200_523:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_user_configuration
        module:
          type: string
          description: The name of the module called.
          example: TwoFactorAuth
        result:
          $ref: "#/components/schemas/inline_response_200_523_result"
    inline_response_200_524:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: remove_user_configuration
        module:
          type: string
          description: The name of the module called.
          example: TwoFactorAuth
        result:
          $ref: "#/components/schemas/inline_response_200_524_result"
    inline_response_200_525:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_user_configuration
        module:
          type: string
          description: The name of the module called.
          example: TwoFactorAuth
        result:
          $ref: "#/components/schemas/inline_response_200_525_result"
    inline_response_200_526:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: change_password
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_150_result"
    inline_response_200_527:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: check_account_conflicts
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_527_result"
    inline_response_200_528:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create_user
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_528_result"
    inline_response_200_529:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_user
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_529_result"
    inline_response_200_530:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: dismiss_merge
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_293_result"
    inline_response_200_531:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: edit_user
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_531_result"
    inline_response_200_532:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_users
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_532_result"
    inline_response_200_533:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: lookup_service_account
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_533_result"
    inline_response_200_534:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: lookup_user
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_534_result"
    inline_response_200_535:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: merge_service_account
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_535_result"
    inline_response_200_536:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: unlink_service_account
        module:
          type: string
          description: The name of the module called.
          example: UserManager
        result:
          $ref: "#/components/schemas/inline_response_200_150_result"
    inline_response_200_537:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete
        module:
          type: string
          description: The name of the module called.
          example: UserTasks
        result:
          $ref: "#/components/schemas/inline_response_200_212_result"
    inline_response_200_538:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: retrieve
        module:
          type: string
          description: The name of the module called.
          example: UserTasks
        result:
          $ref: "#/components/schemas/inline_response_200_538_result"
    inline_response_200_539:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_server_information
        module:
          type: string
          description: The name of the module called.
          example: Variables
        result:
          $ref: "#/components/schemas/inline_response_200_539_result"
    inline_response_200_540:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_session_information
        module:
          type: string
          description: The name of the module called.
          example: Variables
        result:
          $ref: "#/components/schemas/inline_response_200_540_result"
    inline_response_200_541:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_user_information
        module:
          type: string
          description: The name of the module called.
          example: Variables
        result:
          $ref: "#/components/schemas/inline_response_200_541_result"
    inline_response_200_542:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create
        module:
          type: string
          description: The name of the module called.
          example: VersionControl
        result:
          $ref: "#/components/schemas/inline_response_200_542_result"
    inline_response_200_543:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete
        module:
          type: string
          description: The name of the module called.
          example: VersionControl
        result:
          $ref: "#/components/schemas/inline_response_200_212_result"
    inline_response_200_544:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: retrieve
        module:
          type: string
          description: The name of the module called.
          example: VersionControl
        result:
          $ref: "#/components/schemas/inline_response_200_544_result"
    inline_response_200_545:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: update
        module:
          type: string
          description: The name of the module called.
          example: VersionControl
        result:
          $ref: "#/components/schemas/inline_response_200_545_result"
    inline_response_200_546:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create
        module:
          type: string
          description: The name of the module called.
          example: VersionControlDeployment
        result:
          $ref: "#/components/schemas/inline_response_200_546_result"
    inline_response_200_547:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete
        module:
          type: string
          description: The name of the module called.
          example: VersionControlDeployment
        result:
          $ref: "#/components/schemas/inline_response_200_252_result"
    inline_response_200_548:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: retrieve
        module:
          type: string
          description: The name of the module called.
          example: VersionControlDeployment
        result:
          $ref: "#/components/schemas/inline_response_200_548_result"
    inline_response_200_549:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: delete_user
        module:
          type: string
          description: The name of the module called.
          example: WebDisk
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_550:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_homedir
        module:
          type: string
          description: The name of the module called.
          example: WebDisk
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_551:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_password
        module:
          type: string
          description: The name of the module called.
          example: WebDisk
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_552:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: set_permissions
        module:
          type: string
          description: The name of the module called.
          example: WebDisk
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_553:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_domains
        module:
          type: string
          description: The name of the module called.
          example: WebVhosts
        result:
          $ref: "#/components/schemas/inline_response_200_553_result"
    inline_response_200_554:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_ssl_capable_domains
        module:
          type: string
          description: The name of the module called.
          example: WebVhosts
        result:
          $ref: "#/components/schemas/inline_response_200_554_result"
    inline_response_200_555:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_webmail_apps
        module:
          type: string
          description: The name of the module called.
          example: WebmailApps
        result:
          $ref: "#/components/schemas/inline_response_200_555_result"
    inline_response_200_556:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: any_running
        module:
          type: string
          description: The name of the module called.
          example: WordPressBackup
        result:
          $ref: "#/components/schemas/inline_response_200_556_result"
    site:
      type: string
      anyOf:
      - format: domain
        example: example.com
      - format: url-path
        example: example.com/wordpress
    inline_response_200_557:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: cancel
        module:
          type: string
          description: The name of the module called.
          example: WordPressBackup
        result:
          $ref: "#/components/schemas/inline_response_200_557_result"
    inline_response_200_558:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: cleanup
        module:
          type: string
          description: The name of the module called.
          example: WordPressBackup
        result:
          $ref: "#/components/schemas/inline_response_200_558_result"
    inline_response_200_559:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_available_backups
        module:
          type: string
          description: The name of the module called.
          example: WordPressBackup
        result:
          $ref: "#/components/schemas/inline_response_200_559_result"
    inline_response_200_560:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_running
        module:
          type: string
          description: The name of the module called.
          example: WordPressBackup
        result:
          $ref: "#/components/schemas/inline_response_200_560_result"
    site_1:
      type: string
      anyOf:
      - format: url-path
        example: example.com/wordpress
      - format: domain
        example: example.com
    inline_response_200_561:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: start
        module:
          type: string
          description: The name of the module called.
          example: WordPressBackup
        result:
          $ref: "#/components/schemas/inline_response_200_561_result"
    inline_response_200_562:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: cancel_scan
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_562_result"
    inline_response_200_563:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: change_admin_password
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_564:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: cleanup_scan
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_35_result"
    inline_response_200_565:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: configure_autoupdate
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_565_result"
    inline_response_200_566:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_api_version
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_566_result"
    inline_response_200_567:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_instance_by_id
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_567_result"
    inline_response_200_568:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_instances
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_568_result"
    inline_response_200_569:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_latest_wordpress_version_from_wordpress_org
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_569_result"
    inline_response_200_570:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_scan_results
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_570_result"
    inline_response_200_571:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: is_installable_addon_available
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_571_result"
    inline_response_200_572:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: start_scan
        module:
          type: string
          description: The name of the module called.
          example: WordPressInstanceManager
        result:
          $ref: "#/components/schemas/inline_response_200_572_result"
    inline_response_200_573:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: any_running
        module:
          type: string
          description: The name of the module called.
          example: WordPressRestore
        result:
          $ref: "#/components/schemas/inline_response_200_573_result"
    inline_response_200_574:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: cleanup
        module:
          type: string
          description: The name of the module called.
          example: WordPressRestore
        result:
          $ref: "#/components/schemas/inline_response_200_574_result"
    inline_response_200_575:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: start
        module:
          type: string
          description: The name of the module called.
          example: WordPressRestore
        result:
          $ref: "#/components/schemas/inline_response_200_575_result"
    inline_response_200_576:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: create
        module:
          type: string
          description: The name of the module called.
          example: WordPressSite
        result:
          $ref: "#/components/schemas/inline_response_200_576_result"
    inline_response_200_577:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: retrieve
        module:
          type: string
          description: The name of the module called.
          example: WordPressSite
        result:
          $ref: "#/components/schemas/inline_response_200_577_result"
    inline_response_200_578:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_available_addons
        module:
          type: string
          description: The name of the module called.
          example: cPAddons
        result:
          $ref: "#/components/schemas/inline_response_200_578_result"
    inline_response_200_579:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_instance_settings
        module:
          type: string
          description: The name of the module called.
          example: cPAddons
        result:
          $ref: "#/components/schemas/inline_response_200_579_result"
    inline_response_200_580:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_addon_instances
        module:
          type: string
          description: The name of the module called.
          example: cPAddons
        result:
          $ref: "#/components/schemas/inline_response_200_580_result"
    inline_response_200_581:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_all_domains
        module:
          type: string
          description: The name of the module called.
          example: cPGreyList
        result:
          $ref: "#/components/schemas/inline_response_200_581_result"
    inline_response_200_582:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: disable_domains
        module:
          type: string
          description: The name of the module called.
          example: cPGreyList
        result:
          $ref: "#/components/schemas/inline_response_200_582_result"
    inline_response_200_583:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_all_domains
        module:
          type: string
          description: The name of the module called.
          example: cPGreyList
        result:
          $ref: "#/components/schemas/inline_response_200_583_result"
    inline_response_200_584:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: enable_domains
        module:
          type: string
          description: The name of the module called.
          example: cPGreyList
        result:
          $ref: "#/components/schemas/inline_response_200_584_result"
    inline_response_200_585:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: has_greylisting_enabled
        module:
          type: string
          description: The name of the module called.
          example: cPGreyList
        result:
          $ref: "#/components/schemas/inline_response_200_585_result"
    inline_response_200_586:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: list_domains
        module:
          type: string
          description: The name of the module called.
          example: cPGreyList
        result:
          $ref: "#/components/schemas/inline_response_200_586_result"
    inline_response_200_587:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_php_recommendations
        module:
          type: string
          description: The name of the module called.
          example: EA4
        result:
          $ref: "#/components/schemas/inline_response_200_587_result"
    inline_response_200_588:
      type: object
      properties:
        apiversion:
          type: integer
          description: The version of the API.
          example: 3
        func:
          type: string
          description: The name of the method called.
          example: get_recommendations
        module:
          type: string
          description: The name of the module called.
          example: EA4
        result:
          $ref: "#/components/schemas/inline_response_200_588_result"
    EditUserSubaccountBase_issues:
      type: object
      properties:
        area:
          type: string
          description: The affected section of cPanel & WHM.
          example: quota
        limit:
          type: integer
          description: The set quota megabyte (MB) limit for the affected subaccount.
          example: 1500
        message:
          type: string
          description: The description of the issue.
          example: Your account is over quota.
        service:
          type: string
          description: |-
            The affected service.
            * `email`
            * `ftp`
            * `webdisk`
          example: email
          enum:
          - email
          - ftp
          - webdisk
        type:
          type: string
          description: |-
            The type of issue.
            * `error`
            * `warning`
            * `info`
          example: info
          enum:
          - error
          - warning
          - info
        used:
          type: integer
          description: The number of megabytes (MB) that the account currently uses.
          example: 2000
    EditUserSubaccountBase_services_email:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Webmail, POP, and IMAP services.

            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 1
          enum:
          - 0
          - 1
        quota:
          type: integer
          description: |-
            The maximum amount of disk space, in megabytes (MB), allocated to the subaccount's email account.

            **Note:**

              This function will not return `0` as a value.
          example: 100
      description: This object contains the information that indicates the subaccount's
        email status.
    EditUserSubaccountBase_services_ftp:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access FTP.

            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The subaccount's FTP home directory.
          format: path
          example: /subaccount
        quota:
          type: integer
          description: |-
            The maximum amount disk space, in megabytes (MB), that the subaccount may use.

            * A positive integer between `1` and `999999`
            * `0` - Unlimited.
          example: 100
      description: This object contains the information that indicates the subaccount's
        FTP status.
    EditUserSubaccountBase_services_webdisk:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Web Disk.

            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The subaccount's Web Disk home directory.
          format: path
          example: /bob
        perms:
          type: string
          description: |-
            Whether to grant write permissions to the subaccount.

            * `ro` - Read-only permissions.
            * `rw` - Read and write permissions.
          example: rw
          enum:
          - ro
          - rw
        private:
          type: integer
          description: |-
            Whether to set the Web Disk directory's permissions to public or private.

            * `1` - Private (`0700`).
            * `0` - Public (`0755`).
          example: 0
          enum:
          - 0
          - 1
      description: This object contains information that indicates the subaccount's
        Web Disk status.
    EditUserSubaccountBase_services:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/EditUserSubaccountBase_services_email"
        ftp:
          $ref: "#/components/schemas/EditUserSubaccountBase_services_ftp"
        webdisk:
          $ref: "#/components/schemas/EditUserSubaccountBase_services_webdisk"
      description: "This object contains information about the subaccount's access\
        \ to email, FTP, and Web Disk."
    MainDomainContents_customlog:
      type: object
      properties:
        format:
          type: string
          description: |-
            The [log file](https://httpd.apache.org/docs/2.2/mod/mod_log_config.html#logformat)'s
            format.
        target:
          type: string
          description: The absolute path to the domain's log file in the `domlogs`
            directory.
      description: |-
        The domain's [Apache log](http://httpd.apache.org/docs/2.2/mod/mod_log_config.html)
        information.
    MainDomainContents_ifmodulemodsuphpc:
      type: object
      properties:
        group:
          type: string
          description: "If suPHP is enabled, PHP scripts run as this group."
      description: Information about PHP scripts and suPHP.
    MainDomainContents_scriptalias:
      type: object
      properties:
        path:
          type: string
          description: The absolute path to the domain's CGI directory.
          format: path
        url:
          type: string
          description: The domain's CGI directory.
          format: path
      description: The domain's CGI information.
    RestoreInProgress_sites:
      type: object
      properties:
        id:
          type: string
          description: |-
            The restore process's unique ID.

            * `null` is the only possible value.
            * We have not implemented this return.
          nullable: true
        site:
          type: string
          description: The WordPress site's URL without the protocol prefix.
          format: domain
        type:
          type: string
          description: |-
            The active process type.

            * `restore` is the only possible value.
          enum:
          - restore
    RestoreNotInProgress_last_outcome:
      properties:
        error:
          type: string
          description: |-
            Where the system encountered an error during the last backup restoration.

            * The error message from the restoration log database.
            * `null` - No occur occurred.
          nullable: true
        have_outcome:
          type: integer
          description: |-
            Whether the restoration log shows a successful attempt previously occurred,
            successfully or unsuccessfully.

            * `1` - Restoration attempt occurred.
            * `0` - No restoration attempt occurred.
          enum:
          - 0
          - 1
        site:
          type: string
          description: The WordPress site's URL without the protocol prefix.
          format: domain
        status:
          type: string
          description: |-
            The previous restoration attempt's result.

            * `success` - Successful restoration.
            * `error` - The attempted restoration resulted in an error.
            * `terminated` - The system stopped the restoration process.
            * `timeout` - The restoration process exceeded the allowed time limit.
            * `low-disk` - The server's disk space was insufficient to complete the restoration.
            * `low-quota` - The cPanel account's quota was insufficient to complete the restoration.
          enum:
          - success
          - error
          - terminated
          - timeout
          - low-disk
          - low-quota
      description: The status of the last backup restoration.
    SSLMarketProviderProductMetaData_x_identity_verification:
      type: object
      properties:
        label:
          type: string
          description: The display name of the property.
          example: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
        name:
          type: string
          description: The name of the property.
          example: duns_number
      additionalProperties:
        description: Contains additional properties that vary between products.
        x-additionalPropertiesName: certificate_properties
      description: Defines a schema for identity verification information for OV and
        EV certificates.
    Score_master_attributes:
      type: object
      properties:
        score:
          type: integer
          example: 100
        limit:
          type: integer
          example: 0
    Score_master:
      type: object
      properties:
        title:
          type: string
          description: The title of the check.
          example: Uptime
        status:
          type: string
          description: |-
            The check's summarized status.
              * `good` â The check has returned a positive result.
              * `bad`  â The check has returned a negative result.
          example: good
          enum:
          - good
          - bad
        message:
          type: string
          description: The check's status message.
          example: The project is proving to be very reliable (currently and in the
            last 30 days) and has good accessibility. The current level should be
            maintained.
        description:
          type: string
          description: A description of the check.
          example: "If a project is unavailable, customers cannot visit, browse or\
            \ make purchases. The accessibility assessment is based on the current\
            \ situation, but also on historical values and trends."
        identifier:
          type: string
          description: An unique identifier for the check.
          example: Score:Basic:Uptime
        score:
          type: integer
          description: |-
            A numeral score for the check.

            ** Note: **

            A higher score indicates that your website performs well in that check.
          example: 100
        incidents:
          type: array
          example: []
          default: []
        attributes:
          $ref: "#/components/schemas/Score_master_attributes"
      description: The overall results for the check.
    Score_attributes:
      type: object
      properties:
        scoring:
          type: string
          example: good
        score:
          type: integer
          example: 100
        components_processed:
          type: integer
          example: 1
        components_failed:
          type: integer
          example: 0
        limit:
          type: integer
          example: 0
        tool:
          type: string
          example: KoalaPing
    Score_sub_scores:
      type: object
      properties:
        title:
          type: string
          description: The title of the check subcategory.
          example: Current availability
        status:
          type: string
          description: |-
            The check subcategory's summarized status.
              * `good` â The check has returned a positive result.
              * `bad`  â The check has returned a negative result.
          example: good
          enum:
          - good
          - bad
        message:
          type: string
          description: The check subcategory's status message.
          example: All project pages can be reached and thus be visited by potential
            customers.
        description:
          type: string
          description: A description of the check.
          example: "It is evaluated whether the project is currently accessible. If\
            \ it is not, this is usually due to technical reasons."
        identifier:
          type: string
          description: An unique identifier for the check.
          example: Score:Uptime:Down
        score:
          type: integer
          description: |-
            A numeral score for the check subcategory.

            ** Note: **

            A higher score indicates that your website performs well in that check.
          example: 100
        incidents:
          type: array
          example: []
          default: []
        weight:
          type: integer
          description: The weighted contribution of the subcategory check's `score`
            result to the `master` object's `score` result.
          example: 20
        weighted_score:
          type: integer
          description: The score after weight has been adjusted.
          example: 20
        attributes:
          $ref: "#/components/schemas/Score_attributes"
    ServiceAccount_issues:
      type: object
      properties:
        area:
          type: string
          description: The affected section of cPanel & WHM.
          example: quota
        limit:
          minimum: 0
          type: integer
          description: The set quota megabyte (MB) limit for the affected subaccount.
          example: 1500
        message:
          type: string
          description: The description of the issue.
          example: Your account is over quota.
        service:
          type: string
          description: The affected service.
          example: email
          enum:
          - email
          - ftp
          - webdisk
        type:
          type: string
          description: The type of issue.
          example: info
          enum:
          - error
          - info
          - warning
        used:
          minimum: 0
          type: integer
          description: The number of megabytes (MB) that the account currently uses.
          example: 2000
    ServiceAccount_services_email:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Webmail, POP, and IMAP services.
            * `1` - Can access.
            * `0` - Cannot access.
          example: 1
          enum:
          - 0
          - 1
        quota:
          minimum: 0
          type: integer
          description: "The maximum amount of disk space allocated to subaccount's\
            \ email account, in megabytes (MB)."
          example: 100
      description: Information that indicates the subaccount's email status.
    ServiceAccount_services_ftp:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access FTP.
            * `1` - Can access.
            * `0` - Cannot access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: "The subaccount's FTP home directory, relative to the cPanel\
            \ account's home directory."
          format: path
          example: /subaccount
        quota:
          maximum: 999999
          minimum: 0
          type: integer
          description: |-
            The subaccount's FTP disk space quota.
            * `1` to `999999` - The maximum disk space that the subaccount may use, in megabytes (MB).
            * `0` - Unlimited.
          example: 100
      description: This object contains the information that indicates the subaccount's
        FTP status.
    ServiceAccount_services_webdisk:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Web Disk.
            * `1` - Can access.
            * `0` - Cannot access.
          example: 0
          enum:
          - 0
          - 1
        enabledigest:
          type: integer
          description: |-
            Whether the subaccount's Web Disk service has enabled Digest Authentication.
            * `1` - Digest Authentication is enabled.
            * `0` - Digest Authentication is not enabled.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: "The subaccount's Web Disk home directory, relative to the\
            \ cPanel account's home directory."
          format: path
          example: /bob
        perms:
          type: string
          description: |-
            Whether to grant write permissions to the subaccount.
            * `ro` - Read-only permissions.
            * `rw` - Read and write permissions.
          example: rw
          enum:
          - ro
          - rw
        private:
          type: integer
          description: |-
            Whether to set the Web Disk directory's permissions to public or private.
            * `1` - Private (0700).
            * `0` - Public (0755).
          example: 0
          enum:
          - 0
          - 1
      description: This object contains information that indicates the subaccount's
        Web Disk status.
    ServiceAccount_services:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/ServiceAccount_services_email"
        ftp:
          $ref: "#/components/schemas/ServiceAccount_services_ftp"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user cannot remove.
            * `1` - A special account.
            * `0` - Not a special account.
          example: 1
          enum:
          - 0
          - 1
        webdisk:
          $ref: "#/components/schemas/ServiceAccount_services_webdisk"
      description: "Information about the subaccount's access to email, FTP, and Web\
        \ Disk."
    SubaccountBase_issues:
      type: object
      properties:
        area:
          type: string
          description: The affected section of cPanel & WHM.
          example: quota
        limit:
          minimum: 1
          type: integer
          description: The set quota megabyte (MB) limit for the affected subaccount.
          example: 1500
        message:
          type: string
          description: The description of the issue.
          example: Your account is over quota.
        service:
          type: string
          description: |-
            The affected service.
            * `email`
            * `ftp`
            * `webdisk`
          example: email
          enum:
          - email
          - ftp
          - webdisk
        type:
          type: string
          description: |-
            The type of issue.
            * `error`
            * `warning`
            * `info`
          example: info
          enum:
          - error
          - warning
          - info
        used:
          minimum: 1
          type: integer
          description: The number of megabytes (MB) that the account currently uses.
          example: 2000
    SubaccountBase_services_email:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Webmail, POP, and IMAP services.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 1
          enum:
          - 0
          - 1
        quota:
          minimum: 1
          type: integer
          description: "The maximum amount of disk space, in megabytes (MB), allocated\
            \ to subaccount's email account."
          example: 1500
      description: Information about the subaccount's email status.
    SubaccountBase_services_ftp:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access FTP.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: "The subaccount's FTP home directory, relative to the cPanel\
            \ account's home directory."
          format: path
          example: /subaccount
        quota:
          type: string
          description: |-
            The subaccount's maximum FTP disk space quota, in megabytes (MB).
            * A string containing a non-negative float.
            * `0.00` - Unlimited.
          example: "0.00"
      description: Information about the subaccount's FTP status.
    SubaccountBase_services_webdisk:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Web Disk.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: "The subaccount's Web Disk home directory, relative to the\
            \ cPanel account's home directory."
          format: path
          example: /bob
        perms:
          type: string
          description: |-
            Whether the subaccount has read-only or read and write permissions.

            * `ro` - Read-only permissions.
            * `rw` - Read and write permissions.
          example: rw
        private:
          type: integer
          description: |-
            Whether the subaccount's Web Disk directory permissions are public or private.

            * `1` - Private (`0700`).
            * `0` - Public (`0755`).
          example: 0
          enum:
          - 0
          - 1
      description: Information about the subaccount's Web Disk status.
    SubaccountBase_services:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/SubaccountBase_services_email"
        ftp:
          $ref: "#/components/schemas/SubaccountBase_services_ftp"
        webdisk:
          $ref: "#/components/schemas/SubaccountBase_services_webdisk"
      description: "Information about the subaccount's access to email, FTP, and Web\
        \ Disk."
    TeamArray_inner:
      properties:
        contact-email:
          type: string
          format: email
          example: team_user@example.com
        created:
          type: integer
          format: unix_timestamp
          example: 1650036110
        expire_date:
          type: integer
          format: unix_timestamp
          example: 1674575562
        expire_reason:
          type: string
          example: team user 1 year
        lastlogin:
          type: integer
          format: unix_timestamp
          example: 1650046110
        locale:
          type: string
          example: en
        notes:
          type: string
          example: This is a note about team user.
        password:
          type: string
          example: encryptedpassword
        roles:
          type: array
          items:
            type: string
            example: "email,web"
        secondary-contact-email:
          type: string
          format: email
          example: team_user_backup@example.com
        services:
          $ref: "#/components/schemas/Services"
        suspend_date:
          type: integer
          format: unix-timestamp
          example: 1650046210
        suspend_reason:
          type: string
          example: team user is on vacation
        username:
          type: string
          example: teamuser
    TeamHash_users_info:
      properties:
        contact-email:
          type: string
          format: email
          example: team_user@example.com
        created:
          type: integer
          format: unix_timestamp
          example: 1650036110
        expire_date:
          type: integer
          format: unix_timestamp
          example: 1674575562
        expire_reason:
          type: string
          example: team user 1 year
        lastlogin:
          type: integer
          format: unix_timestamp
          example: 1650046110
        locale:
          type: string
          example: en
        notes:
          type: string
          example: This is a note about team_user.
        password:
          type: string
          example: encryptedpassword
        roles:
          type: array
          items:
            type: string
            example: "email,web"
        secondary-contact-email:
          type: string
          format: email
          example: team_user_backup@example.com
        services:
          $ref: "#/components/schemas/Services"
        suspend_date:
          type: string
        suspend_reason:
          type: string
          example: teamUser is on vacation
    TeamHash_users:
      properties:
        username:
          type: string
          example: teamuser
        info:
          $ref: "#/components/schemas/TeamHash_users_info"
    trace_deliveryResponseBounce_destinations:
      type: object
      properties:
        message:
          type: string
          description: A message that the system sends when it rejects the delivery
            of an email.
          example: The system rejected the message.
        type:
          $ref: "#/components/schemas/trace_deliveryTypeDescription"
    trace_deliveryResponseCommand_destinations:
      type: object
      properties:
        command:
          type: string
          description: A command that the system runs when it receives the email.
          example: /usr/local/cpanel/bin/autorespond user@example.com /home/cpmailuser/.autorespond
        type:
          $ref: "#/components/schemas/trace_deliveryTypeDescription"
    trace_deliveryResponseDefer_destinations:
      type: object
      properties:
        message:
          type: string
          description: A message that the system sends when it defers the email.
          example: The system deferred the message.
        type:
          $ref: "#/components/schemas/trace_deliveryTypeDescription"
    trace_deliveryResponseDiscard_destinations:
      type: object
      properties:
        aliasfile:
          type: string
          description: |-
            The file path on the system where Exim searched for the `address` return value's aliases.

            **Note:**

            The function **only** returns this value if an alias exists for the `address` value.
          format: path
          example: /etc/valiases/example.com
        type:
          $ref: "#/components/schemas/trace_deliveryTypeDescription"
    trace_deliveryResponseError_destinations:
      type: object
      properties:
        message:
          type: string
          description: An error message from the system.
          example: "The mail server could not deliver mail to user@example2.com. The\
            \ account or domain may not exist, they may be blacklisted, or missing\
            \ the proper dns entries."
        result:
          type: string
          description: An error message.
          example: DNS lookup of example2.com (MX) gave HOST_NOT_FOUND
        type:
          $ref: "#/components/schemas/trace_deliveryTypeDescription"
    trace_deliveryResponseLocalDelivery_destinations:
      type: object
      properties:
        mailbox:
          type: string
          description: The mailbox where the system sent the email.
          format: email
          example: user@example.com
        type:
          $ref: "#/components/schemas/trace_deliveryTypeDescription"
    trace_deliveryResponseRemoteDelivery_destinations:
      type: object
      properties:
        mx:
          type: array
          description: |-
            An array of strings containing [mail exchanger (MX) information](https://en.wikipedia.org/wiki/MX_record).

            Each string contains information for a single mail exchanger (MX), including:
             * The server's hostname.
             * The server's resolving IP address.
             * The MX record's priority. The lower the value, the higher its priority.
             * Whether DNSSEC is enabled for the hostname.
          items:
            type: string
            example: "host.example.com [10.0.0.1] MX=20 dnssec=no"
        type:
          $ref: "#/components/schemas/trace_deliveryTypeDescription"
    schemasTeamArray_inner:
      properties:
        contact-email:
          type: string
          format: email
          example: team_user@example.com
        created:
          type: integer
          format: unix_timestamp
          example: 1650036110
        expire_date:
          type: integer
          format: unix_timestamp
          example: 1674575562
        expire_reason:
          type: string
          example: team user 1 year
        lastlogin:
          type: integer
          format: unix_timestamp
          example: 1650046110
        locale:
          type: string
          example: en
        notes:
          type: string
          example: This is a note about team user.
        roles:
          type: array
          items:
            type: string
            example: "Email,Web"
        secondary-contact-email:
          type: string
          format: email
          example: team_user_backup@example.com
        services:
          $ref: "#/components/schemas/Services"
        suspend_date:
          type: integer
          format: unix-timestamp
          example: 1650046210
        suspend_reason:
          type: string
          example: team user is on vacation
        username:
          type: string
          example: teamuser
    inline_response_200_result_metadata:
      properties:
        transformed:
          type: integer
          description: Post-processing may have transformed the data.
          example: 1
          enum:
          - 1
    inline_response_200_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            * `1` - The Account Enhancement is assigned to the cPanel account.
            * `0` - The Account Enhancement is not assigned to the cPanel account.
          example: 1
          enum:
          - 1
          - 0
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_1_result_data:
      properties:
        id:
          type: array
          description: The Account Enhancement's id.
          example: sample-enhancement-id
          items:
            type: string
        name:
          type: array
          description: The Account Enhancement's name.
          example: Sample Enhancement
          items:
            type: string
    inline_response_200_1_result:
      type: object
      properties:
        data:
          type: array
          description: An object that contains the Account Enhancements that the cPanel
            account can access
          items:
            $ref: "#/components/schemas/inline_response_200_1_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_2_result_data:
      type: object
      properties:
        pid:
          type: string
          description: The backup's process identifier.
          example: "2857"
    inline_response_200_2_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_2_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_6_result_metadata:
      properties:
        cnt:
          type: integer
          description: The number of backup files.
          example: 1
        transformed:
          type: integer
          description: Post-processing may have transformed the data.
          example: 1
          enum:
          - 1
    inline_response_200_6_result:
      type: object
      properties:
        data:
          type: array
          description: An array of the account's backup files.
          items:
            type: string
            format: ISO-8601 Date
            example: 2014-12-02T00:00:00.000Z
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_6_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_7_result_data:
      type: object
      properties:
        log_id:
          type: string
          description: "The log file's restoration identification (ID). The system\
            \ uses the backup restoration's date to create this ID. The ID is in [ISO-8601\
            \ Date Time](https://en.wikipedia.org/wiki/ISO_8601) format with the log's\
            \ revision number appended."
          example: 2019-08-13T15:10:07Z.1
        log_path:
          type: string
          description: The filepath to the backup restoration's log file.
          format: path
          example: /home/cptest/logs/restoredb/2019-08-13T15:10:07Z.1.log
        messages:
          type: array
          description: An array of statements about the database's restoration.
          items:
            type: string
            example: The system successfully restored the database 'user_db1' from
              the backup file 'user_db1.sql.gz'
    inline_response_200_7_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_7_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_8_result_data:
      type: object
      properties:
        log_id:
          type: string
          description: "The log file's restoration identification (ID). The system\
            \ uses the backup restoration's date to create this ID. The ID is in [ISO-8601\
            \ Date Time](https://en.wikipedia.org/wiki/ISO_8601) format with the log's\
            \ revision number appended."
          example: 2019-08-13T15:10:07Z.1
        log_path:
          type: string
          description: The filepath to the backup restoration's log file.
          format: path
          example: /home/cpuser/.cpanel/logs/restore-email-filters/2019-09-11T18:30:49Z.1.log
        messages:
          type: array
          description: An array of statements about the database's restoration.
          items:
            type: string
            example: The system successfully restored the email filters from the 'filter-info.user.yaml.gz'
              backup.
    inline_response_200_8_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_8_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_9_result_data:
      type: object
      properties:
        log_id:
          type: string
          description: "The log file's restoration identification (ID). The system\
            \ uses the backup restoration's date to create this ID. The ID is in [ISO-8601\
            \ Date Time](https://en.wikipedia.org/wiki/ISO_8601) format with the log's\
            \ revision number appended."
          example: 2019-08-13T15:10:07Z.1
        log_path:
          type: string
          description: The filepath to the backup restoration's log file.
          format: path
          example: /home/cpuser/.cpanel/logs/restore-email-forwarders/2019-09-11T18:30:49Z.1.log
        messages:
          type: array
          description: An array of statements about the database's restoration.
          items:
            type: string
            example: The system successfully restored the email forwarders from the
              'aliases-example.com.gz' backup.
    inline_response_200_9_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_9_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_10_result_data:
      type: object
      properties:
        log_id:
          type: string
          description: "The log file's restoration identification (ID). The system\
            \ uses the backup restoration's date to create this ID. The ID is in [ISO-8601\
            \ Date Time](https://en.wikipedia.org/wiki/ISO_8601) format with the log's\
            \ revision number appended."
          example: 2019-08-13T15:10:07Z.1
        log_path:
          type: string
          description: The filepath to the backup restoration's log file.
          format: path
          example: /home/cptest/.cpanel/logs/restorefiles/2019-08-13T15:10:07Z.1.log
        messages:
          type: array
          description: An array of statements about the database's restoration.
          items:
            type: string
            example: The system successfully restored the directory /home/cpuser/point2
              from the backup file backup-cpuser.tld-9-10-2019_1.tar.gz
    inline_response_200_10_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_10_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_11_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            The bandwidth protocols that the server records.
            * `ftp`
            * `imap`
            * `pop3`
            * `smtp`
            * `http` â This value includes all web traffic for the 80 and 443 ports.
          items:
            type: string
            example: imap
            enum:
            - ftp
            - http
            - imap
            - pop3
            - smtp
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_12_result_data:
      type: object
      properties:
        interval:
          type: string
          description: |-
            The interval in which the system reports bandwidth data.
            - `daily`
            - `hourly`
            - `5min`
          example: 5min
          enum:
          - daily
          - hourly
          - 5min
        retention:
          type: integer
          description: The retention period for bandwidth data.
          format: unix_timestamp
          example: 2678400
    inline_response_200_12_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_12_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_13_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: object
              additionalProperties:
                type: object
                description: This object's keys are the values of the third grouping
                  parameter.
                nullable: true
                x-additionalPropertiesName: grouping-param-value-3
              description: This object's keys are the values of the second grouping
                parameter.
              nullable: true
              x-additionalPropertiesName: grouping-param-value-2
            description: This object's keys are the values of the first grouping parameter.
            x-additionalPropertiesName: grouping-param-value-1
          description: |
            The function returns data in a hierarchy of objects that the order of values in the `grouping` parameter determines.

            For example:

            * `domain` - Returns data by domain.
            * `domain|protocol` - Returns data by protocol and nests it within the object for each domain.
            * `domain|year` - Returns data by year and nests it within the object for each domain.
            * `year|domain` - Returns data by domain and nests it within object for each year.
            * `domain|year|protocol` - Returns data by protocol and nests it within object for each year, which the result then nests in objects for each domain.

            The deepest child object contains the bandwidth data in bytes.
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
            nullable: true
          description: An object containing any additional data returned by the API.
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_14_result_data:
      type: object
      properties:
        data:
          type: object
          additionalProperties: true
          description: The data returned by an individual UAPI call invoked through
            this `Batch::strict` call.
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_14_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            An array of objects that contain function output. Each object contains the output data and metadata from one of the `command` parameter's functions.

            For more information about UAPI return data and metadata, read our [UAPI - Return Data](https://go.cpanel.net/UAPIReturnData) documentation.
          example:
          - data:
              strength: 65
            metadata: {}
            status: 1
          - data:
              port: 22
            metadata: {}
            status: 1
          items:
            $ref: "#/components/schemas/inline_response_200_14_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_15_result:
      type: object
      properties:
        data:
          type: array
          description: "IP addresses that were added, as translated by the system."
          nullable: true
          items:
            type: string
            example: 1.1.1.1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_16_result:
      type: object
      properties:
        data:
          type: array
          description: "The IP addresses that the function removed, and the system\
            \ translated."
          nullable: true
          items:
            type: string
            example: 1.1.1.1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_17_result_data:
      type: object
      properties:
        email:
          type: string
          description: The email address that sent the blacklisted message.
          format: email
          example: user@example.com
        failed:
          type: integer
          description: |-
            Whether the system failed to blacklist the message.

            **Note:**

             The function only returns this value if it doesn't blacklist the message.
          example: 1
          enum:
          - 1
        matches:
          type: array
          description: An array of messages that the system deleted.
          items:
            type: string
            example: example.msg
        operator:
          type: string
          description: The action that the function performed.
          example: blacklist
          enum:
          - blacklist
        reason:
          type: string
          description: |-
            A message about the failure or the warning.

            **Note:**

             The function only returns this value if it doesn't delete the message or experiences issues when it deletes the message.
          example: This is a failure message.
        warning:
          type: integer
          description: |-
            Whether the system experienced issues when it blacklisted the message.

            **Note:**

             The function only returns this value if it doesn't blacklist the message.
          example: 1
          enum:
          - 1
    inline_response_200_17_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects of blacklisted email information.
          items:
            $ref: "#/components/schemas/inline_response_200_17_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_18_result_data:
      type: object
      properties:
        email:
          type: string
          description: The deleted email message's sender.
          format: email
          example: user@example.com
        failed:
          type: integer
          description: |-
            Whether the system failed to delete the messages.

            **Note:**

            The function only returns this value if it doesn't delete the message.
          example: 1
          enum:
          - 1
        matches:
          type: array
          description: An array of messages that the system deleted.
          items:
            type: string
            example: example.msg
        operator:
          type: string
          description: The operation that the system performed.
          example: delete
          enum:
          - delete
        reason:
          type: string
          description: |-
            A message about the failure or the warning.

            **Note:**

            The function only returns this value if it doesn't delete the message or experiences issues when it deletes the message.
          example: "(XID d9myfd) The system failed to locate the requested message:"
        warning:
          type: integer
          description: |-
            Whether the system experienced issues when it deleted the message.

            **Note:**

            The function only returns this value if it experiences issues when it deletes the message.
          example: 1
          enum:
          - 1
    inline_response_200_18_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contain information about the messages
            that matched the requested pattern.
          items:
            $ref: "#/components/schemas/inline_response_200_18_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_19_result_data:
      type: object
      properties:
        email:
          type: string
          description: The delivered email message's sender.
          format: email
          example: user@example.com
        failed:
          type: integer
          description: |-
            Whether the system could not deliver the message.

            **Note:**

             * The function only returns this value if it doesn't deliver the message.
             * `1` is the only possible value.
          example: 1
          enum:
          - 1
        matches:
          type: array
          description: A list of delivered email messages.
          items:
            type: string
            example: example.msg
        operator:
          type: string
          description: |-
            The action that the function performed.

            * `deliver`
            * `deliverall`
          example: deliverall
          enum:
          - deliver
          - deliverall
        reason:
          type: string
          description: |-
            A message about the failure or the warning.

            **Note:**

            The function only returns this value if it doesn't delete the message or experiences
            issues when it deletes the message.
          example: This is a failure message.
        warning:
          type: integer
          description: |-
            Whether the system experienced issues when it delivered the message.

            **Note:**

             * The function only returns this value if it experiences issues when it delivers the message.
             * `1` is the only possible value.
          example: 1
          enum:
          - 1
    inline_response_200_19_result:
      type: object
      properties:
        data:
          type: array
          description: The delivered email message information.
          items:
            $ref: "#/components/schemas/inline_response_200_19_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_20_result:
      type: object
      properties:
        data:
          type: array
          description: The allowlist configuration rules.
          items:
            type: string
            description: One allowlist rule.
            example: from allowlisted-email\@domain\.com
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_21_result:
      type: object
      properties:
        data:
          type: array
          description: The blocklist configuration rules.
          items:
            type: string
            description: One blocklist rule.
            example: from blocklisted-email\@domain\.com
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_22_result_data:
      type: object
      properties:
        enable_auto_whitelist:
          type: integer
          description: |-
            Whether whitelisting is enabled.
            * 1 - Enabled.
            * 0 - Disabled.
          example: 1
          enum:
          - 0
          - 1
        from_addresses:
          type: string
          description: The email addresses that send emails from the account. A comma-separated
            list of email addresses.
          example: "user@example.com,user2@example.com"
        from_name:
          type: string
          description: The name of the person who owns the email account.
          example: User
        queue_days:
          minimum: 0
          type: integer
          description: The number of days that the system retains log files and queued
            messages.
          example: 14
        spam_score:
          type: number
          description: "The account's [Apache SpamAssassin](https://go.cpanel.net/cpaneldocsSpamFilters)\
            \ threshold score."
          example: 2.5
        whitelist_by_association:
          type: integer
          description: "Whether the system whitelisted the email addresses in a message's\
            \ `To` and `From` sections, including carbon-copied (CC) recipients."
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_22_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_22_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_23_result:
      type: object
      properties:
        data:
          type: string
          description: The template file's contents.
          example: "To: %email%\\nSubject: Re: %subject%\\n\\nThe user %acct% does\
            \ not accept mail from your address.\\n\\nThe headers of the message sent\
            \ from your address are shown below:\\n\\n%headers%\\n\","
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_24_result:
      type: object
      properties:
        data:
          type: array
          description: The email addresses to which BoxTrapper forwards email.
          items:
            type: string
            example: "user1@example.com, user2@example.com, user3@example.com"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_25_result:
      type: object
      properties:
        data:
          type: array
          description: The ignorelist configuration rules.
          items:
            type: string
            description: One ignorelist rule.
            example: from ignored-email\@domain\.com
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_26_result_data:
      type: object
      properties:
        date:
          type: integer
          description: The date for which the system returned the log.
          format: unix_timestamp
          example: 1556812881
        lines:
          type: array
          description: "An array of lines from the log file. If the log file doesn't\
            \ exist or if no log lines exist in the file, the function returns an\
            \ empty array."
          items:
            type: string
            example: Processing email with trusted transport method.
        path:
          type: string
          description: "The log file's filepath. If the log file doesn't exist, the\
            \ function returns an empty string."
          example: /home/user/etc/example.com/user/boxtrapper/log/05-02-2019.log
    inline_response_200_26_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_26_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_27_result_data:
      type: object
      properties:
        content:
          type: string
          description: The email message's contents. Up to the first 200 lines of
            an email message.
          example: |-
            From user@example.com Tue May 07 08:30:36 2019
            Received: from user by example.com with local (Exim 4.92) (envelope-from <root@yourserver.net>)
                id 1hO0B1-0003Ev-Md for user2@example.com; Tue, 07 May 2019 08:30:36 -0500
            From: user3@example.com
            Subject: Message
            Message-Id: <E1hO0B1-0003Ev-Md@yourserver.net>
            Date: Tue, 07 May 2019 08:30:35 -0500

            This is an email message
        contents: {}
        queuefile:
          type: string
          description: The message's filename.
          example: example.msg
    inline_response_200_27_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_27_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_28_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether BoxTrapper is enabled for the email account.
            * `1` â Enabled.
            * `0` â Disabled.
          example: 0
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_29_result_data:
      type: object
      properties:
        email:
          type: string
          description: The ignored email message's sender.
          format: email
          example: user@example.com
        failed:
          type: integer
          description: |-
            Whether the system failed to ignore the messages.

            * `1` - Failed to ignore the message.

            * `1` - Failed to ignore the message.

            * `1` - Failed to ignore the message.

            * `1` - Failed to ignore the message.

            * `1` - Failed to ignore the message.

            **Note:**

             The function only returns this value if it experiences issues when it ignores the message.
          example: 1
          enum:
          - 1
        matches:
          type: array
          description: An array containing ignored message files.
          items:
            type: string
            example: example.msg
        operator:
          type: string
          description: |-
            The operation that the system performed.

            * `ignore` â The system ignored this email message.
          example: ignore
          enum:
          - ignore
        reason:
          type: string
          description: "A message that describes the failure or the warning.\n\n**Note:**\n\
            \n The function only returns this value if it doesn't ignore the message\
            \ or experiences issues when it ignores the message. "
          example: This is a failure message.
        warning:
          type: integer
          description: |-
            Whether the system experienced issues when it ignored the message.

            * `1` â The system encountered a problem.

            **Note:**

             The function only returns this value if it experiences issues when it ignores the message.
          example: 1
          enum:
          - 1
    inline_response_200_29_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing ignored email message information.
          example:
          - email: user@example.com
            matches:
            - example.msg
            operator: ignore
          items:
            $ref: "#/components/schemas/inline_response_200_29_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_30_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            An array of strings representing BoxTrapper message templates.
            * `blacklist` - BoxTrapper responds with this message when a blacklisted address sends an email.
            * `verify` - BoxTrapper responds with this message when an address that does not exist on the whitelist or blacklist sends an email. This message requests a response to confirm that the sender is legitimate.
            * `verifyreleased` - BoxTrapper responds with this message when a person responds to the verify message with an email or a click on the verification link.
            * `returnverify` - BoxTrapper responds with this message when the verification process fails.
          example:
          - blacklist
          - returnverify
          - verify
          - verifyreleased
          items:
            type: string
            example: verify
            enum:
            - blacklist
            - verify
            - verifyreleased
            - returnverify
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_31_result_data:
      type: object
      properties:
        from:
          type: string
          description: The sender's email address.
          format: email
          example: user@example.com
        queuefile:
          type: string
          description: The message's unique ID.
          example: example.msg
        subject:
          type: string
          description: The message's subject.
          example: Email Message Subject
        time:
          type: integer
          description: The message's creation time.
          format: unix_timestamp
          example: 1556812881
    inline_response_200_31_result:
      type: object
      properties:
        data:
          type: array
          description: Information about each queued message.
          items:
            $ref: "#/components/schemas/inline_response_200_31_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_32_result_data:
      type: object
      properties:
        email:
          type: string
          description: |-
            The email address for which the system
            processed an email message.
          format: email
          nullable: true
        failed:
          type: integer
          description: |-
            Whether the system failed to process the message.

            * `1` - The function failed to process the message. This is the only
            possible value.

            **Note:**

            The function only returns this value if it fails to process the message.
          example: 1
          enum:
          - 1
        matches:
          type: array
          description: An array of email messages that the system processed.
          items:
            type: string
        operator:
          type: string
          description: |-
            The operation that the system performed.
            * `deliver` - Delivered a specific message.
            * `deliverall` - Delivered all messages from a sender.
            * `delete` - Deleted a message.
            * `deleteall` - Deleted all messages from a sender.
            * `blacklist` - Blacklisted the sender of an email message.
            * `whitelist` - Whitelisted the sender of an email message.
            * `ignore` - Ignored email messages from a sender.

            **Note:**

            The function only returns this value if it successfully processes the message.
          example: delete
          enum:
          - deliver
          - deliverall
          - delete
          - deleteall
          - blacklist
          - whitelist
          - ignore
        reason:
          type: string
          description: |-
            A message about the failure or the warning.

            **Note:**

            The function only returns this value if it fails to processes the message or experiences issues when it processes the message.
    inline_response_200_32_result:
      properties:
        data:
          type: array
          description: An array of objects containing processed email message information.
          items:
            $ref: "#/components/schemas/inline_response_200_32_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_33_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_34_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_35_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_36_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_41_result_data:
      type: object
      properties:
        email:
          type: string
          description: A whitelisted email address.
          format: email
          example: user@example.com
        failed:
          type: string
          description: |-
            The system failed to whitelist the message.

            * `1` â The function failed to whitelist the message. This is the only possible value.

            **Note:**

            The function only returns this property if it failed to whitelist the message.
          example: "1"
          default: "1"
          enum:
          - "1"
        matches:
          type: array
          description: |-
            An array of message files that the system whitelisted.

            **Note:**

            The function **only** returns this value if it whitelists the message.
          items:
            type: string
            example: example.msg
        operator:
          type: string
          description: The action that the system performed.
          example: whitelist
          default: whitelist
          enum:
          - whitelist
        reason:
          type: string
          description: The reason the function skipped the message during whitelisting.
            The `reason` property is returned only if the function failed to whitelist
            the message.
          example: "The cPanel user, \"user\" does not own the requested account \"\
            user@example.com.\""
        warning:
          type: integer
          description: |-
            Whether the system experienced issues when it whitelisted the message.

            * `1` â There was an issue whitelisting the message. This is the only possible value.

            **Note:**

            The function only returns this property if it failed to whitelist the message.
          example: 1
          default: 1
          enum:
          - 1
    inline_response_200_41_result:
      type: object
      properties:
        data:
          type: array
          description: "An array of one or more objects, depending on how many queuefiles\
            \ were passed as parameters. Each object contains information about the\
            \ whitelisted email message."
          example:
          - email: user@example.com
            matches:
            - example.msg
            operator: whitelist
          items:
            $ref: "#/components/schemas/inline_response_200_41_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_42_result_data:
      type: object
      properties:
        feature:
          type: string
          description: The application's feature name. The `app_key` parameter's value.
          example: boxtrapper
        file:
          type: string
          description: The application's icon's filename.
          example: boxtrapper
        group:
          type: string
          description: The application's group.
          example: mail
        height:
          minimum: 1
          type: integer
          description: "The application's icon's height, in pixels."
          example: 32
        if:
          type: string
          description: "Conditional arguments that determine whether to display the\
            \ item, if any exist. Conditional arguments that determine whether to\
            \ display the item. For example, $isreseller indicates that the item only\
            \ displays for reseller accounts. For more information, read our Guide\
            \ to cPanel Variables documentation."
          example: $hasboxtrapper
        imgtype:
          type: string
          description: |-
            The item's image type.
             `icon` is the only possible value.
          example: icon
          enum:
          - icon
        itemdesc:
          type: string
          description: The application's display name.
          example: BoxTrapper
        itemorder:
          minimum: 1
          type: integer
          description: "The application's order in the `dynamicui.conf` file representing\
            \ the application's display order in cPanel's Home interface. For example,\
            \ the first item on the cPanel Home interface has an `itemorder` value\
            \ of `1`."
          example: 3
        module:
          type: string
          description: The application's module. A valid module name.
          example: BoxTrapper
        searchtext:
          type: string
          description: One or more search terms. The application's icon will display
            when users enter these search terms in the Quick Find text box. A space-separated
            list of search terms.
          example: boxtrapper
        subtype:
          type: string
          description: |-
            The item's subtype.
             `img` is the only possible value .
          example: img
          enum:
          - img
        type:
          type: string
          description: |-
            The application's type.
             `image` is the only possible value.
          example: image
          enum:
          - image
        url:
          type: string
          description: The location to which the application's icon links. A valid
            filepath or URL.
          example: mail/boxtrapper.html
        width:
          minimum: 1
          type: integer
          description: "The application's icon's width representing an image width,\
            \ in pixels."
          example: 35
    inline_response_200_42_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_42_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_43_result_data:
      type: object
      properties:
        feature:
          type: string
          description: The feature name. The item will **only** display if the cPanel
            user has access to this feature.
          example: addondomains
        file:
          type: string
          description: The application's icon's filename.
          example: addon_domains
        group:
          type: string
          description: The item's group.
          example: advanced
        height:
          minimum: 1
          type: integer
          description: "The application's icon's height, in pixels."
          example: 48
        if:
          type: string
          description: |-
            Conditional arguments that determine whether to display the item, if any exist.

            For example, `$isreseller` indicates that the item **only** displays for reseller
            accounts.

            For more information, read our
            [Guide to cPanel Variables](https://go.cpanel.net/guidetovariables)
            documentation.
          example: $is_reseller
        imgtype:
          type: string
          description: |-
            The item's image type.

            * `icon` is the only possible value.
          example: icon
          enum:
          - icon
        implements:
          type: string
          description: The `implements` value for the application. This corresponds
            to the `implements` field in the `dynamicui.conf` file.
          example: Domains_AddonDomains
        itemdesc:
          type: string
          description: The application's display name. value.
          example: Addon Domain
        itemorder:
          minimum: 1
          type: integer
          description: |-
            The application's order in the `dynamicui.conf`
            file, representing the application's display order in
            cPanel's *Home* interface.

            For example, the first item on the cPanel *Home* interface
            has an `itemorder` value of `1`.
          example: 4
        searchtext:
          type: string
          description: A space-separated list of search terms. The item will display
            when users enter these search terms in the *Quick Find* textbox.
          example: Domains Addon domain
        subtype:
          type: string
          description: |-
            The item's subtype.

            * `img` is the only possible value.
          example: img
          enum:
          - img
        touch:
          type: string
          description: "Conditional arguments that determine whether to display the\
            \ item, if the touch file exists."
          example: ftp
        type:
          type: string
          description: |-
            The application's type.

            * `image` is the only possible value.
          example: image
          enum:
          - image
        url:
          type: string
          description: The location to which the application's icon links.
          format: url-path
          example: addon/index.html
        width:
          minimum: 1
          type: integer
          description: The application's icon's width.
          example: 48
      description: |-
        The feature's details. The function returns an object for each
        application feature.

        **Note:***

        The property name corresponds to the name(s) specified
        in the `app_keys` parameter.
    inline_response_200_43_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_43_result_data"
          example:
            addon_domains:
              acontent: ""
              base64_png_image: ""
              feature: addondomains
              file: addon_domains
              group: domains
              height: "48"
              if: "$HASROLE{'WebServer'}"
              imgtype: icon
              implements: Domains_AddonDomains
              itemdesc: Addon Domains
              itemorder: "3"
              key: addon_domains
              onclick: ""
              plainitemdesc: Addon Domains
              searchtext: Domains Addon domain Addon Domains
              subtype: img
              target: ""
              type: image
              url: addon/index.html
              width: "48"
            anonymous_ftp:
              acontent: ""
              base64_png_image: ""
              feature: ftpaccts
              file: anonymous_ftp
              group: files
              height: "48"
              if: "$SERVICEPROVIDED{'ftp'} && $hasanonftp"
              imgtype: icon
              itemdesc: Anonymous FTP
              itemorder: "8"
              key: anonymous_ftp
              onclick: ""
              plainitemdesc: Anonymous FTP
              searchtext: Anonymous FTP anonymousftp
              subtype: img
              target: ""
              touch: ftp
              type: image
              url: ftp/anonymous.html
              width: "48"
            ftp_accounts:
              acontent: ""
              base64_png_image: ""
              feature: ftpaccts
              file: ftp_accounts
              group: files
              height: "48"
              if: "$SERVICEPROVIDED{'ftp'}"
              imgtype: icon
              itemdesc: FTP Accounts
              itemorder: "6"
              key: ftp_accounts
              onclick: ""
              plainitemdesc: FTP Accounts
              searchtext: FTP Accounts ftp create
              subtype: img
              target: ""
              touch: ftp
              type: image
              url: ftp/accounts.html
              width: "48"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_44_result_data_items:
      type: object
      properties:
        acontent:
          type: string
          description: The content of a tag in the application's link.
          example: file_manager
        base64_png_image:
          type: string
          description: The application's icon in Base64 format.
          format: base64 image
        feature:
          type: string
          description: A feature name. The icon **only** displays if the cPanel user
            can access this feature.
          example: addondomains
        file:
          type: string
          description: The application's icon's filename.
          example: addon_domains
        group:
          type: string
          description: The item's group.
          example: advanced
        height:
          type: string
          description: "The application icon height, in pixels."
          example: "48"
        if:
          type: string
          description: |-
            An expression containing cPanel variables that determine whether
            to display the item. The function **only** returns this value if
            any variables exist.

            For example, `$isreseller` indicates that the item **only**
            displays for reseller accounts.

            For more information, read our
            [Guide to cPanel Variables documentation](https://go.cpanel.net/guidetovariables).
          example: $isreseller
        imgtype:
          type: string
          description: |-
            The item's image type.

            `icon` is the only possible value.
          example: icon
          enum:
          - icon
        implements:
          type: string
          description: The `implements` name of the application. WHM API 1's `create_user_session`
            and `get_users_links` functions use this value.
          example: Domains_AddonDomains
        itemdesc:
          type: string
          description: The application's display name.
          example: Addon Domain
        itemorder:
          type: string
          description: The application's order in the `dynamicui.conf` file. This
            value represents the application's display order in cPanel's *Home* interface.
          example: "4"
        module:
          type: string
          description: The Perl module that the application requires.
          example: My::Module
        onclick:
          type: string
          description: JavaScript function that the browser calls before or instead
            of URL navigation.
          example: function
        searchtext:
          type: string
          description: One or more space-separated search terms.  The icon will display
            when users enter these search terms in the *Quick Find* text box in the
            cPanel interface.
          example: Domains Addon domain
        subtype:
          type: string
          description: |-
            The item's subtype.

            `img` is the only possible value.
          example: img
          enum:
          - img
        target:
          type: string
          description: The target of the application's link.
          example: file_manager
        touch:
          type: string
          description: "Conditional arguments that determine whether to display the\
            \ item, if a specified touch file exists."
          example: ftp
        type:
          type: string
          description: |-
            The application's type.

            `image` is the only possible value.
          example: image
          enum:
          - image
        url:
          type: string
          description: The path to which the application's icon links.
          format: url-path
          example: addon/index.html
        width:
          type: string
          description: "The application's icon's width, in pixels."
          example: "48"
      example: "{\"acontent\":\"target=\\\"file_manager\\\"\",\"base64_png_image\"\
        :\"\",\"feature\":\"filemanager\",\"file\":\"file_manager\",\"group\":\"files\"\
        ,\"height\":\"48\",\"if\":\"$HASROLE{'FileStorage'}\",\"imgtype\":\"icon\"\
        ,\"implements\":\"FileManager_Home\",\"itemdesc\":\"File Manager\",\"itemorder\"\
        :\"1\",\"key\":\"file_manager\",\"onclick\":\"\",\"plainitemdesc\":\"File\
        \ Manager\",\"searchtext\":\"File Manager file-manager\",\"subtype\":\"img\"\
        ,\"target\":\"file_manager\",\"type\":\"image\",\"url\":\"filemanager/index.html\"\
        ,\"width\":\"48\"}"
    inline_response_200_44_result_data_groups:
      type: object
      properties:
        desc:
          type: string
          description: The group's description.
          example: Files
        group:
          type: string
          description: The group's ID.
          example: files
        items:
          type: array
          description: The groups and their application details.
          items:
            $ref: "#/components/schemas/inline_response_200_44_result_data_items"
    inline_response_200_44_result_data:
      type: object
      properties:
        default_group_order:
          type: object
          additionalProperties:
            type: integer
            description: |-
              The group's default position.

              **Note:**

              The property name is the group ID.
          description: An object that defines the default order of applications in
            cPanel.
          example:
            advanced: 7
            databases: 2
            domains: 3
            email: 4
            files: 1
            metrics: 5
            preferences: 8
            sample_apps: 9
            security: 6
            software: 6
        grouporder:
          type: array
          description: "A list of group IDs, in the order in which the groups appear."
          example:
          - files
          - databases
          - domains
          - email
          - metrics
          - security
          - software
          - advanced
          - preferences
          - pref
          items:
            type: string
        groups:
          type: array
          description: Information about each group in the cPanel interface.
          items:
            $ref: "#/components/schemas/inline_response_200_44_result_data_groups"
        implements:
          type: object
          additionalProperties:
            type: string
            description: |-
              The application and its Appkey value.

              **Note:**

              This return's name is the application's name, in its `implements` value format.
          description: |-
            An object mapping the `implements` names to Appkey values for applications in cPanel.

            For example, use this mapping to determine that the `implements`
            value `SSL_TLS_Status` maps to the Appkey value `tls_status`.

            **Note:**

            * The Appkey for an application can be found in the `key` attribute elsewhere in the API response.
            * The `implements` for an application can be found in the `implements` attribute elsewhere in the API response.
            * For more information about Appkey values, read our [Guide to cPanel Interface Customization - Appkeys](https://go.cpanel.net/paper-lantern-theme-guide-to-cpanel-interface-customization-appkeys) documentation.
          example:
            API_Tokens_Manager: api_tokens
            Backups_Home: backup
            Calendar_Configure: calendar_and_contacts
            ContactInfo_Change: contact_information
            Cron_Home: cron_jobs
            Database_MySQL: mysql_databases
            Database_phpMyAdmin: php_my_admin
            Domains_AddonDomains: addon_domains
            Domains_SubDomains: subdomains
            Email_AccountLevelFiltering: global_email_filters
            Email_Accounts: email_accounts
            Email_Authentication: email_deliverability
            Email_AutoResponders: autoresponders
            Email_BoxTrapper: boxtrapper
            Email_DefaultAddress: default_address
            Email_DeliveryReport: track_delivery
            Email_Disk_Usage: email_disk_usage
            Email_Forwarders: forwarders
            Email_MailingLists: mailing_lists
            Email_Routing: email_routing
            Email_SpamFilter: apache_spam_assassin
            Email_UserLevelFiltering: email_filters
            FileManager_Home: file_manager
            Locale_Change: change_language
            Password_Change: change_password
            SSL_TLS_Manager: ssl_tls
            SSL_TLS_Status: tls_status
            Site_Software: site_software
            Stats_AWStats: awstats
        index:
          type: object
          additionalProperties:
            type: array
            description: |-
              The order in which the application appears in the cPanel interface:
              * The first integer represents the group in which the application appears, starting at `0`.
              * The second integer represents the order in which the application appears in the group, starting at `0`.

              **Note:**

              The array's name is the application's name.
            items:
              type: integer
          description: The applications and the order in which they appear in the
            cPanel interface.
          example:
            addon_domains:
            - 2
            - 2
            address_importer:
            - 3
            - 10
            aliases:
            - 2
            - 4
            analog_stats:
            - 4
            - 5
            apache_handlers:
            - 7
            - 5
            apache_spam_assassin:
            - 3
            - 11
            api_tokens:
            - 5
            - 3
            autoresponders:
            - 3
            - 3
            awstats:
            - 4
            - 4
            backup:
            - 0
            - 5
            backup_wizard:
            - 0
            - 6
            bandwidth:
            - 4
            - 2
            boxtrapper:
            - 3
            - 13
            calendar_and_contacts:
            - 3
            - 14
            change_language:
            - 8
            - 1
            change_password:
            - 8
            - 0
            change_style:
            - 8
            - 2
            contact_information:
            - 8
            - 3
            cron_jobs:
            - 7
            - 1
            default_address:
            - 3
            - 4
            directory_privacy:
            - 0
            - 2
            disk_usage:
            - 0
            - 3
            domains:
            - 2
            - 1
            email_accounts:
            - 3
            - 0
            email_deliverability:
            - 3
            - 9
            email_disk_usage:
            - 3
            - 15
            email_filters:
            - 3
            - 8
            email_routing:
            - 3
            - 2
            encryption:
            - 3
            - 12
            error_pages:
            - 7
            - 4
            errors:
            - 4
            - 1
            file_manager:
            - 0
            - 0
            forwarders:
            - 3
            - 1
            global_email_filters:
            - 3
            - 7
            hotlink_protection:
            - 5
            - 4
            images:
            - 0
            - 1
            indexes:
            - 7
            - 3
            ip_blocker:
            - 5
            - 1
            leech_protection:
            - 5
            - 5
            mailing_lists:
            - 3
            - 5
            metrics_editor:
            - 4
            - 7
            mime_types:
            - 7
            - 6
            multiphp_ini_editor:
            - 6
            - 5
            multiphp_manager:
            - 6
            - 4
            mysql_database_wizard:
            - 1
            - 2
            mysql_databases:
            - 1
            - 1
            optimize_website:
            - 6
            - 3
            perl_modules:
            - 6
            - 1
            php_my_admin:
            - 1
            - 0
            php_pear_packages:
            - 6
            - 0
            raw_access:
            - 4
            - 3
            redirects:
            - 2
            - 5
            remote_mysql:
            - 1
            - 3
            site_publisher:
            - 2
            - 0
            site_software:
            - 6
            - 2
            ssh_access:
            - 5
            - 0
            ssl_tls:
            - 5
            - 2
            subdomains:
            - 2
            - 3
            terminal:
            - 7
            - 0
            tls_status:
            - 5
            - 6
            track_delivery:
            - 3
            - 6
            track_dns:
            - 7
            - 2
            user_manager:
            - 8
            - 4
            version_control:
            - 0
            - 7
            visitors:
            - 4
            - 0
            web_disk:
            - 0
            - 4
            webalizer:
            - 4
            - 6
            zone_editor:
            - 2
            - 6
    inline_response_200_44_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_44_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_45_result_condition:
      type: object
      properties:
        feature:
          type: string
          description: The feature that the user must have access to in order to see
            the application in their cPanel *Home* interface.
          example: blockers
        if:
          type: string
          description: |-
            cPanel variables that determine whether to display the
            item, if any exist.

            For example, `$isreseller` indicates that the item **only**
            displays for reseller accounts.

            For more information, read our
            [Guide to cPanel Variables](https://go.cpanel.net/guidetovariables)
            documentation.
          example: '!$isarchiveuser'
        module:
          type: string
          description: The name of the module that provides the application.
      description: An object containing the application's conditions.
    inline_response_200_45_result_icon:
      type: object
      properties:
        height:
          minimum: 1
          type: integer
          description: "The application's icon's height, in pixels."
          example: 32
        url:
          type: string
          description: The file path or URL location of the application's icon.
          format: url-path
          example: email_filters
        width:
          minimum: 1
          type: integer
          description: "The application's icon's width, in pixels."
          example: 35
      description: The application's icon information.
    inline_response_200_45_result_data:
      type: object
      properties:
        condition:
          $ref: "#/components/schemas/inline_response_200_45_result_condition"
        description:
          type: string
          description: The application's display name.
          example: Email Filters
        icon:
          $ref: "#/components/schemas/inline_response_200_45_result_icon"
        implements:
          type: string
          description: The module namespace for the specific application.
          example: Email_UserLevelFiltering
        key:
          type: string
          description: The application's Appkey name.
          example: email_filters
        name:
          type: string
          description: The application's name.
          example: Email Filters
        order:
          minimum: 1
          type: integer
          description: The application's order in the `sitemap.json` file. This value
            represents the application's display order in cPanel's *Home* interface.
          example: 4
        terms:
          type: array
          description: Search keywords for the application.
          example:
          - email
          - filter
          - filters
          items:
            type: string
        type:
          type: string
          description: |-
            The application's type.

            `item` is the only possible value.
          example: item
          enum:
          - item
        url:
          type: string
          description: The file path or URL to the the application's file.
          format: url-path
          example: mail/filters/userfilters.html
      description: |-
        An object containing information about the queried `app_keys` application.

        **Note:**

        The object's name is the value specified in the `app_keys` parameter.
    inline_response_200_45_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_45_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_46_result:
      type: object
      properties:
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_47_result_data:
      type: object
      properties:
        delegatee:
          type: string
          description: The user with delegation rights.
          format: email
          example: delegatee@cptest.test
        delegator:
          type: string
          description: The calendar's owner.
          format: email
          example: delegator@cptest.test
        read_only:
          type: integer
          description: |-
            Whether the delegatee has read-only access on the calendar.
            * `1` - Read-only access.
            * `0` - Full access.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_47_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contain Calendars and Contacts Server
            calendar delegation information.
          nullable: true
          items:
            $ref: "#/components/schemas/inline_response_200_47_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_48_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            description: "The user account's [universally unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier)\
              \ (UUID). The user account's name is the return's name."
          example:
            user1@example.com: 0882362A-0B98-11E8-BAF5-D988266709C1
            user2@example.com: 96F1EB2F-A501-11EA-A3EF-A553B2E4FFA8
            user3@example.com: 195C8A51-E1B3-11E6-8715-F54FA4E00DDD
            user4@example.com: 028F4AB1-0F1A-11E7-AEC7-E08FECEC8036
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_51_result_data:
      type: object
      properties:
        shared:
          type: integer
          description: |-
            Whether the sharing succeeded.
            * `1` â Shared.
            * `0` â **Not** shared.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_51_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_51_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_52_result_data:
      type: object
      properties:
        calendar:
          type: string
          description: The calendar id.
          example: calendar
        calname:
          type: string
          description: The name of the calendar.
          example: cPanel CalDAV Calendar
        delegatee:
          type: string
          description: The person to whom the owner of the calendar shared it.
          example: second@example.com
        delegator:
          type: string
          description: The owner of the calendar.
          example: first@example.com
        readonly:
          type: integer
          description: "If set to `1`, the `delegatee` only has read access to the\
            \ calendar."
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_52_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_52_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_53_result:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
              additionalProperties:
                type: object
                properties:
                  calendar-color:
                    type: string
                    description: "For calendars only: The color to use for calendar\
                      \ events."
                    example: "#ee5555"
                  description:
                    type: string
                    description: The description of the collection.
                  displayname:
                    type: string
                    description: The name of the collection.
                  protected:
                    type: integer
                    description: "If this value is `1`, then the collection cannot\
                      \ be deleted through the API."
                    example: 1
                    enum:
                    - 0
                    - 1
                  type:
                    type: string
                    description: The type of the collection.
                    example: VCALENDAR
                    enum:
                    - VADDRESSBOOK
                    - VCALENDAR
                description: The name of this property is the collection id.
              description: The name of this property is the principal name.
            example:
              someone@example.com:
                addressbook:
                  description: Default Address Book automatically created for your
                    account.
                  displayname: cPanel CardDAV Address Book
                  protected: 1
                  type: VADDRESSBOOK
                calendar:
                  calendar-color: "#ff6c2c"
                  description: Default Calendar automatically created for your account.
                  displayname: cPanel CalDAV Calendar
                  protected: 1
                  type: VCALENDAR
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_54_result_data:
      type: object
      properties:
        shared:
          type: integer
          description: |-
            Whether the operation succeeded.
            * `1` â Operation succeeded.
            * `0` â Operation did **not** succeed.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_54_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_54_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_55_result_data:
      type: object
      properties:
        shared:
          type: integer
          description: |-
            Whether the sharing removal succeeded.
            * `1` â Removed.
            * `0` â **Not** removed.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_55_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_55_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_57_result_data_results:
      type: object
      properties:
        email:
          type: string
          description: The email address or forwarder.
          format: email
          example: j.doe@example.com
        fwd:
          type: string
          description: The destination of the forwarder (if applicable).
          format: email
          nullable: true
        reason:
          type: string
          description: The explanation of the outcome for each operation.
        status:
          type: integer
          description: |-
            The outcome of each operation.

            * `1` â Success.
            * `0` â Failed.
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of email address.

            * `email` â A regular email account.
            * `fwd` â A forwarder.
          example: email
          enum:
          - email
          - fwd
    inline_response_200_57_result_data:
      type: object
      properties:
        results:
          type: array
          description: The results for each attempted add operation.
          example:
          - email: j.doe@example.com
            reason: OK
            status: 1
            type: email
          - email: jdoe@example.com
            reason: The account jdoe@example.com already exists!
            status: 0
            type: email
          items:
            $ref: "#/components/schemas/inline_response_200_57_result_data_results"
    inline_response_200_57_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_57_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          example:
          - 1 error(s) were encountered while importing accounts.
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success
            * `0` â Failed: One or more errors occurred. For errors related to individual account add operations, see the `reason` field in each record from `results` for more information.
          example: 0
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_58_result_data:
      type: object
      properties:
        cache_id:
          maximum: 99999999
          minimum: 10000000
          type: integer
          description: An eight-digit random integer that the system uses to work
            around a browser's caching mechanism.
          example: 11381138
    inline_response_200_58_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_58_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_59_result_data:
      type: object
      properties:
        cache_id:
          type: integer
          description: random integer that the system uses to work with and around
            a browser's caching mechanism. An eight-digit integer.
          example: 11381138
    inline_response_200_59_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_59_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_60_result_data:
      type: object
      properties:
        ports:
          uniqueItems: true
          type: array
          description: An array of port numbers on which Exim listens.
          items:
            maximum: 65535
            minimum: 1
            type: integer
            example: 25
    inline_response_200_60_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_60_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_61_result_data:
      type: object
      properties:
        ports:
          type: array
          description: An array of port numbers on which Exim listens for SSL/TLS
            connections.
          items:
            maximum: 65535
            minimum: 0
            type: integer
            example: 465
    inline_response_200_61_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_61_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_62_result_data:
      type: object
      properties:
        footer:
          type: string
          description: The pages' footer.
          example: |2+

            <!-- The Footer HTML of the user's assigned theme -->
            </html>

        header:
          type: string
          description: The pages' header.
          example: |2-


            <!DOCTYPE html>

            <html lang="en" dir="ltr">
            <!-- The Header HTML of the user's assigned theme -->
    inline_response_200_62_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_62_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_63_result_data:
      type: object
      properties:
        details:
          type: array
          description: "The list of events recorded in the log. If you pass the `last_id`\
            \ parameter, only records in the log after that id are returned."
          items:
            oneOf:
            - required:
              - state
              - type
              type: object
              properties:
                file:
                  type: string
                  description: The absolute path to the file.
                  example: /home/user/virus
                id:
                  type: number
                  description: The task processing order.
                  example: 2
                message:
                  type: string
                  description: Optional message that may include more information
                    about errors.
                state:
                  type: string
                  description: |-
                    The state of the step. It will be one of the following:

                    * `deleted` - The file was deleted.
                    * `error` - An error occurred while processing the file.
                    * `mailbox-cleansed` - The mailbox was clear of viruses.
                    * `no-action` - No action was taken on the file.
                    * `quarantined` - The file was quarantined.
                  example: deleted
                  enum:
                  - deleted
                  - error
                  - mailbox-cleansed
                  - no-action
                  - quarantined
                type:
                  type: string
                  description: '* `step` - Record about a single file being processes.'
                  enum:
                  - step
            - required:
              - state
              - type
              type: object
              properties:
                id:
                  type: number
                  description: The task processing order.
                  example: 2
                message:
                  type: string
                  description: Optional message that may include more information
                    about errors and warnings.
                state:
                  type: string
                  description: |-
                    The state of the issue. It will be one of the following:

                    * `error` - An error occurred while starting or finishing the disinfection.
                    * `warning` - A non-cricitcal problem occurred while starting or finishing the disinfection.
                  example: warning
                  enum:
                  - error
                  - warning
                type:
                  type: string
                  description: '* `issue` - Record that the disinfection is complete
                    for all files indicated.'
                  enum:
                  - issue
            - required:
              - type
              type: object
              properties:
                id:
                  type: number
                  description: The task processing order.
                  example: 2
                message:
                  type: string
                  description: Optional message that may include more information
                    about errors.
                state:
                  type: string
                  description: |-
                    The state of the step. It will be one of the following:

                    * `error` - An error occurred while processing the file.
                    * `info` - The message is information only.
                    * `success` - The disinfection was successful.
                  example: success
                  enum:
                  - error
                  - info
                  - success
                type:
                  type: string
                  description: '* `done` - Record that the disinfection is complete
                    for all files indicated.'
                  enum:
                  - done
        log:
          type: string
          description: "Path to the disinfection log file. The log file will contain\
            \ a list of JSON objects one per line.  If the last line includes `\"\
            type\":\"done\"`, the file disinfection is complete."
          example: /home/user/.clamavconnector.disinfection.log
        status:
          type: string
          description: |-
            * `done` - The disinfection is finished.
            * `none` - There is no disinfection scheduled.
            * `queued` - The disinfection is queued.
            * `running` - The disinfection is in progress.
          example: done
          enum:
          - done
          - queued
          - running
    inline_response_200_63_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_63_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_64_result_data:
      type: object
      properties:
        log:
          type: string
          description: |-
            Path to the disinfection log file. The log file will contain a list of JSON objects one per line.

            If the last line is:

            `{ "status": "done" }`

            the requested files with viruses have be handled as requested.  Use the /ClamScanner/check_disinfection_status
            API to check the status of a running or finished disinfection.
          example: /home/user/.clamavconnector.disinfection.log
        task_id:
          type: string
          description: The Task Queue system's task ID number.
          example: 00000000/5a9ec8dd4c345d
    inline_response_200_64_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_64_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_65_result_data:
      type: object
      properties:
        id:
          type: string
          description: |-
            The type of path
            * `home` â The cPanel account's entire home directory.
            * `mail` â The cPanel account's email directory.
            * `public_html` â The cPanel account's web directory.
            * `public_ftp` â The cPanel account's FTP directory.
          example: home
          enum:
          - home
          - mail
          - public_html
          - public_ftp
        message:
          type: string
          description: Short description of the path
          example: Scan Entire Home Directory
    inline_response_200_65_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_65_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_66_result_data:
      type: object
      properties:
        current_file:
          type: string
          description: The current file being scanned.
          example: /home/username/afilename.txt
        infected_files:
          type: array
          description: List of files scanned and found to be infected.
          example:
          - /home/username/afile/witha/virus.txt
          - /home/username/we/gotcha.exe
        scan_complete:
          type: integer
          description: |-
            Whether the last scan has completed.
            * `1` - scan has completed.
            * `0` - scan has **not** completed.
          example: 1
          enum:
          - 0
          - 1
        scanned_file_count:
          minimum: 0
          type: integer
          description: The number of files already scanned.
          example: 135
        scanned_file_size:
          minimum: 0
          type: integer
          description: The number of bytes of data scanned.
          example: 6022
        time_started:
          minimum: 0
          type: string
          description: The epoch timestamp of the beginning of the last scan.
          example: "1608593571"
        total_file_count:
          minimum: 0
          type: integer
          description: The total number of files found to scan.
          example: 135
        total_file_size_MiB:
          minimum: 0
          type: integer
          description: The total number of megabytes of data found to scan.
          example: 3640222
    inline_response_200_66_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_66_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_67_result_data:
      type: object
      properties:
        file:
          type: string
          description: An absolute path to the infected file on the system.
          format: path
          example: /home/username/infected_file.txt
        virus_type:
          type: string
          description: A virus type.
          example: Eicar-Signature
    inline_response_200_67_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_67_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_69_result:
      type: object
      properties:
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_70_result:
      type: object
      properties:
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_71_result_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the cPanel account can contact their hosting provider
            from the cPanel interface.

            * `1` âÂ The cPanel account can contact their hosting provider
            from the cPanel interface.
            * `0` âÂ The cPanel account **cannot** contact their hosting
            provider from the cPanel interface.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_71_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_71_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_72_result_data:
      type: object
      properties:
        shared:
          type: integer
          description: |-
            Whether the global address book is shared.
            * `1` â Shared.
            * `0` â **Not** shared.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_72_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_72_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_73_result_data:
      type: object
      properties:
        shared:
          type: integer
          description: |-
            Whether the global address book is shared.
            * 1 â Shared.
            * 0 â **Not** shared.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_73_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_73_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_74_result_data_activesync:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the server has ActiveSync enabled.
            * `1` â Enabled.
            * `0` â **Not** enabled.
          example: 1
          enum:
          - 1
          - 0
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The port number the system uses for secure ActiveSync connections.
          example: 2091
        server:
          type: string
          description: The fully qualified domain name to connect to.
          format: domain
          example: example.com
        user:
          type: string
          description: |-
            The cPanel user or email account user to
            whom the returned connection information pertains.

            If you do **not** specify the `user` parameter,
            this function returns the authenticated cPanel user.
          example: username
      description: Configuration details for ActiveSync.
    inline_response_200_74_result_data_no_ssl_calendars:
      type: object
      properties:
        description:
          type: string
          description: The description of the calendar.
          example: Custom calendar 1.
        name:
          type: string
          description: The name of the calendar.
          example: Calendar 1
        path:
          type: string
          description: The relative URL path to the calendar.
          example: /calendars/example/calendar:ZcG9JBH68WXxfMVUgvSrUw1
        url:
          type: string
          description: The absolute URL to the calendar.
          format: url
          example: http://example.com:2079/calendars/example/calendar:ZcG9JBH68WXxfMVUgvSrUw1
    inline_response_200_74_result_data_no_ssl_contacts:
      type: object
      properties:
        description:
          type: string
          description: The description of the address book.
          example: Custom address book 1.
        name:
          type: string
          description: The name of the address book.
          example: Custom 1
        path:
          type: string
          description: The relative URL to the address book.
          example: /addressbooks/example/contacts:E-KKA5uQZyQJbTBKcGP3OQ6
        url:
          type: string
          description: The absolute URL to the address book.
          format: url
          example: https://example.com:2080/addressbooks/example/contacts:E-KKA5uQZyQJbTBKcGP3OQ6
    inline_response_200_74_result_data_no_ssl:
      type: object
      properties:
        calendars:
          type: array
          description: An array of objects containing the user's calendars.
          items:
            $ref: "#/components/schemas/inline_response_200_74_result_data_no_ssl_calendars"
        contacts:
          type: array
          description: An array of objects containing the user's address books.
          items:
            $ref: "#/components/schemas/inline_response_200_74_result_data_no_ssl_contacts"
        free_busy:
          type: string
          description: |-
            The absolute URL path and HTTP port to the user's
            CalDAV `free-busy-query` connection.

            **Note:**

            This information is useful for clients that support Autodiscovery.
          format: url
          example: http://server.example.com:2079/kronolith/fb.php?u=example
        full_server:
          type: string
          description: |-
            The absolute URL path and HTTP port to the user's CalDAV
            and CardDAV connection information.

            **Note:**

            This information is useful for clients that do **not** support Autodiscovery.
          format: url
          example: http://example.com:2079/rpc/principal/example
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The port number that the system uses for non-SSL connections.
          example: 2079
        server:
          type: string
          description: The short server connection string that includes a domain name
            and a port that uses the HTTP protocol.
          format: url
          example: http://example.com:2079
      description: A list of non-SSL connection configurations.
    inline_response_200_74_result_data_ssl_calendars:
      type: object
      properties:
        description:
          type: string
          description: The description of the calendar.
          example: Custom calendar 2.
        name:
          type: string
          description: The name of the calendar.
          example: Calendar 2
        path:
          type: string
          description: The relative URL path to the calendar.
          example: /calendars/example/calendar:ZcG9JBH68WXxfMVUgvSrUw1
        url:
          type: string
          description: The absolute URL to the calendar.
          format: url
          example: http://example.com:2080/calendars/example/calendar:ZcG9JBH68WXxfMVUgvSrUw1
    inline_response_200_74_result_data_ssl_contacts:
      type: object
      properties:
        description:
          type: string
          description: The description of the address book.
          example: Custom address book 2.
        name:
          type: string
          description: The name of the address book.
          example: Address book 2
        path:
          type: string
          description: The relative URL to the address book.
          example: /addressbooks/example/contacts:E-KKA5uQZyQJbTBKcGP3OQ6
        url:
          type: string
          description: The absolute URL to the address book.
          format: url
          example: https://example.com:2080/addressbooks/example/contacts:E-KKA5uQZyQJbTBKcGP3OQ6
    inline_response_200_74_result_data_ssl:
      type: object
      properties:
        calendars:
          type: array
          description: An array of objects containing the user's calendars.
          items:
            $ref: "#/components/schemas/inline_response_200_74_result_data_ssl_calendars"
        contacts:
          type: array
          description: An array of objects containing the user's address books.
          items:
            $ref: "#/components/schemas/inline_response_200_74_result_data_ssl_contacts"
        free_busy:
          type: string
          description: |-
            The absolute URL path and HTTPS port to the user's CalDAV
            `free-busy-query` connection.

            **Note:**

            This information is useful for clients that support Autodiscovery.
          format: url
          example: http://server.example.com:2080/kronolith/fb.php?u=example
        full_server:
          type: string
          description: |-
            The absolute URL path and HTTPS port to the user's CalDAV and
            CardDAV connection information.

            **Note:**

            This information is useful for clients that do **not** support
            Autodiscovery.
          format: url
          example: http://example.com:2080/rpc/principal/example
        is_self_signed:
          type: integer
          description: |-
            Whether the server uses a self-signed certificate.

            * `1` â Self-signed.
            * `0` â **Not** self-signed.
          example: 1
          enum:
          - 1
          - 0
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The port number that the system uses for SSL connections.
          example: 2080
        server:
          type: string
          description: |-
            The short server connection string that includes a
            domain name and a port that uses the HTTPS protocol.

            **Note:**

            This value is useful for clients that support Autodiscovery.
          format: url
          example: https://example.com:2080
      description: A list of SSL connection configurations.
    inline_response_200_74_result_data:
      type: object
      properties:
        activesync:
          $ref: "#/components/schemas/inline_response_200_74_result_data_activesync"
        no_ssl:
          $ref: "#/components/schemas/inline_response_200_74_result_data_no_ssl"
        ssl:
          $ref: "#/components/schemas/inline_response_200_74_result_data_ssl"
        user:
          type: string
          description: |-
            The cPanel user or email account user to
            whom the returned connection information pertains.

            If you do **not** specify the `user` parameter,
            this function returns the authenticated cPanel user.
          example: username
    inline_response_200_74_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_74_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_75_result_data:
      type: object
      properties:
        shared:
          type: integer
          description: |-
            Whether the global address book is enabled.
            * `1` â Enabled.
            * `0` â **Not** enabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_75_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_75_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_76_result_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the DAV service is enabled.
            * `1` â Enabled.
            * `0` â Disabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_76_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_76_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_77_result_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether Horde is enabled. Always false because horde is no longer installed with the product.
            * `0` â Disabled.
          example: 0
          enum:
          - 0
    inline_response_200_77_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_77_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_78_result_data:
      type: object
      properties:
        dcv_string:
          type: string
          description: The expected value of the queried DNS record.
          example: _dcv-test-record=wsWRlG9IsG7KNnLdIsx9Oz2oTw8m5q0imRR9L6LnDBz14sZelvDHqrJyJc6LA0DY
        domain:
          type: string
          description: The domain that the system verified.
          format: domain
          example: example.com
        failure_reason:
          type: string
          description: |-
            A message that contains the reason why the DCV check failed.

            **Note:**

              If the server fails to update the DNS zone, the system returns this value.
          example: The DNS query to _dcv-test-record.example2.org for the DCV challenge
            returned no TXT record that matches the value _dcv-test-record=wRUFPTN1DskKDG8KHfYM_5cQF5QUGWq1_A2ovO8rKsrIYO_HilAjsQABFCrbJkLX.
        query_results:
          type: array
          description: |-
            The strings that the DNS query returned. This array may be empty.

            **Note:**

             If the server fails to update the DNS zone, the system returns the `failure_reason` value.
          example:
          - _dcv-test-record=wsWRlG9IsG7KNnLdIsx9Oz2oTw8m5q0imRR9L6LnDBz14sZelvDHqrJyJc6LA0DY
          items:
            type: string
        succeeded:
          type: integer
          description: |-
            Whether the DCV check succeeded.
            - `1` - At least one of the `query_results` values equals the `dcv_string` value.
            - `0` - None of the `query_results` values equal the `dcv_string` value.
          example: 1
          enum:
          - 1
          - 0
        zone:
          type: string
          description: The altered and queried DNS zone name.
          format: domain
          example: example.com
    inline_response_200_78_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            An array of objects containing the results from each `domain` parameterâs DCV check.

            **Note:**

             The function returns the results from the `domain` parameter in the same order in which you called them.
          items:
            $ref: "#/components/schemas/inline_response_200_78_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_79_result_redirects:
      type: object
      properties:
        content:
          type: string
          description: A message that explains why the function failed.
          example: <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>301
            Moved Permanently</title>\n </head><body>\n<h1>Moved Permanently</h1>\n
            <p>The document has moved <a href=\"http://www.example.com/.well-known/pki-validation/770102
            17B0CCF0CCF6211602F9A1B2B2.txt\">here</a>.</p>\n</body></html>\n
        headers:
          type: object
          description: |-
            An object that contains the [HTTP::Tiny](http://search.cpan.org/~dagolden/HTTP-Tiny-0.070/lib/HTTP/Tiny.pm) CPAN module returns.

            **Note:**

              This object's contents vary according to the URL's headers.
        protocol:
          type: string
          description: The URL's HTTP protocol.
          example: HTTP/1.1
        reason:
          type: string
          description: The HTTP response status message.
          example: Moved Permanently
        redirects:
          type: array
          description: "An array of objects containing the redirects, if the value\
            \ exists."
          nullable: true
        status:
          type: integer
          description: "The [HTTP response status code](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes)."
          example: 301
        success:
          description: |-
            Whether the server returns a [2XX HTTP status code](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success).
            * `1` â The server returns a 2XX status code.
            * `0` or an empty string â The server does **not** return a 2XX status code.
          example: ""
          oneOf:
          - type: string
            enum:
            - ""
          - type: integer
            enum:
            - 0
            - 1
        url:
          type: string
          description: The URL that the function searches for the DCV file.
          format: url
          example: http://example.com/.well-known/pki-validation/77010217B0CCF0CCF6211602F9A1B2B2.txt
    inline_response_200_79_result_data:
      type: object
      properties:
        failure_reason:
          type: string
          description: |-
            The reason that the DCV check failed.
            * `null` â The domain passed the DCV check.
          nullable: true
          example: "The system queried for a temporary file at http://example.com/.well-known/pki-validationD01511F4E\
            \ E535A5442FC378AA946CF41.txt, but the web server responded with the following\
            \ error: 404 (Not Found). A DNS (Domain Name System) or web server misconfiguration\
            \ may exist. The domain example.com resolved to an IP address 93.184.216.34\
            \ that does not exist on this server."
        redirects:
          type: array
          description: |-
            An array of objects that contains DCV check redirect information.

            **Note:**

             This **only** contains data if the `redirects_count` return includes a value greater than zero.
          items:
            $ref: "#/components/schemas/inline_response_200_79_result_redirects"
        redirects_count:
          minimum: 0
          type: integer
          description: The number of HTTP redirects that the DCV check follows.
          example: 0
    inline_response_200_79_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            An array of objects that contains results from each domain's DCV check.

            **Note:**

             The function returns the domain's results in the same order that you pass them in the `domain` parameter.
          items:
            $ref: "#/components/schemas/inline_response_200_79_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_80_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            A list of results from each domain parameter's DCV check.

            * `null` âÂ The domain passes the DCV check.

            **Note:**

            The function returns the results from the domains in the same order
            in which you called them.
          example:
          - null
          - null
          - The domain resolves to Mars. Beep beep beep.
          items:
            type: string
            nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_81_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            The results from each domain parameter's DNS query.
            * `null` - The domain **only** resolves locally to the server.
            * A valid string that explains to where the domain resolves.

            **Note:**

             The function returns the results from the domains in the same order that you called them.
          nullable: true
          items:
            type: string
            example: The domain resolves to Mars. Beep beep beep.
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_82_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The queried domain.
          format: domain
        error:
          type: string
          description: |-
            An error message that details the reason why the local server's
            authoritative check failed.

            **Note:**

            The function **only** returns this value when the check fails.
        local_authority:
          type: integer
          description: |-
            Whether the local server is authoritative for the domain's DNS
            records.

            * `1` â The local server is authoritative for the domain's DNS
            records.
            * `0` â The local server is **not** authoritative for the domain's
            DNS records.
          enum:
          - 1
          - 0
        nameservers:
          type: array
          description: "The domain's nameservers, if any exist."
          items:
            type: string
            format: domain
        zone:
          type: string
          description: |-
            The domain's DNS zone, if one exists.

            * `null` â No valid DNS zone.
          format: domain
          nullable: true
    inline_response_200_82_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing information about the authoritative
            status of a domain's local DNS zone files.
          example:
          - domain: example.com
            local_authority: 1
            nameservers:
            - ns1.example.com
            - ns2.example.com
            zone: example.com
          - domain: example2.com
            local_authority: 0
            nameservers: []
          - domain: example3.com
            error: (XID 3z756a) DNS query (example3.com/SOA) timeout!
            local_authority: 0
            nameservers: []
            zone: example3.com
          items:
            $ref: "#/components/schemas/inline_response_200_82_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          items:
            type: string
            nullable: true
    inline_response_200_83_result_data:
      type: object
      properties:
        alias:
          type: integer
          description: |-
            Whether `ALIAS` records are available.

            * `1` - Available.
            * `0` - Not available.

            When `ALIAS` records are enabled, they may work in API calls that accept `A` and `AAAA` records. However, the `ALIAS` record must use a fully qualified domain name (FQDN) rather than an IP address.
          example: 1
          enum:
          - 1
          - 0
        aname:
          type: integer
          description: |-
            Whether `ANAME` records are available.

            * `1` - Available.
            * `0` - Not available.

            **NOTE:**

            The `aname` value is always set to false (i.e. Not available). The `ANAME` record is currently not supported. It is included for completeness and future proofing.
          example: 0
          enum:
          - 1
          - 0
        resolver:
          type: string
          description: The value (if any) of the running PDNSâs `resolver` setting.
          example: 8.8.8.8
    inline_response_200_83_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_83_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_84_result:
      type: object
      properties:
        data:
          type: array
          description: Contains each response item.
          nullable: true
          example:
          - example.com has address 93.184.216.34
          - example.com has IPv6 address 2606:2800:220:1:248:1893:25c8:1946
          - example.com mail is handled by 0 .
          items:
            type: string
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_85_result_data:
      properties:
        new_serial:
          minimum: 0
          type: integer
          description: |-
            The DNS zoneâs SOA recordâs new serial number.
            You can use this to submit later edits if you
            track the number of lines each record takes up.
          example: 2021031903
    inline_response_200_85_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_85_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_86_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Payload"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_87_result_data:
      properties:
        zone_name:
          type: string
          description: The DNS zone in which the system updated the domain's record.
          format: domain
          nullable: false
          example: example.com
        record_name:
          type: string
          description: The name of the domain's updated DNS record.
          format: domain
          nullable: false
          example: example.com
        record_type:
          type: string
          description: The type of the DNS record which was updated.
          example: A
        old_value:
          type: string
          description: The value of the DNS record before it was updated.
          example: 192.0.2.0
        new_value:
          type: string
          description: The value of the DNS record after it was updated.
          example: 192.0.2.1
    inline_response_200_87_result:
      type: object
      properties:
        data:
          type: array
          description: "An array of objects containing the updated DNS records, including\
            \ their previous values."
          items:
            $ref: "#/components/schemas/inline_response_200_87_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_88_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system activated a security key.
          format: domain
          example: example.com
        error:
          type: string
          description: |-
            An error message that describes why the system could not activate the security key.

            **Note:**

            The function **only** displays this return when the `success` return is a `0` value.
          example: "Error: Invalid key_id or domain specified: No such key present\
            \ for domain."
        key_id:
          type: string
          description: The security key's ID.
          example: "1"
        success:
          type: integer
          description: "Whether the system activated the security key.\n* `1` - Activated.\n\
            * `0` - The system failed to activate the security key. "
          example: 1
          enum:
          - 1
          - 0
      example: "{\"domain\":\"example.com\",\"key_id\":\"1\",\"success\":1}"
    inline_response_200_88_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_88_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_89_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system added a security key.
          format: domain
          example: example.com
        error:
          type: string
          description: |-
            An error message that describes why the system could not add the security key.

            **Note:**

            The function **only** displays this return when the `success` return is a `0` value.
          example: "Error: Invalid key_id or domain specified: No such key present\
            \ for domain."
        new_key_id:
          type: string
          description: The security key's ID.
          example: "1"
        success:
          type: integer
          description: |-
            Whether the system added the security key.

            * `1` â The system added the security key.
            * `0` â The system failed to add the security key.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_89_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_89_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_90_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system deactivated a security key.
          format: domain
          example: example.com
        error:
          type: string
          description: |-
            An error message that describes why the system could not
            deactivate the security key.

            **Note**

            The function **only** displays this return when the `success` return is a `0` value.
          example: "Error:  Invalid key_id or domain specified: No such key present\
            \ for domain."
        key_id:
          type: string
          description: The security key's ID.
          example: "1"
        success:
          type: integer
          description: |-
            Whether the system deactivated the security key.

            * `1` - Deactivated.
            * `0` - The system failed to deactivate the security key.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_90_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_90_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_91_result_data_disabled:
      type: object
      properties:
        additionalProperties:
          type: integer
          description: |-
            Information about the domains for which the system
            disabled DNSSEC.

            * `1` â Disabled.
            * `0` â The system failed to disable DNSSEC.

            **Note:**

            This return's name is the `domain` parameter's value.
          example: 1
          enum:
          - 0
          - 1
      description: An array of objects that contain the domains for which the system
        disabled DNSSEC.
    inline_response_200_91_result_data:
      type: object
      properties:
        disabled:
          $ref: "#/components/schemas/inline_response_200_91_result_data_disabled"
      example: "{\"disabled\":{\"example.com\":1}}"
    inline_response_200_91_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_91_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_92_result_data_enabled_additionalProperties:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the system enabled DNSSEC.

            * `1` â The system enabled DNSSEC.
            * `0` â The system failed to enable DNSSEC.
          enum:
          - 1
          - 0
        new_key_id:
          type: integer
          description: The assigned security key ID.
          example: 1
        nsec_version:
          type: string
          description: |-
            The version of DNSSEC the system used.

            * `NSEC3`
            * `NSEC`
          enum:
          - NSEC3
          - NSEC
      description: |-
        Information about the domain for which the system
        enabled DNSSEC.

        **Note:**

        This return's name is the `domain` parameter's value.
    inline_response_200_92_result_data_enabled:
      type: object
      properties:
        additionalProperties:
          $ref: "#/components/schemas/inline_response_200_92_result_data_enabled_additionalProperties"
      description: An object containing information about the domains for which the
        system enabled DNSSEC.
    inline_response_200_92_result_data:
      type: object
      properties:
        enabled:
          $ref: "#/components/schemas/inline_response_200_92_result_data_enabled"
      example: "{\"enabled\":{\"example.com\":{\"enabled\":1,\"new_key_id\":\"1\"\
        ,\"nsec_version\":\"NSEC3\"}}}"
    inline_response_200_92_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_92_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_93_result_data:
      type: object
      properties:
        dnskey:
          type: string
          description: The DNSKEY record value.
          example: AwEAAch8SGW4vE6PjFWA9rbUm0AfTq+gJ0HC/nLu+2axdWHBIStt9lsOzKDorAr4vlmhlJzEzA62s96xp6mZ7XHUyWnkFwLs8obo6upL2in4h1ToOxzVl3lTs8O+kWtDq5/h1nwFlPDs9zpLJhlkTCtx2OTGbvimEYeqwPolUuSQR/Yb
        key_id:
          minimum: 1
          type: integer
          description: The DNSSEC record's ID.
          example: 12345
        success:
          type: integer
          description: |-
            Whether the DNSKEY record exported successfully.

            * `1` - The system exported the record successfully.
            * `0` - The system failed to export the record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_93_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_93_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_94_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The security key's domain.
          format: domain
          example: example.com
        key_content:
          type: string
          description: "The content of the key, which includes the algorithm."
          example: |+
            Private-key-format: v1.2
            Algorithm: 8 (RSASHA256)
            Modulus: 9i8AlGZkwKJj6HYZX+9OcOyCMQ0L9eHBaTg2Y83cVBSaIyiIWo54QpuiJykiuFYYHihOi+LW8vfU9A9jXLBs7DaeDkXO49OqYxfgD1vwmztJeXCQlmgxqUeD181gtSTNO43uUMkCisZft+OsJ96bdUof1UeJ1+IuSENBr1TZgYjmzBgIkmjdv8T5muPaaDfeOISLJKGOG2gI0xlyQ39ppd3CeB90cpIvFpCGjNC8nGvIqN4oyny6NftcEhaRFudbEhB6t2gI362wS5ohERK1F1rBTt+mqUwszCv46Y6p3Za3PsebWK7fR6ITnsW7KGyn3r8BxpJTHlHMwOtBPosaXw==
            PublicExponent: AQAB
            PrivateExponent: MZO5nCkatSh+0jumVImO1HLsrRAhjnzORHBLk8HLUytq9xWckBAM6+0HtLc2BMVhygD4AHfILdn3CsdmjS4CYXeGUP2B8qOXtqkCOFWdmMVRwKEInSGSjrKWPIlhplko84tbqO0yE9xrPk8dRlIwIGizDHKBsfYct/TDb5m4y7rvEHcBSm2DZz7AQL1qqC/WYI54qxHFXTId+nKsYMx/alRUV3AOSL20VSgL56VcM1luFS76ylDIWEOrQVyTFCtEcHvw3FLIOEVCM/CAErLFNlFdXHnYcRYnG/oXcsPW0DjpPNrqx8iaAOuhYFd/pu9CvKQnxYLLqXByOkSUIO3ggQ==
            Prime1: /mtiBD3gJ5Yu5ARsLew4eohRAobl4c3Bt9Gw62wmHiOJfgjbnY91H/bxc/ilnQh92yZUfxfm5z6FXEqluh0ZN3BOQTwzUEuTT9Pn00FhRfemL0UMpHn0BkoXCLwjs1XRyI0hXTOhGhH7XVczuYw/S7kWT5Cmfo4MODZ6cooR8SE=
            Prime2: 97aFfZxJcTYTKkZTc7yeUQVWTtKF25L780TRuCiG83hTSNKlmuWE2bAU/Cl2CX2NdW5sBmO5z9fEI5rA8LhuWHlKF82cXg1h50CsXkaAhFKrThMmb6SRSjIksxlz7rtK777z4En/V9v3l1yKcQ5eSQYQRHg1cCkn6NNlZPZ2G38=
            Exponent1: LoHarQPSken2MGBOliZ0PJHmnRujsh82pi+Cs8ZVQXUlkRB1dNvggTNW9+gf/hCrUQA0ufbYkrTvE+vhV6AyF9xDsdEbYDYwe4s0+X0eFvgqPMHWicpxPSUWCNa7f/DUJGEIFE13yZg35twl7GkiuOjglzLN/Jxix3PN9loe5YE=
            Exponent2: Mya4iAimzb7p1DfzcZnIY1ijyuEEDSRb7I8Qc2PDAjGdmRMOaV7twPnwS2XQXwNTG6Wyntsm+nlGokeJgevDtXdOSn4FxRIkXllnfow2a5yajSO9Mx6bdePG2kjuPKTmQ3195JnDJYRhqxrL566c351l7I2aE1AcUqKcdG3EU8c=
            Coefficient: T4dFDz5pQhVUQSjV0hhKHHZ1wBxiXdZeCFIfbyypWEdxGXdX2lIN264u9cGQhI+iExTEjZCaYASMBzOqnIhkHhj0M1DGYrhRCdTpgxmDwdcHniRl/XMxPGqpmsP4WFCBxmIbr3SdnqoiPMXix0SjWkHTisq5i09DBMNGIGQyqS8=

        key_id:
          minimum: 1
          type: integer
          description: The security key's ID.
          example: 12345
        key_tag:
          minimum: 1
          type: integer
          description: The security key's internal identifier.
          example: 51640
        key_type:
          type: string
          description: |-
            The security key's signing type.

            * `CSK` - Combined Signing Key.
            * `KSK` - Key Signing Key.
            * `ZSK` - Zone Signing Key.
          example: KSK
          enum:
          - CSK
          - KSK
          - ZSK
        success:
          type: integer
          description: |-
            Whether the function succeeded.

            * `1` - The function succeeded.
            * `0` - The function failed.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_94_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_94_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_95_result_data_additionalProperties_keys_additionalProperties_digests:
      type: object
      properties:
        algo_desc:
          type: string
          description: |-
            A description of the algorithm
             that the DS key uses.
          example: SHA-256
        algo_num:
          minimum: 1
          type: integer
          description: A IETF-recognized DNSSEC Algorithm Number.
          example: 2
        digest:
          type: string
          description: The actual digest in the DS record.
          example: 4de3e58f1238fb7fc7caa84389ef6fa27d42572c35f1152c7f2ea3b899400019
    inline_response_200_95_result_data_additionalProperties_keys_additionalProperties:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the DS key is active.

            * `1` - Active.
            * `0` - Inactive.
          example: 1
          enum:
          - 0
          - 1
        algo_desc:
          type: string
          description: |-
            A description of the algorithm
            that the DS key uses.
          example: RSA/SHA-256
        algo_num:
          type: integer
          description: |-
            The algorithm the system generated for the security key.

            * `5` - RSA/SHA-1
            * `6` - DSA-NSEC3-SHA1
            * `7` - RSASHA1-NSEC3-SHA1
            * `8` - RSA/SHA-256
            * `10` - RSA/SHA-512
            * `13` - ECDSA Curve P-256 with SHA-256
            * `14` - ECDSA Curve P-384 with SHA-384
          example: 8
          enum:
          - 5
          - 6
          - 7
          - 8
          - 10
          - 13
          - 14
        algo_tag:
          type: string
          description: The short-form reference to the algorithm.
          example: RSASHA256
        bits:
          multipleOf: 64
          minimum: 1
          type: integer
          description: "The DS key's size, in bits."
          example: 2048
        created:
          type: integer
          description: The key's creation time.
          format: unix_timestamp
          example: 1590002705
        digests:
          type: array
          description: |-
            The information that
             the registrar uses to populate the DS records.
          items:
            $ref: "#/components/schemas/inline_response_200_95_result_data_additionalProperties_keys_additionalProperties_digests"
        flags:
          type: integer
          description: |-
            An integer that determines the `key_type` value.

            * `256` - A Zone Signing Key (ZSK).
            * `257` - A Combined Signing Key (CSK) or Key Signing Key (KSK).
          example: 257
          enum:
          - 256
          - 257
        key_id:
          minimum: 1
          type: integer
          description: PowerDNS's internal identifier.
          example: 1
        key_tag:
          minimum: 1
          type: integer
          description: The DS key's identification number.
          example: 34519
        key_type:
          type: string
          description: |-
            The DS key's signing type.
            * `CSK` - Combined Signing Key.
            * `KSK` - Key Signing Key.
            * `ZSK` - Zone Signing Key.
          example: KSK
          enum:
          - CSK
          - KSK
          - ZSK
        privatekey:
          type: string
          description: "The DS key's private key, in ISC format."
          example: |-
            Private-key-format: v1.2
            Algorithm: 8 (RSASHA256)
            Modulus: wcZl882v587qKmt3M7+y6u+kzSgCvfgyiSGQHE2EulDcAnfEmz/ryanXMveHGBsO4L/GynYYUUsGvD2jHK1ITh8CeISiqmbUmPolf9HLQgwcT5pVcvwJ0Wmzpw5Ukmx67N7TTX+yieI5OyflP23GnJYQ5EQUzBu/DhdxhL90hYU=
            PublicExponent: AQAB
            PrivateExponent: EnoBdKrTMA5Jw7u1hQitXbt2Al3jTQvifbLmk9xMYJufLtkOtSL2L6dzLpftmL3TwFho8xspnG7D+KUD7ZMURrwxnLlqTttaL2PeaYJdQ184ezuflExppkDkdTEOqcIUuSylfAbyIdeGkVFuWr0cdjM9OFKMAkoYaVeAUP0SYU0=
            Prime1: 4eslxBBwyvXzmFqKx5TTiHfU7EHIAxUru3ykOMqD2tVMHbRAq5AMKZL6ZhuTXk8mnGppEfC6qqNKnf3VT5jLxw==
            Prime2: 25OUAsWWAJrQ4uLytsXoSbjHsVyh61DgZ4S4n2Mv7RsSHt0Q/VcuyvHXuAKb8Y0XCYczZBtEW+ZoPte/HHnsUw==
            Exponent1: Xkb4AqLtvvT2i8y0/2avA9MmCtXEtuydzGbOTVjNv4OlePvgxPee67aHQhcd34xeS4XohPEVpOHx4I6t9sKHvw==
            Exponent2: ulZDBRcodNrs6Z4u22yX8/gbfyhdQJUh2reG9bv2sAB/wEJaaKPT0eXqav3L2PKfCjbyJcH+AP9G+A2e4UuWgQ==
            Coefficient: mynNLSgStpQMktIEdysefyOg5jpXE3VeDZF6fbEOUg+E2ZnLBkLu4KPrriCwfl+cLagwgzx2M6wV/1QWkm8vPQ==
      description: |-
        The information related to the domain's DNSSEC record.

        **Note:**

        The return's name is the `key_tag` return's integer value.
    inline_response_200_95_result_data_additionalProperties_keys:
      type: object
      properties:
        additionalProperties:
          $ref: "#/components/schemas/inline_response_200_95_result_data_additionalProperties_keys_additionalProperties"
      description: The DS keys on the requested domain.
    inline_response_200_95_result_data_additionalProperties_nsec_details:
      type: object
      properties:
        nsec3_hash_algo_desc:
          type: string
          description: A description of the NSEC3 key's algorithm.
          example: SHA-1
        nsec3_hash_algo_num:
          type: integer
          description: The DNSSEC Digest Algorithm Number.
          example: 1
        nsec3_iterations:
          type: integer
          description: The number of times that the system rehashes the first hash
            operation.
          example: 12
        nsec3_narrow:
          type: integer
          description: |-
            Whether NSEC3 will operate in Narrow or Inclusive mode.

            * `1` - Narrow mode.
            * `0` - Inclusive mode.

            **Note:**

             For more information about these modes, read [PowerDNS's DNSSEC documentation](https://doc.powerdns.com/authoritative/dnssec/intro.html).
          example: 1
          enum:
          - 0
          - 1
        nsec3_opt_out:
          type: integer
          description: |-
            Whether NSEC3 will create records for all delegations or only for secure delegations.

            * `1` - Create records for all delegations.
            * `0` - Create records only for secure delegations.
          example: 1
          enum:
          - 0
          - 1
        nsec3_salt:
          type: string
          description: |-
            The salt value that PowerDNS uses in the hashes.

            **Note:**

             For more information about the salt value, read [RFC 5155](https://tools.ietf.org/html/rfc5155#section-3.1.5).
          format: hex
          example: fa1ac2c1rd7fbab4
        nsec_version:
          type: string
          description: |-
            Whether the domain uses NSEC or [Next Secure Record version 3](https://tools.ietf.org/html/rfc5155) (NSEC3) [Domain Name Security Extensions](https://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions) (DNSSEC) semantics.

            * `NSEC`
            * `NSEC3`
          example: NSEC
          enum:
          - NSEC
          - NSEC3
      description: |-
        An object containing the [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) information for the selected domain.

        **Note:**

         If the domain uses NSEC semantics, only the `nsec_version` return appears in the object.
    inline_response_200_95_result_data_additionalProperties:
      type: object
      properties:
        keys:
          $ref: "#/components/schemas/inline_response_200_95_result_data_additionalProperties_keys"
        nsec_details:
          $ref: "#/components/schemas/inline_response_200_95_result_data_additionalProperties_nsec_details"
      description: |-
        An object containing the domain's DS record information.

        **Note:**

        The return's name is the domain's name.
    inline_response_200_95_result_data:
      type: object
      properties:
        additionalProperties:
          $ref: "#/components/schemas/inline_response_200_95_result_data_additionalProperties"
      example: "{\"example.com\":{\"keys\":{\"33930\":{\"active\":1,\"algo_desc\"\
        :\"RSA/SHA-256\",\"algo_num\":\"8\",\"algo_tag\":\"RSASHA256\",\"bits\":1024,\"\
        created\":\"1590002705\",\"flags\":256,\"key_id\":2,\"key_tag\":33930,\"key_type\"\
        :\"ZSK\",\"privatekey\":\"Private-key-format: v1.2\\nAlgorithm: 8 (RSASHA256)\\\
        nModulus: wcZl882v587qKmt3M7+y6u+kzSgCvfgyiSGQHE2EulDcAnfEmz/ryanXMveHGBsO4L/GynYYUUsGvD2jHK1ITh8CeISiqmbUmPolf9HLQgwcT5pVcvwJ0Wmzpw5Ukmx67N7TTX+yieI5OyflP23GnJYQ5EQUzBu/DhdxhL90hYU=\\\
        nPublicExponent: AQAB\\nPrivateExponent: EnoBdKrTMA5Jw7u1hQitXbt2Al3jTQvifbLmk9xMYJufLtkOtSL2L6dzLpftmL3TwFho8xspnG7D+KUD7ZMURrwxnLlqTttaL2PeaYJdQ184ezuflExppkDkdTEOqcIUuSylfAbyIdeGkVFuWr0cdjM9OFKMAkoYaVeAUP0SYU0=\\\
        nPrime1: 4eslxBBwyvXzmFqKx5TTiHfU7EHIAxUru3ykOMqD2tVMHbRAq5AMKZL6ZhuTXk8mnGppEfC6qqNKnf3VT5jLxw==\\\
        nPrime2: 25OUAsWWAJrQ4uLytsXoSbjHsVyh61DgZ4S4n2Mv7RsSHt0Q/VcuyvHXuAKb8Y0XCYczZBtEW+ZoPte/HHnsUw==\\\
        nExponent1: Xkb4AqLtvvT2i8y0/2avA9MmCtXEtuydzGbOTVjNv4OlePvgxPee67aHQhcd34xeS4XohPEVpOHx4I6t9sKHvw==\\\
        nExponent2: ulZDBRcodNrs6Z4u22yX8/gbfyhdQJUh2reG9bv2sAB/wEJaaKPT0eXqav3L2PKfCjbyJcH+AP9G+A2e4UuWgQ==\\\
        nCoefficient: mynNLSgStpQMktIEdysefyOg5jpXE3VeDZF6fbEOUg+E2ZnLBkLu4KPrriCwfl+cLagwgzx2M6wV/1QWkm8vPQ==\"\
        },\"nsec_details\":{\"nsec3_hash_algo_desc\":\"SHA-1\",\"nsec3_hash_algo_num\"\
        :\"1\",\"nsec3_iterations\":\"3\",\"nsec3_narrow\":1,\"nsec3_opt_out\":\"\
        0\",\"nsec3_salt\":\"fa1ac2c1rd7fbab4\",\"nsec_version\":\"NSEC3\"}}}}"
    inline_response_200_95_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_95_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_96_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system imported the zone key.
          format: domain
          example: example.com
        error:
          type: string
          description: |-
            An error message that describes why the system could not import the security key.

            **Note:**

            The function **only** displays this return when the `success` return is a `0` value.
          example: "Error: Invalid key_id or domain specified: No such key present\
            \ for domain."
        new_key_id:
          type: string
          description: The security key's ID.
          example: "1"
        success:
          type: integer
          description: |-
            Whether the system imported the security key.

            * `1` - The system imported the security key.
            * `0` - The system **failed** to import the security key.
          example: 1
          enum:
          - 0
          - 1
      example: "{\"domain\":\"example.com\",\"new_key_id\":\"1\",\"success\":1}"
    inline_response_200_96_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_96_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_97_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system removed a security key.
          format: domain
          example: example.com
        error:
          type: string
          description: |-
            An error message that describes why the system could not remove the security key.

            **Note:**

            The function **only** displays this return when the `success` return is a `0` value.
          example: "Error: Invalid key_id or domain specified: No such key present\
            \ for domain."
        key_id:
          type: string
          description: The security key's ID.
          example: "1"
        success:
          type: integer
          description: |-
            Whether the system removed the security key.

            * `1` â The system removed the security key.
            * `0` â The system failed to remove the security key.
          example: 1
          enum:
          - 1
          - 0
      example: "{\"domain\":\"example.com\",\"key_id\":\"12\",\"success\":1}"
    inline_response_200_97_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_97_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_98_result_data:
      type: object
      properties:
        enabled:
          type: object
          additionalProperties:
            type: integer
            description: |-
              Whether the system enabled NSEC3 on the domain.

                * `1` - Enabled.
                * `0` - The system failed to enable NSEC3.
            enum:
            - 0
            - 1
          description: |-
            Contains the domains for which the system enabled NSEC3.

            **Note:**

            This return's name is the `domain` parameter's value.
          example:
            example1.com: 1
    inline_response_200_98_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_98_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_99_result_data_disabled:
      type: object
      properties:
        additionalProperties:
          type: integer
          description: |-
            Whether the system disabled NSEC3 on the domain.

            * `1` â Disabled.
            * `0` â The system failed to disable NSEC3.

            **Note:**

            This return's name is the `domain` parameter's value.
          enum:
          - 1
          - 0
      description: A list of the domains for which the system disabled NSEC3.
    inline_response_200_99_result_data:
      type: object
      properties:
        disabled:
          $ref: "#/components/schemas/inline_response_200_99_result_data_disabled"
      example: "{\"disabled\":{\"example.com\":1}}"
    inline_response_200_99_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_99_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_100_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            The directory's indexing type.
            - standard  The directory uses directory indexing with standard formatting.
            - disabled  The directory doesn't use directory indexing.
            - inherit  The directory uses the system's default settings.
            - fancy  The directory uses directory indexing with Apache FancyIndexing directive. The directory will include additional information such as file size and the date of the file's last update.
          example: disabled
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_101_result_data_state:
      type: object
      properties:
        index_type:
          $ref: "#/components/schemas/index_type"
      description: The subdirectory's indexing information.
    inline_response_200_101_result_data_children:
      type: object
      properties:
        path:
          type: string
          description: The subdirectory's absolute path.
          format: path
          example: /home/example/example.com/cgi-bin
        state:
          $ref: "#/components/schemas/inline_response_200_101_result_data_state"
    inline_response_200_101_result_data_current_state:
      type: object
      properties:
        index_type:
          $ref: "#/components/schemas/index_type"
      description: The current directory's indexing information.
    inline_response_200_101_result_data_current:
      type: object
      properties:
        path:
          type: string
          description: The current directory's absolute path.
          format: path
          example: /home/example/example.com
        state:
          $ref: "#/components/schemas/inline_response_200_101_result_data_current_state"
      description: The user's current directory and its indexing information.
    inline_response_200_101_result_data_home_state:
      type: object
      properties:
        index_type:
          $ref: "#/components/schemas/index_type"
      description: An object containing the home directory's indexing information.
    inline_response_200_101_result_data_home:
      type: object
      properties:
        path:
          type: string
          description: The home directory's absolute path.
          format: path
          example: /home/example
        state:
          $ref: "#/components/schemas/inline_response_200_101_result_data_home_state"
      description: The user's home directory and its indexing information.
    inline_response_200_101_result_data_parent_state:
      type: object
      properties:
        index_type:
          $ref: "#/components/schemas/index_type"
      description: The parent directory's indexing information.
    inline_response_200_101_result_data_parent:
      type: object
      properties:
        path:
          type: string
          description: The parent directory's absolute path.
          format: path
          example: /home/example
        state:
          $ref: "#/components/schemas/inline_response_200_101_result_data_parent_state"
      description: The current directoryâs parent directory and its indexing information.
    inline_response_200_101_result_data:
      type: object
      properties:
        children:
          type: array
          description: |-
            Subdirectories and their indexing information.

            **Note:**

            The function returns an object for each subdirectory in a directory.
          items:
            $ref: "#/components/schemas/inline_response_200_101_result_data_children"
        current:
          $ref: "#/components/schemas/inline_response_200_101_result_data_current"
        home:
          $ref: "#/components/schemas/inline_response_200_101_result_data_home"
        parent:
          $ref: "#/components/schemas/inline_response_200_101_result_data_parent"
    inline_response_200_101_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_101_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_102_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            The directory's indexing type.
            * `standard` â The directory uses directory indexing with standard formatting.
            * `disabled` â The directory doesn't use directory indexing.
            * `inherit` â The directory uses the system's default settings.
            * `fancy` â The directory uses directory indexing with Apache FancyIndexing directive. The directory will include additional information such as file size and the date of the file's last update.
          example: disabled
          enum:
          - standard
          - disabled
          - inherit
          - fancy
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_104_result_data:
      type: object
      properties:
        auth_name:
          type: string
          description: The authentication resource name.
          example: protectandserve
        auth_type:
          type: string
          description: |-
            The directory's authentication type.
            * `Basic`
            * `None`
          example: Basic
          enum:
          - Basic
          - None
        passwd_file:
          type: string
          description: The path to the directory's password file.
          format: path
          example: /home/example/.htpasswds/example.com/passwd
        protected:
          type: integer
          description: |-
            Whether the directory uses password protection.
            * `1` - Protected.
            * `0` - **Not** protected.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_104_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_104_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_106_result_data:
      type: object
      properties:
        auth_name:
          type: string
          description: The authentication resource name.
          example: Protected 'example.com'
        auth_type:
          type: string
          description: |-
            The directory's authentication type.
            * `Basic`
            * `None`
          example: Basic
          enum:
          - Basic
          - None
        passwd_file:
          type: string
          description: The path to the directory's password file.
          format: path
          example: /home/example/.htpasswds/example.com/passwd
        protected:
          type: integer
          description: |-
            Whether the directory uses password protection.
            * `1` - Protected.
            * `0` - **Not** protected.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_106_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_106_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_107_result_data_state:
      type: object
      properties:
        auth_name:
          type: string
          description: The authentication resource name.
          example: Protected 'example.com'
        auth_type:
          type: string
          description: |-
            The subdirectory's authentication type.

            * `Basic`
            * `None`
          example: Basic
          enum:
          - Basic
          - None
        passwd_file:
          type: string
          description: The absolute file path to the subdirectory's password file.
          format: path
          example: /home/example/.htpasswds/example.com/passwd
        protected:
          type: integer
          description: |-
            Whether the subdirectory is protected.

            * `1` â Protected.
            * `0` â **Not** protected.
          example: 1
          enum:
          - 1
          - 0
      description: The subdirectory's privacy information.
    inline_response_200_107_result_data_children:
      type: object
      properties:
        path:
          type: string
          description: The subdirectory's directory path.
          format: path
          example: /home/example/example.com/cgi-bin
        state:
          $ref: "#/components/schemas/inline_response_200_107_result_data_state"
    inline_response_200_107_result_data_current_state:
      type: object
      properties:
        auth_name:
          type: string
          description: The authentication resource name.
          example: protected
        auth_type:
          type: string
          description: |-
            The directory's authentication type.

            * `Basic`
            * `None`
          example: Basic
          enum:
          - Basic
          - None
        passwd_file:
          type: string
          description: The absolute file path to the directory's password file.
          format: path
          example: /home/example/.htpasswds/example.com/passwd
        protected:
          type: integer
          description: |-
            Whether the directory is protected.

            * `1` â Protected.
            * `0` â **Not** protected.
          example: 1
          enum:
          - 1
          - 0
      description: The current subdirectory's privacy information.
    inline_response_200_107_result_data_current:
      type: object
      properties:
        path:
          type: string
          description: The current directory's path.
          format: path
          example: /home/example/example.com
        state:
          $ref: "#/components/schemas/inline_response_200_107_result_data_current_state"
      description: The user's current directory and its privacy information.
    inline_response_200_107_result_data_home_state:
      type: object
      properties:
        auth_name:
          type: string
          description: The authentication resource name.
          example: protected
        auth_type:
          type: string
          description: |-
            The home directory's authentication type.

            * `Basic`
            * `None`
          example: Basic
          enum:
          - Basic
          - None
        passwd_file:
          type: string
          description: The absolute file path to the home directory's password file.
          format: path
          example: /home/example/.htpasswds/example.com/passwd
        protected:
          type: integer
          description: |-
            Whether the home directory is protected.

            * `1` â Protected.
            * `0` â **Not** protected.
          example: 1
          enum:
          - 1
          - 0
      description: The home directory's privacy information.
    inline_response_200_107_result_data_home:
      type: object
      properties:
        path:
          type: string
          description: The home directory's absolute path.
          format: path
          example: /home/example
        state:
          $ref: "#/components/schemas/inline_response_200_107_result_data_home_state"
      description: The user's home directory and its privacy information.
    inline_response_200_107_result_data_parent_state:
      type: object
      properties:
        auth_name:
          type: string
          description: The authentication resource name.
          example: protected
        auth_type:
          type: string
          description: |-
            The parent directory's authentication type.

            * `Basic`
            * `None`
          example: Basic
          enum:
          - Basic
          - None
        passwd_file:
          type: string
          description: The absolute file path to the parent directory's password file.
          format: path
          example: /home/example/.htpasswds/example.com/passwd
        protected:
          type: integer
          description: |-
            Whether the subdirectory is protected.

            * `1` â Protected.
            * `0` â **Not** protected.
          example: 1
          enum:
          - 1
          - 0
      description: The parent directory's privacy information.
    inline_response_200_107_result_data_parent:
      type: object
      properties:
        path:
          type: string
          description: The parent directory's absolute directory path.
          format: path
          example: /home/example
        state:
          $ref: "#/components/schemas/inline_response_200_107_result_data_parent_state"
      description: The parent directory of the current directory and its privacy information.
    inline_response_200_107_result_data:
      type: object
      properties:
        children:
          type: array
          description: |-
            An array of objects containing subdirectories and their privacy
            information.

            **Note:**

            The function returns an object for each subdirectory in a directory.
          items:
            $ref: "#/components/schemas/inline_response_200_107_result_data_children"
        current:
          $ref: "#/components/schemas/inline_response_200_107_result_data_current"
        home:
          $ref: "#/components/schemas/inline_response_200_107_result_data_home"
        parent:
          $ref: "#/components/schemas/inline_response_200_107_result_data_parent"
    inline_response_200_107_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_107_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_108_result:
      type: object
      properties:
        data:
          type: array
          description: list of users who can access the directory.
          example:
          - example1
          - example2
          items:
            type: string
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_109_result_data_state:
      type: object
      properties:
        has_leech_protection:
          type: integer
          description: |-
            The directory's leech protection status.

            * `1` â Leech protection is enabled.
            * `0` â Leech protection is disabled.
          example: 1
          enum:
          - 1
          - 0
      description: A object containing the subdirectory's leech protection information.
    inline_response_200_109_result_data_children:
      type: object
      properties:
        path:
          type: string
          description: The subdirectory's absolute directory path.
          format: path
          example: /home/example/example.com/cgi-bin
        state:
          $ref: "#/components/schemas/inline_response_200_109_result_data_state"
    inline_response_200_109_result_data_current_state:
      type: object
      properties:
        has_leech_protection:
          type: integer
          description: |-
            The current directory's leech protection status.

            * `1` â Leech protection is enabled.
            * `0` â Leech protection is disabled.
          example: 1
          enum:
          - 1
          - 0
      description: An object containing the current directory's leech protection information.
    inline_response_200_109_result_data_current:
      type: object
      properties:
        path:
          type: string
          description: The current directory's absolute file path.
          format: path
          example: /home/example/example.com
        state:
          $ref: "#/components/schemas/inline_response_200_109_result_data_current_state"
      description: The user's current directory and its leech protection information.
    inline_response_200_109_result_data_home_state:
      type: object
      properties:
        has_leech_protection:
          type: integer
          description: |-
            The home directory's leech protection status.

            * `1` â Leech protection is enabled.
            * `0` â Leech protection is disabled.
          example: 1
          enum:
          - 1
          - 0
      description: A object containing the `home` directory's leech protection information.
    inline_response_200_109_result_data_home:
      type: object
      properties:
        path:
          type: string
          description: The `home` directory's absolute directory path.
          format: path
          example: /home/example
        state:
          $ref: "#/components/schemas/inline_response_200_109_result_data_home_state"
      description: The user's `home` directory and its leech protection information.
    inline_response_200_109_result_data_parent_state:
      type: object
      properties:
        has_leech_protection:
          type: integer
          description: |-
            The parent directory's leech protection status.

            * `1` â Leech protection is enabled.
            * `0` â Leech protection is disabled.
          example: 1
          enum:
          - 1
          - 0
      description: An object containing the parent directory's leech protection information.
    inline_response_200_109_result_data_parent:
      type: object
      properties:
        path:
          type: string
          description: The parent directory's absolute directory path.
          format: path
          example: /home/example
        state:
          $ref: "#/components/schemas/inline_response_200_109_result_data_parent_state"
      description: The parent directory of the current directory and its leech protection
        information.
    inline_response_200_109_result_data:
      type: object
      properties:
        children:
          type: array
          description: |-
            A list of subdirectories and their leech protection information.

            **Note:**

            The function returns a list for each subdirectory in a directory.
          items:
            $ref: "#/components/schemas/inline_response_200_109_result_data_children"
        current:
          $ref: "#/components/schemas/inline_response_200_109_result_data_current"
        home:
          $ref: "#/components/schemas/inline_response_200_109_result_data_home"
        parent:
          $ref: "#/components/schemas/inline_response_200_109_result_data_parent"
    inline_response_200_109_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_109_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_110_result:
      type: object
      properties:
        data:
          description: "An object containing information about a cPanel account's\
            \ domains. The output of this function changes, based on the `format`\
            \ parameter value."
          oneOf:
          - $ref: "#/components/schemas/HashOutput"
          - $ref: "#/components/schemas/ListOutput"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_111_result_data:
      type: object
      properties:
        addon_domains:
          type: array
          description: An array of string values that lists the addon domains on the
            cPanel account.
          items:
            type: string
            format: domain
            example: addondomain.com
        main_domain:
          type: array
          description: The cPanel account's main domain.
          items:
            type: string
            format: domain
            example: example.com
        parked_domains:
          type: array
          description: An array of string values that lists the parked domains on
            the cPanel account.
          items:
            type: string
            format: domain
            example: parkeddomain.com
        sub_domains:
          type: array
          description: An array of string values that lists the subdomains on the
            cPanel account.
          items:
            type: string
            format: domain
            example: subdomain.example.com
    inline_response_200_111_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_111_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_112_result:
      type: object
      properties:
        data:
          type: array
          description: A list of the built-in subdomain aliases for the account's
            main domain.
          example:
          - mail
          - www
          items:
            type: string
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_113_result_data_customlog:
      type: object
      properties:
        domain:
          type: string
          description: "The `target` log file's domain. An [Apache log](http://httpd.apache.org/docs/2.2/mod/mod_log_config.html)\
            \ domain. Generally, this value is `combined`."
          example: combined
        target:
          type: string
          description: The absolute path to the domain's log file.
          format: path
          example: /usr/local/apache/domlogs/example.com
      description: An object containing Apache log information.
    inline_response_200_113_result_data_ifmodulemodsuphpc:
      type: object
      properties:
        group:
          type: string
          description: "If suPHP is enabled, the group that PHP scripts run as."
          example: user
      description: An object containing information about PHP scripts and suPHP.
    inline_response_200_113_result_data_scriptalias:
      type: object
      properties:
        path:
          type: string
          description: The absolute path to the domain's CGI directory.
          format: path
          example: /home/user/public_html/cgi-bin
        url:
          type: string
          description: The domain's CGI directory.
          format: url-path
          example: /cgi-bin/
      description: An object containing CGI information.
    inline_response_200_113_result_data:
      type: object
      properties:
        all_aliases_valid:
          type: integer
          description: |-
            Whether a valid SSL certificate exists on the domain's aliases.
            * `1` - A valid SSL certificate exists on the aliases.
            * `0` - A valid SSL certificate does **not** exist on the aliases.

            **Important:**

            This return only appears if you set the `return_https_redirects_status` parameter to `1`.
          example: 0
          enum:
          - 0
          - 1
        can_https_redirect:
          type: integer
          description: |-
            Whether a valid SSL certificate exists or AutoSSL runs on the domain.
            * `1` - A valid SSL certificate exists or AutoSSL runs.
            * `0` - A valid SSL certificate does **not** exist, and AutoSSL does not run.

            **Important:**

            This return only appears if you set the `return_https_redirects_status` parameter to `1`.
          example: 0
          enum:
          - 0
          - 1
        customlog:
          $ref: "#/components/schemas/inline_response_200_113_result_data_customlog"
        documentroot:
          type: string
          description: The absolute path to the domain's document root.
          format: path
          example: /home/user/public_html/
        domain:
          type: string
          description: The domain name on the cPanel account.
          format: domain
          example: example.com
        group:
          type: string
          description: The domain's group name.
          example: user
        hascgi:
          type: integer
          description: |-
            Whether CGI is enabled for the domain.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The absolute path to the account's home directory.
          format: path
          example: /home/user
        ifmodulemodsuphpc:
          $ref: "#/components/schemas/inline_response_200_113_result_data_ifmodulemodsuphpc"
        ip:
          type: string
          description: The domain's IP address.
          format: ipv4
          example: 192.168.0.128
        is_https_redirecting:
          type: integer
          description: |-
            Whether the domain redirects to https.
            * `1` - Redirects.
            * `0` - Does **not** redirect.

            **Important:**

            This return only appears if you set the `return_https_redirects_status` parameter to `1`.
          example: 0
          enum:
          - 0
          - 1
        options:
          type: string
          description: The Apache `Options` directive for the domain.
          example: ExecCGI Includes
        owner:
          type: string
          description: The WHM account (root or a reseller) that owns the cPanel account.
          format: username
          example: root
        phpopenbasedirprotect:
          type: integer
          description: |-
            The domain's `open_basedir` setting.
            * `1` - Enabled.
            * `0` - Disabled.

            **Note:**

            In EasyApache 4, change this directive in the *Editor Mode* section of WHM's
            [*MultiPHP INI Editor*](https://go.cpanel.net/whmdocsMultiPHPINIEditor) interface
            (*WHM >> Home >> Software >> MultiPHP INI Editor*).
          example: 1
          enum:
          - 0
          - 1
        port:
          maximum: 65335
          minimum: 1
          type: integer
          description: Apache's port to access the domain.
          example: 80
        scriptalias:
          $ref: "#/components/schemas/inline_response_200_113_result_data_scriptalias"
        serveradmin:
          type: string
          description: The domain's administrator's contact email address.
          format: email
          example: webmaster@example.com
        serveralias:
          type: string
          description: A space-separated list of the domain's aliases.
          example: parkeddomain.com www.parkeddomain.com www.example.com
        servername:
          type: string
          description: The domain's identifier on the server.
          format: domain
          example: example.com
        type:
          type: string
          description: |-
            The domain type.
            * `addon_domain` - The domain is an addon domain.
            * `sub_domain` - The domain is a subdomain.
            * `main_domain` - The domain is the account's main domain.
            * `parked_domain` - The domain is a parked domain (domain alias).
          example: main_domain
          enum:
          - addon_domain
          - sub_domain
          - main_domain
          - parked_domain
        usecanonicalname:
          type: string
          description: |-
            The domain's Canonical Name (CNAME) setting.
            * `On` - Use the CNAME.
            * `Off` - Do **not** use the CNAME.
          example: "Off"
          enum:
          - "On"
          - "Off"
        user:
          type: string
          description: The cPanel account's username.
          format: username
          example: user
        userdirprotect:
          type: integer
          description: |-
            The domain's [Apache `mod_userdir` Tweak](https://go.cpanel.net/whmdocsApachemod_userdirTweak) setting.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_113_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_113_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_114_result_data:
      type: object
      properties:
        created_time:
          type: integer
          description: The creation time of the Dynamic DNS domain.
          format: unix_timestamp
        id:
          type: string
          description: The DDNS domainâs ID.
          example: ggiugyxxjwnkmqtwysgmvrurplmafxpq
      description: Information about the newly-created DDNS domain.
    inline_response_200_114_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_114_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_115_result_data:
      type: object
      properties:
        deleted:
          type: number
          description: |-
            Whether a DDNS domain with the given ID existed for deletion.

            * `0` - No DDNS domain with the given ID existed.
            * `1` - A DDNS domain with the given ID existed but is now deleted.
          example: 1
          enum:
          - 0
          - 1
      description: Information about the deletion.
    inline_response_200_115_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_115_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_116_result_data:
      type: object
      properties:
        created_time:
          type: integer
          description: The DDNS domainâs creation time.
          format: unix_timestamp
        description:
          type: string
          description: A user-editable string that describes the DDNS domain.
          example: My home network
        domain:
          type: string
          description: The domain.
          format: domain
          example: home.example.com
        id:
          type: string
          description: |-
            The domainâs DDNS ID.

            **Note:**

            This ID goes into the URL that the client uses to
            [update the domainâs IP address
            resolution](https://go.cpanel.net/cpaneldocsdynamicdns).
          example: gziugyxxjwnamqtwysgmvrurplmafxpj
        last_run_times:
          type: array
          description: |-
            The most recent times when the web call ran.

            **Note:**

            This list changes every time the web call runs,
            even if the domainâs IP address resolution does
            **not** change.
          items:
            type: integer
            format: unix_timestamp
        last_update_time:
          type: integer
          description: |-
            The most recent update time for the
            DDNS domain.

            **Note:**

            This value changes **only** when
            the domainâs IP address resolution changes.
          format: unix_timestamp
          nullable: true
    inline_response_200_116_result:
      type: object
      properties:
        data:
          type: array
          description: The userâs DDNS domains.
          items:
            $ref: "#/components/schemas/inline_response_200_116_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_117_result_data:
      type: object
      properties:
        id:
          type: string
          description: The DDNS domainâs new ID.
          example: ggiugyxxjwnkmqtwysgmvrurplmafxpq
      description: Information about the DDNS domain.
    inline_response_200_117_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_117_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_119_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            The account parameter's value.
            * A valid string.
            * `All Mail On The Account`
            * An empty value.
          format: email
          example: user@example.com
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_120_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_121_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            A message of success, or a reason for failure.
            * A message of success that lists the updated `vdomainaliases` file.
            * A reason for failure.
          example: File updated "/etc/vdomainaliases/example.com"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_122_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain. A valid domain on the account.
          example: example.com
        email:
          type: string
          description: The email address. An email address on the account.
          example: user@example.com
        forward:
          type: string
          description: |-
            The method that the system will use to handle the address's mail.
            - An email address  The system forwards mail to this address.
            - :fail:  The system bounces mail back to the sender and sends a failure message.
            - :blackhole:  The system deletes mail without a failure message.
            - The path to an application  The system pipes mail to this application.
            - A username  The system forwards mail to this system account.
          example: fwdtome@example.com
    inline_response_200_122_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_122_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_123_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_124_result_data_metadata:
      type: object
      properties:
        transformed: {}
    inline_response_200_124_result_data:
      type: object
      properties:
        delegates:
          type: array
          description: An array of the mailing list's administrators.
          items:
            type: string
            example: "admin@example.com, user@example.com"
        metadata:
          $ref: "#/components/schemas/inline_response_200_124_result_data_metadata"
    inline_response_200_124_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_124_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_125_result_data_checkmx:
      type: object
      properties:
        changed:
          type: integer
          description: |-
            Whether a change occurred during the function.
            * `1` - Change occurred.
            * `0` - **No** change.
          example: 1
          enum:
          - 0
          - 1
        detected:
          type: string
          description: |-
            The mail exchanger type.
            * `auto`
            * `local`
            * `secondary`
            * `remote`
          example: auto
          enum:
          - auto
          - local
          - secondary
          - remote
        isprimary:
          type: integer
          description: |-
            Whether the mail exchanger is the primary mail exchanger.
            * `1` - Primary.
            * `0` - **Not** primary.
          example: 0
          enum:
          - 0
          - 1
        issecondary:
          type: integer
          description: |-
            Whether the mail exchanger is a secondary exchanger.
            * `1` - Secondary.
            * `0` - **Not** secondary.
          example: 0
          enum:
          - 0
          - 1
        local:
          type: integer
          description: |-
            Whether the mail exchanger is a local exchanger.
            * `1` - Local.
            * `0` - **Not** local.
          example: 0
          enum:
          - 0
          - 1
        mxcheck:
          type: string
          description: |-
            The mail exchanger type.
            * `auto`
            * `local`
            * `secondary`
            * `remote`
          example: auto
          enum:
          - auto
          - local
          - secondary
          - remote
        remote:
          type: integer
          description: |-
            Whether the mail exchanger is a remote exchanger.
            * `1` - Remote.
            * `0` - **Not** remote.
          example: 0
          enum:
          - 0
          - 1
        secondary:
          type: integer
          description: |-
            Whether the mail exchanger is a secondary exchanger.
            * `1` - Secondary.
            * `0` - **Not** secondary.
          example: 0
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: "Warning messages, if any exist."
          items:
            type: string
            example: "Auto Detect of MX configuration not possible due to non-resolving\
              \ MX entries. Defaulting to last known setting: local."
      description: An object of the mail exchanger's data.
    inline_response_200_125_result_data:
      type: object
      properties:
        checkmx:
          $ref: "#/components/schemas/inline_response_200_125_result_data_checkmx"
        results:
          type: string
          description: |-
            A message of success, or an error message.
            * A message of success that begins with `Added entry:`.
            * An error message.
          example: "Added entry:\\nBind reloading on example using rndc zone: [example.com]\\\
            n"
        status:
          type: integer
          description: |-
            Whether the function succeeded.
            * `1` - Success.
            * `0` - Failure.
          example: 1
          enum:
          - 0
          - 1
        statusmsg:
          type: string
          description: |-
            A message of success, or an error message.
            * A message of success that begins with `Added entry:`.
            * An error message.
          example: "Added entry:\\nBind reloading on example using rndc zone: [example.com]\\\
            n"
    inline_response_200_125_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_125_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_126_result:
      type: object
      properties:
        data:
          type: string
          description: "The email address. The email account username, a plus character\
            \ (+), and the email account domain."
          example: user+example.com
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_128_result_data:
      type: object
      properties:
        depth:
          minimum: 0
          type: integer
          description: The directory depth of the item's path.
          example: 2
        file:
          type: string
          description: The item's base name.
          example: archive
        fullpath:
          type: string
          description: The item's absolute path.
          format: path
          example: /home/example/mail/archive
        isleaf:
          type: integer
          description: |-
            Whether the item is a file or a directory.
            * `1` - File.
            * `0` - Directory.
          example: 0
          enum:
          - 0
          - 1
        ismailbox:
          type: integer
          description: |-
            Whether the item is a mailbox.
            * `1` - Mailbox.
            * `0` - **Not** a mailbox.
          example: 0
          enum:
          - 0
          - 1
        mtime:
          type: integer
          description: "The item's modification time. A time, in [Unix time](https://en.wikipedia.org/wiki/Unix_time)\
            \ format."
          format: unix_timestamp
          example: 1413398866
        path:
          type: string
          description: The item's directory's path.
          format: path
          example: /home/example/mail
        relpath:
          type: string
          description: The item's relative path.
          format: path
          example: /archive
        type:
          type: string
          description: |-
            The item type.
            * `dir` - The item is a directory.
            * `file` - The item is a file.
          example: dir
          enum:
          - dir
          - file
    inline_response_200_128_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_128_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_129_result_data:
      type: object
      properties:
        checkmx:
          $ref: "#/components/schemas/inline_response_200_125_result_data_checkmx"
        results:
          type: string
          description: |-
            A message of success, or an error message.
            * A message of success that begins with `Added entry:`.
            * An error message.
          example: "Replacing existing entry on line matched old entry and old priority:\
            \ 51:\\nBind reloading on example using rndc zone: [example.com]"
        status:
          type: integer
          description: |-
            Whether the function succeeded.
            * `1` - Success.
            * `0` - Failure.
          example: 1
          enum:
          - 0
          - 1
        statusmsg:
          type: string
          description: |-
            A message of success, or an error message.
            * A message of success that begins with `Added entry:`.
            * An error message.
          example: "Replacing existing entry on line matched old entry and old priority:\
            \ 51:\\nBind reloading on example using rndc zone: [example.com]"
    inline_response_200_129_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_129_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_130_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            The contents of the server's `/var/cpanel/fastmail` file.
            * A positive value that represents a BlackBerry FastMail version number if it is enabled on the server.
            * A `null` value if BlackBerry FastMail is not enabled on the server.
          example: "2"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_131_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: |-
            The number of email autoresponders.
            * `0`
            * A positive integer.
          example: 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_132_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: |-
            The number of email filters.
            * `0`
            * A positive integer.
          example: 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_133_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: |-
            The number of email forwarders.
            * `0`
            * A positive integer.
          example: 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_134_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: |-
            The number of mailing lists.
            * `0`
            * A positive integer.
          example: 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_135_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: |-
            The number of email accounts.
            * `0`
            * A positive integer.
          example: 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_140_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: |-
            The number of held outbound email messages deleted from the mail queue.

            **Note:**

              This function returns a `0` value when no messages exist in the queue.
          example: 0
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_142_result_data_checkmx:
      type: object
      properties:
        changed:
          type: integer
          description: |-
            Whether a change occurred during the function.
            * `1` - Change occurred.
            * `0` - **No** change.
          example: 1
          enum:
          - 0
          - 1
        detected:
          type: string
          description: |-
            The mail exchanger type.
            * `auto`
            * `local`
            * `secondary`
            * `remote`
          example: auto
          enum:
          - auto
          - local
          - secondary
          - remote
        isprimary:
          type: integer
          description: |-
            Whether the mail exchanger is the primary mail exchanger.
            * `1` - Primary.
            * `0` - **Not** primary.
          example: 0
          enum:
          - 0
          - 1
        issecondary:
          type: integer
          description: |-
            Whether the mail exchanger is a secondary exchanger.
            * `1` - Secondary.
            * `0` - **Not** secondary.
          example: 0
          enum:
          - 0
          - 1
        local:
          type: integer
          description: |-
            Whether the mail exchanger is a local exchanger.
            * `1` - Local.
            * `0` - **Not** local.
          example: 0
          enum:
          - 0
          - 1
        mxcheck:
          type: string
          description: |-
            The mail exchanger type.
            * `auto`
            * `local`
            * `secondary`
            * `remote`
          example: auto
          enum:
          - auto
          - local
          - secondary
          - remote
        remote:
          type: integer
          description: |-
            Whether the mail exchanger is a remote exchanger.
            * `1` - Remote.
            * `0` - **Not** remote.
          example: 0
          enum:
          - 0
          - 1
        secondary:
          type: integer
          description: |-
            Whether the mail exchanger is a secondary exchanger.
            * `1` - Secondary.
            * `0` - **Not** secondary.
          example: 0
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: "Warning messages, if any exist."
          example: "Auto Detect of MX configuration not possible due to non-resolving\
            \ MX entries. Defaulting to last known setting: local."
          items:
            type: string
      description: An object containing the mail exchanger's data.
    inline_response_200_142_result_data:
      type: object
      properties:
        checkmx:
          $ref: "#/components/schemas/inline_response_200_142_result_data_checkmx"
        results:
          type: string
          description: |-
            A message of success, or an error message.
            * A message of success that begins with `Removed entry:`.
            * An error message.
          example: |-
            Removed entry: example.com. IN MX 15 mail.example.com
            Bind reloading on example using rndc zone: [example.com]
        status:
          type: integer
          description: |-
            Whether the function succeeded.
            * `1` - Success.
            * `0` - Failure.
          example: 1
          enum:
          - 0
          - 1
        statusmsg:
          type: string
          description: |-
            A message of success, or an error message.
            * A message of success that begins with Added entry.
            * An error message.
          example: |-
            Removed entry: example.com. IN MX 15 mail.example.com
            Bind reloading on example using rndc zone: [example.com]
    inline_response_200_142_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_142_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_144_result_data:
      type: object
      properties:
        filtername:
          type: string
          description: The filter's name. The filtername input parameter's value.
          example: coffee
        updated:
          type: integer
          description: |-
            Whether the function updated the filter.
            * `1` - Updated,
            * `0` - Did **not** update.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_144_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_144_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_145_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the function disabled mailbox autocreation for the cPanel account.
            * `1` - Mailbox autocreation disabled.
            * `0` - Mailbox autocreation is **not** disabled.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_146_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          example:
          - Apache SpamAssassinâ¢ has been disabled.
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_147_result_data:
      type: object
      properties:
        spam_auto_delete:
          type: integer
          description: Whether the auto-delete spam feature is disabled. `0` is the
            **only** possible value.
          example: 0
          enum:
          - 0
    inline_response_200_147_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_147_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_149_result:
      properties:
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_150_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_151_result_data:
      type: object
      properties:
        filtername:
          type: string
          description: The filter's name.
          example: coffee
        updated:
          type: integer
          description: |-
            Whether the function updated the filter.
            * `1` - Updated.
            * `0` - Did **not** update.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_151_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_151_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_152_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the function enabled mailbox autocreation for the cPanel account.
            - 1  Mailbox autocreation enabled.
            - 0  Mailbox autocreation is not enabled.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_155_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_156_result_data:
      type: object
      properties:
        map:
          type: string
          description: "A [character encoding](https://en.wikipedia.org/wiki/Character_encoding)\
            \ that cPanel supports."
          example: utf-8
    inline_response_200_156_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_156_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_157_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the system started the rescan.
            * `1` - Success.
            * `0` - Failure.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_158_result:
      type: object
      properties:
        data:
          type: string
          description: The new one-time password.
          example: LfFYLPRT_UoS4EDi9lGKuOFK8FaWQsozzPYn8WjM3
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_159_result_data:
      type: object
      properties:
        body:
          type: string
          description: The contents of the autoresponder message's `Body` section.
          example: This is an autoresponder message.
        charset:
          type: string
          description: "The autoresponder's [character set](https://en.wikipedia.org/wiki/Character_encoding)."
          example: UTF-8
        from:
          type: string
          description: The contents of the autoresponder message's `From` field.
          example: User Name
        interval:
          minimum: 0
          type: integer
          description: |-
            The amount of time, in hours, that the server waits between autoresponder messages to the same address.

            **Note:**

            A value of `0` indicates that the system sends a message for each email received.
          example: 24
        is_html:
          type: integer
          description: |-
            Whether the body of the autoresponder message begins with an [HTML content type declaration](https://en.wikipedia.org/wiki/Character_encodings_in_HTML#Specifying_the_document.27s_character_encoding).
            - `1` - Includes an HTML content type declaration.
            - `0` - Does **not** include an HTML content type declaration.
          example: 1
          enum:
          - 0
          - 1
        start:
          type: integer
          description: When the autoresponder becomes enabled in Unix time.
          format: unix_timestamp
          example: 1410277881
        stop:
          type: integer
          description: When the autoresponder becomes disabled in Unix time.
          format: unix_timestamp
          example: 1410300000
        subject:
          type: string
          description: The contents of the autoresponder message's `Subject` field.
          example: Autoresponder Subject
    inline_response_200_159_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_159_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_160_result:
      type: object
      properties:
        data:
          type: array
          description: "An array of [character encodings](https://en.wikipedia.org/wiki/Character_encoding)\
            \ that the mail server supports."
          items:
            type: string
            example: utf-8
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_161_result_data:
      type: object
      properties:
        account:
          type: string
          description: The account's email address.
          format: email
          example: username@example.com
        activesync_available:
          type: integer
          description: |-
            Whether the account supports ActiveSync.
            * `1` â Supported.
            * `0` â **Not** supported.
          example: 1
          enum:
          - 1
          - 0
        activesync_host:
          type: string
          description: |-
            The account's ActiveSync hostname.

            This return **only** appears if `activesync_available` is `1`.
          format: domain
          example: mail.example.com
        activesync_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: |-
            The account's ActiveSync SSL/TLS port.

            This return **only** appears if `activesync_available` is `1`.
          example: 2091
        activesync_username:
          type: string
          description: |-
            The account's ActiveSync username.

            This return **only** appears if `activesync_available` is `1`.
          format: email
          example: username@example.com
        display:
          type: string
          description: The account's display name.
          format: email
          example: username@example.com
        domain:
          type: string
          description: The account's domain name.
          format: domain
          example: domain.com
        from_archiving:
          type: integer
          description: |-
            Whether the account is a mail archive.
            * `1` â The account is a mail archive.
            * `0` â The account is **not** a mail archive.
          example: 0
          enum:
          - 1
          - 0
        has_plaintext_authentication:
          type: integer
          description: |-
            Whether the account supports plaintext authentication.

            * `1` â Supported.
            * `0` â **Not** supported.
          example: 1
          enum:
          - 1
          - 0
        inbox_host:
          type: string
          description: The account's hostname.
          format: domain
          example: mail.example.com
        inbox_insecure_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The account's insecure inbound port.
          example: 143
        inbox_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The account's secure inbound port.
          example: 993
        inbox_service:
          type: string
          description: |-
            The service type that the account uses.
            * `imap`
            * `pop`
          example: imap
          enum:
          - imap
          - pop
        inbox_username:
          type: string
          description: The account's username.
          format: email
          example: username@example.com
        mail_domain:
          type: string
          description: The account's mail hostname.
          format: domain
          example: mail.example.com
        smtp_host:
          type: string
          description: The account's outbound SMTP hostname.
          format: domain
          example: mail.example.com
        smtp_insecure_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The account's insecure outbound SMTP port.
          example: 25
        smtp_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The account's secure outbound SMTP port.
          example: 465
        smtp_username:
          type: string
          description: The account's SMTP username.
          format: email
          example: username@example.com
    inline_response_200_161_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_161_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_162_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: |-
            The default email quota in bytes.

            The value will either be:
            * The system's default quota value (32 gigabytes).
            * The account's quota value, if it is less than the system's default value.
          example: 34359738368
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_163_result:
      type: object
      properties:
        data:
          maximum: 4294967296
          minimum: 0
          type: integer
          description: |-
            The default email quota in [mebibytes](https://en.wikipedia.org/wiki/Mebibyte) (MiB).

            The value will either be:
            * The system's default quota value (32 gigabytes).
            * The account's quota value, if it is less than the system's default value.
          example: 32768
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_164_result_data:
      type: object
      properties:
        diskused:
          type: number
          description: |-
            The disk space that the email account uses.
            * A positive floating-point value that represents the disk space, used in megabytes (MB).
            * `0` - The account posesses an unlimited disk quota.
          example: 399.6
        domain:
          type: string
          description: The email account's domain.
          format: domain
          example: example.com
        login:
          type: string
          description: The email address or the main account username.
          format: email
          example: user@example.com
        user:
          type: string
          description: The email account's username.
          example: user
    inline_response_200_164_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_164_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_165_result_data_actions:
      type: object
      properties:
        action:
          type: string
          description: |-
            The filter's action.
            * `deliver` -  The filter sends mail to the destination address.
            * `fail` -  The filter forces a delivery failure.
            * `finish` -  The filter stops message processing.
            * `save` -  The filter saves mail to the destination file.
            * `pipe` -  The filter sends mail to the destination application.
          enum:
          - deliver
          - fail
          - finish
          - save
          - pipe
        dest:
          description: |-
            The destination to which the filter sends mail.

            A destination can be one of the following.
            * A file path.
            * An application path.
            * A valid email address.
          oneOf:
          - type: string
            format: path
            example: /dev/null
          - type: string
            format: email
            example: example@test.com
        number:
          minimum: 1
          type: integer
          description: The filter's position in the order of the account's filters.
          example: 1
    inline_response_200_165_result_data_metadata:
      type: object
      properties:
        transformed:
          type: integer
          description: Post-processing may have transformed the data.
          example: 1
          enum:
          - 1
    inline_response_200_165_result_data_rules:
      type: object
      properties:
        match:
          type: string
          description: |-
            The filter's match type.

            * `is`
            * `matches`
            * `contains`
            * `does not contain`
            * `begins`
            * `does not begin`
            * `ends`
            * `does not end`
            * `does not match`
            * `is above`
            * `is not above`
            * `is below`
            * `is not below`
          example: contains
          enum:
          - is
          - matches
          - contains
          - does not contain
          - begins
          - does not begin
          - ends
          - does not end
          - does not match
          - is above
          - is not above
          - is below
          - is not below
        number:
          minimum: 1
          type: integer
          description: The filter's position in the order of the account's filters.
          example: 1
        opt:
          type: string
          description: |-
            The connection between multiple conditions.
            * `and` -  Match both conditions.
            * `or` -  Match either condition.
            * `null` -  There is only one condition.
          example: or
          enum:
          - and
          - or
          - "null"
        part:
          type: string
          description: |-
            The queried email section.
            * `$header_from:` -  Matches against the From: section.
            * `$header_subject:` -  Matches against the Subject: section.
            * `$header_to:` -  Matches against the To: section.
            * `$reply_address:` -  Matches against the Reply To: section.
            * `$message_body` -  Matches against the message's body.
            * `$message_headers` -  Matches against the message's headers.
            * `foranyaddress $h_to:,$h_cc:,$h_bcc:` -  Matches against all message recipients.
            * `not delivered` -  Matches if the message is not queued for delivery.
            * `error_message` -  Matches if the incoming message bounced.
          example: $message_body
          enum:
          - "$header_from:"
          - "$header_subject:"
          - "$header_to:"
          - "$reply_address:"
          - $message_body
          - $message_headers
          - "foranyaddress $h_to:,$h_cc:,$h_bcc:"
          - not delivered
          - error_message
        val:
          type: string
          description: The matched value.
          example: coconut
    inline_response_200_165_result_data:
      type: object
      properties:
        actions:
          type: array
          description: An array of objects that contains the filter's actions.
          items:
            $ref: "#/components/schemas/inline_response_200_165_result_data_actions"
        filtername:
          type: string
          description: The filter's name.
          example: coffee
        metadata:
          $ref: "#/components/schemas/inline_response_200_165_result_data_metadata"
        rules:
          type: array
          description: An array of objects that contains the filter's rules.
          items:
            $ref: "#/components/schemas/inline_response_200_165_result_data_rules"
    inline_response_200_165_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_165_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_166_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: The number of messages currently held in the mail queue.
          example: 0
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_167_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: "The total disk usage for the [mailing lists](https://go.cpanel.net/MailingLists)\
            \ of a cPanel account, in bytes."
          example: 1024
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_168_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the cPanel account can automatically create mailboxes.
            * `1` â The cPanel account can automatically create mailboxes.
            * `0` â The cPanel account **cannot** automatically create mailboxes.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_169_result_data:
      type: object
      properties:
        delegates:
          type: array
          description: An array of the mailing list's administrators.
          items:
            type: string
            format: email
            example: secondadmin@example.com
        metadata:
          $ref: "#/components/schemas/inline_response_200_124_result_data_metadata"
    inline_response_200_169_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_169_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_170_result:
      type: object
      properties:
        data:
          type: string
          description: The current amount of disk space that the main email account
            uses.
          example: 3076 bytes
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_171_result:
      type: object
      properties:
        data:
          type: integer
          description: "The current amount of disk space that the main email account\
            \ uses, in bytes."
          example: 3076
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_172_result:
      type: object
      properties:
        data:
          maximum: 4503599627370496
          type: integer
          description: |-
            The account's maximum email quota, in bytes format. The function will
            return one of the following values:

            * The system's default maximum quota (4 [Pebibytes](https://en.wikipedia.org/wiki/Pebibyte)).
            * The account's quota value, if it is **less** than the default
            system quota value.
          example: 4503599627370496
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_173_result:
      type: object
      properties:
        data:
          maximum: 4294967296
          minimum: 0
          type: integer
          description: "The account's maximum email account quota size, in Mebibytes\
            \ (MiB)."
          example: 4294967296
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_174_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            The email account's quota.

            **Note:**

            This value's unit of measure depends on the `as_bytes` input parameter's value.
          example: 262144000
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_175_result_data:
      type: object
      properties:
        cpuser_spam_auto_delete:
          type: integer
          description: |-
            The cPanel user's account-wide spam filter setting

            * `1` - Enabled.
            * `0` - Not enabled.

            **NOTE:**

            This key **only** appears if the `account` parameter is passed **and** the account does **not** have a custom setting
          nullable: true
          example: 1
          enum:
          - 0
          - 1
        cpuser_spam_auto_delete_score:
          minimum: 0
          type: integer
          description: |-
            The cPanel user's account-wide spam filter threshold score. For more information, see `Email::add_spam_filter`.

            **NOTE:**

            This key **only** appears if the `account` parameter is passed **and** the account does **not** have a custom setting
          nullable: true
          example: 8
        rewrites_subjects:
          type: integer
          description: |-
            Whether the user's spam filter rewrites the subject lines of spam messages.

            * `1` -  Rewrite.
            * `0` -  No rewrites.
          example: 1
          enum:
          - 0
          - 1
        spam_as_acl:
          type: integer
          description: |-
            Whether the user's spam filter uses Apache SpamAssassin as an ACL.

            **NOTE:**

            The value of this parameter is **always** `1`
            * `1` -  SpamAssassin is an ACL.
          example: 1
          enum:
          - 1
        spam_auto_delete:
          type: integer
          description: |-
            Whether the user's autodelete function is enabled.

            * `1` -  Enabled.
            * `0` -  Not enabled.

            **NOTE::**

            This key does **not** appear if the `cpuser_spam_auto_delete` key appears
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        spam_auto_delete_score:
          minimum: 0
          type: integer
          description: |-
            Displays the user's spam filter threshold.  For more information, see `Email::add_spam_filter`.

            **Note:**

            This key does **not** appear if the `cpuser_spam_auto_delete_score` key appears
          nullable: true
          example: 8
        spam_box_enabled:
          type: integer
          description: |-
            Whether the user's spam box is enabled.

            * `1` -  Enabled.
            * `0` -  Not enabled.
          example: 0
          enum:
          - 0
          - 1
        spam_enabled:
          type: integer
          description: |-
            Whether the server's global spam filtering is enabled.

            * `1` -  Enabled.
            * `0` -  Not enabled.

            **Note:**

             This value will **only** return `0` if the cPanel user disables Apache SpamAssassin.
          example: 1
          enum:
          - 0
          - 1
        spam_status_changeable:
          type: integer
          description: |-
            Whether the server allows cPanel users to configure Apache SpamAssassin settings.

            * `1` -  Allowed.
            * `0` -  Not allowed.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_175_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_175_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_176_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The email account's mail server hostname.
          format: domain
          example: mail.example.com
        has_maildir:
          type: integer
          description: |-
            Whether `Maildir` is enabled for the email account.

            * `1` â Enabled.

            It is not possible to disable `Maildir`.
          example: 1
          enum:
          - 1
        user:
          description: The email account.
          oneOf:
          - type: string
            format: email
            example: user@example.com
          - type: string
            format: username
            example: user
    inline_response_200_176_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_176_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_177_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the email address has administrative privileges on one or more mailing lists on the cPanel account.
            * `1` â The email address has administrative privileges.
            * `0` â The email address does **not** have administrative privileges.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_178_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether plaintext authentication is enabled on the Dovecot mail server.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_180_result_data:
      type: object
      properties:
        email:
          type: string
          description: The autoresponder's email address.
          format: email
          example: user@example.com
        subject:
          type: string
          description: The contents of the autoresponder message's `Subject:` field.
          example: Autoresponder Subject
    inline_response_200_180_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_180_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_181_result_data:
      type: object
      properties:
        defaultaddress:
          type: string
          description: |-
            The domain's default address.
            * An email account username - The system forwards unroutable mail to this address.
            * `:fail:` - The system bounces unroutable mail back to the sender, and sends a failure message.
            * `:blackhole:` - The system deletes unroutable mail without a failure message.
            * The path to an application - The system pipes unroutable mail to this application.
          example: user
        domain:
          type: string
          description: The domain name.
          format: domain
          example: example.com
    inline_response_200_181_result:
      type: object
      properties:
        data:
          type: array
          description: An object of data for a domain.
          items:
            $ref: "#/components/schemas/inline_response_200_181_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_182_result_data:
      type: object
      properties:
        dest:
          type: string
          description: The forwarded domain.
          format: domain
          example: example.com
        forward:
          type: string
          description: The destination domain.
          format: domain
          example: forwardtome.com
    inline_response_200_182_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing domain forwarder information.
          items:
            $ref: "#/components/schemas/inline_response_200_182_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_183_result_actions:
      type: object
      properties:
        action:
          type: string
          description: |-
            The filterâs action.

            Some common ones include:

            * `deliver` â The filter sends mail to the dest address.
            * `fail` â The filter forces a delivery failure.
            * `finish` â The filter stops message processing.
            * `save` â The filter saves mail to the dest file.
            * `pipe` â The filter sends mail to the dest application.

            For more information, read [Eximâs _Filter commands_ documentation](http://www.exim.org/exim-html-3.30/doc/html/filter_11.html).
        dest:
          type: string
          description: |-
            The destination to which the filter sends mail.
            * A file path.
            * An application path.
            * A valid email address.
          example: /dev/null
    inline_response_200_183_result_rules:
      type: object
      properties:
        match:
          type: string
          description: The filterâs match type.
          example: contains
          enum:
          - is
          - matches
          - contains
          - does not contain
          - begins
          - does not begin
          - ends
          - does not end
          - does not match
          - is above
          - is not above
          - is below
          - is not below
        opt:
          type: string
          description: |-
            The connection between multiple conditions.
              * `and` â Match both conditions.
              * `or` â Match either condition.
              * `null` â Only one condition exists.
          example: or
          enum:
          - and
          - or
          - "null"
        part:
          type: string
          description: |-
            The queried email section.

            Some common ones include:

            * `$header_from:` â Matches against the `From:` section.
            * `$header_subject:` â Matches against the `Subject:` section.
            * `$header_to:` â Matches against the `To:` section.
            * `$reply_address:` â Matches against the `Reply To:` section.
            * `$message_body` â Matches against the messageâs body.
            * `$message_headers` â Matches against the messageâs headers.
            * `foranyaddress $h_to:,$h_cc:,$h_bcc:` â  Matches against all message recipients.
            * `not delivered` â Matches if the system has not queued the message for delivery.
            * `error_message` â Matches if the incoming message bounced.

            For more options, read [Eximâs documentation](https://exim.org/exim-html-3.30/doc/html/filter.html).
          example: $message_body
        val:
          type: string
          description: The matched value. A string value.
          example: coconut
    inline_response_200_183_result_data:
      type: object
      properties:
        actions:
          type: array
          description: An array of objects that descibe each of the filterâs actions.
          items:
            $ref: "#/components/schemas/inline_response_200_183_result_actions"
        enabled:
          type: integer
          description: Whether the filter is enabled.
        filtername:
          type: string
          description: The filterâs name.
          example: coffee
        rules:
          type: array
          description: An array of objects that descibe each of the filterâs rules.
          items:
            $ref: "#/components/schemas/inline_response_200_183_result_rules"
        unescaped:
          type: boolean
          deprecated: true
    inline_response_200_183_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_183_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_184_result_data:
      type: object
      properties:
        domain:
          type: string
          description: A domain with a domain-level filter.
          format: domain
          example: example.com
    inline_response_200_184_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contains information about domains
            with domain-level filters.
          items:
            $ref: "#/components/schemas/inline_response_200_184_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_185_result_data:
      type: object
      properties:
        dest:
          type: string
          description: The forwarded address.
          format: email
          example: forwarded@example.com
        forward:
          type: string
          description: The forwarded mail's destination.
          format: email
          example: user@example.com
        html_dest:
          type: string
          description: The forwarded address in an HTML-compatible format.
          format: email
          example: forwarded@example.com
        html_forward:
          type: string
          description: The forwarded mail's destination in an HTML-compatible format.
          format: email
          example: user@example.com
        uri_dest:
          type: string
          description: The forwarded address in a URI-encoded format.
          example: forwarded%40example.com
        uri_forward:
          type: string
          description: The forwarded mail's destination in a URI-encoded format.
          example: user%40example.com
    inline_response_200_185_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_185_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_186_result_data:
      type: object
      properties:
        domain:
          type: string
          description: domain that uses a domain-level filter.
          format: domain
          example: example.com
    inline_response_200_186_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_186_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_187_result_data:
      type: object
      properties:
        accesstype:
          type: string
          description: |-
            The level of access that users have to the mailing list.
            * `private` - The list has **all** of the following settings:
              * The list has private archives.
              * The administrator **must** approve subscriptions.
              * The Mailman directory page does **not** display the list.
            * `public` - The list has **any** of the following settings:
              * The list has public archives.
              * Anyone can subscribe.
              * The Mailman directory page displays the list.
          example: public
          enum:
          - private
          - public
        advertised:
          type: integer
          description: |-
            Whether the Mailman directory page displays the list.
            * `1` - The Mailman directory page displays the list.
            * `0` - The Mailman directory page does not display the list.
          example: 1
          enum:
          - 0
          - 1
        archive_private:
          type: integer
          description: |-
            Whether the mailing list archive is `private`.
            * `1` - The mailing list archive is `private`.
            * `0` - The mailing list archive is `public`.
          example: 0
          enum:
          - 0
          - 1
        desthost:
          description: |-
            The IP address or domain name that handles mail for the mailing list's domain.
            * A valid hostname.
            * An IPv4 address.

            **Note:**

              If the function **cannot** resolve the IP address to a hostname, it will return the IP address.
          example: 172.16.254.1
          oneOf:
          - type: string
            format: domain
          - type: string
            format: ipv4
        diskused:
          minimum: 0
          type: integer
          description: "The disk space that the mailing list currently uses, measured\
            \ in megabytes (MB)."
          example: 20379
        humandiskused:
          type: string
          description: "The disk space that the mailing list uses, in human-readable\
            \ format."
          example: 19.9\u00a0KB
        list:
          type: string
          description: The mailing list name and domain.
          format: email
          example: list@example.com
        listadmin:
          type: string
          description: The mailing list's administrators' email addresses. A comma-separated
            list of email addresses.
          example: "admin@example.com,admin2@example.com"
        listid:
          type: string
          description: "The mailing list's name and domain. The mailing list name,\
            \ an underscore (_), and the domain."
          example: list_example.com
        subscribe_policy:
          type: integer
          description: |-
            The level of control that the mailing list administrator has over new subscribers.
            * `1` - Anyone can subscribe. The system sends a confirmation email.
            * `2` - The administrator **must** approve subscriptions. The system does **not** send a confirmation email.
            * `3` - The administrator **must** approve subscriptions. The system sends a confirmation email.
          example: 1
          enum:
          - 1
          - 2
          - 3
    inline_response_200_187_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_187_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_188_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain name.
          format: domain
          example: example.com
        select:
          type: integer
          description: |-
            The domain that you specified in the `select` input parameter. The function **only** returns this value if you included the `select` parameter when you called the function.

            **Note:**

              Because this value **only** appears if you included the `select` input parameter, The value **always** defaults to `1`.
          example: 1
          default: 1
    inline_response_200_188_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_188_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_189_result_entries:
      type: object
      properties:
        domain:
          type: string
          description: The mail exchanger's domain.
          format: domain
          example: example.com
        entrycount:
          minimum: 1
          type: integer
          description: "The mail exchanger's order in the list of priorities. For\
            \ example, the mail exchanger with the highest priority returns `1`, and\
            \ the next highest priority returns `2`."
          example: 1
        mx:
          type: string
          description: The mail exchanger's name.
          format: domain
          example: mx.example.com
        priority:
          minimum: 0
          type: integer
          description: "The mail exchanger's [priority value](https://go.cpanel.net/whmdocsEditMXEntry)."
          example: 5
        row:
          type: string
          description: |-
            Whether the mail exchanger is an odd or an even entry.
            * `even`
            * `odd`
          example: odd
          enum:
          - even
          - odd
    inline_response_200_189_result_data:
      type: object
      properties:
        alwaysaccept:
          type: integer
          description: |-
            Whether the domain's highest-priority mail exchanger accepts local mail.
            * `1` - Accept local mail.
            * `0` - Does **not** accept local mail.
          example: 1
          enum:
          - 0
          - 1
        detected:
          type: string
          description: |-
            The domain's highest-priority mail exchanger's type.
            * `auto`
            * `local`
            * `remote`
            * `secondary`
          example: local
          enum:
          - auto
          - local
          - remote
          - secondary
        domain:
          type: string
          description: The domain name.
          format: domain
          example: example.com
        entries:
          type: array
          description: An array of objects that contains information about mail exchangers.
          items:
            $ref: "#/components/schemas/inline_response_200_189_result_entries"
        local:
          type: integer
          description: |-
            Whether the domain's highest priority mail exchanger is a local mail exchanger.
            * `1` - Local.
            * `0` - **Not** local.
          example: 1
          enum:
          - 0
          - 1
        mx:
          type: string
          description: The domain's highest-priority mail exchanger's name.
          format: domain
          example: mx.example.com
        mxcheck:
          type: string
          description: |-
            The domain's highest-priority mail exchanger's type.
            * `auto`
            * `local`
            * `remote`
            * `secondary`
          example: auto
          enum:
          - auto
          - local
          - remote
          - secondary
        remote:
          type: integer
          description: |-
            Whether the domain's highest-priority mail exchanger is remote.
            * `1` - Remote.
            * `0` - **Not** remote.
          example: 0
          enum:
          - 0
          - 1
        secondary:
          type: integer
          description: |-
            Whether the domain's highest-priority mail exchanger is secondary.
            * `1` - Secondary.
            * `0` - **Not** secondary.
          example: 0
          enum:
          - 0
          - 1
        status:
          type: integer
          description: |-
            Whether the function succeeded.
            * `1` - Success.
            * `0` - Failure.
          example: 1
          enum:
          - 0
          - 1
        statusmsg:
          type: string
          description: |-
            A success or error message message.
            * A success message.
            * An error message.
          example: Fetched MX List
    inline_response_200_189_result:
      type: object
      properties:
        data:
          type: array
          properties: {}
          items:
            $ref: "#/components/schemas/inline_response_200_189_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_190_result_data:
      type: object
      properties:
        email:
          description: |-
            An email address.
            * A valid email address on the cPanel account.
            * The cPanel account username, for the main account.
          example: user@example.com
          oneOf:
          - type: string
            format: email
          - type: string
            format: username
        login:
          description: |-
            The email account login.
            * A valid email address on the cPanel account.
            * `Main Account`, for the main account.
          example: user@example.com
          oneOf:
          - type: string
            format: email
          - type: string
            enum:
            - Main Account
        suspended_incoming:
          type: integer
          description: |-
            Whether incoming email for the email account is suspended.
            * `1` - Suspended.
            * `0` - Not suspended.
          example: 0
          enum:
          - 0
          - 1
        suspended_login:
          type: integer
          description: |-
            Whether logins for the email account are suspended.
            * `1` - Suspended.
            * `0` - Not suspended.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_190_result:
      type: object
      properties:
        data:
          type: array
          description: An object of data for an email address on the cPanel account.
          items:
            $ref: "#/components/schemas/inline_response_200_190_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_191_result_data:
      type: object
      properties:
        _diskquota:
          minimum: 0
          type: integer
          description: |-
            The disk quota.
            * A positive value that represents the disk quota, in bytes.
            * `0` - The account possesses an unlimited disk quota.
          example: 0
        _diskused:
          minimum: 0
          type: integer
          description: |-
            The disk space that the email account uses.
            * A positive value that represents the used disk space, in bytes.
            * `0` - The account possesses an unlimited disk quota.
          example: 483
        diskquota:
          description: |-
            The email account's disk quota.
            * A positive value that represents the email address's quota, in megabytes (MB).
            * `unlimited`, `â`, or HTML code to display an infinity image - The email account has an unlimited quota.

            **Note:**

              The `infinityimg` and `infinitylang` parameters determine the unlimited value for this return.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
        diskused:
          minimum: 0
          type: integer
          description: |-
            The disk space that the email account uses.
            * A positive floating-point value that represents the used disk space, in megabytes (MB).
            * `0` - The account possesses an unlimited disk quota.
          example: 0
        diskusedpercent:
          minimum: 0
          type: integer
          description: |-
            The percentage of disk space that the email account uses.
            * A positive value.
            * `0` - The account has an unlimited disk quota.
          example: 0
        diskusedpercent20:
          minimum: 0
          type: integer
          description: |-
            The percentage of disk space that the email account uses.
            * A positive value.
            * `0` - The account possesses an unlimited disk quota.
          example: 0
        diskusedpercent_float:
          minimum: 0
          type: number
          description: |-
            The floating-point value from which the function derives the `diskusedpercent` return.
            * A floating-point value.
            * `0` - Unlimited or disabled disk quota.

            **Note:**

             The `diskusedpercent_float` number can contain scientific notation values. For example, `1.20494365692139e-05`.
          example: 0
        domain:
          type: string
          description: "The email account's domain. For example, `example.com` if\
            \ the email address is `user@example.com`."
          format: domain
          example: example.com
        email:
          description: |-
            The email address, or the string `Main Account`.
            * A valid email address.
            * `Main Account`
          example: user@example.com
          oneOf:
          - type: string
            format: email
          - type: string
            enum:
            - Main Account
        has_suspended:
          type: integer
          description: |-
            Whether the email account possesses one of the following suspension parameters: `suspended_login` `suspended_incoming` `suspended_outgoing` `hold_outgoing`
            * `1` - The email account has a suspension.
            * `0` - The email account does **not** have a suspension.

            **Note:**

              The function **only** returns this value if you pass the `get_restrictions=1` parameter.
          example: 0
          enum:
          - 0
          - 1
        hold_outgoing:
          type: integer
          description: |-
            Whether the email account's outgoing email is held in Exim's queue.
            * `1` - Outgoing email is held in Exim's queue.
            * `0` - Outgoing email is **not** held in Exim's queue.

            **Note:**

              The function **only** returns this value if you pass the `get_restrictions=1` parameter.
          example: 0
          enum:
          - 0
          - 1
        humandiskquota:
          description: |-
            The disk quota, in human-readable format.
            * The disk quota and the unit of measure.
            * `None` - The account possesses an unlimited disk quota.
          example: None
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            enum:
            - None
        humandiskused:
          type: string
          description: |-
            The disk space that the email account uses, in human-readable format.
            * The disk space that the email account uses, a non-breaking space (`\u00a0`), and the unit of measure.
            * `None` - The account possesses an unlimited disk quota.
          example: 483 bytes
        login:
          description: |-
            The email address, or the main account username.
            * A valid email address.
            * The username for the main account.
          example: user@example.com
          oneOf:
          - type: string
            format: username
          - type: string
            format: email
        mtime:
          type: integer
          description: "The email account's last modification time, in [Unix time](https://wikipedia.org/wiki/Unix_time)\
            \ format."
          format: unix_timestamp
          example: 1415894498
        suspended_incoming:
          type: integer
          description: |-
            Whether the email account's incoming email is suspended.
            * `1` - Suspended.
            * `0` - **Not** suspended.
          example: 0
          enum:
          - 0
          - 1
        suspended_login:
          type: integer
          description: |-
            Whether the user's ability to log in to, send mail from, and read their email account is suspended.
            * `1` - Suspended.
            * `0` - **Not** suspended.
          example: 0
          enum:
          - 0
          - 1
        suspended_outgoing:
          type: integer
          description: |-
            Whether the email account's outgoing email is suspended.
            * `1` - Suspended.
            * `0` - **Not** suspended.
          example: 0
          enum:
          - 0
          - 1
        txtdiskquota:
          description: |-
            The email account's disk quota.
            * A positive value that represents the email address's quota, in megabytes (MB).
            * `unlimited` - The email account has an unlimited quota.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            enum:
            - unlimited
        user:
          type: string
          description: "The email account username. For example, `user` if the email\
            \ address is `user@example.com`."
          example: user
    inline_response_200_191_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing data for each email address.
          items:
            $ref: "#/components/schemas/inline_response_200_191_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_192_result_data:
      type: object
      properties:
        filter_info:
          type: string
          description: The file that contains the account's system-level filter information.
            A `.yaml.gz` filename that contains the cPanel account username.
          example: filter_info.username.yaml.gz
    inline_response_200_192_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_192_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_193_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_196_result_data:
      type: object
      properties:
        delegates:
          type: array
          description: An array of the mailing list's administrators. One or more
            email addresses.
          items:
            type: string
            example: secondadmin@example.com
        metadata:
          $ref: "#/components/schemas/inline_response_200_124_result_data_metadata"
    inline_response_200_196_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_196_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_198_result_data_checkmx:
      type: object
      properties:
        changed:
          type: integer
          description: |-
            Whether a change occurred during the function.
            * `1` â Change occurred.
            * `0` â **No** change.
          example: 1
          enum:
          - 0
          - 1
        detected:
          type: string
          description: |-
            The mail exchanger type.
            * `auto` â Allow cPanel to determine the appropriate role.
            * `local` â Always accept the domain's mail.
            * `secondary` â Accept mail until a higher priority mail server is available.
            * `remote` â Do **not** accept mail.
          example: auto
          enum:
          - auto
          - local
          - secondary
          - remote
        isprimary:
          type: integer
          description: |-
            Whether the mail exchanger is the primary mail exchanger.
            * `1` â  Primary.
            * `0` â **Not** primary.
          example: 0
          enum:
          - 0
          - 1
        issecondary:
          type: integer
          description: |-
            Whether the mail exchanger is a secondary exchanger.
            * `1` â Secondary.
            * `0` â **Not** secondary.
          example: 0
          enum:
          - 0
          - 1
        local:
          type: integer
          description: |-
            Whether the mail exchanger is a local exchanger.
            * `1` â Local.
            * `0` â **Not** local.
          example: 0
          enum:
          - 0
          - 1
        mxcheck:
          type: string
          description: |-
            The mail exchanger type.
              * `auto` â Allow cPanel to determine the appropriate role.
              * `local` â Always accept the domain's mail.
              * `secondary` â Accept mail until a higher priority mail server is available.
              * `remote` â Do **not** accept mail.
          example: auto
          enum:
          - auto
          - local
          - secondary
          - remote
        remote:
          type: integer
          description: |-
            Whether the mail exchanger is a remote exchanger.
            * `1` â Remote.
            * `0` â **Not** remote.
          example: 0
          enum:
          - 0
          - 1
        secondary:
          type: integer
          description: |-
            Whether the mail exchanger is a secondary exchanger.
            * `1` â Secondary.
            * `0` â **Not** secondary.
          example: 0
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: "An array of warning messages, if any exist. One or more warning\
            \ messages."
          items:
            type: string
            example: "Auto Detect of MX configuration not possible due to non-resolving\
              \ MX entries. Defaulting to last known setting: local."
      description: An object containing the mail exchanger's data.
    inline_response_200_198_result_data:
      type: object
      properties:
        checkmx:
          $ref: "#/components/schemas/inline_response_200_198_result_data_checkmx"
        detected:
          type: string
          description: |-
            The mail exchanger type.
              * `auto` â Allow cPanel to determine the appropriate role.
              * `local` â Always accept the domain's mail.
              * `secondary` â Accept mail until a higher priority mail server is available.
              * `remote` â Do **not** accept mail.
          example: auto
        local:
          type: integer
          description: |-
            Whether the mail exchanger is a local exchanger.
            * `1` â Local.
            * `0` â **Not** local.
          example: 0
          enum:
          - 0
          - 1
        mxcheck:
          type: string
          description: |-
            The mail exchanger type.
              * `auto` â Allow cPanel to determine the appropriate role.
              * `local` â Always accept the domain's mail.
              * `secondary` â Accept mail until a higher priority mail server is available.
              * `remote` â Do **not** accept mail.
          example: auto
        remote:
          type: integer
          description: |-
            Whether the mail exchanger is a remote exchanger.
            * `1` â Remote.
            * `0` â **Not** remote.
          example: 0
          enum:
          - 0
          - 1
        results:
          type: string
          description: |-
            A message of success or a reason for failure.
            * A message of success that includes the new type.
            * A string that describes an error.
          example: "Set Always Accept Status to: local"
        secondary:
          type: integer
          description: |-
            Whether the mail exchanger is a secondary exchanger.
            * `1` â Secondary.
            * `0` â **Not** secondary.
          example: 0
          enum:
          - 0
          - 1
        status:
          type: integer
          description: |-
            Whether the function succeeded.
            * `1` â Success.
            * `0` â Failure.
          example: 1
          enum:
          - 0
          - 1
        statusmsg:
          type: string
          description: |-
            A message of success or a reason for failure.
            * A message of success that includes the new type.
            * A string that describes an error.
          example: "Set Always Accept Status to: local"
    inline_response_200_198_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_198_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_199_result_data:
      type: object
      properties:
        dest:
          type: string
          description: |-
            The destination to which the system sends unroutable mail.
            - An email address  The system forwards mail to this address.
            - :fail:  The system bounces mail back to the sender, and sends a failure message.
            - :blackhole:  The system deletes mail without a failure message.
            - The path to an application  The system pipes mail to this application.
          example: admin@example.com
        domain:
          type: string
          description: The domain. A valid domain on the account.
          example: example.com
    inline_response_200_199_result:
      type: object
      properties:
        data:
          type: array
          description: An array of hashes of forwarder information. This array of
            hashes includes the domain and dest returns.
          items:
            $ref: "#/components/schemas/inline_response_200_199_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_201_result_data:
      type: object
      properties:
        additionalProperties:
          type: string
          description: |-
            The domain for which the function replaced the manual MX redirect entry.

            * null â The domain did not have an existing manual MX redirect entry.

            **Note:**

            This return's name is the `domain` parameter's value.
          nullable: true
          example: mailhostexample.com
      description: A list of domains and the replaced manual MX redirect entries.
      example: "{\"example.com\":\"mailhostexample.com\"}"
    inline_response_200_201_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_201_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_202_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            The disk space that the email account uses.
            * `active` - The database is available and up-to-date.
            * `importing` - The database is available, but a data import is currently in progress.
            * `upcp` - The database is unavailable because cPanel & WHM is updating.

            **Note:**

            If the `eximstats` database is running a cPanel & WHM update, but the database is available, this function will return `active`, **not** `upcp`.
          example: active
          enum:
          - active
          - importing
          - upcp
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_203_result_data:
      type: object
      properties:
        account:
          type: string
          description: The filter's email address. The function only returns this
            value if it created a user-level filter.
          format: email
          example: user@example.com
    inline_response_200_203_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_203_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_206_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the function succeeded.
            * `1` â The function succeeded.
            * `0` â The function failed.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_207_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: terminate_mailbox_sessions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_208_result:
      type: object
      properties:
        data:
          example:
            address: username@example.com
            destinations:
            - address: username@example.com
              aliasfile: /etc/valiases/example.com
              destinations:
              - mailbox: username@example.com
                type: local_delivery
              type: routed
            type: routed
          allOf:
          - $ref: "#/components/schemas/trace_deliveryResponseBase"
          - $ref: "#/components/schemas/trace_deliveryType"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API. Warnings
             describe non-critical failures or other problematic conditions
             noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_209_result_data:
      type: object
      properties:
        trace:
          type: string
          description: |-
            A series of messages that describe the trace results.

            **Note:**

            This output may contain HTML.
          example: "Warning: no message headers read\\nReturn-path copied from sender\\\
            nSender = user@example.com\\nRecipient = user@example.com\\nTesting Exim\
            \ filter file &quot;/etc/vfilters/example.com&quot;\\n\\nFiltering did\
            \ not set up a significant delivery.\\n<b>Normal delivery will occur.\\\
            n</b>"
    inline_response_200_209_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_209_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_210_result_data:
      type: object
      properties:
        additionalProperties:
          type: string
          description: |-
            The domain for which the function removed the manual MX redirect entry.

            * null â The domain did not have a manual MX redirect entry.

            **Note:**

            This return's name is the `domain` parameter's value.
          nullable: true
          example: mailhostexample.com
      description: A list of domains and the removed manual MX redirect entries.
      example: "{\"example.com\":\"mailhostexample.com\"}"
    inline_response_200_210_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_210_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_211_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the function succeeded.
            * `1` â The function succeeded.
            * `0` â The function failed.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_212_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_214_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the password is valid for the email account.
            * `1` - The password is valid.
            * `0` - The password is **not** valid.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_215_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the DMARC record was applied.
          format: domain
          example: example.com
        msg:
          type: string
          description: The domain's DMARC record status message.
          example: "[ADD:TXT@_dmarc.example.com:v=DMARC1; p=reject;]"
        status:
          type: integer
          description: |-
            Whether the system applied a DMARC record to the domain.
            * `1` - Applied.
            * `0` - The system did **not** apply a DMARC record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_215_result:
      type: object
      properties:
        data:
          type: array
          description: An array that contains information about the DMARC records
            applied to domains.
          items:
            $ref: "#/components/schemas/inline_response_200_215_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_216_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system removed the DKIM record.
          format: domain
          example: example.com
        msg:
          type: string
          description: Information about the removed DKIM record.
          example: "[REMOVE:TXT@default._domainkey:v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiLMNOpQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO/xJtrPZKskZF8/sU0zWGTqKUOErlyJfoJzMDUv3/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB\\\
            ;]"
        status:
          type: integer
          description: |-
            Whether the system removed the domain's DKIM record on the DNS server.
            * `1` - The system removed the domain's DKIM record.
            * `0` - The system did **not** remove the domain's DKIM record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_216_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contain information about the removal
            of a domain's DKIM record on the DNS server.
          items:
            $ref: "#/components/schemas/inline_response_200_216_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_217_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system enabled the DKIM record.
          format: domain
          example: example.com
        msg:
          type: string
          description: The domain's DKIM record status message.
          example: "[no changes needed]"
        status:
          type: integer
          description: |-
            Whether the system enabled the domain's DKIM record on the DNS server.
            * `1` - Enabled.
            * `0` - The system did **not** enable the domain's DKIM record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_217_result:
      type: object
      properties:
        data:
          type: array
          description: An array that contains information about the enabled state
            of a domain's DKIM records on the DNS server.
          items:
            $ref: "#/components/schemas/inline_response_200_217_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_218_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system confirmed that a valid DKIM
            key exists.
          format: domain
          example: example.com
        msg:
          type: string
          description: The domain's DKIM key status message.
          example: created new key
        status:
          type: integer
          description: |-
            Whether the system verified that the domain's DKIM key exists.
            * `1` - The system verified the existence of the domain's DKIM key.
            * `0` - The system did **not** verify the existence of the domain's DKIM key.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_218_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contains information about the domain's
            DKIM key validity.
          items:
            $ref: "#/components/schemas/inline_response_200_218_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_219_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The queried domain.
          format: domain
          example: example.com
        pem:
          type: string
          description: "The domain's DKIM private key, in PEM format."
          format: pem-private-key
          example: |
            -----BEGIN RSA PRIVATE KEY-----
            MIICLDCCAdKgAwIBAgIBADAKBggqhkjOPQQDAjB9MQswCQYDVQQGEwJCRTEPMA0G
            A1UEChMGR251VExTMSUwIwYDVQQLExxHbnVUTFMgY2VydGlmaWNhdGUgYXV0aG9y
            aXR5MQ8wDQYDVQQIEwZMZXV2ZW4xJTAjBgNVBAMTHEdudVRMUyBjZXJ0aWZpY2F0
            ZSBhdXRob3JpdHkwHhcNMTEwNTIzMjAzODIxWhcNMTIxMjIyMDc0MTUxWjB9MQsw
            CQYDVQQGEwJCRTEPMA0GA1UEChMGR251VExTMSUwIwYDVQQLExxHbnVUTFMgY2Vy
            dGlmaWNhdGUgYXV0aG9yaXR5MQ8wDQYDVQQIEwZMZXV2ZW4xJTAjBgNVBAMTHEdu
            dVRMUyBjZXJ0aWZpY2F0ZSBhdXRob3JpdHkwWTATBgcqhkjOPQIBBggqhkjOPQMB
            BwNCAARS2I0jiuNn14Y2sSALCX3IybqiIJUvxUpj+oNfzngvj/Niyv2394BWnW4X
            uQ4RTEiywK87WRcWMGgJB5kX/t2no0MwQTAPBgNVHRMBAf8EBTADAQH/MA8GA1Ud
            DwEB/wQFAwMHBgAwHQYDVR0OBBYEFPC0gf6YEr+1KLlkQAPLzB9mTigDMAoGCCqG
            SM49BAMCA0gAMEUCIDGuwD1KPyG+hRf88MeyMQcqOFZD0TbVleF+UsAGQ4enAiEA
            l4wOuDwKQa+upc8GftXE2C//4mKANBC6It01gUaTIpo==
            -----END RSA PRIVATE KEY-----
    inline_response_200_219_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contains information about the domain's
            DKIM private key.
          items:
            $ref: "#/components/schemas/inline_response_200_219_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_220_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The DKIM private key's associated domain.
          format: domain
          example: example.com
        msg:
          type: string
          description: The DKIM private key's installation status message.
          example: "[ADD:TXT@default._domainkey:v=DKIM1; k=rsa; p=AAAAB3NzaC1yc2EAAAABIwAAAQEA5kSivOqhs0U9ZMN20nxFe27QZ3t0lT2zbH7OSXylKd1rjAjYXGnSXC9j2uaZlemHlptBKVziMJC86ha7Hcj6dVOVrDQ6vF4q34bOCjtKLphQ0IjBzVIvqILH9eLJdRaOrS34CmgmPaisrCk5wKVlakygvUfcj3HzaTKS6THyZDGx5shdTpa9lby8tpOD3JceV7ay4w8r0DipoKPC0OLpvS4EABEeMo9sx8zQEaKv03XygjNCCYtFvxlQQIRGlVoL7mPaHSaL3anI05RpNbm/PS+9BhZg+BqNjU4ofHBbfkXk5MiN6M7ieR4Sk5BquccboGF13U5slNgmCEekdt0amw;]"
        status:
          type: integer
          description: |-
            Whether the system installed the DKIM private key to the local server.
            * `1` - The system installed the DKIM private key.
            * `0` - The system **cannot** install the DKIM private key.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_220_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contains information about the DKIM
            private key installation to the local server.
          items:
            $ref: "#/components/schemas/inline_response_200_220_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_221_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The SPF record's associated domain on the DNS server.
          format: domain
          example: example.com
        msg:
          type: string
          description: The SPF record's installation status to the DNS server.
          example: "[ADD:TXT@example.com.:v=spf1 ip4:10.0.0.1 %2Ba %2Bmx %2Bip4:10.0.0.2\
            \ %2Bip4:10.0.0.3 -all]"
        status:
          type: integer
          description: |-
            Whether the system installed the SPF record to the DNS server.
            - `1` - The system installed the SPF record on the DNS server.
            - `0` - The system **cannot** install the SPF record on the DNS server.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_221_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contains information about the domain's
            SPF record installation to the DNS server.
          items:
            $ref: "#/components/schemas/inline_response_200_221_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors`  field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_222_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the DMARC record was removed.
          format: domain
          example: example.com
        msg:
          type: string
          description: Information about the removed DMARC record.
          example: "[REMOVE:TXT@_dmarc.example.com:v=DMARC1; p=reject;]"
        status:
          type: integer
          description: |-
            Whether the system removed the domain's DMARC record.
            * `1` - The system removed the domain's DMARC record.
            * `0` - The system did **not** remove the domain's DMARC record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_222_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contain information about the removed
            DMARC records.
          items:
            $ref: "#/components/schemas/inline_response_200_222_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_223_result_records:
      type: object
      properties:
        current:
          type: string
          description: |-
            The domain's DKIM TXT record data contents.

            **Important:**

             This function may fail to preserve whitespace in DKIM records.
          example: v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO\/xJtrPZKskZF8\/sU0zWGTqKUOErlyJfoJzMDUv3\/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248\/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB
        reason:
          type: string
          description: |-
            The reason why the DKIM TXT record is not correct, if one exists.

            **Note:**

            This function **only** returns this value when the `state` value is `PERMFAIL`.
          example: "example.com: The DKIM version must be \"DKIM1\"."
        state:
          type: string
          description: |-
            The DKIM TXT record's status:
            * `VALID` - The DKIM TXT record matches the local server's public key.
            * `MISMATCH` - The DKIM TXT record does not match the local server's public key.
            * `PERMFAIL` - Multiple DKIM TXT records for the domain exist or a misconfigured DKIM TXT record exists.
          example: VALID
          enum:
          - VALID
          - MISMATCH
          - PERMFAIL
    inline_response_200_223_result_data:
      type: object
      properties:
        domain:
          type: string
          description: |-
            The domain that the function used to check
            the DKIM record. This will be the value of
            the domain parameter with a `default._domainkey` prefix.
          format: domain
          example: default._domainkey.example.com
        error:
          type: string
          description: |-
            A message that details the reason why the DNS lookup failed.

            **Note:**

            The function only returns this value when the `state` returned
            is the `ERROR` value.
          example: |-
            (XID 4krw35) DNS returned SERVFAIL (code 2)
            in response to the systems query for default._domainkey.example2.coms
            TXT records.
        expected:
          type: string
          description: The DKIM record's contents.
          example: v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO\/xJtrPZKskZF8\/sU0zWGTqKUOErlyJfoJzMDUv3\/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248\/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB
        records:
          type: array
          description: |-
            The domain's DNS DKIM TXT records.

            **Important:**

            This function may fail to preserve whitespace in DKIM records.
          items:
            $ref: "#/components/schemas/inline_response_200_223_result_records"
        state:
          type: string
          description: |-
            The domain's DKIM record status.
            Possible values:

            * `VALID` The DKIM record is valid.
            * `MALFORMED` A single DKIM record exists, but the record does not match the expected DKIM specifications.
            * `MISMATCH` A DKIM record exists, but it does not match the expected public key.
            * `MISSING` No DKIM record exists for the domain.
            * `MULTIPLE` Multiple DKIM records exist.
            * `NOPUB` No key exists on the local server for the domain.
            * `ERROR` The record's DNS lookup failed. The function returns the reason in the error return.
          example: VALID
          enum:
          - VALID
          - MALFORMED
          - MISMATCH
          - MISSING
          - MULTIPLE
          - NOPUB
          - ERROR
        validity_cache_update:
          type: string
          description: |-
            The result of the DKIM record's validity cache update operation:
            * `set` The domain is invalid but passed its validity check. The validity check now passes the domain as valid.
            * `unset` The domain is invalid and did not pass its validity check. The validity check does not pass the domain as valid.
            * `valid` The domain is valid and passed its validity check. There are no changes required.
            * `invalid` The domain is invalid and failed its validity check. There are no changes required.
            * `none` The domain is invalid, but the system will not take further action.
            * `error` The domain's validity check operation failed.
          example: valid
          enum:
          - set
          - unset
          - valid
          - invalid
          - none
          - error
    inline_response_200_223_result:
      type: object
      properties:
        data:
          type: array
          description: "An array that contains information about the\ndomain's DKIM\
            \ records. "
          items:
            $ref: "#/components/schemas/inline_response_200_223_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_224_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The target domain of the DMARC policy.
          format: domain
          example: example.com
        error:
          type: string
          description: |-
            A message that details either why the DNS lookup failed, or if there is a SPF/DKIM failure.

            **Note:**

            This will be set to `MALFORMED` if there is a syntax issue with this domain's SPF and DKIM records.
          example: |-
            (XID 4krw35) DNS returned SERVFAIL (code 2)
            in response to the system's query for _dmarc.example.com
            TXT records.
        record:
          type: string
          description: The domain's DMARC TXT record.
          example: v=DMARC1; p=none;
        state:
          type: string
          description: |-
            The domain's DMARC record status.
            Possible values:

            * `VALID` - A DMARC policy is set for the domain, along with valid SPF and DKIM records for the domain and IP address.
            * `MALFORMED` - A DMARC record is set, but it did not pass a syntax check.
            * `DKIM_SPF_ERROR` - A DMARC record exists; however, both the DKIM and SPF records for this domain did not pass validation.
            * `DKIM_ERROR` - A DMARC record exists; however, the DKIM record for this domain did not pass validation.
            * `SPF_ERROR` - A DMARC record exists; however, the SPF record for this domain did not pass validation.
            * `MISSING` - No DMARC record exists for the domain at the DMARC subdomain location.
            * `DNS_ERROR` - A DNS error prevented validation of the DMARC record.
          example: VALID
          enum:
          - VALID
          - MALFORMED
          - DKIM_SPF_ERROR
          - DKIM_ERROR
          - SPF_ERROR
          - MISSING
          - DNS_ERROR
        subdomain:
          type: string
          description: |-
            The domain that the function used to check
            the DMARC record. This will be the value of
            the `domain` parameter with a `_dmarc` prefix.
          format: domain
          example: _dmarc.example.com
        suggested:
          type: string
          description: The recommended DMARC policy.
          example: v=DMARC1; p=none;
    inline_response_200_224_result:
      type: object
      properties:
        data:
          type: array
          description: "An array that contains information about the\ndomain's DMARC\
            \ records. "
          items:
            $ref: "#/components/schemas/inline_response_200_224_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_225_result_ptr_records:
      type: object
      properties:
        domain:
          type: string
          description: |-
            The fully-qualified domain name (FQDN)
            that a PTR record points to.
          format: domain
          example: example.com
        forward_records:
          type: array
          description: |-
            A list of IP addresses that the domain
            resolves to for A (IPv4) and AAAA (IPv6) records.
          items:
            type: string
            example: 10.0.0.1
        state:
          type: string
          description: |-
            The state of the domain's PTR record.
            * `VALID` - The PTR record is valid.
            * `MISSING_FWD` - The PTR points to a domain without an A or AAAA record.
            * `FWD_MISMATCH` - The PTR record points to a domain without an A or AAAA record that points back to the IP address.
          example: VALID
          enum:
          - VALID
          - MISSING_FWD
          - FWD_MISMATCH
    inline_response_200_225_result_data:
      type: object
      properties:
        arpa_domain:
          type: string
          description: |-
            The IP address used to perform a reverse DNS (rDNS) lookup.
            For more information about rDNS, read our
            [How to Configure Reverse DNS for BIND in WHM](https://go.cpanel.net/HowtoConfigureReverseDNSforBINDinWHM)
            documentation.
            A valid reversed IP address appended with one of the following:
            * in-addr.arpa - An IPv4 address.
            * ip6.arpa - An IPv6 address.

            For information about .arpa domains, read Wikipedia's
            [Reverse DNS lookup](https://en.wikipedia.org/wiki/Reverse_DNS_lookup)
            article.

            **Note:**

            The function does not return this value for a domain with an invalid IP address.
          example: 1.0.0.10.in-addr.arpa
        domain:
          type: string
          description: The queried domain.
          format: domain
          example: example.com
        error:
          type: string
          description: |-
            A mmessage that details the reason why the domain's IP address validation failed.

            **Note:**

            The function only returns this value when the `state` returned is
            the `ERROR` value.
          example: 1.1.1.1.1 is not a valid IP address.
        helo:
          type: string
          description: |-
            The hostname that the domain uses to identify
            itself to remote SMTP servers. A valid hostname.
          format: domain
          example: example.com
        ip_address:
          type: string
          description: |-
            The IP address.

            **Note:**

            The function does **not** return this value for a domain with an invalid IP address.
          example: 10.0.0.1
        ip_version:
          type: integer
          description: |-
            The IP version number.
            * 4
            * 6

            **Note:**

            The function does **not** return this value for a domain with an invalid IP address.
          example: 4
          enum:
          - 4
          - 6
        nameservers:
          type: array
          description: The authoritative nameservers for the domain's PTR record.
          items:
            type: string
            format: domain
            example: ns1.example.com
        ptr_records:
          type: array
          description: |-
            The domain's PTR records.

            **Note:**

            The function does **not** return this for a domain with an invalid IP address.
          items:
            $ref: "#/components/schemas/inline_response_200_225_result_ptr_records"
        state:
          type: string
          description: |-
            Whether the PTR records are valid for the domain.
            * `ERROR` - The domain's IP address is invalid. The function returns the reason in the error return.
            * `IP_IS_PRIVATE` - The IP address exists within a range of private IP addresses.
            * `VALID` - The PTR record is valid.
            * `MISSING_PTR` - No PTR records exist for the IP address.
            * `PTR_MISMATCH` - One or more PTR records point to a domain that does not point back to the correct IP address.

            **Note:**

            * DNS does not define PTR records for private IP addresses.
            * The function only returns a VALID response if all of an IP address's PTR records are valid.
          example: VALID
          enum:
          - ERROR
          - IP_IS_PRIVATE
          - VALID
          - MISSING_PTR
          - PTR_MISMATCH
    inline_response_200_225_result:
      type: object
      properties:
        data:
          type: array
          description: An array that contains information about the account's PTR
            records.
          items:
            $ref: "#/components/schemas/inline_response_200_225_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_226_result_records:
      type: object
      properties:
        current:
          type: string
          description: The SPF record's contents.
          example: v=spf1 +a +mx ip6:0:0:0:0:0:ffff:c0a8:101 ~all
        reason:
          type: string
          description: |-
            The reason why the SPF record is **not** correct, if one exists.

            **Note:**

            If no errors exist, the function does **not** return this value.
          example: |-
            'example.com: Sender
            is not authorized by default to use ''example.com''
            in ''helo'' identity, however domain is not
            currently prepared for false failures (mechanism
            ''~all'' matched)'
        state:
          type: string
          description: |-
            The SPF record's status:
            * `PASS` - The `SPF` record confirms that the `ip_address` value is a valid sender.
            * `NEUTRAL` - The current `SPF` record configuration does not determine the `ip_address` value's validity.
            * `FAIL` - The `SPF` record states that the `ip_address` value is **not** a valid sender.
            * `SOFTFAIL` - The `SPF` record states that the `ip_address` value is **not** a valid sender, but does not `FAIL` state it.
            * `TEMPERROR` - The `SPF` record check resulted in a failure. For example, a network failure.
            * `PERMERROR` - The domain's `SPF` records are **incorrect** and require manual correction.

            **Note:**

            These values correspond with [RFC7208 section 2.6](https://tools.ietf.org/html/rfc7208#section-2.6).
          example: PASS
          enum:
          - PASS
          - NEUTRAL
          - FAIL
          - SOFTFAIL
          - TEMPERROR
          - PERMERROR
    inline_response_200_226_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The queried domain.
          format: domain
          example: example.com
        error:
          type: string
          description: |-
            A message that details the reason why the DNS lookup failed.

            **Note:**

             The function **only** returns this value when the `state` return is the `ERROR` value.
          example: |-
            (XID rm8h9f) DNS returned SERVFAIL (code 2)
            in response to the systems query for example2.coms
            TXT records.
        expected:
          type: string
          description: The SPF record for the domain in the DNS.
          example: ip6:0:0:0:0:0:ffff:c0a8:101
        ip_address:
          type: string
          description: The domain's IP address.
          example: 0:0:0:0:0:ffff:c0a8:101
        ip_version:
          type: integer
          description: |-
            The IP address version.
            * `4`
            * `6`
          example: 6
          enum:
          - 4
          - 6
        records:
          type: array
          description: The SPF records of the domain's DNS.
          items:
            $ref: "#/components/schemas/inline_response_200_226_result_records"
        state:
          type: string
          description: |-
            The SPF record's status:
            * `VALID` - A single `SPF TXT` record exists in the domain's DNS with the correct `ip_address` value or redirect mechanism.
            * `MISMATCHED` - An `SPF TXT` record exists for the domain that does **not** match the `ip_address` value.
            * `MULTIPLE` - Multiple `SPF TXT` records exist in the domain's DNS.
            * `MISSING` - No `SPF TXT` record exists for the domain's DNS.
            * `ERROR` - The record's DNS lookup failed. The function returns the reason in the error return.
          example: VALID
          enum:
          - VALID
          - MISMATCHED
          - MULTIPLE
          - MISSING
          - ERROR
    inline_response_200_226_result:
      type: object
      properties:
        data:
          type: array
          description: A list of information about a domain's SPF records.
          items:
            $ref: "#/components/schemas/inline_response_200_226_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_227_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_228_result_data:
      type: object
      properties:
        color:
          type: string
          description: The background color of the button on the cPanel interface.
          format: RGB
          example: 00aef0
        display_name:
          type: string
          description: The identity provider's friendly name. cPanel & WHM interfaces
            will display this value.
          example: cPanel ID
        documentation_url:
          type: string
          description: The public URL of the identity provider's implementation documentation.
          format: url
          example: https://go.cpanel.net/OpenIDConnect
        icon:
          type: string
          description: The icon file to display on the button in the cPanel login
            interface.
          format: base64 image
          example: iVBORw0KGgoAAAANSUhEUgAAACMAAAAhCAYAAABTERJSAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoTWFjaW50b3NoKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDoxMTNFRUVGMzIyODUxMUU1OUM1RERGODcwRjIwNTQ4MCIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDoxMTNFRUVGNDIyODUxMUU1OUM1RERGODcwRjIwNTQ4MCI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjExM0VFRUYxMjI4NTExRTU5QzVEREY4NzBGMjA1NDgwIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjExM0VFRUYyMjI4NTExRTU5QzVEREY4NzBGMjA1NDgwIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+oa0v2AAAA3VJREFUeNrsWM1uFEcQruqent3Z9Y43DmuD2YT1LoIICSIgEULKC+SaF8gr5JAnyD3XKCcChxxyyhNYiFMU5ZRTzE8UuGCQY8DGeGd3Zqrydc/ajiWjBHCEpWxLPf1T01VfV/d09TesqnRUUuQfN+5tUzMylAsRM9EOPlTJV0V9qWQg3BgLXek4+mUtpxKy+bqhAvIcLxVSlT4FHVAQITegO7Z8vGFpqeW4P+N40Iy434rNR23Hcd3ymV0wL00TNIJH6UsY2syVsrICuTlWGFJyAJlYrtVj7jUi9gZhzPQSS4tJRO+1nF1C/aThoHFfgp7n+zzjZ+GNjUWDB7yHRPYAQQnV8MCMOu04ughvPEbzztV599UHbXvOGe7OwHhsKH3jZdrKiZwhgrtcYs0ilJ6A4ffhytMpZtmAa/3s4OYuQFhg/m75IX1xtm2/XKjbw90zn3Zr19+p81W4dr5mqP0vxslkOx3+Bu6n9jOsROttf02GjlCagpmCmYI5VDD8GuP0tYYdHP72HXq3N4prTcfHEA6ev8ir2OSjLwK0jkvRoRAjNmlkFG1aGAktPxrK6NZq/o3lwh1POPtkIQ4ncqm7Y2lcqua4o4zKKr4h66ggLrSSo2zinfUrnXgPzM9r+c0P51wySE22NhTBNUEQnVGqbuZSrm6LXJhzMkit/JmVdfT/vl1QcXej+H4r91cLyrtNW/ZmrG4AydORytMRyrHXpfJgq5TL70Zy+Vgs97JCnwS5yhOgRD3fAUP+coW8qa+Q4Kxr3/72Il0dFqEtPsuubLctupdflqSyHXBEkzvFq26AfYGS/7b4hg/YDNNPewpmCuZ/DwYn5I/rI7mLY/7ZW2eUy6ujz/0ZBZoSz8a8CB50ohkRqIo57QkZiNhS6mw/qaiKwYHmySXzfwGmorZKw1LGOjb3s7K8r8o/CRXhIPXZU9Sa5Q441aVByz5CoMtXnpVfyyydQ4DtQt4DzXkjhsE+JvzwRxZ4smeToKehHpgtVzxbAuPUwDwR2Oj8XES/rueB5nbqDJCeBJo6xvZmQG8bEQ1mY3Mqifgk+jzb9H3dgzzp6S3603/m2hOv+OwmRDnFTQHLFdaphWAL8h68mpWSbRW08lBoxf8I8IQfohCrEu9VLD1Yqmel/TQOSz5oxfzxrDN2h5TyUfolcqQ+7b8EGACd0Ob6pUnq9QAAAABJRU5ErkJggg==
        icon_type:
          type: string
          description: The icon file's MIME type.
          format: MIME
          example: image/svg+xml
        label:
          type: string
          description: The text label of the login icon in the cPanel login interface.
          example: Log in with a cPanel ID Account
        link:
          type: string
          description: link to the identity provider's configuration for the appropriate
            service on the system.
          format: url
          example: https://hostname.example.com:2083/openid_connect/cpanelid
        provider_name:
          type: string
          description: The identity provider's system name.
          example: cpanelid
        textcolor:
          type: string
          description: The color of the text label in the cPanel login interface.
          format: RGB
          example: FFFFFF
    inline_response_200_228_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_228_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_229_result_data:
      type: object
      properties:
        link_time:
          type: integer
          description: When the user linked their account to the identity provider.
          format: unix_timestamp
          example: 1443124604
        preferred_username:
          type: string
          description: The preferred username of the account on the identity provider.
          example: username@gmail.com
        provider_id:
          type: string
          description: The system's unique key for the identity provider.
          example: google
        provider_protocol:
          type: string
          description: The identity provider's protocol.
          example: openid_connect
        subject_unique_identifier:
          type: integer
          description: The unique identifier for the user at the identity provider.
          example: 123456789012346
    inline_response_200_229_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_229_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 â Success
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_230_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the cPanel user enabled any external modules.

            * `1` - Enabled.
            * `0` - **Not** enabled.

            **Note:**

            For more information, read our [Password and Security](https://go.cpanel.net/cpaneldocsPasswordoutputampSecurity) and [External Authentication](https://go.cpanel.net/externalauth) FAQ documentation.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_231_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_232_result_data:
      type: object
      properties:
        id:
          type: string
          description: The feature's system ID.
          example: wordpress_manager
        is_cpaddon:
          type: integer
          description: |-
            Whether the feature is a [cPAddon](https://go.cpanel.net/cPanelGlossary#addons-cpaddons).

            * `1` â cPAddon.
            * `0` â **Not** a cPAddon.
          example: 0
          enum:
          - 1
          - 0
        is_plugin:
          type: integer
          description: |-
            Whether the feature is a [plugin](https://go.cpanel.net/cpanelplugin).

            * `1` â Plugin.
            * `0` â **Not** a plugin.
          example: 1
          enum:
          - 1
          - 0
        name:
          type: string
          description: The feature's name.
          example: Wordpress Manager
    inline_response_200_232_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing feature information.
          items:
            $ref: "#/components/schemas/inline_response_200_232_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_233_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: |-
            A message about the feature's status.

            **Note:**

            The function only returns a message when the feature exists but
            it is **not** enabled.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            Whether the feature exists on the system.

            * `1` â The feature exists on the system and it is enabled.
            * `0` â The feature exists on the system, but the user does **not** have it.
            * `null` â The feature is **not** installed on the system.
          nullable: true
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_234_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: integer
            description: |-
              Whether the feature is installed.
              * `1` - Installed.
              * `0` - **Not** installed.
            example: 0
            enum:
            - 0
            - 1
          description: |-
            Features available to the account. The key is a feature name and the value
            is whether the feature is installed.

            **Note:**

            This function returns features that third-party software or plugins provide.
          example:
            bbs: 0
            blockers: 1
            boxtrapper: 1
            changemx: 1
            chat: 0
            defaultaddress: 1
            email_disk_usage: 1
            emailarchive: 1
            emailauth: 1
            emaildomainfwd: 1
            emailtrace: 1
            popaccts: 1
            spamassassin: 1
            spambox: 1
            traceaddy: 1
            updatecontact: 1
            webmail: 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_235_result_data:
      type: object
      properties:
        file:
          type: string
          description: A file or directory that matches the specified path.
          example: public_ftp
    inline_response_200_235_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing the files and directories that
            match the specified path.
          items:
            $ref: "#/components/schemas/inline_response_200_235_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_236_result:
      type: object
      properties:
        data:
          type: object
          properties: {}
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_237_result_data:
      type: object
      properties:
        content:
          type: string
          description: |-
            The file's contents. A string value.

            **Note:**

            Behavior is **undefined** if the calling context
            requires an encoding that conflicts with
            the file contents. For example, if the file
            contents are ISO-8859-1 but the context requires
            UTF-8 (as is the case with JSON), the system may
            apply an extra layer of UTF-8 encoding in order
            to satisfy the request.
          format: binary
          example: !!binary |-
            YGhpYA==
        dir:
          type: string
          description: The absolute path to the directory that contains the selected
            file.
          format: path
          example: /home/user/public_html
        filename:
          type: string
          description: The file's name.
          example: example.html
        from_char:
          type: string
          description: "The file's previous character encoding. If the requestâs `from_charset`\
            \ was `_DETECT_`, this will contain the detected encoding. Otherwise,\
            \ it will contain the requestâs `from_charset` value."
          example: UTF-8
        from_charset: {}
        path:
          type: string
          description: The absolute path to the file.
          format: path
          example: /home/user/public_html/example.html
        to_char:
          type: string
          description: "The file's new character encoding. If the requestâs `from_charset`\
            \ was `_LOCALE_`, this will contain the localeâs encoding. Otherwise,\
            \ it will contain the requestâs `to_charset` value."
          example: UTF-8
        to_charset: {}
    inline_response_200_237_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_237_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_238_result_data:
      type: object
      properties:
        absdir:
          type: string
          description: The path to the user's home directory.
          format: path
          example: /home/user
        ctime:
          type: integer
          description: "The file's creation time, Unix time format."
          format: unix_timestamp
          example: 1400573272
        exists:
          type: integer
          description: |-
            Whether the file exists in the directory.
            * `1` - Exists.
            * `0` - Does **not** exist.
          example: 1
          enum:
          - 0
          - 1
        file:
          type: string
          description: The filename.
          example: cgi-bin
        fullpath:
          type: string
          description: The file's full filepath.
          format: path
          example: /home/user/public_html/cgi-bin
        gid:
          minimum: 1
          type: integer
          description: The file owner's system group ID.
          example: 503
        hash:
          type: string
          description: The full filepath's hash.
          example: L2hvbWUvY29saW4vcHVibGljX2h0bWw
        humansize:
          type: string
          description: |-
            The file's formatted size, followed by one of the following symbols:
            * `KB` - kilobytes
            * `MB` - megabytes
            * `GB` - gigabytes
          example: 5 KB
        isleaf:
          type: integer
          description: |-
            Whether the directory contains subdirectories.
            * `1` - Contains subdirectories.
            * `0` - Does **not** contain subdirectories.
          example: 1
          enum:
          - 0
          - 1
        mimename:
          type: string
          description: The file's MIME name.
          example: publichtml
        mimetype:
          type: string
          description: The file's MIME type.
          format: MIME
          example: text/plain
        mode:
          type: string
          description: "The file's textual permissions in [Unix format](https://en.wikipedia.org/wiki/File-system_permissions#Notation_of_traditional_Unix_permissions)."
          example: "16872"
        mtime:
          type: integer
          description: "The file's last modification time, in Unix time format."
          format: unix_timestamp
          example: 1400573272
        nicemode:
          type: integer
          description: "The file's numerical permissions in [octal notation](https://en.wikipedia.org/wiki/File-system_permissions#Notation_of_traditional_Unix_permissions)."
          example: 755
        path:
          type: string
          description: The file's path.
          format: path
          example: /home/user/public.html
        phash:
          type: string
          description: The parent filepath's file hash.
          example: L2hvbWUvY29saW4vcHVibGljX2h0bWw
        rawmimename:
          type: string
          description: The file's raw MIME name.
          format: MIME
          example: text/plain
        rawmimetype:
          type: string
          description: The file's raw MIME type.
          format: MIME
          example: text/plain
        read:
          type: integer
          description: |-
            Whether the file is readable. The function only returns this value if you set the `include_permissions` value to 1.
            * `1` - Readable.
            * `0` - **Not** readable.
          example: 1
          enum:
          - 0
          - 1
        size:
          minimum: 1
          type: integer
          description: "The file's size, in bytes."
          example: 4096
        type:
          type: string
          description: |-
            The item's type.
            * `file` - File.
            * `dir` - Directory.
            * `char` - Character special device.
            * `block` - Block special device.
            * `fifo` - Named pipe.
            * `link` - Symbolic link.
            * `socket` - Unix domain socket.
          example: file
          enum:
          - file
          - dir
          - char
          - block
          - fifo
          - link
          - socket
        uid:
          minimum: 1
          type: integer
          description: The file owner's system user ID.
          example: 502
        write:
          type: integer
          description: |-
            Whether the file is writable. The function only returns this value if you set the `include_permissions` value to 1 .
            * `1` - Writable.
            * `0` - Not writable.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_238_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_238_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_239_result_data_dirs:
      type: object
      properties:
        absdir:
          type: string
          description: The file path to the user's home directory.
          format: path
          example: /home/user
        ctime:
          type: integer
          description: The directory's creation date.
          format: unix_timestamp
          example: 1400573272
        exists:
          type: integer
          description: |-
            Whether the directory exists in the directory.

            * `1` â Exists.
            * `0` â Does **not** exist.
          example: 1
          enum:
          - 0
          - 1
        file:
          type: string
          description: The directory name.
          example: cgi-bin
        fullpath:
          type: string
          description: The directory's full directory path.
          format: path
          example: /home/user/public_html/cgi-bin
        gid:
          minimum: 1
          type: integer
          description: The directory owner's system group ID.
          example: 503
        hash:
          type: string
          description: The full directory path's hash.
          example: L2hvbWUvY29saW4vcHVibGljX2h0bWw
        humansize:
          type: string
          description: |-
            The formatted size of the directory. The function returns the size with
            one of the following symbols:

            * `KB` â Kilobytes.
            * `MB` â Megabytes.
            * `GB` â Gigabytes.
          example: 5 KB
        isleaf:
          type: integer
          description: |-
            Whether the directory contains subdirectories.

            * `1` â Contains subdirectories.
            * `0` â Does **not** contain subdirectories.
          example: 1
          enum:
          - 0
          - 1
        isparent:
          type: integer
          description: |-
            Whether the directory is a parent record.

            * `1` â A parent record.
            * `0` â **Not** a parent record.
          example: 1
          enum:
          - 0
          - 1
        mimename:
          type: string
          description: The MIME type's name.
          example: text-plain
        mimetype:
          type: string
          description: The directory's MIME's type.
          example: text/plain
        mode:
          type: string
          description: "The directory's textual permissions in [Unix format](http://en.wikipedia.org/wiki/File_system_permissions#Notation_of_traditional_Unix_permissions)."
          format: unix-file-permission
          example: "16877"
        mtime:
          type: integer
          description: The directory's last modification time.
          format: unix_timestamp
          example: 1400573272
        nicemode:
          type: integer
          description: The directory's numerical permissions.
          format: unix-file-permission
          example: 755
        path:
          type: string
          description: The path to the directory.
          format: path
          example: /home/user/public.html
        phash:
          type: string
          description: The parent directory path's hash.
          example: L2hvbWUvY29saW4vcHVibGljX2h0bWw
        rawmimename:
          type: string
          description: The directory's raw MIME type's name.
          example: text-plain
        rawmimetype:
          type: string
          description: The directory's raw MIME type.
          example: text/plain
        read:
          type: integer
          description: |-
            Whether the directory is readable.

            * `1` â Readable.
            * `0` â **Not** readable.

            **Note:**

            The function only returns this value if the `include_permissions` value is `1`.
          example: 1
          enum:
          - 0
          - 1
        size:
          minimum: 1
          type: integer
          description: "The directory's size, in bytes."
          example: 4096
        type:
          type: string
          description: |-
            The item's type.

            * `file` â A file.
            * `dir` â A directory.
            * `char` â A character special device.
            * `block` â A block special device.
            * `fifo` - A named pipe (FIFO).
            * `link` â A symbolic link.
            * `socket` â A Unix domain socket.
          example: file
          enum:
          - file
          - dir
          - char
          - block
          - fifo
          - link
          - socket
        uid:
          minimum: 1
          type: integer
          description: The directory owner's system user ID.
          example: 502
        write:
          type: integer
          description: |-
            Whether the directory is writable.

            * `1` â Writable.
            * `0` â **Not** writable.

            **Note:**

            The function only returns this value if the `include_permissions` value is `1`.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_239_result_data_files:
      type: object
      properties:
        absdir:
          type: string
          description: The file path to the user's home directory.
          format: path
          example: /home/user
        ctime:
          type: integer
          description: The file's creation time.
          format: unix_timestamp
          example: 1400573272
        exists:
          type: integer
          description: |-
            Whether the file exists in the directory.

            * `1` â Exists.
            * `0` â Does **not** exist.
          example: 1
          enum:
          - 0
          - 1
        file:
          type: string
          description: The filename.
          example: cgi-bin
        fullpath:
          type: string
          description: The file's full file path.
          format: path
          example: /home/user/public_html/cgi-bin
        gid:
          minimum: 1
          type: integer
          description: The file owner's system group ID.
          example: 503
        hash:
          type: string
          description: The full file path's hash.
          example: L2hvbWUvY29saW4vcHVibGljX2h0bWw
        humansize:
          type: string
          description: |-
            The formatted size of the file. The function returns the size with
            one of the following symbols:

            * `KB` â Kilobytes.
            * `MB` â Megabytes.
            * `GB` â Gigabytes.
          example: 5 KB
        isleaf:
          type: integer
          description: |-
            Whether the directory contains subdirectories.

            * `1` â Contains subdirectories.
            * `0` â Does **not** contain subdirectories.
          example: 1
          enum:
          - 0
          - 1
        isparent:
          type: integer
          description: |-
            Whether the file is a parent record.

            * `1` â A parent record.
            * `0` â **Not** a parent record.
          example: 1
          enum:
          - 0
          - 1
        mimename:
          type: string
          description: The file's MIME type name.
          example: text-plain
        mimetype:
          type: string
          description: The file's MIME type.
          example: text/plain
        mode:
          type: string
          description: The file's textual permissions.
          format: unix-file-permission
          example: "16877"
        mtime:
          type: integer
          description: The file's last modification time.
          format: unix_timestamp
          example: 1400573272
        nicemode:
          type: integer
          description: The file's numerical permissions.
          format: unix-file-permission
          example: 755
        path:
          type: string
          description: The absolute path to the file.
          format: path
          example: /home/user/public.html
        phash:
          type: string
          description: The parent filepath's file hash.
          example: L2hvbWUvY29saW4vcHVibGljX2h0bWw
        rawmimename:
          type: string
          description: The file's raw MIME type's name.
          example: text-plain
        rawmimetype:
          type: string
          description: The file's raw MIME type.
          example: text/plain
        read:
          type: integer
          description: |-
            Whether the file is readable.

            * `1` â Readable.
            * `0` â **Not** readable.

            **Note:**

            The function only returns this value if the `include_permissions` value is `1`.
          example: 1
          enum:
          - 0
          - 1
        size:
          minimum: 1
          type: integer
          description: "The file's size, in bytes."
          example: 4096
        type:
          type: string
          description: |-
            The item's type.

            * `file` â A file.
            * `dir` â A directory.
            * `char` â A character special device.
            * `block` â A block special device.
            * `fifo` - A named pipe (FIFO).
            * `link` â A symbolic link.
            * `socket` â A Unix domain socket.
          example: file
          enum:
          - file
          - dir
          - char
          - block
          - fifo
          - link
          - socket
        uid:
          minimum: 1
          type: integer
          description: The file owner's system user ID.
          example: 502
        write:
          type: integer
          description: |-
            Whether the file is writable.

            * `1` â Writable.
            * `0` â **Not** writable.

            **Note:**

            The function only returns this value if the `include_permissions` value is `1`.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_239_result_data:
      type: object
      properties:
        dirs:
          type: array
          description: An array of objects containing information about each directory.
          items:
            $ref: "#/components/schemas/inline_response_200_239_result_data_dirs"
        files:
          type: array
          description: An array of objects containing information about each file.
          items:
            $ref: "#/components/schemas/inline_response_200_239_result_data_files"
    inline_response_200_239_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_239_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success
            * `0` â Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_240_result_data:
      type: object
      properties:
        from_charset:
          type: string
          description: The file's character set.
          example: UTF-8
        path:
          type: string
          description: The path to the file.
          format: path
          example: /home/user/public_html/example.html
        to_charset:
          type: string
          description: The file's new character set.
          example: ASCII
    inline_response_200_240_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_240_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_241_result_data:
      type: object
      properties:
        charset:
          type: string
          description: The file's new character set.
          example: ASCII
        content:
          type: string
          description: The file's content.
          example: hi
    inline_response_200_241_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_241_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_242_result_data:
      properties:
        content:
          type: string
          description: ""
          format: binary
          example: !!binary ""
        filename:
          type: string
          description: The file's name.
          example: example.png
    inline_response_200_242_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_242_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_244_result_data:
      type: object
      properties:
        allows:
          type: integer
          description: |-
            Whether the cPanel account allows anonymous FTP connections.
            * `1` - Allowed.
            * `0` - **Not** allowed.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_244_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_244_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_245_result_data:
      type: object
      properties:
        allows:
          type: integer
          description: |-
            Whether the cPanel account allows inbound anonymous FTP transfers.
            * `1` - Allowed.
            * `0` - Not allowed.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_245_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_245_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_247_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_248_result_data_supports:
      type: object
      properties:
        login_without_domain:
          type: integer
          description: |-
            Whether the FTP daemon supports username authentication without the user's domain.

            * `1` â Supported.
            * `0` â **Not** supported.
          example: 0
          enum:
          - 0
          - 1
        quota:
          type: integer
          description: |-
            Whether the FTP daemon supports disk quotas.

            * `1` â Supported.
            * `0` â **Not** supported.
          example: 1
          enum:
          - 0
          - 1
      description: This object contains the features that the FTP daemon supports.
    inline_response_200_248_result_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the server's FTP daemon is enabled.

            * `1` â Enabled.
            * `0` â Disabled.
          example: 1
          enum:
          - 0
          - 1
        name:
          type: string
          description: |-
            The FTP server's name.

            * `pure-ftpd`
            * `proftpd`
            * An empty string.
          example: pure-ftpd
          enum:
          - pure-ftpd
          - proftpd
          - ""
        supports:
          $ref: "#/components/schemas/inline_response_200_248_result_data_supports"
    inline_response_200_248_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_248_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_249_result_data:
      type: object
      properties:
        port:
          maximum: 65335
          minimum: 1
          type: integer
          description: The FTP port.
          example: 21
    inline_response_200_249_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_249_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_250_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            The FTP account's quota.
            * `unlimited`
            * A positive integer that represents the maximum amount of disk space that the FTP account can use, in megabytes (MB).
          example: unlimited
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_251_result:
      type: object
      properties:
        data:
          type: string
          description: The cPanel account's FTP welcome message.
          example: "Greetings, Professor Falken."
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_252_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_253_result_data:
      type: object
      properties:
        homedir:
          type: string
          description: The absolute path to the FTP account's document root.
          format: path
          example: /home/user/public_html/ftp/
        type:
          type: string
          description: |-
            The type of FTP account.

            * `anonymous`
            * `logaccess`
            * `main`
            * `sub`
          example: main
          enum:
          - anonymous
          - logaccess
          - main
          - sub
        user:
          type: string
          description: The username for an FTP account on the cPanel account.
          example: ftpaccount
    inline_response_200_253_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_253_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_254_result_data:
      type: object
      properties:
        _diskquota:
          type: string
          description: |-
            The FTP account's quota in megabytes, with two digits of fractional precision,
            encoded as a string. `0.00` means that the quota is unlimited.

            **Note:**

            This value is different from the value for `diskquota`.
          format: ^\d+\.\d+$
          example: "476.84"
        _diskused:
          type: string
          description: |-
            The amount of disk space in megabytes that the account currently uses,
            with two digits of fractional precision, encoded as a string.

            **Note:**

            This value is the same as the value for `diskused`.
          format: ^\d+\.\d+$
          example: "2.34"
        accttype:
          type: string
          description: |-
            The type of FTP account.

            * `anonymous`
            * `logaccess`
            * `main`
            * `sub`
          example: sub
          enum:
          - anonymous
          - logaccess
          - main
          - sub
        deleteable:
          type: integer
          description: |-
            Whether the function's caller can delete the account.

            * `1` â The caller can delete the account.
            * `0` â The caller **cannot** delete the account.
          example: 1
          enum:
          - 0
          - 1
        dir:
          type: string
          description: The absolute path to the FTP account's document root.
          example: /home/user/public_ftp
        diskquota:
          description: |-
            The FTP account's quota.

            * `unlimited`
            * The disk quota in megabytes, with two digits of fractional precision, encoded as a string.

            **Note:**

            This value is different from the value for `_diskquota`.
          example: "476.84"
          oneOf:
          - type: string
            enum:
            - unlimited
          - type: string
            format: ^\d+\.\d+$
        diskused:
          type: string
          description: |-
            The amount of disk space in megabytes that the account currently uses,
            with two digits of fractional precision, encoded as a string.

            **Note:**

            This value is the same as the value for `_diskused`.
          format: ^\d+\.\d+$
          example: "2.34"
        diskusedpercent:
          type: integer
          description: The percentage of the disk space quota that the account currently
            uses.
          example: 21
        diskusedpercent20:
          multipleOf: 20
          maximum: 100
          minimum: 0
          type: integer
          description: "The percentage of disk space that the account currently uses,\
            \ rounded in 20 percent increments."
          example: 20
        htmldir:
          type: string
          description: The path to the FTP account's HTML directory.
          nullable: true
        humandiskquota:
          type: string
          description: |-
            The FTP account's quota, in human-readable format.

            * `None` â The function returns this value if the account has an unlimited quota.
            * The quota in megabytes (MB), a space, and the characters `MB`.
          example: 477 MB
        humandiskused:
          type: string
          description: |-
            The amount of disk space that the account currently uses, in
            human-readable format. The function formats this value as the
            quota's size, a space, and the characters `MB`.
          example: 2 MB
        login:
          type: string
          description: The FTP account username.
          example: ftpaccount
        reldir:
          type: string
          description: |-
            The path to the FTP account's document root,
            relative to the cPanel account's home directory.
          example: public_ftp
        serverlogin:
          type: string
          description: The full FTP login username.
          example: ftpaccount@example.com
    inline_response_200_254_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_254_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_255_result_data:
      type: object
      properties:
        cmdline:
          type: string
          description: "Information about the FTP process, from the `ps` ([process\
            \ status](http://www.linfo.org/ps.html)) command."
          example: pure-ftpd (IDLE)
        file:
          type: string
          description: |-
            The file that the session is processing.

            **Note:**

            The function returns a blank value if the session is idle.
          example: ""
        host:
          description: The IP address or hostname that connected to the FTP server.
          example: localhost
          oneOf:
          - type: string
            format: ipv4
          - type: string
            format: domain
        login:
          type: string
          description: The FTP session login time.
          example: Tue Apr 23 16:23:23 2020
        pid:
          minimum: 1
          type: integer
          description: The session's PID.
          example: 6735
        status:
          type: string
          description: |-
            The session's status.
            - `IDLE` - The session is connected, but idle.
            - `DL` - A download is in progress.
            - `UL` - An upload is in progress.
          example: IDLE
          enum:
          - IDLE
          - DL
          - UL
        user:
          type: string
          description: The FTP account username.
          example: ftpaccount
    inline_response_200_255_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_255_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_257_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            The FTP server.
            * `pure-ftpd` - The Pure-FTPD server.
            * `proftpd` - The ProFTPD FTP server.
            * `disabled` - FTP has been disabled on this server.
          example: pure-ftpd
          enum:
          - pure-ftpd
          - proftpd
          - disabled
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_263_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_264_result_data:
      type: object
      properties:
        key_data:
          type: string
          description: The GPG public key's contents.
          example: |
            -----BEGIN PGP PUBLIC KEY BLOCK-----
            Version: GnuPG v2.0.22 (GNU/Linux)

            mQMuBFzwFyMRCADgNf7GHvCgb2/HWBYVAzu408eXEO4ucWGfbD5c5BOHg7WBVOkh
            j+J0HYaeh9FwOXLJAzesiGtTU/HQ5wNkBbKRYR2oNEUbiefBgQhjllIGJNnFCQbD
            TcyxXjKUF4aQBw6InqzM9akVChLvGoCfom/y1fcwrQ5OQ46EEjhe9lSnj1E2DIi+
            0PvOsWeehChtn28WkmXPcl+XovfsCl5vh2RnJQeJwkSwBogA1GObj9fnPBbrIUt2
            F5JDaJ7/R8aDwV1Pg2mBmRqTBIKvx6gxEQgCL52OWCKVJfqy5oVGDl/2u0BGCaRt
            3Tnh9B14Lk8frBaOjYMtMq1Rl3rPDc3KCRnLAQC6dMNJCxIoyfeEFqj0HgwHETYn
            QNGwUaRrOGKLJbMnewf/Yq0S2R6YvMl8pDQeSExYJaqv/u2Hch6GM0f3CSvMnPSg
            oB2c/h4MmhmiAbymSO5GBaM4Nx3NTNYU0JpghkTTJpucFZ8hK/aJ8PDQzBnS0zTY
            F8ZqSMFL84QB1NTd1nlJnilpKCkBC6NHUh76IyLQEsH7jgOG9L28qnLxm8bGHwaJ
            mhEH2Y859WzN9hUTZEMxdklI8uwdI+msI7md0uNYiWr5svtM+rrpU+LCZMG+nTCy
            6q0CNLXM0T0Fa642mYSqV307Ouv5rjGvfohIOo5X8ikBoEIOAQk6LX800OzzYGG4
            X75Q4irMuehEK3tId5VIRToy9MRLP6fyOVHwfhzD6Af/R2TJjIdEkEGdspuw9875
            N4z9xV2QNVNgURIOutrfeKSbb7gRLgV7TWpKWItMoEO1njzb4YqoHwcAASj4TDaT
            iCYun6u12Mb97L0S3QDaD3sLk7P5sZvnO//k/YxbGISv+HGl5rSF87kVectLYpAL
            ehL2EBmyxP4nxhSDOqhc0rbaqOZ+b4F1ns4NsUJjxIqQJZ+ovTqkmKnh3YbBeMAb
            sPcjyfQNmYE9qFXw17vJMm6ypNsuDIvxKCDq4QpO3/MujYX0Hg7aGOq4aWtndcL0
            PfpukTLvTA+AedMj+0QHWiP15bSxCJKqa0O62mKWnrzL0Tju8FKTwVHgRoW57GY/
            ZbQmYmVuZGVyIChpcyBncmVhdCkgPGJlbmRlckBleGFtcGxlLmNvbT6IgQQTEQgA
            KQUCXPAXIwIbIwUJAeEzgAcLCQgHAwIBBhUIAgkKCwQWAgMBAh4BAheAAAoJEEi+
            paFvynRuACUA/1/usChuLicDwCbBlJpcYWaAkt4bC4z+wFAONKnwwlHoAQCq3GRM
            to4CkoB6pK1Zh+s5SitojUFrKEj8CJNkAQOGaLkCDQRc8BcjEAgA4CY3AKnkIvSz
            fcsFCf1NmZipQGLChs3iIhqa3NPiopYpYMNTdCZkkDMSDM40+d/LthpYnbzYVgPB
            N9OFMdL/ndf/yu0jPEZE1uEpxvH1X/x2IecMy7wm51usxpBWwSw7BTLfA9ASzDtH
            8fnkid2qY2J6fNWZDA5wrNR4auVKDkqKsatMC75GkHcT2NevLdh8SuYH60kQsmvD
            OkuE4ufIwzlnQ4HFKsYTxn6QIQY18entu563f+RCoUCNv2J0zxXFzvy+eo568+Uh
            x4Irz9OQRNUh/82a2HF10oUvkPEtCDlMy8gISEqnU1i2Ry8IsbUrvhz+my5yb5Gm
            Zz+xOKWTiwADBQf/YOYKvHIWw4/vsbLUPMmjDdMfsnT0haDlLerCSHhY+ZLzYQdz
            /7hC4Qt/5EvaGeXkwAPzr0T4PvVOQUUAiskvDNScYQxS5KxyrHAqoKkF4EDJ9MyK
            DqEN6dF9IDOxuA1g0cOX7THPm3GjRh3BjOaHnN5jXKwT85Cs7hj7u1q9Cm59RUzJ
            wRKyxo9eR3pJMR+8E0VW8oRe/7O/Qvh54ShD7NkfgUhIWcriR9MjoGp0gnpCOH52
            LrfdczCIzAoUC4Q3Jm80sCeZAqf4CNHZ0TxqxuwG+ZkfbCBViM4TVXDEufA4IENM
            mEu2bNWDLkRrrNme+S4HEeNRuSg8EOpFUuwPI4hnBBgRCAAPBQJc8BcjAhsMBQkB
            4TOAAAoJEEi+paFvynRu0YsA/0rluXh9ij3Np4O/KWuL2L8zcOrJJ7mNFuw0wkpY
            fZ3NAP9ayHG+70XellsQ/E3lR8fkRwqDDRh43w7ukhJEfkcY9A==
            =yyST
            -----END PGP PUBLIC KEY BLOCK-----
    inline_response_200_264_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_264_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_265_result_data:
      type: object
      properties:
        key_data:
          type: string
          description: The GPG key's contents.
          example: |-
            -----BEGIN PGP PRIVATE KEY BLOCK-----
            Version: GnuPG v2.0.22 (GNU/Linux)

            lQNTBFzwFyMRCADgNf7GHvCgb2/HWBYVAzu408eXEO4ucWGfbD5c5BOHg7WBVOkh
            j+J0HYaeh9FwOXLJAzesiGtTU/HQ5wNkBbKRYR2oNEUbiefBgQhjllIGJNnFCQbD
            TcyxXjKUF4aQBw6InqzM9akVChLvGoCfom/y1fcwrQ5OQ46EEjhe9lSnj1E2DIi+
            0PvOsWeehChtn28WkmXPcl+XovfsCl5vh2RnJQeJwkSwBogA1GObj9fnPBbrIUt2
            F5JDaJ7/R8aDwV1Pg2mBmRqTBIKvx6gxEQgCL52OWCKVJfqy5oVGDl/2u0BGCaRt
            3Tnh9B14Lk8frBaOjYMtMq1Rl3rPDc3KCRnLAQC6dMNJCxIoyfeEFqj0HgwHETYn
            QNGwUaRrOGKLJbMnewf/Yq0S2R6YvMl8pDQeSExYJaqv/u2Hch6GM0f3CSvMnPSg
            oB2c/h4MmhmiAbymSO5GBaM4Nx3NTNYU0JpghkTTJpucFZ8hK/aJ8PDQzBnS0zTY
            F8ZqSMFL84QB1NTd1nlJnilpKCkBC6NHUh76IyLQEsH7jgOG9L28qnLxm8bGHwaJ
            mhEH2Y859WzN9hUTZEMxdklI8uwdI+msI7md0uNYiWr5svtM+rrpU+LCZMG+nTCy
            6q0CNLXM0T0Fa642mYSqV307Ouv5rjGvfohIOo5X8ikBoEIOAQk6LX800OzzYGG4
            X75Q4irMuehEK3tId5VIRToy9MRLP6fyOVHwfhzD6Af/R2TJjIdEkEGdspuw9875
            N4z9xV2QNVNgURIOutrfeKSbb7gRLgV7TWpKWItMoEO1njzb4YqoHwcAASj4TDaT
            iCYun6u12Mb97L0S3QDaD3sLk7P5sZvnO//k/YxbGISv+HGl5rSF87kVectLYpAL
            ehL2EBmyxP4nxhSDOqhc0rbaqOZ+b4F1ns4NsUJjxIqQJZ+ovTqkmKnh3YbBeMAb
            sPcjyfQNmYE9qFXw17vJMm6ypNsuDIvxKCDq4QpO3/MujYX0Hg7aGOq4aWtndcL0
            PfpukTLvTA+AedMj+0QHWiP15bSxCJKqa0O62mKWnrzL0Tju8FKTwVHgRoW57GY/
            ZQABALMunDJSN+b/VyFzqifGvopLxJFqA4un4WjGEY9jvJooD7e0JmJlbmRlciAo
            aXMgZ3JlYXQpIDxiZW5kZXJAZXhhbXBsZS5jb20+iIEEExEIACkFAlzwFyMCGyMF
            CQHhM4AHCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIXgAAKCRBIvqWhb8p0bgAlAP9f
            7rAobi4nA8AmwZSaXGFmgJLeGwuM/sBQDjSp8MJR6AEAqtxkTLaOApKAeqStWYfr
            OUoraI1BayhI/AiTZAEDhmidAj0EXPAXIxAIAOAmNwCp5CL0s33LBQn9TZmYqUBi
            wobN4iIamtzT4qKWKWDDU3QmZJAzEgzONPnfy7YaWJ282FYDwTfThTHS/53X/8rt
            IzxGRNbhKcbx9V/8diHnDMu8JudbrMaQVsEsOwUy3wPQEsw7R/H55IndqmNienzV
            mQwOcKzUeGrlSg5KirGrTAu+RpB3E9jXry3YfErmB+tJELJrwzpLhOLnyMM5Z0OB
            xSrGE8Z+kCEGNfHp7buet3/kQqFAjb9idM8Vxc78vnqOevPlIceCK8/TkETVIf/N
            mthxddKFL5DxLQg5TMvICEhKp1NYtkcvCLG1K74c/psucm+Rpmc/sTilk4sAAwUH
            /2DmCrxyFsOP77Gy1DzJow3TH7J09IWg5S3qwkh4WPmS82EHc/+4QuELf+RL2hnl
            5MAD869E+D71TkFFAIrJLwzUnGEMUuSscqxwKqCpBeBAyfTMig6hDenRfSAzsbgN
            YNHDl+0xz5txo0YdwYzmh5zeY1ysE/OQrO4Y+7tavQpufUVMycESssaPXkd6STEf
            vBNFVvKEXv+zv0L4eeEoQ+zZH4FISFnK4kfTI6BqdIJ6Qjh+di633XMwiMwKFAuE
            NyZvNLAnmQKn+AjR2dE8asbsBvmZH2wgVYjOE1VwxLnwOCBDTJhLtmzVgy5Ea6zZ
            nvkuBxHjUbkoPBDqRVLsDyMAAVIC+56gmf2bW2mDuoFFUW6KT6jorvvbmXSZHi1L
            AGhQj/Q83gRejq2g+DYiFlCIZwQYEQgADwUCXPAXIwIbDAUJAeEzgAAKCRBIvqWh
            b8p0btGLAPsFHEqEg/qrEpjFu/9B8KvBWBgqIJm9XtDgaVaaHjzR4AD/XcrEvMuc
            PVYssXICwKbDwxWEYqhpI6ms0IOob0PH8hE=
            =W2NA
            -----END PGP PRIVATE KEY BLOCK-----
    inline_response_200_265_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_265_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_267_result_data:
      type: object
      properties:
        key_id:
          type: string
          description: The key's ID.
          example: 59E79B6904616529
    inline_response_200_267_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_267_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_268_result_data:
      type: object
      properties:
        algorithm:
          type: string
          description: |-
            The key's algorithm.
            * RSA
            * DSA
          example: DSA
          enum:
          - RSA
          - DSA
        bits:
          maximum: 4096
          minimum: 1024
          type: integer
          description: "The length of the key, in bits."
          example: 2048
          enum:
          - 1024
          - 2048
          - 3072
          - 4096
        created:
          type: string
          description: |-
            The creation time for the key,
            in [Unix time format](http://en.wikipedia.org/wiki/Unix_time).
          example: "1559238435"
        expires:
          type: string
          description: |-
            When the key will expire,
            in [Unix time format](http://en.wikipedia.org/wiki/Unix_time).

            **Note:**

            If the key does not expire,
            this will be an empty string.
          example: "1590774435"
        id:
          type: string
          description: The key's ID.
          example: C801294347601B8F
        type:
          type: string
          description: |-
            The type of key.

            **Note:**

            This will always be "pub" because we are listing public keys.
          example: pub
          enum:
          - pub
        user_id:
          type: string
          description: |-
            The user ID of the key which consists of the following space-separated values:
            * The username.
            * The key's comment in parentheses.
            * The key's email address in angle brackets (<>).
          example: bender (is great) <bender@example.com>
    inline_response_200_268_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_268_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_269_result_data:
      type: object
      properties:
        algorithm:
          type: string
          description: |-
            The key's algorithm.
            * `RSA`
            * `DSA`
          example: DSA
          enum:
          - RSA
          - DSA
        bits:
          multipleOf: 1024
          maximum: 4096
          minimum: 1024
          type: integer
          description: The key's length.
          example: 2048
        created:
          type: integer
          description: When the function created the key.
          format: unix_timestamp
          example: 1559238435
        expires:
          type: integer
          description: When the key will expire.
          format: unix_timestamp
          example: 1590774435
        id:
          type: string
          description: The key's ID.
          example: 738538C1
        type:
          type: string
          description: |-
            The type of key.

            * `sec` is the only possible value.
          example: sec
          enum:
          - sec
        user_id:
          type: string
          description: |-
            The user ID of the key. The system returns this value as a space-separated string with the following values:

            * The username.
            * A comment in parentheses.
            * The key's email address in angle brackets (`<>`).
          example: username (John Doe) <username@example.com>
    inline_response_200_269_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_269_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â `Success`.
            * `0` â `Failed`. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_270_result_data:
      type: object
      properties:
        converted_file:
          type: string
          description: The new absolute filepath to the image.
          example: /home/cptest1/images/myimage.png
    inline_response_200_270_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_270_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_271_result_data:
      type: object
      properties:
        failed:
          type: integer
          description: |-
            Whether the function failed to create the thumbnail file.

            **Note:**

             * The function **only** returns this value if it doesn't create the thumbnail.
             * `1` is the **only** possible value.
          example: 1
          enum:
          - 1
        file:
          type: string
          description: The file from which the function generated the thumbnail file.
            An absolute filepath.
          example: /home/cptest1/public_html/images/610_290.jpg
        reason:
          type: string
          description: |-
            The reason that the function didn't create the thumbnail file.

            **Note:**

             The function only returns this value if it doesn't create the thumbnail.
          example: too many pixels
        thumbnail_file:
          type: string
          description: The thumbnail file that the function generated. An absolute
            filepath.
          example: /home/cptest1/public_html/images/thumbnails/tn_610_290.jpg
    inline_response_200_271_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing thumbnail file information.
          items:
            $ref: "#/components/schemas/inline_response_200_271_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the ``errors`` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_272_result_data:
      type: object
      properties:
        height:
          minimum: 1
          type: integer
          description: "The image's height, in pixels."
          example: 300
        width:
          minimum: 1
          type: integer
          description: "The image's width, in pixels."
          example: 261
    inline_response_200_272_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_272_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_273_result:
      type: object
      properties:
        data:
          type: string
          description: The absolute filepath to the resized image.
          example: /home/cptest1/images/myimage.jpg
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_274_result_data:
      type: object
      properties:
        redirect_url:
          type: string
          description: The publicly-available URL to which the application will redirect
            visitors.
          format: url
          example: http://application.example.com/application
        url:
          type: string
          description: The publicly-available URL to which the application redirects
            visitors if the `redirect_url` location is unavailable.
          format: url
          example: http://application.example.com/
    inline_response_200_274_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_274_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_275_result_data_meta:
      type: object
      properties:
        algorithm:
          type: string
          description: The key's algorithm.
          example: ssh-rsa
        body:
          type: string
          description: The host's public key.
          example: AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
        md5:
          type: string
          description: "The key's [MD5](https://en.wikipedia.org/wiki/MD5) fingerprint."
          example: b6030e39979ed0e724cea3773e014209
        md5-printable:
          type: string
          description: A human-readable version of the key's MD5 fingerprint.
          example: MD5:b6:03:0e:39:97:9e:d0:e7:24:ce:a3:77:3e:01:42:09
        sha256:
          type: string
          description: |-
            The key's [SHA-256](https://en.wikipedia.org/wiki/SHA-2)
            fingerprint.
          example: 44e405bcf4e11ab5b846e58ba0bf6dabd23dcc9e367cae17cb0c91b5b 3b3fc44
        sha256-printable:
          type: string
          description: A human-readable version of the key's SHA-256 fingerprint.
          example: SHA256:ROQFvPThGrW4RuWLoL9tq9I9zJ42fK4XywyRtbOz/EQ
      description: An object containing metadata about the host's public key.
    inline_response_200_275_result_data_host:
      type: object
      properties:
        host:
          description: The hostname or IP address.
          example: hostname.example.com
          oneOf:
          - type: string
            description: A valid hostname.
            format: hostname
            example: hostname.example.com
          - type: string
            description: A valid IP address.
            format: ipv4
            example: 192.0.2.102
        key:
          type: string
          description: The host's key.
          example: ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
        line:
          type: string
          description: "The host's entry in the `/home/user/.ssh/known_hosts` file,\
            \ where `user` is the cPanel account username."
          example: host.example.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
        meta:
          $ref: "#/components/schemas/inline_response_200_275_result_data_meta"
    inline_response_200_275_result_data:
      type: object
      properties:
        host:
          type: array
          description: An array of objects containing information for the host.
          items:
            $ref: "#/components/schemas/inline_response_200_275_result_data_host"
    inline_response_200_275_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_275_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_277_result_data_meta:
      type: object
      properties:
        algorithm:
          type: string
          description: The key's algorithm.
          example: ssh-rsa
        body:
          type: string
          description: The host's public key.
          example: EEEEB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9\bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
        md5:
          type: string
          description: The key's MD5 fingerprint.
          example: b6030e39868ed0e724cea3773e014219
        md5-printable:
          type: string
          description: A human-readable version of the key's MD5 fingerprint.
          example: MD5:b6:03:0e:39:97:2e:d0:e7:24:ab:c3:77:3d:01:42:09
        sha256:
          type: string
          description: The key's SHA-256 fingerprint.
          example: 55a405bcf4e11ab5b846e58ba0bf6dabd23dcc9e367cae17cb0c91b5b3b3fc55
        sha256-printable:
          type: string
          description: human-readable version of the key's SHA-256 fingerprint.
          example: SHA256:RPLFvPThGrW4RuWLoL9tq9I9zJ42fK3XywyRtbOz/EQ
      description: An object containing metadata about the host's public key.
    inline_response_200_277_result_data_host:
      type: object
      properties:
        host:
          description: The updated host and its associated key value.
          example: host.example.com
          oneOf:
          - type: string
            format: hostname
          - type: string
            format: ipv4
        key:
          type: string
          description: The host's key.
          example: ssh-rsa AAAAB3NzaC1yc2AEEEEDAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
        line:
          type: string
          description: "The host's entry in the `/home/user/.ssh/known_hosts` file,\
            \ where user is the cPanel account username. A valid entry that includes\
            \ the hostname or IP address, the key's algorithm, and the public key."
          example: host.example.com ssh-rsa AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        meta:
          $ref: "#/components/schemas/inline_response_200_277_result_data_meta"
    inline_response_200_277_result_data:
      type: object
      properties:
        host:
          type: array
          description: An array of objects containing the host's information.
          items:
            $ref: "#/components/schemas/inline_response_200_277_result_data_host"
    inline_response_200_277_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_277_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` Success.
            * `0` Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_278_result_data_meta:
      type: object
      properties:
        algorithm:
          type: string
          description: The key's algorithm.
          example: ssh-rsa
        body:
          type: string
          description: The host's public key. public key.
          example: AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
        md5:
          type: string
          description: "The key's [MD5](https://en.wikipedia.org/wiki/MD5) fingerprint."
          example: b6030e39979ed0e724cea3773e014209
        md5-printable:
          type: string
          description: A human-readable version of the key's MD5 fingerprint.
          example: MD5:b6:03:0e:39:97:9e:d0:e7:24:ce:a3:77:3e:01:42:09
        sha256:
          type: string
          description: "The key's [SHA-256](https://en.wikipedia.org/wiki/SHA-2) fingerprint."
          example: 44e405bcf4e11ab5b846e58ba0bf6dabd23dcc9e367cae17cb0c91b5b3b3fc44
        sha256-printable:
          type: string
          description: A human-readable version of the key's SHA-256 fingerprint.
          example: SHA256:ROQFvPThGrW4RuWLoL9tq9I9zJ42fK4XywyRtbOz/EQ
      description: An object that contains information about the host's public key.
    inline_response_200_278_result_data_host:
      type: object
      properties:
        host:
          description: The hostname or IP address.
          example: host.example.com
          oneOf:
          - type: string
            format: ipv4
          - type: string
            format: domain
        key:
          type: string
          description: The host's key.
          example: ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
        line:
          type: string
          description: "The host's entry in the `/home/user/.ssh/known_hosts` file,\
            \ where `user` is the cPanel account username."
          example: host.example.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
        meta:
          $ref: "#/components/schemas/inline_response_200_278_result_data_meta"
    inline_response_200_278_result_data:
      type: object
      properties:
        errors:
          type: array
          description: An array of errors that the system generated.
          items:
            type: string
            example: The example.com host does not exist in the known_hosts file.
        failure_type:
          type: string
          description: |-
            The reason why the system will register the hostname.
            * `new` â The host does **not** already exist.
            * `changed` â The host's information has changed.
          example: new
          enum:
          - new
          - changed
        host:
          type: array
          description: An array of objects that contain information about the host.
          items:
            $ref: "#/components/schemas/inline_response_200_278_result_data_host"
        status:
          type: integer
          description: |-
            Whether the host already exists in the `/home/user/.ssh/known_hosts` file, where `user` is the cPanel account username.
            * `1` â Exists.
            * `0` â The host does **not** already exist, or the system must re-register the hostname.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_278_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_278_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_279_result_data:
      type: object
      properties:
        php_handler:
          type: string
          description: The virtual host's PHP handler.
          example: cgi
    inline_response_200_279_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_279_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_280_result_data:
      type: object
      properties:
        domains:
          type: array
          description: |-
            The domains that obtain their PHP version from the PHP configuration. Any valid domain or subdomain.

            **Note:**

            This function does **not** return parked domains.
          items:
            type: string
            example: example.com
    inline_response_200_280_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_280_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_281_result_data:
      type: object
      properties:
        versions:
          type: array
          description: |-
            The available PHP versions.

            - `ea-php72`
            - `ea-php73`
            - `ea-php74`
            -  Any custom PHP package name.
          items:
            type: string
            example: ea-php72
    inline_response_200_281_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_281_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_282_result_data:
      type: object
      properties:
        version:
          type: string
          description: |-
            The systemâs default PHP version.

            Possible values include:
              * An installed PHP package that cPanel provides. For example, `ea-php80`
              * An installed PHP package that another vendor provides. For example, `alt-php42`
              * `null` â This value means PHP is **not** installed. Also, the `errors` return will contain a message that indicates that PHP is not installed.

            **Note**:

              If no default is explicitly set, the package for the newest installed version of PHP is chosen.
          nullable: true
          example: ea-php73
    inline_response_200_282_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_282_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_283_result_php_fpm_pool_parms:
      type: object
      properties:
        pm_max_children:
          minimum: 1
          type: integer
          description: The maximum number of child pages per pool.
          example: 5
        pm_max_requests:
          minimum: 1
          type: integer
          description: The maximum number of requests per pool.
          example: 20
        pm_process_idle_timeout:
          minimum: 1
          type: integer
          description: A specified time of idleness before the system kills an FPM
            child process.
          example: 10
      description: An object containing the domain's PHP-FPM parameters.
    inline_response_200_283_result_phpversion_source:
      type: object
      properties:
        domain:
          type: string
          description: The domain the virtual host inherits its PHP version from.
          format: domain
          example: blee.com
        system_default:
          type: integer
          description: |-
            Whether the virtual host uses the system's default PHP version.
            * `1` - Uses the system default PHP version.

            **Note:**

              The function **only** returns this value if true.
          example: 1
          enum:
          - 1
    inline_response_200_283_result_data:
      type: object
      properties:
        account:
          type: string
          description: The account's name.
          format: username
          example: blee
        account_owner:
          type: string
          description: The account's owner.
          format: username
          example: blee
        documentroot:
          type: string
          description: The virtual host's document root.
          format: path
          example: /home/blee/public_html
        homedir:
          type: string
          description: The virtual host's home directory.
          format: path
          example: /home/blee
        main_domain:
          type: integer
          description: |-
            Whether the virtual host is the primary domain.

            **Note:**

            * `1` - The primary domain
            * `0` - **Not** the primary domain
          example: 1
          enum:
          - 1
          - 0
        php_fpm:
          type: integer
          description: |-
            Whether FPM is enabled on the virtual host.

            * `1` - PHP-FPM enabled.
            * `0` - PHP-FPM **not** enabled.
          example: 1
          enum:
          - 0
          - 1
        php_fpm_pool_parms:
          $ref: "#/components/schemas/inline_response_200_283_result_php_fpm_pool_parms"
        phpversion_source:
          type: array
          properties:
            domain: {}
          description: How the virtual host determines its PHP version.
          items:
            $ref: "#/components/schemas/inline_response_200_283_result_phpversion_source"
        version:
          type: string
          description: |-
            The virtual host's PHP version.
            * `ea-php72`
            * `ea-php73`
            * `ea-php74`
            * Any custom PHP package name.
          example: ea-php72
        vhost:
          type: string
          description: The virtual host's name.
          format: domain
          example: blee.com
    inline_response_200_283_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            An array of objects of the virtual host's suspended
            status, versions, virtual hosts, and accounts.
            Note: Returns a single object when using the `vhost` parameter.
          items:
            $ref: "#/components/schemas/inline_response_200_283_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_284_result_data_directives:
      type: object
      properties:
        default_value:
          description: The directive's default value.
          example: 1
          oneOf:
          - type: string
          - type: boolean
          - type: integer
          - type: number
        info:
          type: string
          description: The purpose of the directive.
          example: "This option enables the URL-aware fopen wrappers that enable accessing\
            \ URL object like files. Default wrappers are provided for the access\
            \ of remote files using the ftp or http protocol, some extensions like\
            \ zlib may register additional wrappers."
        key:
          type: string
          description: The directive's name.
          example: allow_url_fopen
        php_ini_mode:
          type: string
          description: |-
            The directive's [PHP_INI mode](http://php.net/manual/en/configuration.changes.modes.php).

            * `PHP_INI_SYSTEM`
            * `PHP_INI_PERDIR`
            * `PHP_INI_ALL`
            * `PHPINI_ONLY`
          example: PHP_INI_SYSTEM
          enum:
          - PHP_INI_SYSTEM
          - PHP_INI_PERDIR
          - PHP_INI_ALL
          - PHPINI_ONLY
        type:
          type: string
          description: |-
            The type of value that the directive uses.

            * `string`
            * `boolean`
            * `integer`
            * `float`
          example: integer
          enum:
          - string
          - boolean
          - integer
          - float
        value:
          type: string
          description: The directive's current value.
          example: "On"
    inline_response_200_284_result_data:
      type: object
      properties:
        directives:
          type: array
          description: An array of the available directives in the `php.ini` file
            of the selected user's PHP version.
          items:
            $ref: "#/components/schemas/inline_response_200_284_result_data_directives"
    inline_response_200_284_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_284_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_285_result_data:
      type: object
      properties:
        content:
          type: string
          description: The contents of the requested user's `php.ini` file.
          example: allow_url_fopen = On\nallow_url_include = On\nasp_tags = Off\ndisplay_errors
            = On\nenable_dl = Off\nfile_uploads = On\ninclude_path = &quot;.;/path/to/php/pear&quot;\nmax_execution_time
            = 30\nmax_input_time = 60\nmax_input_vars = 1050\nmemory_limit = 32M\nupload_max_filesize
            = 2M
    inline_response_200_285_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_285_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_286_result_data_paths:
      type: object
      properties:
        account:
          type: string
          description: The account's name.
          example: allthethings
        documentroot:
          type: string
          description: The virtual host's document root.
          example: /home/allthethings/public_html
        homedir:
          type: string
          description: The home directory.
          example: /home/allthethings/
        main_domain:
          type: integer
          description: |-
            Whether the virtual host is the account's primary domain.
            * `1` - Primary domain.
            * `0` - **Not** the primary domain.
          example: 1
          enum:
          - 1
          - 0
        path:
          type: string
          description: The name of the virtual host's `php.ini` file.
          example: php.ini
        type:
          type: string
          description: |-
            The record's type.
            * `home`
            * `vhost`
          example: vhost
          enum:
          - home
          - vhost
        version:
          type: string
          description: |-
            The default PHP version.
            - `ea-php##`, where `##` represents the major and minor versions of PHP (for example, `ea-php72` represents PHP 7.2).
            - Any custom PHP package name.
          example: ea-php72
        vhost:
          type: string
          description: The name of the virtual host.
          format: domain
          example: clearly.com
    inline_response_200_286_result_data:
      type: object
      properties:
        paths:
          type: array
          description: An array of objects of `php.ini` file information.
          items:
            $ref: "#/components/schemas/inline_response_200_286_result_data_paths"
    inline_response_200_286_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_286_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_287_result_metadata_LangPHP:
      type: object
      properties:
        path:
          type: string
          description: The absolute file path to the `php.ini` file.
          format: path
          example: /home/allthethings/public_html/php.ini
        phpversion:
          type: string
          description: The virtual host's installed version of PHP.
          example: ea-php55
        type:
          type: string
          description: |-
            The type of `php.ini` file.

            * `home`
            * `vhost`
          example: vhost
          enum:
          - home
          - vhost
        vhost:
          type: string
          description: The virtual host's name.
          example: clearly.com
      description: An object containing the virtual host's PHP directive information.
    inline_response_200_287_result_metadata:
      properties:
        LangPHP:
          $ref: "#/components/schemas/inline_response_200_287_result_metadata_LangPHP"
    inline_response_200_287_result:
      type: object
      properties:
        data: {}
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_287_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_288_result:
      type: object
      properties:
        data:
          type: object
          description: This value will always be `null`.
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_289_result_data:
      type: object
      properties:
        vhosts:
          type: array
          description: The names of the changed virtual hosts.
          items:
            type: string
            format: domain
            example: example.com
    inline_response_200_289_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_289_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_290_result:
      type: object
      properties:
        data:
          type: array
          description: The IP address of the user who most recently logged in.
          items:
            type: string
            format: ipv4
            example: 192.168.0.1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` Success.
            * `0` Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_291_result_data:
      type: object
      properties:
        direction:
          type: string
          description: |-
            The locale's text direction.
            * `ltr` - left to right.
            * `rtl` - right to left.
          example: ltr
          enum:
          - ltr
          - rtl
        encoding:
          type: string
          description: The user's character set.
          example: utf-8
        locale:
          type: string
          description: The locale's two-letter ISO-3166 code.
          format: ISO-3166-1 (alpha-2)
          example: en
        name:
          type: string
          description: The locale's full name.
          example: English
    inline_response_200_291_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_291_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_292_result_data:
      type: object
      properties:
        direction:
          type: string
          description: |-
            The locale's text direction.
            * `ltr` - Left to right.
            * `rtl` - Right to left.
          example: ltr
          enum:
          - ltr
          - rtl
        local_name:
          type: string
          description: "The locale's full name, in the locale's language."
          example: Deutsch
        locale:
          type: string
          description: "The locale's two-letter [ISO-3166 code](http://www.iso.org/iso/country_codes.htm)."
          format: ISO-3166-1 (alpha-2)
          example: de
        name:
          type: string
          description: The locale's full name.
          example: German
    inline_response_200_292_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_292_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_293_result:
      type: object
      properties:
        data: {}
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_294_result_data:
      type: object
      properties:
        archive_logs:
          type: integer
          description: |-
            Whether the system archives log files to your home directory.
            * `1` â Archives the logs.
            * `0` â Does **not** archive the logs.
          example: 1
          enum:
          - 1
          - 0
        prune_archive:
          type: integer
          description: |-
            Whether the system removes the previous month's archived log files from your home directory.
            * `1` â Removes the logs.
            * `0` â Does **not** remove the logs.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_294_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_294_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_295_result_data:
      type: object
      properties:
        file:
          type: string
          description: The archive file's name.
          example: domain.com-May-2019.gz
        mtime:
          type: integer
          description: The archive file's last modified date.
          format: unix_timestamp
          example: 1557835866
        path:
          type: string
          description: The archive file's path.
          example: /home/user/logs/domain.com-May-2019.gz
    inline_response_200_295_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contain information about the archive
            files. These files reside in the cPanel user's `~/logs` directory.
          items:
            $ref: "#/components/schemas/inline_response_200_295_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_296_result:
      type: object
      properties:
        data: {}
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_298_result:
      type: object
      properties:
        data:
          type: object
          properties: {}
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_299_result_data:
      type: object
      properties:
        guid:
          type: string
          description: The mailbox GUID.
          example: 1234560f0c58d158c92a000044f0d230
        mailbox:
          type: string
          description: The mailbox name.
          example: INBOX.marla_singer@example_com
        messages:
          minimum: 0
          type: integer
          description: The number of messages in the folder.
          example: 410
        vsize:
          minimum: 0
          type: integer
          description: "The size of the folder, in bytes."
          format: bytes
          example: 1052299
    inline_response_200_299_result:
      type: object
      properties:
        data:
          type: array
          example:
          - guid: 1234560f0c58d158c92a000044f0d230
            mailbox: INBOX.marla_singer@example_com
            messages: 0
            vsize: 0
          - guid: 11234560f0c58d158c92a000044f0d23
            mailbox: INBOX.angel_face@example_com
            messages: 0
            vsize: 0
          - guid: 111234560f0c58d158c92a000044f0d2
            mailbox: INBOX.tyler_durden@example_com
            messages: 0
            vsize: 0
          - guid: 1111234560f0c58d158c92a000044f0d
            mailbox: INBOX.Trash
            messages: 0
            vsize: 0
          - guid: 11111234560f0c58d158c92a000044f0
            mailbox: INBOX.narrator@example_com
            messages: 0
            vsize: 0
          - guid: 111111234560f0c58d158c92a000044f
            mailbox: INBOX
            messages: 0
            vsize: 0
          - guid: 1111111234560f0c58d158c92a000004
            mailbox: INBOX.Sent
            messages: 0
            vsize: 0
          - guid: 11111111234560f0c58d158c92a00000
            mailbox: INBOX.Drafts
            messages: 0
            vsize: 0
          - guid: 111111111234560f0c58d158c92a0000
            mailbox: INBOX.robert_paulsen@example_com
            messages: 0
            vsize: 0
          items:
            $ref: "#/components/schemas/inline_response_200_299_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_300_result_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the user currently uses UTF-8 character-encoded mailbox names.
            * `1` - Uses UTF-8 character-encoded mailbox names.
            * `0` - Does **not** use UTF-8 character-encoded mailbox names.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_300_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_300_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_301_result_data:
      type: object
      properties:
        success:
          type: integer
          description: |-
            Whether the system changed mailbox name setting's status.
            * `1` - Success.
            * `0` - Failure.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_301_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_301_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_302_result_data:
      type: object
      properties:
        created_time:
          type: integer
          description: When the system created the order.
          format: unix_timestamp
          example: 1458061262
        csr:
          type: string
          description: The text of the Certificate Request (CSR).
          format: base64 certificate
          example: |
            -----BEGIN CERTIFICATE REQUEST-----
            MIIC0TCCAbkCAQAwGzEZMBcGA1UEAxMQY29icmFzc2x0ZXN0Lm9yZzCCASIwDQYJ
            KoZIhvcNAQEBBQADggEPADCCAQoCggEBAKsZWNkF8hjUjoCDNNSkXO0CTp/z/0pu
            iFiDMzdFAa6mg5wr97EwRBCniSvJEJ1rdQ0Sus2AAK9hg7TeZAWbFf97r7mS0chm
            r27Ht9qfit3r0EJLYcjRjnZ/wj21ZhsdjQIjjTRiI1TvXtOQRAQpWNsGxK7QV3Q3
            njkSM/gTpteHuC3JAQxbpv72B+IjiyzUZr8DOUOoB94IO5iP27UXnkSbExInDvqu
            K43zVGYNU0Zev20A6SBWU3BALjWXHlYjwbC109FxOWNssHTg3xvePsBxzk6BFDcT
            S/QAS0tFYPfHZKmCBg6irBGFOdTjSDVmFk8zAoFYibev0juRJCMn2XsCAwEAAaBx
            MG8GCSqGSIb3DQEJDjFiMGAwXgYDVR0RAQH/BFQwUoIQY29icmFzc2x0ZXN0Lm9y
            Z4IUd3d3LmNvYnJhc3NsdGVzdC5vcmeCEWNwYW5lbHNzbHRlc3Qub3JnghV3d3cu
            Y3BhbmVsc3NsdGVzdC5vcmcwDQYJKoZIhvcNAQELBQADggEBAG0l4aChMO1rSmgR
            SF5qlKu785n5YS5rTE9ev+OFu0952DvjVAB0R8y5+TZSXfg+9CH7pa2VDosAEYF4
            yjUJOuiwwVEUD/9Qhrls/2xT8KKk0QSxuWmOgP2YQy/QRH+W7ykoigtiWdXEIUuF
            iJmeavS8JOYt560366V3dw7YT+QstUHQ7UlGEFDeWQI3osUN1wDrtW5qcaq09Q/G
            TcphzXrRkL5lRjKXKLIcY/HVYzOnoEX30ALX2I3bJ9s4IMRfpnhTqLmWalcr+4vq
            vqVnlB0B/nXf/qaB/xvxmEtSGx/GZ/8Gsrf5PB7GhRuStUtJoXcLuADK0bgug3X2
            GxEruS4=
            -----END CERTIFICATE REQUEST-----
        domains:
          type: array
          description: A list of domains on the certificate.
          example:
          - example1.com
          - example2.com
          items:
            type: string
            format: domain
        expired:
          type: integer
          description: |-
            Whether the system has deleted the item from the pending queue.
            * `1` - Deleted.
            * `0` - **Not** deleted.
          example: 0
          enum:
          - 0
          - 1
        first_poll_time:
          type: integer
          description: The first time that the system polled the provider for the
            certificate.
          format: unix_timestamp
          example: 1458061262
        last_poll_time:
          type: integer
          description: "The last time that the system polled the\nprovider for the\
            \ certificate. "
          format: unix_timestamp
          example: 1458061262
        last_status_code:
          type: string
          description: |-
            The last status code of the order.
            * `CertificateNotFound` - The system cannot locate the specified certificate.
            * `RequiresApproval` - The specified certificate requires approval.
            * `OrderCanceled` - The system cancelled the order of the specified certificate.
            * `OrderItemCanceled` - The system cancelled the order item of the specified certificate.
          example: CertificateNotFound
          enum:
          - CertificateNotFound
          - RequiresApproval
          - OrderCanceled
          - OrderItemCanceled
        order_id:
          type: string
          description: The ID of the order.
          example: "1392472"
        order_item_id:
          type: string
          description: The ID of the ordered item.
          example: "10427508"
        product_id:
          type: string
          description: The product's ID.
          example: "143"
        provider:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
        status:
          type: string
          description: |-
            The status of the order.
            * `confirmed` - Payment confirmed.
            * `unconfirmed` - Payment **not** confirmed.
          example: confirmed
          enum:
          - confirmed
          - unconfirmed
        support_uri:
          type: string
          description: The URI of the cPanel Market Provider's support site.
          format: uri
          example: http://support.example.com/
        vhost_names:
          type: array
          description: A list of virtual host names.
          example:
          - abcde.com
          items:
            type: string
    inline_response_200_302_result:
      type: object
      properties:
        data:
          type: array
          description: An object containing order information.
          items:
            $ref: "#/components/schemas/inline_response_200_302_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API. Warnings
            describe non-critical failures or other problematic conditions
            noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_303_result_data:
      type: object
      properties:
        checkout_url:
          type: string
          description: The location of the providerâs check out page.
          format: url
          example: http://www.example.com/checkout
        order_id:
          type: string
          description: The orderâs ID.
          example: "8765309"
        order_items:
          type: array
          description: An array of objects that contain information about Items in
            the shopping cart. The function returns these values in the order in which
            you called them. This array of objects returns values that vary between
            providers.
          items:
            type: object
    inline_response_200_303_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_303_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_304_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/MarketProviderProductMetaDataType"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_305_result_data_actionUrls:
      type: object
      properties:
        evClickThroughStatus:
          type: string
          description: A URL that a user can use to expedite the validation process
            for Extended Validation (EV) certificates.
          format: url
          example: https://example.com/action
        ovCallbackStatus:
          type: string
          description: A URL that a user can use to expedite the validation process
            for Organization Validated (OV) certificates.
          format: url
          example: https://example.com/action
      description: An object that contains actionable URLs.
    inline_response_200_305_result_data_domain_details:
      type: object
      properties:
        domain:
          type: string
          description: The Fully Qualified Domain Name (FQDN) that the function queries.
          format: domain
          example: www.example.com
        status:
          type: string
          description: |-
            The status of the domain's certificate.

            * `VALIDATED` - The domain has been validated.
            * `NOTVALIDATED` - The domain has **not** been validated.
            * `AWAITINGBRAND` - The domain has **not** been validated, and is awaiting brand approval.
          example: AWAITINGBRAND
          enum:
          - VALIDATED
          - NOTVALIDATED
          - AWAITINGBRAND
      description: An object that contains information about the domain.
    inline_response_200_305_result_data_status_details:
      type: object
      properties:
        brandValStatus:
          type: string
          description: |-
            Whether the brand validation status has completed.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The certificate's brand validation is **not** complete.
            * `completed` - The certificate's brand validation is complete.
            * `in-progress` - The certificate's brand validation is in progress.
          example: in-progress
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
        certificateStatus:
          type: string
          description: |-
            Whether the provider has issued the SSL certificate.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The certificate's issue is **not** completed.
            * `completed` - The provider has issued the certificate.
            * `in-progress` - The certificate's issue is in progress.
          example: in-progress
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
        csrStatus:
          type: string
          description: |-
            Whether the certificate signing request (CSR) has completed.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The CSR for the certificate is **not** complete.
            * `completed` - The CSR for the certificate is complete.
            * `in-progress` - The CSR for the certificate is in progress.
          example: completed
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
        dcvStatus:
          type: string
          description: |-
            Whether Domain Control Validation (DCV) has completed.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The DCV for the certificate is **not** complete.
            * `completed` - The DCV for the certificate is complete.
            * `in-progress` - The DCV for the certificate is in progress.
          example: completed
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
        evClickThroughStatus:
          type: string
          description: |-
            Whether every requirement for the EV certificate has completed.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The EV certificate's requirements check is **not** complete.
            * `completed` - The EV certificate's requirements check is complete.
            * `in-progress` - The EV certificate's requirements check is in progress.

            For more information, read Sectigo's [What is required for validation?](https://support.sectigo.com/Com_KnowledgeDetailPage?Id=kA01N000000zFOr) documentation.
          example: in-progress
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
        freeDVUPStatus:
          type: string
          description: |-
            Whether every requirement for the Domain Validated (DV) certificate has completed.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The DV certificate's requirements check is **not** complete.
            * `completed` - The DV certificate's requirements check is complete.
            * `in-progress` - The DV certificate's requirements check is in progress.
          example: not applicable
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
        organizationValidationStatus:
          type: string
          description: |-
            Whether every requirement for the OV certificate has completed.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The OV certificate's requirements check is **not** complete.
            * `completed` - The OV certificate's requirements check is complete.
            * `in-progress` - The OV certificate's requirements check is in progress.
          example: not applicable
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
        ovCallbackStatus:
          type: string
          description: |-
            Whether the Certificate Authority (CA) has verified the organization's validity via a phone call.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The CA has **not** verified the organization's validity via phone.
            * `completed` - The CA has verified the organization's validity via phone.
            * `in-progress` - The CA's verification of the organization's validity via phone is in progress.
          example: not applicable
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
        validationStatus:
          type: string
          description: |-
            Whether the validation process has completed.

            * `not applicable` - This is **not** applicable for the certificate.
            * `not-completed` - The certificate's validation is **not** complete.
            * `completed` - The certificate's validation is complete.
            * `in-progress` - The certificate's validation is in progress.
          example: in-progress
          enum:
          - not applicable
          - not-completed
          - completed
          - in-progress
      description: An object that contains specific information about the validation
        process.
    inline_response_200_305_result_data:
      type: object
      properties:
        actionUrls:
          $ref: "#/components/schemas/inline_response_200_305_result_data_actionUrls"
        domain_details:
          $ref: "#/components/schemas/inline_response_200_305_result_data_domain_details"
        status_details:
          $ref: "#/components/schemas/inline_response_200_305_result_data_status_details"
    inline_response_200_305_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_305_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          example:
          - Certificate request is still being processed.
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_306_result:
      type: object
      properties:
        data:
          type: string
          description: The URL to which to redirect the browser after login.
          format: url
          example: https://example.com/api/?client_id=MyHearseIsAmazing&function=login&module=bogoSSL&redirect_uri=https%3A%2F%2Fqaportal.cpanel.net%2Fbogus.cgi&response_type=token
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_307_result_data:
      type: object
      properties:
        created_time:
          type: integer
          description: When the system placed the order.
          format: unix_timestamp
          example: 1417475501
        csr:
          type: string
          description: The certificate signing request's (CSR) text. A CSR file in
            Base64 PEM format.
          format: base64 certificate
          example: Click to view...-----BEGIN CERTIFICATE REQUEST----- MIIC4DCCAcgCAQAwgZoxFjAUBgNVBAMTDXRlc3RzaW1vbi5jb20xFjAUBgNVBAsT
            DURvY3VtZW50YXRpb24xDjAMBgNVBAgTBVRleGFzMQ8wDQYDVQQKEwZjUGFuZWwx KDAmBgkqhkiG9w0BCQEWGWxhdXJlbmNlLnNpbW9uQGNwYW5lbC5uZXQxCzAJBgNV
            BAYTAlVTMRAwDgYDVQQHEwdIb3VzdG9uMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A MIIBCgKCAQEA4AVM6J4Qg3DIFWr/eJ5GRmIATYsJIepKbrDy70sq+udcO8R8xxak
            0oMZ/9mUdpjSNK/fLVTuCO0kxTfQ9VUWJllX7ThD6Zh9ZvlC/nf/OEZLm3ZbnBgu 8rbC8E9wuDOkKbJLnINgdhtowIydLK2MJ++q62bFV89jkHWTMcKyyqHENo3hc+lk
            pd9vnp8rZTinaVb7nX26uQqAFZYRo+WU0G/NPsq40QVSMoqPxyEz4qXo0hvuIlCX mzFZq/6fCVPEKPLhQgMmpdBkMz4dVOazREfqXdjMD2+QXSNiA1AwWr8l0r4rtzlx
            EYDJIR41yXp0xMl3KoolxMyvLBqZy32niQIDAQABoAAwDQYJKoZIhvcNAQEFBQAD ggEBAEaCn+rg6qlhp6SEKuZg1G6z1M+1XQoTN3E6bTdM3rD1wXjqtyFfYGTy5Bvv
            gUKrl6t312owJ2si8/K9v/ocVxdjc0rPWSOWScfSc1Od3i1L1YuqbboL2aQSak3y gpGnZMHCUED1y4xyABAFOaXUurFiZj5u3P2mBAYGt2ez2afiPlo5YpTRNCoTUlVz
            KNKkyUnptBLOvlwGgerBmOoP4QdVhTSuxO9TECsiPdldE1BVZrlFclDFvoP01jFZ WOTWz+k3O202gK4w/tPP2VMVldNFrC0QoENu85ohT1nJj6F3mrM1CZ+1c8zYzr+S
            6aAXFhHE6FweeunRAGjEJggoTPo= -----END CERTIFICATE REQUEST-----
        domains:
          type: array
          description: The domains on the certificate.
          items:
            type: string
            format: domain
            example: example.com
        expired:
          type: integer
          description: |-
            Whether the pending queue item has been deleted.
            * `1` - Deleted.
            * `0` - **Not** deleted.
          example: 0
          enum:
          - 0
          - 1
        first_poll_time:
          type: integer
          description: The first time that the system polled the provider for the
            certificate.
          format: unix_timestamp
          example: 1437475501
        identity_verification:
          type: object
          description: |-
            hash that contains information to verify an OV or EV certificate request.

            **Notes:**

             The function returns this hash for OV or EV certificate requests. This hash includes returns that vary between certificate providers. The output example demonstrates what the cPStore returns for an OV certificate.
          example:
            assumed_name: cPanel
            business_category: b
            countryName: US
            date_of_incorporation: 1996-01-01T00:00:00.000Z
            duns_number: 12-345-6789
            joi_country_name: US
            joi_locality_name: Somewhere
            joi_state_or_province_name: PA
            localityName: Houston
            organizationName: "WebPros International, LLC"
            organizationalUnitName: Team Cobra
            postalCode: "77092"
            rep_email_address: richard.ang@cpanel.net
            rep_forename: Richard
            rep_surname: Ang
            rep_telephone: 713-529-0800
            stateOrProvinceName: TX
            streetAddress: 2500 N. Loop W.
        last_poll_time:
          type: integer
          description: The last time that the system polled the provider for the certificate.
          format: unix_timestamp
          example: 1457475501
        last_status_code:
          type: string
          description: |-
            The last status code of the order. The function returns the value in the unnamed hash.
            * `CertificateNotFound` - The system cannot locate the specified certificate.
            * `RequiresApproval` - The specified certificate requires approval.
            * `OrderCanceled` - The system canceled the order of the specified certificate.
            * `OrderItemCanceled` - The system canceled the order item of the specified certificate.
          example: CertificateNotFound
          enum:
          - CertificateNotFound
          - RequiresApproval
          - OrderCanceled
          - OrderItemCanceled
        order_id:
          type: string
          description: The ID of the order.
          example: AAE35B28-E57B-11E5-A5DD-B633DD41FB49
        order_item_id:
          type: string
          description: The ID of the ordered item.
          example: "1"
        product_id:
          type: string
          description: The product's ID.
          example: "12345"
        provider:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
        status:
          type: string
          description: |-
            The status of the order.
            * `confirmed` - Payment confirmed.
            * `unconfirmed` - Payment not confirmed.
          example: confirmed
        support_uri:
          type: string
          description: The URI of the cPanel Market Provider's support site.
          format: url
          example: http://support.example.com/
        vhost_names:
          type: array
          description: The virtual host domains on the certificate.
          items:
            type: string
            format: domain
            example: example.com
    inline_response_200_307_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contain information about each certificate
            for which the system polls the provider.
          items:
            $ref: "#/components/schemas/inline_response_200_307_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_308_result_data:
      type: object
      properties:
        dcv_file_allowed_characters:
          type: array
          description: An array that lists the characters which the provider allows
            in the DCV check file's filename.
          items:
            type: array
            example:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - A
            - B
            - C
            - D
            - E
            - F
        dcv_file_extension:
          type: string
          description: The DCV check file extension that the provider requires.
          example: txt
        dcv_file_random_character_count:
          minimum: 1
          type: integer
          description: The number of characters that the provider allows in the DCV
            check file's filename.
          example: 32
        dcv_file_relative_path:
          type: string
          description: "The path to the DCV check file, relative to the domain's document\
            \ root directory."
          format: path
          example: .well-known/pki-validation
        dcv_max_redirects:
          minimum: 0
          type: integer
          description: The maximum number of HTTP redirects the provider allows.
          example: 0
        dcv_user_agent_string:
          type: string
          description: The user agent string that the system will use for the imitated
            local DCV check.
          example: COMODO DCV
    inline_response_200_308_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_308_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_309_result_data:
      type: object
      properties:
        display_name:
          type: string
          description: The cPanel Market provider's display name.
          example: cPanel Store
        name:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
    inline_response_200_309_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that lists enabled providers in the cPanel
            Market.
          items:
            $ref: "#/components/schemas/inline_response_200_309_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_310_result_data_encrypted_action_urls:
      type: object
      properties:
        evClickThroughStatus:
          type: string
          description: |-
            A URL the user must click to electronically sign an agreement for their Extended Validation (EV) certificate.
            * An encrypted URL.
            * `null` - No action required.
          nullable: true
          example: mgs8RgnN0rkRmJz0SAMvjLokoPoXm5LdzEkmKA7IsGmzvU5XTrFInOegFBbWFycToS7FPOevzkH9\nZp0+QG1xcC/0bWKB1cNeTiYB3Fmv0HGu2ZsA+AYgIhSsZikyD9M6YbHk1IZA3GLNPl8DxX5zG9LQ\nHiv7Ll2QMJcPmMaJ3xktTY9NuiaPiPmYBljEE094LeqabP3w/kRALDnhR4FcwjsTn7iDJKoxtKju\nP/DbgV32vhESwWoaKrIYPkSJ/Dav0a/LQqLqD3Jg27WgrW+GaZSbHlHr09UQW/2CIiIK7jbUoLG3\nANL0fKevyjxrBjCfXQq0umXcZIJPWo4gfukfkQ==\n
        ovCallbackStatus:
          type: string
          description: |-
            URL the user must click to verify their identity by phone to complete their Organization Validation (OV) certificate order.
            * An encrypted URL.
            * `null` - No action required.
          nullable: true
          example: mgs8RgnN0rkRmJz0SAMvjLokoPoXm5LdzEkmKA7IsGmzvU5XTrFInOegFBbWFycToS7FPOevzkH9\nZp0+QG1xcC/0bWKB1cNeTiYB3Fmv0HGu2ZsA+AYgIhSsZikyD9M6YbHk1IZA3GLNPl8DxX5zG9LQ\nHiv7Ll2QMJcPmMaJ3xktTY9NuiaPiPmYBljEE094LeqabP3w/kRALDnhR4FcwjsTn7iDJKoxtKju\nP/DbgV32vhESwWoaKrIYPkSJ/Dav0a/LQqLqD3Jg27WgrW+GaZSbHlHr09UQW/2CIiIK7jbUoLG3\nANL0fKevyjxrBjCfXQq0umXcZIJPWo4gfukfkQ==\n
      description: |-
        An object that contains encrypted URLs a user must click to complete their SSL certificate order.

        **Note:**

        This return may also contain additional key values. For more information, read [Sectigo's documentation](https://sectigo.com/uploads/files/CollectSSL-v1.17.pdf).
    inline_response_200_310_result_data:
      type: object
      properties:
        certificate_pem:
          type: string
          description: |-
            The certificate's text.
            * `null` - The certificate is not available.
            * A certificate file in [Base64 PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.
          format: base64 certificate
          nullable: true
          example: '-----BEGIN CERTIFICATE----- MIIDcTCCAlmgAwIBAgIFAU+BNVgwDQYJKoZIhvcNAQEFBQAwUTESMBAGA1UEAwwJ
            c2lza28udGxkMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGY1BhbmVsMQswCQYDVQQI DAJUWDEQMA4GA1UEBwwHSG91c3RvbjAeFw0xNDEwMDYyMjI2MTlaFw0xNTEwMDYy
            MjI2MTlaMFExEjAQBgNVBAMMCXNpc2tvLnRsZDELMAkGA1UEBhMCVVMxDzANBgNV BAoMBmNQYW5lbDELMAkGA1UECAwCVFgxEDAOBgNVBAcMB0hvdXN0b24wggEiMA0G
            CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9zx6zGiHdmWA0dKtoXmJiWXpZ9E3P Xx3YHsjFEWW7e5pH0vZ+jVMzDmm5nsJ7RXrAkZO1IvpIpVLvoQfiJOWVvkD+o9fW
            voK1tWJS72FSgPju+58mA2ieBuc87A790Pzuv1P3NR3zFLAjUR99zkHR1fpri/da M3PBWO8ET48FWkyU1kOeZaUlF67/+wrEiNgg+t1qhKOCAB61PdNVkLaSGHimksuC
            +Czk8Kq9nuS0E0TCnDtjjEyJ455FUcaCfczlTb8xkB/F9ORe74yTzD+vlk0tFMG6 PLj/ajIwWqwO0qmQ8wX3NRxkWgGz5kVO1wrVJarKQ5EYQ3/mgvit0v6dAgMBAAGj
            UDBOMB0GA1UdDgQWBBRw+wKBo34+bgexjAa3EMDsgSCd7zAfBgNVHSMEGDAWgBRw +wKBo34+bgexjAa3EMDsgSCd7zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUA
            A4IBAQCHRXIs53opzKM2rM8Qe8lcw524WK6hqy2EWrZHp78N7rU7/6DQ/I3hv3Wh cDDIO04I2/Xhe88MLBaLoM367Ya+vy7CaLr14aLi/SfQszMA0ALBvMao+Fis0iVw
            FYq/NLgSXw+fgnpFskt8v8iQZ+4Kaal8U8e9sVgu8m0RgO7rzym1eRiIKpsKd1rh /SD7LbSN7M7TRL3QqF7ltw9sQhAAsQcRaBBF21pdWrqhiGZ+Eioo3hhgwNavH2ag
            qz78ddHwrFpHFwrEeUk1OfpPb76MYIce7xIy/4oQNdg6fOq4l/FrajBv+WkzDVPa Km6r7YmwfLN/YMZBHXSR58oOGP9W
            -----END CERTIFICATE-----'
        encrypted_action_urls:
          $ref: "#/components/schemas/inline_response_200_310_result_data_encrypted_action_urls"
        status_code:
          type: string
          description: The status code of the certificate.
          example: RequiresApproval
        status_message:
          type: string
          description: |-
            An error message from the certificate provider. For example, why a certificate authority rejected an SSL certificate.

            **Note:**

            If no error message exists, this will return an empty string.
          example: "PRE-SIGN FAILED: CAA: Processing error"
    inline_response_200_310_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_310_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API. Warnings
            describe non-critical failures or other problematic conditions
            noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_311_result_data:
      type: object
      properties:
        certificate_pem:
          type: string
          description: |-
            The text of the certificate, if available.
            * `null` - The certificate is not available.
          format: base64 certificate
          nullable: true
          example: "null"
        created_time:
          type: integer
          description: When the system placed the order.
          format: unix_timestamp
          example: 1460136406
        csr:
          type: string
          description: The Certificate Signing Request's (CSR's) text.
          format: base64 certificate
          example: '-----BEGIN CERTIFICATE REQUEST-----\nMIICqjCCAZICAQAwHDEaMBgGA1UEAxMRY3BhbmVsc3NsdGVzdC5vcmcwggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqu4KLPxCgAENTJFjcUyc4v5KaF8Lu\n2OldjIT/vB58IRCIUxdDSD29v/qHFVBaUFEtr+Ssey0strMcc6JYSl8Vdwfe2qwv\npB6+Ufg+hlN4lAgojxgwz7iZlPnGuRVfNTvNMmljVRzGDc4SSzskpDxZhk+aaMgP\nSkMLFg6f6pFZ+44alridlSG5gxD34xWAtt8Qy2v+6Q4XVuMNCd9KlyAoCV9Q+wH1\nq49yoRdwvcY6G6mqlFWtHsToz4tdYk/Nt7odZnyKcjHWGWnlRzO2FGbbBxVKF8s6\ns3DL5OwPRfQQD18V7eL7NmcFo45zmdndBOevrLuwXJ1yWITM2bmYgF1nAgMBAAGg\nSTBHBgkqhkiG9w0BCQ4xOjA4MDYGA1UdEQEB/wQsMCqCEWNwYW5lbHNzbHRlc3Qu\nb3JnghV3d3cuY3BhbmVsc3NsdGVzdC5vcmcwDQYJKoZIhvcNAQELBQADggEBAFAJ\nSqTvd3d8PN26UiT4uX0WjofaX8u1/11hU5Saekai0Dxl/ijq2R7TpebXe9r0t6Cr\ns7NXKszVoKzQHV4nSFbfb3ZxEsnVDXbPUv3D+oLfGpMASLG+P2yOjmDhzZBNJgo4\nQu6nf6ggJxJ0PRM81xL234FAKqsOvvTwTLXtYVrwbUCzfB+yKJXvfeGETR/3HGxR\nqoJ97Zmjsbw78fETEsZ6rsBHDPuxtxum73BC7qoLjCl4psPznHshXvWTeV9fyR3c\nqpdpLvwBxhI8ZOWoNGgJlUpY9jUFgqG+YI/Mkmzmxk9QC9edIHSScTXxroYkmwMC\nginnKRLDafSp+7FyIzs=\n-----END
            CERTIFICATE REQUEST-----'
        deleted:
          type: integer
          description: |-
            Whether the system has deleted the item from the pending queue.
            * `0` - Deleted.
            * `1` - **Not** deleted.
          example: 0
          enum:
          - 0
          - 1
        domains:
          type: array
          description: A list of domains that the certificate request covers.
          items:
            type: string
            format: domain
            example: example.com
        expired:
          type: integer
          description: |-
            Whether the system has deleted the item from the pending queue.
            * `1` - Deleted.
            * `0` - **Not** deleted.
          example: 0
          enum:
          - 0
          - 1
        first_poll_time:
          type: integer
          description: The first time that the system polled the provider for the
            certificate.
          format: unix_timestamp
          example: 1458061262
        installed:
          type: integer
          description: |-
            Whether the system installed the certificate.
            * `1` - Installed.
            * `0` - **Not** installed.
          example: 0
          enum:
          - 0
          - 1
        last_poll_time:
          type: integer
          description: The last time that the system polled the provider for the certificate.
          format: unix_timestamp
          example: 1458061299
        last_status_code:
          type: string
          description: |-
            The last status code of the order.
            * `CertificateNotFound` - The system cannot locate the specified certificate.
            * `RequiresApproval` - The specified certificate requires approval.
            * `OrderCanceled` - The system canceled the order of the specified certificate.
            * `OrderItemCanceled` - The system canceled the order item of the specified certificate.
          example: CertificateNotFound
          enum:
          - CertificateNotFound
          - RequiresApproval
          - OrderCanceled
          - OrderItemCanceled
        last_status_message:
          type: string
          description: |-
            An error message from the certificate provider.
            For example, why a certificate authority rejected an SSL certificate.

            **Note:**

            If no error message exists, this will return an empty string.
          example: "PRE-SIGN FAILED: CAA: Processing error"
        order_id:
          type: string
          description: A unique identifier for the order.
          example: "19461"
        order_item_id:
          type: string
          description: A unique identifier of each item in the order.
          example: f9d7
        product_id:
          type: string
          description: An identifier for a given product.
          example: fg2
        provider:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
        status:
          type: string
          description: |-
            The status of the order.
            * `confirmed` - Payment confirmed.
            * `unconfirmed` - Payment **not** confirmed.
          example: confirmed
          enum:
          - confirmed
          - unconfirmed
        vhost_names:
          type: array
          description: A list of virtual host names.
          items:
            type: string
            format: domain
            example: example.com
    inline_response_200_311_result:
      type: object
      properties:
        data:
          type: array
          description: Information about each certificate request in the pending queue.
          items:
            $ref: "#/components/schemas/inline_response_200_311_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API. Warnings
            describe non-critical failures or other problematic conditions
            noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_312_result_data_certificates:
      type: object
      properties:
        key_id:
          type: string
          description: The private key's ID.
          example: ac90f_639fd_6c236062f0d7a4579a30e01612c4cee0
        order_item_id:
          minimum: 1
          type: integer
          description: The ID of the ordered item.
          example: 12345
      description: Information about each certificate in the order.
    inline_response_200_312_result_data:
      type: object
      properties:
        certificates:
          $ref: "#/components/schemas/inline_response_200_312_result_data_certificates"
        checkout_url:
          type: string
          description: The URL that the cPanel Market provider uses to process payment.
          format: url
          example: http://store.example.com/showmethemoney.cgi
        order_id:
          minimum: 1
          type: integer
          description: The order ID that the cPanel Market provider assigned.
          example: 123456
    inline_response_200_312_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_312_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API. Warnings
            describe non-critical failures or other problematic conditions
            noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_313_result_data:
      type: object
      properties:
        error_type:
          type: string
          description: |-
            The type of error that the function encountered.

            * `EntryDoesNotExist` â The returned `order_item_ids` do not exist in the cPanel Market pending queue for the user.
          example: EntryDoesNotExist
          enum:
          - EntryDoesNotExist
        order_item_ids:
          type: array
          description: An array that lists order item IDs which do not exist in the
            cPanel Market pending queue for the user.
          items:
            minimum: 0
            type: integer
            example: 8675309
      description: The function only returns these values if the user or users do
        **not** have the `order_item_id` item in the cPanel Market pending queue.
      nullable: true
    inline_response_200_313_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_313_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_314_result_data:
      type: object
      properties:
        error_type:
          type: string
          description: Any errors that the function encounters.
          nullable: true
          example: This is an error.
    inline_response_200_314_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_314_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_315_result_data:
      type: object
      properties:
        access_token:
          type: string
          description: The access token that returns from the code parameter after
            you log in.
          example: "8675309"
    inline_response_200_315_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_315_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` Success.
            * `0` Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_316_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_319_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          example:
          - Htaccess Installed
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_320_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_321_result:
      type: object
      properties:
        data: {}
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_322_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_324_result_data:
      type: object
      properties:
        redirection_enabled:
          type: integer
          description: |-
            Whether the domain redirects to another URL.
            * `1` - Redirects.
            * `0` - Doesn't redirect.
          example: 1
          enum:
          - 0
          - 1
        url:
          type: string
          description: The URL to which to the domain redirects.
          format: url
          example: http://www.domain.com
    inline_response_200_324_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_324_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_325_result_data:
      type: object
      properties:
        extension:
          type: string
          description: The handler's extension. A valid file extension.
          example: .foo
        handler:
          type: string
          description: The handler's name. A valid string.
          example: text-foo
        origin:
          type: string
          description: |-
            The handler's owner.
            - system
            - user
          example: user
    inline_response_200_325_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_325_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_326_result_data:
      type: object
      properties:
        allow_null:
          type: integer
          description: |-
            Whether the domain allows hotlinks from an empty or null referral URL.
            * `1` - Allows hotlinks.
            * `0` - Does not allow hotlinks.
          example: 1
          enum:
          - 0
          - 1
        extensions:
          type: string
          description: A comma-separated list of file types to hotlink protect.
          example: "jpg,jpeg,gif,png,bmp"
        redirect_url:
          type: string
          description: The URL to which to send hotlinkers.
          format: url
          example: http://redirect.example.com/
        state:
          type: string
          description: |-
            Whether hotlink protection is enabled.

            * `enabled`
            * `disabled`
          example: disabled
          enum:
          - enabled
          - disabled
        urls:
          type: array
          description: An array of the domains with hotlink protection.
          items:
            type: string
            format: url
            example: http://example.com/
    inline_response_200_326_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_326_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_327_result_data:
      type: object
      properties:
        extension:
          type: string
          description: The file extension.
          example: .foo
        origin:
          type: string
          description: |-
            The handler's owner.
            *  `system`
            *  `user`
          example: user
          enum:
          - system
          - user
        type:
          type: string
          description: The MIME type.
          example: application/foo
    inline_response_200_327_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_327_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * 1 - Success
            * 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_328_result_data:
      type: object
      properties:
        destination:
          type: string
          description: The redirect's destination URL.
          format: url
          example: http://redirect.example.com/
        displaydomain:
          type: string
          description: |-
            The domain to redirect.

            * `ALL` is the only possible value.
          example: ALL
          enum:
          - ALL
        displaysourceurl:
          type: string
          description: "The path to the file within the domain to test, relative to\
            \ the home directory."
          format: url-path
          example: /marceau.html
        docroot:
          type: string
          description: The absolute file path to the source domain's document root.
          format: path
          example: /home/example/public_html
        domain:
          type: string
          description: The domain to redirect.
          format: domain
          example: example.com
        kind:
          type: string
          description: |-
            The kind of redirect.

            * `rewrite` â The request sent a redirect to another path on the server.
            * `redirect` â The request sent a redirect for the URL.
            * `redirectmatch` â The request sent a redirect based on a regular
            expression match of the URL.
          example: rewrite
          enum:
          - rewrite
          - redirect
          - redirectmatch
        matchwww:
          type: integer
          description: |-
            Whether the redirect matches `www.` subdomains.
            * `1` â Matches.
            * `0` â Does not match.
          example: 1
          enum:
          - 1
          - 0
        matchwww_text:
          type: string
          description: |-
            Whether the [*Redirect with or without www.* option](https://go.cpanel.net/Redirects) is active.

            * `checked` â The *Redirect with or without www.* option is active.
          example: checked
          enum:
          - checked
        opts:
          type: string
          description: |-
            The options that the function passes to Apache as part of
            the [Rewrite rule](https://httpd.apache.org/docs/2.4/rewrite/flags.html#flag_l).
          example: L
        source:
          type: string
          description: "The path to the file within the domain to test, relative to\
            \ the home directory."
          format: url-path
          example: /marceau.html
        sourceurl:
          type: string
          description: "The path to the file within the domain to test, relative to\
            \ the home directory."
          format: url-path
          example: /marceau.html
        statuscode:
          type: string
          description: "The [HTTP Status Code](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes)\
            \ of the request"
          example: "301"
        targeturl:
          type: string
          description: The redirect's destination URL.
          format: url
          example: http://redirect.example.com/
        type:
          type: string
          description: |-
            Whether the redirect is permanent or temporary.

            * `permanent` âÂ The redirect is permanent.
            * `temporary` âÂ The redirect is temporary.
          example: permanent
          enum:
          - permanent
          - temporary
        urldomain:
          type: string
          description: The domain to redirect.
          format: domain
          example: example.com
        wildcard:
          type: integer
          description: |-
            Whether the wildcard subdomains match.

            * `1` â Matches.
            * `0` â Does **not** match.
          example: 1
          enum:
          - 1
          - 0
        wildcard_text:
          type: string
          description: |-
            Whether the [*Wild Card Redirect*](https://go.cpanel.net/Redirects) option is active.

            * `checked` â The *Wild Card Redirect* option is active.
          example: checked
          enum:
          - checked
    inline_response_200_328_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_328_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_329_result_data:
      type: object
      properties:
        domain:
          type: string
          description: |-
            The redirect's domain, or `** All Public Domains **`.

            * A valid domain.
            * `** All Public Domains **`
          example: example.com
          anyOf:
          - type: string
            description: The redirect's domain.
            format: domain
          - type: string
            description: '** All Public Domains **'
        url:
          type: string
          description: The redirect's URL.
          format: url
          example: http://redirect.example.com
    inline_response_200_329_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_329_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_330_result_data:
      type: object
      properties:
        dependencies:
          type: array
          description: An array of domains that your changes to a selected domain
            affect.
          example:
          - arkansas.com
          - kansas.com
          - nevada.com
          - newmexico.com
          - texas.com
          items:
            type: string
            format: domain
        domain:
          type: string
          description: The cPanel account's domain.
          format: domain
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether ModSecurity is enabled on the account.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 0
          enum:
          - 0
          - 1
        exception:
          type: string
          description: An exception error message. The function only returns this
            value if an error occurs.
          example: An error occurred during the userdata update for domain âexample.comâ.
        searchhint:
          type: string
          description: A comma-separated list of domain-related search terms.
          example: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
        type:
          type: string
          description: |-
            The domain type.
            * `main` - A main domain.
            * `sub` - A subdomain.
          example: main
          enum:
          - main
          - sub
    inline_response_200_330_result:
      type: object
      properties:
        data:
          type: array
          example:
          - dependencies:
            - dallas.com
            domain: dallas.example.com
            enabled: 0
            searchhint: dallas.com
            type: sub
          - dependencies:
            - arkansas.com
            - kansas.com
            - nevada.com
            - newmexico.com
            - texas.com
            domain: example.com
            enabled: 0
            searchhint: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
            type: main
          - dependencies:
            - galveston.com
            domain: galveston.example.com
            enabled: 0
            searchhint: galveston.com
            type: sub
          - dependencies:
            - houston.com
            domain: houston.example.com
            enabled: 0
            searchhint: houston.com
            type: sub
          - dependencies:
            - neworleans.com
            domain: neworleans.example.com
            enabled: 0
            searchhint: neworleans.com
            type: sub
          - dependencies:
            - sanantonio.com
            domain: sanantonio.example.com
            enabled: 0
            searchhint: sanantonio.com
            type: sub
          items:
            $ref: "#/components/schemas/inline_response_200_330_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_331_result:
      type: object
      properties:
        data:
          oneOf:
          - type: array
            example:
            - dependencies:
              - dallas.com
              domain: dallas.example.com
              enabled: 0
              searchhint: dallas.com
              type: sub
            - dependencies:
              - arkansas.com
              - kansas.com
              - nevada.com
              - newmexico.com
              - texas.com
              domain: example.com
              enabled: 0
              searchhint: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
              type: main
            - dependencies:
              - galveston.com
              domain: galveston.example.com
              enabled: 0
              searchhint: galveston.com
              type: sub
            items:
              type: object
              properties:
                dependencies:
                  type: array
                  description: An array of domains that your changes to a selected
                    domain affect.
                  example:
                  - arkansas.com
                  - kansas.com
                  - nevada.com
                  - newmexico.com
                  - texas.com
                  items:
                    type: string
                    format: domain
                domain:
                  type: string
                  description: The cPanel account's domain.
                  format: domain
                  example: example.com
                enabled:
                  type: integer
                  description: |-
                    Whether ModSecurity is enabled on the domain.
                    * `1` - Enabled.
                    * `0` - Disabled.
                  example: 1
                  enum:
                  - 0
                  - 1
                exception:
                  type: string
                  description: An exception error message. The function only returns
                    this value if an error occurs.
                  example: An error occurred during the userdata update for domain
                    âexample.comâ.
                searchhint:
                  type: string
                  description: A comma-separated list of domain-related search terms.
                  example: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
                type:
                  type: string
                  description: |-
                    The domain type.
                    * `main` - A main domain.
                    * `sub` - A subdomain.
                  example: main
                  enum:
                  - main
                  - sub
          - type: object
            properties:
              no_domains_provided:
                type: integer
                description: Indicates caller error on API call.
                example: 1
                enum:
                - 1
          - type: object
            properties:
              invalid_domains:
                type: array
                description: List of invalid domains provided by caller.
                example:
                - example.invalid
                items:
                  type: string
              invalid_domains_provided:
                type: integer
                description: Indicates caller error on API call.
                example: 1
                enum:
                - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_332_result:
      type: object
      properties:
        data:
          type: array
          example:
          - dependencies:
            - dallas.com
            domain: dallas.example.com
            enabled: 1
            searchhint: dallas.com
            type: sub
          - dependencies:
            - arkansas.com
            - kansas.com
            - nevada.com
            - newmexico.com
            - texas.com
            domain: example.com
            enabled: 1
            searchhint: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
            type: main
          - dependencies:
            - galveston.com
            domain: galveston.example.com
            enabled: 1
            searchhint: galveston.com
            type: sub
          - dependencies:
            - houston.com
            domain: houston.example.com
            enabled: 1
            searchhint: houston.com
            type: sub
          - dependencies:
            - neworleans.com
            domain: neworleans.example.com
            enabled: 1
            searchhint: neworleans.com
            type: sub
          - dependencies:
            - sanantonio.com
            domain: sanantonio.example.com
            enabled: 1
            searchhint: sanantonio.com
            type: sub
          items:
            $ref: "#/components/schemas/inline_response_200_330_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_333_result:
      type: object
      properties:
        data:
          oneOf:
          - type: array
            example:
            - dependencies:
              - dallas.com
              domain: dallas.example.com
              enabled: 1
              searchhint: dallas.com
              type: sub
            - dependencies:
              - arkansas.com
              - kansas.com
              - nevada.com
              - newmexico.com
              - texas.com
              domain: example.com
              enabled: 1
              searchhint: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
              type: main
            - dependencies:
              - galveston.com
              domain: galveston.example.com
              enabled: 1
              searchhint: galveston.com
              type: sub
            items:
              type: object
              properties:
                dependencies:
                  type: array
                  description: An array of domains that your changes to a selected
                    domain affect.
                  example:
                  - arkansas.com
                  - kansas.com
                  - nevada.com
                  - newmexico.com
                  - texas.com
                  items:
                    type: string
                    format: domain
                domain:
                  type: string
                  description: The cPanel account's domain.
                  format: domain
                  example: example.com
                enabled:
                  type: integer
                  description: |-
                    Whether ModSecurity is enabled on the domain.
                    * `1` - Enabled.
                    * `0` - Disabled.
                  example: 1
                  enum:
                  - 0
                  - 1
                exception:
                  type: string
                  description: An exception error message. The function only returns
                    this value if an error occurs.
                  example: An error occurred during the userdata update for domain
                    âexample.comâ.
                searchhint:
                  type: string
                  description: A comma-separated list of domain-related search terms.
                  example: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
                type:
                  type: string
                  description: |-
                    The domain type.
                    * `main` - A main domain.
                    * `sub` - A subdomain.
                  example: main
                  enum:
                  - main
                  - sub
          - type: object
            properties:
              no_domains_provided:
                type: integer
                description: Indicates caller error on API call.
                example: 1
                enum:
                - 1
          - type: object
            properties:
              invalid_domains:
                type: array
                description: List of invalid domains provided by caller.
                example:
                - example.invalid
                items:
                  type: string
              invalid_domains_provided:
                type: integer
                description: Indicates caller error on API call.
                example: 1
                enum:
                - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_334_result_data:
      type: object
      properties:
        installed:
          type: integer
          description: |-
            Whether ModSecurity is installed on the server.
            * `1` - Installed.
            * `0` - Not installed.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_334_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_334_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_335_result_data:
      type: object
      properties:
        dependencies:
          type: array
          description: An array of domains that your changes to a selected domain
            affect.
          example:
          - arkansas.com
          - kansas.com
          - nevada.com
          - newmexico.com
          - texas.com
          items:
            type: string
            format: domain
        domain:
          type: string
          description: The cPanel account's domain.
          format: domain
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether ModSecurity is enabled for the account.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        searchhint:
          type: string
          description: A comma-separated list of domain-related search terms.
          example: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
        type:
          type: string
          description: |-
            The domain type.
            * `main` - A main domain.
            * `sub` - A subdomain.
          example: main
          enum:
          - main
          - sub
    inline_response_200_335_result_metadata_modsec:
      properties:
        total_disabled:
          type: integer
          description: The total number of disabled entries.
          example: 3
        total_enabled:
          type: integer
          description: The total number of enabled entries.
          example: 3
    inline_response_200_335_result_metadata:
      properties:
        modsec:
          $ref: "#/components/schemas/inline_response_200_335_result_metadata_modsec"
        transformed:
          type: integer
          description: Post-processing may have transformed the data.
          example: 1
          enum:
          - 1
    inline_response_200_335_result:
      type: object
      properties:
        data:
          type: array
          example:
          - dependencies:
            - dallas.com
            domain: dallas.example.com
            enabled: 1
            searchhint: dallas.com
            type: sub
          - dependencies:
            - arkansas.com
            - kansas.com
            - nevada.com
            - newmexico.com
            - texas.com
            domain: example.com
            enabled: 1
            searchhint: "arkansas.com,kansas.com,nevada.com,newmexico.com,texas.com"
            type: main
          - dependencies:
            - galveston.com
            domain: galveston.example.com
            enabled: 1
            searchhint: galveston.com
            type: sub
          - dependencies:
            - houston.com
            domain: houston.example.com
            enabled: 0
            searchhint: houston.com
            type: sub
          - dependencies:
            - neworleans.com
            domain: neworleans.example.com
            enabled: 0
            searchhint: neworleans.com
            type: sub
          - dependencies:
            - sanantonio.com
            domain: sanantonio.example.com
            enabled: 0
            searchhint: sanantonio.com
            type: sub
          items:
            $ref: "#/components/schemas/inline_response_200_335_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_335_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_336_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API.
            Warnings describe non-critical failures or
             other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_337_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API.
            Warnings describe non-critical failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_338_result_data:
      type: object
      properties:
        msg_text:
          type: string
          description: The message's contents.
          example: OK
        msg_type:
          type: string
          description: |-
            The type of message.
            * `status`
            * `error`
            * `info`
            * `note`
            * `warning`

            **Note:**

            For more information, read [MySQL's `CHECK TABLE` documentation](http://dev.mysql.com/doc/refman/5.7/en/check-table.html).
          example: status
          enum:
          - status
          - error
          - info
          - note
          - warning
        table:
          type: string
          description: The table's name.
          example: table1
    inline_response_200_338_result:
      type: object
      properties:
        data:
          type: array
          description: An array that contains a response message for each of a database's
            tables in sequence.
          items:
            $ref: "#/components/schemas/inline_response_200_338_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API.
            Warnings describe non-critical failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_339_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_340_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API.
            Warnings describe non-critical failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_344_result:
      type: object
      properties:
        data:
          type: string
          description: The string to give to MySQL.
          example: "-- MySQL dump 10.13  Distrib 5.7.26, for Linux (x86_64)\n--\n\
            -- Host: localhost    Database:username_example_db\n-- ------------------------------------------------------\n\
            -- Serverversion\t5.7.26\n\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT*/;\n\
            /*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n\
            /*!40101 SET@OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!40101\
            \ SET NAMES utf8mb4*/;\n/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;\n\
            /*!40103 SET TIME_ZONE='+00:00'*/;\n/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS,\
            \ UNIQUE_CHECKS=0 */;\n/*!40014 SET@OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS,\
            \ FOREIGN_KEY_CHECKS=0 */;\n/*!40101 SET@OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO'\
            \ */;\n/*!40111 SE@OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;\n\n--\n\
            -- Current Database:`username_example_db`\n--\n\nCREATE DATABASE /*!32312\
            \ IF NOT EXISTS*/ `username_example_d/*!40100 DEFAULT CHARACTER SET latin1\
            \ */;\n\nUSE `username_example_db`;\n/*!40103 SETTIME_ZONE=@OLD_TIME_ZONE\
            \ */;\n\n/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;\n/*!40014 SETFOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS\
            \ */;\n/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS*/;\n/*!40101 SET\
            \ CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n/*!40101 SETCHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS\
            \ */;\n/*!40101 SETCOLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n\
            /*!40111 SET SQL_NOTES=@OLD_SQL_NOTES*/;\n\n-- Dump completed on 2019-06-06\
            \  9:44:04\n"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_345_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
            description: The notes associated with the account's Remote MySQL hosts.
            example: Located somewhere in the Ford Galaxy
          description: The keys are remote MySQL hostnames or IP addresses and values
            are their corresponding notes.
          example:
            "1.2.3.45": The combination on my luggage
            "12.34.56.78": Located somewhere in the Ford Galaxy
            "8.8.8.8": Located on Spaceball 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_346_result:
      type: object
      properties:
        data:
          type: array
          description: |-
            An array of privileges.

            **Note:**

            If the database user does not have privileges on the database database,
            this array will return empty.
            * `ALL PRIVILEGES`
            * One or more of the following individual privileges:
              * `ALTER`
              * `ALTER ROUTINE`
              * `CREATE`
              * `CREATE ROUTINE`
              * `CREATE TEMPORARY TABLES`
              * `CREATE VIEW`
              * `DELETE`
              * `DROP`
              * `EVENT`
              * `EXECUTE`
              * `INDEX`
              * `INSERT`
              * `LOCK TABLES`
              * `REFERENCES`
              * `SELECT`
              * `SHOW VIEW`
              * `TRIGGER`
              * `UPDATE`
          items:
            type: string
            example: CREATE
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API.
            Warnings describe non-critical failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_347_result_data:
      type: object
      properties:
        max_database_name_length:
          minimum: 1
          type: integer
          description: The maximum length of a MySQL database name.
          example: 64
        max_username_length:
          minimum: 1
          type: integer
          description: The maximum length of a MySQL database user's name.
          example: 16
        prefix:
          type: string
          description: |-
            The account's database prefix, if database prefixing is enabled.
            * If database prefixing is enabled, a string of up to the first eight characters of the cPanel account username, and an underscore (_).
            * If database prefixing is disabled, this is null.
          nullable: true
          example: user_
    inline_response_200_347_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_347_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_348_result_data:
      type: object
      properties:
        host:
          description: The MySQL server's hostname or IP address.
          oneOf:
          - type: string
            format: ipv4
            example: 192.0.2.1
          - type: string
            format: domain
            example: remote.example.com
        is_remote:
          type: integer
          description: |-
            Whether the host is a remote MySQL server.
            * `1` - Remote host.
            * `0` - Local host.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: string
          description: The MySQL server's version.
          example: 5.6.23
    inline_response_200_348_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_348_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_349_result_data:
      type: object
      properties:
        database:
          type: string
          description: The database name.
          example: user_db
        disk_usage:
          minimum: 0
          type: integer
          description: "The disk space that the database uses, in bytes."
          example: 673
        users:
          type: array
          description: |-
            A list of database usernames.

            **Note:**

            If no users exist on a database, the function returns an empty array.
          example:
          - db_user
          - db2_user
          items:
            type: string
    inline_response_200_349_result:
      type: object
      properties:
        data:
          type: array
          description: Information about the database.
          items:
            $ref: "#/components/schemas/inline_response_200_349_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_350_result:
      type: object
      properties:
        data:
          type: array
          description: "An array of MySQL routines. If no routines exist, the function\
            \ returns an empty array."
          example:
          - cptest_newdb.hello
          - cptest_newdb.my_routine
          items:
            type: string
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_351_result_data:
      type: object
      properties:
        databases:
          type: array
          description: |-
            An array of databases that belong to the
            database user.

            **Note:**

            If no users are assigned to a database, the function returns
            an empty array.
          example:
          - user_database1
          - user_database2
          items:
            type: string
        shortuser:
          type: string
          description: The short version of the database username.
          example: user1
        user:
          type: string
          description: The database username.
          example: example_user1
    inline_response_200_351_result:
      type: object
      properties:
        data:
          type: array
          description: An array of database information objects.
          items:
            $ref: "#/components/schemas/inline_response_200_351_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_352_result_data:
      type: object
      properties:
        is_remote:
          type: integer
          description: |-
            Whether the host is a remote MySQL server.
            * `1` - Remote host.
            * `0` - Local host.
          example: 1
          enum:
          - 0
          - 1
        remote_host:
          description: The remote MySQL server's hostname or IP address.
          oneOf:
          - type: string
            description: An IP address.
            format: ipv4
            example: 192.0.2.1
          - type: string
            description: A hostname.
            format: domain
            example: remote.example.com
    inline_response_200_352_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_352_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_353_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API.
            Warnings describe non-critical failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_355_result_data:
      type: object
      properties:
        msg_text:
          type: string
          description: The message's contents.
          example: OK
        msg_type:
          type: string
          description: |-
            The type of message.

            * `status`
            * `error`
            * `info`
            * `note`
            * `warning`

            **Note:**

            For more information, read [MySQL's REPAIR TABLE](http://dev.mysql.com/doc/refman/5.7/en/repair-table.html) documentation.
          example: status
          enum:
          - status
          - error
          - info
          - note
          - warning
        table:
          type: string
          description: The table's name in the database.
          example: table1
    inline_response_200_355_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing a response message for each
            of a database's table in sequence.
          items:
            $ref: "#/components/schemas/inline_response_200_355_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_357_result_data_failures:
      type: object
      properties:
        error:
          type: string
          description: The error message.
        host:
          type: string
          description: The hostname that reported the error.
          format: domain
    inline_response_200_357_result_data:
      type: object
      properties:
        failures:
          type: array
          description: An array of the function's error messages.
          items:
            $ref: "#/components/schemas/inline_response_200_357_result_data_failures"
    inline_response_200_357_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_357_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API.
            Warnings describe non-critical failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_359_result_data:
      type: object
      properties:
        database:
          description: The randomized name of the database created. This is normally
            prefixed with the account username and can also be prefixed with application
            prefix.
          oneOf:
          - type: string
            format: database name
            example: cpuser_wp_gwl7vpix28owo855yjomc7rsghkbjv0d0kf45kcvzip9tyxw9kdd
          - type: string
            format: database name
            example: cpuser_ljiupjkhrn6zs20c9glnms0xor8sx48fm4noohri07xdruj31q
        database_user:
          description: The randomized username assigned to the database. This is normally
            prefixed with the account username and can also be prefixed with application
            prefix.
          oneOf:
          - type: string
            format: database username
            example: cpuser_wp_dji1jdt7nhjiwjcjju45
          - type: string
            format: database username
            example: cpuser_dji1jdt7nhjiwjcjju45asd
        database_user_password:
          type: string
          description: A randomly generated password intended to be maximally randomized.
          format: password
          example: ";1t/U:wnFkCRL9q68]/+<TX=.C#7]n"
        hostname:
          description: The hostname to connect to from within the server to connect
            to the MySQL server
          oneOf:
          - type: string
            format: hostname
            example: localhost
          - type: string
            format: hostname
            example: mysql.remote.server.tld
        port:
          type: string
          description: The port to connect to from within the server to connect to
            the MySQL server
          format: unix-port
          example: "3306"
    inline_response_200_359_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_359_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_361_result:
      type: object
      properties:
        data:
          properties: {}
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_365_result:
      type: object
      properties:
        data:
          minimum: 0
          type: integer
          description: The number of server-wide notifications.
          example: 3
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_366_result_data:
      type: object
      properties:
        uri:
          type: string
          description: The file's absolute file path.
          example: /usr/local/cpanel/base/favicon.ico
    inline_response_200_366_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_366_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_368_result_data:
      maxProperties: 1
      type: object
      properties:
        base_uri:
          type: string
          description: The URI of the application.
          format: url-path
        deployment_mode:
          type: string
          description: The deployment mode of the application.
          enum:
          - production
          - development
        domain:
          type: string
          description: The domain of the application.
          format: domain
        enabled:
          type: integer
          description: |-
            Whether the application is enabled or not.

              * `1` â Enabled.
              * `0` â Disabled.
          enum:
          - 1
          - 0
        envvars:
          type: object
          description: An object of the applicationâs environment variables and their
            values.
        name:
          type: string
          description: The name of the application.
        path:
          type: string
          description: The path of the application inside the userâs home directory.
          format: path
      description: |-
        An object describing the newly-edited application.

        **Note**: `application_name` is the `name` of the application.
    inline_response_200_368_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_368_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_369_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_370_result_data:
      type: object
      properties:
        sse_url:
          type: string
          description: The SSE URI to track the progress of the process.
          format: url-path
          example: /sse/UserTasks/00000000_5c6c8b18228a35/ensure_deps.log
        task_id:
          type: string
          description: The task id of the SSE process.
          example: 00000000/5c76ec5566332c
    inline_response_200_370_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_370_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_371_result_deps:
      type: object
      properties:
        gem:
          type: string
          description: The shell command to ensure ruby dependencies. It is `0` if
            there are no ruby dependencies.
          example: "0"
        npm:
          type: string
          description: The shell command to ensure node dependencies. It is `0` if
            there are no node dependencies.
          example: "0"
        pip:
          type: string
          description: The shell command to ensure python dependencies. It is `0`
            if there are no python dependencies.
          example: "0"
    inline_response_200_371_result_data:
      type: object
      properties:
        base_uri:
          type: string
          description: The URI of the application.
          format: url-path
          example: /uri-of-app
        deployment_mode:
          type: string
          description: |-
            The deployment mode of the application.

              * `development` â Sets the application to run in a development environment.
              * `production` â Sets the application to run in a production environment.
          example: production
          enum:
          - production
          - development
        deps:
          $ref: "#/components/schemas/inline_response_200_371_result_deps"
        domain:
          type: string
          description: The domain of the application
          format: domain
          example: example.com
        enabled:
          description: |-
            The applicationâs enabled status.

            * `1` â Enabled.
            * `0` â Disabled.
        envvars:
          type: object
          description: The environment variables set for the application.
          nullable: true
        name:
          type: string
          description: The name of the application
          example: My Application
        nodejs:
          type: string
          description: |-
            The path of the Nodejs executable.
            Passenger uses Nodejs to run the application.

            **Note**:

            The function only returns this value if you configure this application to use
            Nodejs.
          format: path
          example: /opt/cpanel/ea-nodejs10/bin/node
        path:
          type: string
          description: The path of the application
          format: path
          example: /home/user/app-path
        python:
          type: string
          description: |-
            The path of the Python executable.
            Passenger uses Python to run the application.

            **Note**:

            The function only returns this value if you configure this application to use
            Python.
          format: path
          example: /usr/bin/python
        ruby:
          type: string
          description: |-
            The path of the Ruby executable.
            Passenger uses Ruby to run the application.

            **Note**:

            The function only returns this value if you configure this application to use
            Ruby.
          format: path
          example: /opt/cpanel/ea-ruby27/root/usr/libexec/passenger-ruby27
      description: |-
        **Note**:

        The top-level keys are the names of the applications.

        The value is the object defined here.
    inline_response_200_371_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_371_result_data"
          description: An object describing each application.
          example:
            Name of Application 1:
              base_uri: /app1-uri
              deployment_mode: production
              deps:
                gem: "0"
                npm: "0"
                pip: cd /home/user/app1-dir && pip install --user -r requirements.txt
              domain: example.com
              enabled: 1
              envvars: {}
              name: Name of Application 1
              path: /home/user/app1-dir
            Name of Application 2:
              base_uri: /app2-uri
              deployment_mode: development
              deps:
                gem: cd /home/user/app2-dir && BUNDLE_PATH=~/.gem /path/to/ruby/version/package/bundler
                  install
                npm: "0"
                pip: "0"
              domain: example.com
              enabled: 1
              envvars: {}
              name: Name of Application 2
              path: /home/user/app2-dir
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_372_result_data:
      properties:
        base_uri:
          type: string
          description: The URI of the application.
          format: url-path
        deployment_mode:
          type: string
          description: |-
            The deployment mode of the application.

              * `development` â Sets the application to run in a development environment.
              * `production` â Sets the application to run in a production environment.
          enum:
          - production
          - development
        domain:
          type: string
          description: The domain of the application.
        enabled:
          type: integer
          description: |-
            Whether the application is enabled or not.

              * `1` âÂ Enabled.
              * `0` â Disabled.
          enum:
          - 1
          - 0
        envvars:
          type: object
          description: An object of the applicationâs environment variables and their
            values.
        name:
          type: string
          description: The name of the application.
        path:
          type: string
          description: The path of the application inside the userâs home directory.
          format: path
      description: |-
        The applicationâs configuration information.

          **Note**:

          The top-level key is the name of the application.

          The value is the object defined here.
    inline_response_200_372_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_372_result_data"
          description: An object describing the newly-registered application.
          example:
            Name of Application:
              base_uri: /ruby
              deployment_mode: production
              domain: dorothy.com
              enabled: 1
              envvars:
                SHOES: ruby
                TINMAN: heart
              name: Name of Application
              path: /home/dorothy/slippers
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_374_result_data:
      type: object
      properties:
        strength:
          maximum: 100
          minimum: 0
          type: integer
          description: The application's minimum password strength.
          example: 0
    inline_response_200_374_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_374_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_375_result_data_personalization:
      type: object
      properties:
        reason:
          type: string
          description: "The message that describes the failure if `success` returns\
            \ `0`, or `OK` if `success` returns `1`."
          example: OK
        success:
          type: integer
          description: |-
            Whether the function successfully retrieved the value from the server.
              - `1` â Successful.
              - `0` â Unsuccessful.
          example: 1
          enum:
          - 0
          - 1
        value:
          type: string
          description: "The value stored for the associated NVData key, or a null\
            \ value if the key does not exist in the store."
          nullable: true
    inline_response_200_375_result_data:
      type: object
      properties:
        personalization:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_375_result_data_personalization"
          description: |-
            The retrieved NVData information stored on the server.

            **Note:**

            * You set this return's name based on the keys that you provide in the `personalization` parameter with the UAPI `Personalization::set` function.
            * This return's name is the NVData key's name.
      example: "{\"coffee\":{\"reason\":\"OK\",\"success\":1,\"value\":\"hot\"},\"\
        milk\":{\"reason\":\"OK\",\"success\":1,\"value\":\"cold\"}}"
    inline_response_200_375_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_375_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success
            - `0` â Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_376_result_data_personalization:
      type: object
      properties:
        reason:
          type: string
          description: "The message that describes the failure if `success` returns\
            \ `0`, or `OK` if `success` returns `1`."
          example: OK
        success:
          type: integer
          description: |-
            Whether the function successfully saved the value on the server.
              - `1` â Successful.
              - `0` â Unsuccessful.
          example: 1
          enum:
          - 0
          - 1
        value:
          type: string
          description: "The value stored for the associated NVData key, or a null\
            \ value if the key does not exist in the store."
          nullable: true
    inline_response_200_376_result_data:
      type: object
      properties:
        personalization:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_376_result_data_personalization"
          description: |-
            The saved NVData information stored on the server.

            **Note:**

            You set this return's name based on the keys that you provide in the `personalization` parameter.
      example: "{\"coffee\":{\"reason\":\"OK\",\"success\":1,\"value\":\"hot\"},\"\
        milk\":{\"reason\":\"OK\",\"success\":1,\"value\":\"cold\"}}"
    inline_response_200_376_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_376_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success
            - `0` â Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_377_result_data:
      type: object
      properties:
        can_show_promotions:
          type: integer
          description: |-
            Whether the plugin can show promotions.
            * `1` â Can show promotions.
            * `0` â Can not show promotions.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains information about the plugin's promotions.
    inline_response_200_377_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_377_result_data"
        errors:
          type: array
          description: List of errors that the API generated.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_379_result:
      properties:
        data:
          type: integer
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_381_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            *`1` - Success.
            *`0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_382_result_data:
      type: object
      properties:
        max_database_name_length:
          minimum: 1
          type: integer
          description: The maximum length of a database name.
          example: 63
        max_username_length:
          minimum: 1
          type: integer
          description: The maximum length of a database username.
          example: 63
        prefix:
          type: string
          description: "If database prefixing is enabled, this return outputs the\
            \ database prefix. A valid string up to eight characters and an underscore\
            \ (`_`)."
          example: example_
    inline_response_200_382_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_382_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_383_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_384_result_data:
      type: object
      properties:
        database:
          type: string
          description: The database name.
          example: user_db
        disk_usage:
          type: integer
          description: "The disk space that the database uses, in bytes."
          example: 673
        users:
          minimum: 0
          type: array
          description: |-
            An array of database usernames.

            **Note:**

              If no users exist on a database, the function returns an empty array
          items:
            type: string
            example: db_user
    inline_response_200_384_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_384_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_385_result:
      type: object
      properties:
        data:
          type: array
          description: An array of strings which are PostgreSQL database usernames.
          example:
          - example_user1
          - example_user2
          items:
            type: string
            example: example_user1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_386_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_392_result_data:
      properties:
        message_id:
          type: string
          description: The test message's ID.
          example: 554d2cbd-efe61da3cacb
        payload:
          type: object
          description: |-
            The payload from the Pushbullet server. For more information, read
            [Pushbullet's API documentation](https://docs.pushbullet.com/).

            **Warning:**

            This return may contain values that are Boolean primitives. JSON
            properly represents these, but XML represents them as `0` or `1`.
          example:
            active: true
            body: |-
              This message confirms that âhostname.example.comâ (192.168.0.20)
              can send a message to you via Pushbullet.

              This message was sent on Monday, May 18, 2015 at 7:12:20 PM UTC.
            created: 1.43197634138872E9
            direction: self
            dismissed: false
            iden: ujw5ScArtjUsjAeRXXMLGS
            modified: 1.43197634139182E9
            receiver_email: user@example.com
            receiver_email_normalized: user@example.com
            receiver_iden: ujw5ScArtjU
            sender_email: user@example.com
            sender_email_normalized: user@example.com
            sender_iden: ujw5ScArtjU
            sender_name: Firstname Lastname
            title: "Test message (ID: 555a3994-173a4a271062d)"
            type: note
    inline_response_200_392_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_392_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_393_result_data:
      type: object
      properties:
        byte_limit:
          minimum: 0
          type: integer
          description: |-
            The limit for disk space the cPanel account may use on this server, in bytes.
            * A positive integer.
            * `0` - Unlimited or disabled server quotas.

            **Note:**

             This value does **not** update immediately.
          example: 262144000
        bytes_used:
          minimum: 0
          type: integer
          description: |-
            The amount of disk space the cPanel account uses on this server, in bytes.
            * A positive integer.
            * `0` - No usage or disabled server quotas.
          example: 4149284
        inode_limit:
          minimum: 0
          type: integer
          description: |-
            The limit for inodes that the cPanel account may use on this server.
            * A positive integer.
            * `0` - Unlimited or disabled server quotas.
          example: 0
        inodes_used:
          minimum: 0
          type: integer
          description: |-
            The number of inodes that the cPanel account uses on this server.
            * A positive integer.
            * `0` - No usage or disabled server quotas.
          example: 1035
    inline_response_200_393_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_393_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_394_result_data:
      type: object
      properties:
        inode_limit:
          description: |-
            The account's inode quota limit.

            * `0` â Unlimited or disabled server quotas.
          example: 0
          oneOf:
          - type: integer
            description: Unlimited or disabled server quotas.
            enum:
            - 0
          - minimum: 1
            type: integer
            description: A positive integer.
        inodes_remain:
          description: |-
            The account's available inode quota.

            * `0` â Unlimited or disabled server quotas.
          example: 0
          oneOf:
          - type: integer
            description: Unlimited or disabled server quotas.
            enum:
            - 0
          - minimum: 1
            type: integer
            description: A positive integer.
        inodes_used:
          description: |-
            The account's number of used inodes.

            * `0` â No usage or disabled server quotas.
          example: 1035
          oneOf:
          - type: integer
            description: No usage or disabled server quotas.
            enum:
            - 0
          - minimum: 1
            type: integer
            description: A positive integer.
        megabyte_limit:
          description: |-
            The account's disk space limit, in megabytes (MB).

            * `0.00` â Unlimited or disabled server quotas.
          example: 0
          oneOf:
          - type: number
            description: Unlimited or disabled server quotas.
            enum:
            - 0
          - minimum: 1
            type: number
            description: A decimal number.
        megabytes_remain:
          description: |-
            The account's available disk space in, megabytes (MB).

            * `0.00` â Unlimited or disabled server quotas.
          example: 0
          oneOf:
          - type: number
            description: Unlimited or disabled server quotas.
            enum:
            - 0
          - minimum: 1
            type: number
            description: A decimal number.
        megabytes_used:
          description: |-
            The account's used disk space, in megabytes (MB).

            * `0.00` â No usage or disabled server quotas.
          example: 5.46
          oneOf:
          - type: number
            description: Unlimited or disabled server quotas.
            enum:
            - 0
          - minimum: 1
            type: number
            description: A decimal number.
        under_inode_limit:
          type: integer
          description: |-
            Whether the account is under its inode limit.

            * `1` â Under limit.
            * `0` â Over limit.
          example: 0
          enum:
          - 1
          - 0
        under_megabyte_limit:
          type: integer
          description: |-
            Whether the account is under its disk space limit, in megabytes (MB).

            * `1` â Under limit.
            * `0` â Over limit.
          example: 1
          enum:
          - 1
          - 0
        under_quota_overall:
          type: integer
          description: |-
            Whether the account is under both its inode and disk megabyte (MB) limit.

            * `1` â Under limit.
            * `0` â Over limit.
          example: 1
          enum:
          - 1
          - 0
      description: An object containing the cPanel account's quota.
    inline_response_200_394_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_394_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_395_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The cPanel account's domain.
          format: domain
          example: example.com
        select:
          type: string
          description: |-
            Whether the cPanel account's user is currently logged in.

            * `1` â Logged in.
            * An empty string â **Not** logged in.
          example: "1"
          enum:
          - "1"
          - ""
        user:
          type: string
          description: The cPanel account's username.
          format: username
          example: username
    inline_response_200_395_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing the reseller's cPanel accounts.
          items:
            $ref: "#/components/schemas/inline_response_200_395_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_396_result_data:
      type: object
      properties:
        description:
          type: string
          description: The resource's UI display name.
          example: MySQLÂ® Databases
        error:
          type: string
          description: "An error message, if applicable."
          nullable: true
        formatter:
          description: |-
            The resource's defined output format.

            * `format_bytes`
            * `format_bytes_per_second`
            * `percent`
            * `null` â No defined output format.

            **Note:**

            Third-party modules will return their defined formatter value.
          example: format_bytes
          oneOf:
          - type: string
            description: The resource's defined output format.
            nullable: true
            enum:
            - format_bytes
            - format_bytes_per_second
            - percent
          - type: string
            description: A third-party module's defined formatter value.
        id:
          type: string
          description: |-
            The resource's reference name.
            * `disk_usage`
            * `filesusage` - This function **only** returns this value if the *Display File Usage information in the cPanel stats bar* setting is enabled in the *Display* section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings#display) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).
            * `cachedmysqldiskusage`
            * `cachedpostgresdiskusage` - This function **only** returns this value if [PostgreSQLÂ® databases](https://go.cpanel.net/cpaneldocsPostgreSQLDatabases) are enabled.
            * `bandwidth`
            * `addon_domains`
            * `subdomains`
            * `aliases`
            * `email_accounts`
            * `mailing_lists` - This function **only** returns this value if the Mailman service is enabled in WHM's [*Service Manager*](https://go.cpanel.net/whmdocsServiceManager) interface (*WHM >> Home >> Service Configuration >> Service Manager*).
            * `autoresponders`
            * `forwarders`
            * `email_filters`
            * `ftp_accounts` - This function **only** returns this value if FTP accounts exist on the server.
            * `mysql_databases` - This function **only** returns this value if MySQLÂ® databases are enabled.
            * `postgresql_databases`

            **Note:**

            Certain `id` values may **not** appear, based on the [server's current profile](https://go.cpanel.net/howtouseserverprofiles#profiles).
          example: mysql_databases
        maximum:
          minimum: 0
          type: integer
          description: |-
            The resources's maximum usage value.

            **Note:**

             This function returns an null value for an (unlimited) quota.
          nullable: true
          example: 15
        url:
          type: string
          description: "The resource's defined URL link to its corresponding interface,\
            \ in applicable."
          format: url-path
          example: sql/index.html
        usage:
          minimum: 0
          type: integer
          description: The resource's current usage value.
          example: 0
    inline_response_200_396_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing resource usage information from
            the account's query.
          items:
            $ref: "#/components/schemas/inline_response_200_396_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_397_result_data:
      type: object
      properties:
        conflict:
          type: integer
          description: |-
            Whether a difference exists between the `type` and `onDiskType` returns.
            * `1` - Conflict exists.
            * `0` - **No** conflict exists.
          example: 0
          enum:
          - 0
          - 1
        exists:
          type: integer
          description: |-
            Whether the file exists in the user's directory or **only** in the backup.
            * `1` - File exists in the user's directory.
            * `0` - File exists **only** in the backup.
          example: 1
          enum:
          - 0
          - 1
        name:
          type: string
          description: The name of the file or directory.
          example: public_html
        onDiskType:
          type: string
          description: |-
            The item type stored on the disk.
            * `dir` - A directory.
            * `file` - A file.
            * `symlink` - A symlink.
            * `unknown` - An unknown file type.
          example: file
          enum:
          - dir
          - file
          - symlink
          - unknown
        type:
          type: string
          description: |-
            The item type stored in the backup.
            * `dir` - A directory.
            * `file` - A file.
            * `symlink` - A symlink.
            * `unknown` - An unknown file type.
          example: file
          enum:
          - dir
          - file
          - symlink
          - unknown
    inline_response_200_397_result:
      properties:
        data:
          type: array
          description: An object that contains information about a specific item stored
            in the backup.
          items:
            $ref: "#/components/schemas/inline_response_200_397_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_398_result:
      type: object
      properties:
        data:
          type: array
          description: An array of reseller account names.
          items:
            type: string
            format: username
            example: username
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_399_result_data:
      type: object
      properties:
        backupDate:
          type: string
          description: The date when the system created the backup.
          format: ISO-8601 Date
          example: 2020-07-01T00:00:00.000Z
        backupID:
          type: string
          description: |-
            The backup's identification.

            * A date, in `YYYY-MM-DD` format.
            * `incremental` â An incremental daily backup.
            * The backup frequency (`weekly` or `monthly`) , a slash character (`/`), and the value `incremental`.
            * The backup frequency (`weekly` or `monthly`), a slash character (`/`), and the backup date, in `YYYY-MM-DD` format.
          example: weekly/2017-07-01
          anyOf:
          - type: string
            description: A daily backup file from a specified backup date.
            format: ISO-8601 Date
          - type: string
            description: An incremental daily backup.
            enum:
            - incremental
          - type: string
            description: A weekly or monthly incremental backup.
            enum:
            - weekly/incremental
            - monthly/incremental
          - type: string
            description: A weekly or monthly backup from a specified backup date.
        backupType:
          type: string
          description: |-
            The backup type.

            * `compressed` â  A compressed tar file.
            * `incremental` â A full tree of files and directories.
            * `uncompressed` â An uncompressed tar file.
          example: compressed
          enum:
          - compressed
          - incremental
          - uncompressed
        exists:
          type: integer
          description: |-
            Whether the item (a file, a directory, or a symlink) exists in the local disk or only in the backup.

            * `1` â The item exists in the local disk.
            * `0` â The item exists only in the backup.

            **Note:**

            This return appears **only** if you set the `exists` parameter to `1`.
          example: 1
          enum:
          - 1
          - 0
        fileSize:
          minimum: 0
          type: integer
          description: |-
            The size, in bytes, of the file in the backup.

            **Note:**

            The function returns this value **only** if the item is a file.
          example: 199
        mtime:
          type: integer
          description: The file's last modification time.
          format: unix_timestamp
          example: 1520043240
        path:
          type: string
          description: The identical file path value that the system passed in the
            function.
          format: path
          example: /public_html/index.php
        type:
          type: string
          description: |-
            The item type stored in the backup.

            * `dir` â A directory.
            * `file` â A file.
            * `symlink` â A symlink.
            * `unknown` â An unknown file type.
          example: file
          enum:
          - dir
          - file
          - symlink
          - unknown
    inline_response_200_399_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing the item's details.
          items:
            $ref: "#/components/schemas/inline_response_200_399_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_400_result_data:
      type: object
      properties:
        success:
          type: integer
          description: |-
            Whether the `overwrite` parameter succeeded.

            * `1` â Success.
            * `0` â Failure.
          example: 1
          enum:
          - 1
          - 0
      description: An object containing the status of the operation.
    inline_response_200_400_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_400_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_401_result_data:
      type: object
      properties:
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The server's SSH port.
          example: 22
    inline_response_200_401_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_401_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_403_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the system can automatically redirect the domains to use SSL.
            * `1` - Can redirect.
            * `0` - **Cannot** redirect.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_404_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether a shared SSL certificate is associated with the account.
            * `1` - Associated.
            * `0` - Not associated.
          example: 0
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 0
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_405_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The date the certificate was created.
          format: unix_timestamp
          example: 1538308800
        domains:
          type: array
          description: A list of the domains that the certificate covers.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: TestCert
        id:
          type: string
          description: The certificate's ID.
          example: example_com_cb497_a394d_1397249671_d1272da8f13a1fd837493a5ad1f0a0f3
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` â Self-signed.
            * `0` â Not self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The certificate's Common Name.
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's Organization Name.
          example: Organization
        issuer_text:
          type: string
          description: The certificate's issuer information.
          example: |-
            countryName
            US
            stateOrProvinceName
            TX
            localityName
            Houston
            organizationName
            Organization
            commonName
            example.com
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          type: integer
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The date the certificate expired.
          format: unix_timestamp
          example: 1569844800
        not_before:
          type: integer
          description: The date the certificate started.
          format: unix_timestamp
          example: 1538308800
        serial:
          type: string
          description: The certificate's serial number.
          example: 45462cd0d6537b20cf2f3eb8aec07140
        signature_algorithm:
          type: string
          description: The certificate's OID signature hash algorithm.
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The certificate's Common Name.
          example: example.com
        subject_text:
          type: string
          description: The certificate's subject text information.
          example: |-
            commonName
            www.example.com
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `ev` â Extended Validation.
            * `ov` âÂ Organization Validation.
            * `dv` â Domain Validation.
            * `null` â The system could not parse and determine the
            certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
    inline_response_200_405_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_405_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_406_result_data:
      type: object
      properties:
        commonName:
          type: string
          description: The CSR's Common Name.
          format: domain
          example: example.com
        created:
          type: integer
          description: The CSR's creation date.
          format: unix_timestamp
          example: 1538308800
        domains:
          type: array
          description: A list of the domains that the CSR covers.
          items:
            type: string
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the CSR's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The CSR's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The CSR's key's ECDSA compressed public point, in hexadecimal format.

            * `null` â The CSR's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The CSR's friendly name.
          example: TestCSR
        id:
          type: string
          description: The CSR's ID.
          example: example_com_e095f_0ab2f_ebcbe4a571276f48562241411556647f
        key_algorithm:
          type: string
          description: |-
            The CSR's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The CSR's key's modulus, in hexadecimal format.

            * `null` â The CSR's key is **not** an RSA key.
          nullable: true
          example: |-
            a74f7636fa6ac93ee6836a83a995b55deb5019ea36d7ba3dafb00e38d693acd
            b0c81b2ff777d6b433a420fae523f127f352a68bcc8b8f2d6ee7b70395bafab
            d8237ada8164fdddf8376b30375c35d4d4cbcce7d33d08069c17b409176a368
            9f1ebc97c0b08fe6ae44c19a92ac6d68448e7f1d13f3b360affd4222a51b4f3
            5342de99b5a1fb5548e438f2d824664562a448002eed7fce24dedc7dc3e1ed1
            79973d1dae959b33716eeb410d172708954e00632cbf60a0e26419860c8c0bc
            285d6bfe4b479de0dd189772a5dae676bd2a92acccc1369821be8cffddd8a7e
            6ecc061f8a32a9ae0661e4e946ed8e3827b277138d3a76116567cbd129cbd86
            9ef9dddf
    inline_response_200_406_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_406_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_407_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The private key's creation date.
          format: unix_timestamp
          example: 1538308800
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The key's ECDSA compressed public point, in hexadecimal format.

            * `null` â The key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The private key's friendly name.
          example: TestKey
        key_algorithm:
          type: string
          description: |-
            The key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The key's modulus, in hexadecimal format.

            * `null` â The key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          type: integer
          description: |-
            The length, in bits, of the key's modulus.

            * `null` â The key is **not** an RSA key.
          nullable: true
          example: 2048
    inline_response_200_407_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_407_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_408_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: An array containing a message about the domain's SSL removal.
          nullable: true
          example:
          - The SSL host was successfully removed.
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_409_result_data:
      type: object
      properties:
        failed_domains:
          type: object
          additionalProperties:
            type: string
            description: |-
              The reason the domain failed to disable SNI.

              **Note:**

               The domain name is the return name.
          description: |-
            An object containing the domains that failed to disable
             mail SNI.
        updated_domains:
          type: object
          additionalProperties:
            type: integer
            description: |-
              Whether the domain's SNI is disabled.

              * `1` - Disabled.
              * `0` - Not disabled.

              **Note:**

              The domain name is the return name.
            enum:
            - 0
            - 1
          description: AN object containing the domains with disabled mail SNI.
      example: "{\"failed_domains\":{\"example2.com\":\"Sorry, example2.com is not\
        \ one of the domains on your account.\"},\"updated_domains\":{\"example.com\"\
        :1,\"example1.com\":1}}"
    inline_response_200_409_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_409_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API. Warnings
             describe non-critical failures or other problematic conditions
             noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_410_result_data:
      type: object
      properties:
        failed_domains:
          type: object
          additionalProperties:
            type: string
            description: |-
              The reason the domain failed to enable mail SNI.

              **Note:**

               The domain name is the return name.
            example: "Sorry, example.com is not one of the domains on your account."
          description: An object that contains the domains that did not enable mail
            SNI.
        updated_domains:
          type: object
          additionalProperties:
            type: integer
            description: |-
              Whether the domain's SNI is enabled.

              * `1` - Enabled.
              * `0` - Not enabled.

              **Note:**

              The domain name is the return name.
            example: 1
            enum:
            - 0
            - 1
          description: An object that contains the domains with disabled mail SNI.
      example: "{\"failed_domains\":{\"example2.com\":\"Sorry, example.com is not\
        \ one of the domains on your account.\"},\"updated_domains\":{\"example.com\"\
        :1,\"example1.com\":1}}"
    inline_response_200_410_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_410_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          example:
          - cPanel & WHM always enables mail SNI from now on.
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_411_result_data:
      type: object
      properties:
        cab:
          type: string
          description: The CA bundle's contents (if applicable).
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIID/DCCAuSgZwBBAvIFANEXIaYwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL
            ZXhhbXBsZS5jb20wHhcNMjAwNDA2MTY0NDU2WhcNMjEwNDA2MTY0NDU2WjAWMRQw
            EgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
            ggEBALuCGWz/aFOr5TPBehISu3LkcGvnNFg9eY8rVXbNFfpBzyzdWrx5IiMtBcDx
            AZXMOU7GSZyFhSB6cjNfCaESXC/gBTa0sZ/b4b4etNUlNHUFAatb9WckQ6AtWbVA
            pxu8aw/5AjAKgMbkaNrUY3vzLzin11CyGOFkbAKwVqT13Z3Yyz/xuz7x2+yMwPBh
            9mEP0tXjvCz7NzETFSTysn9Sf+VjUle0upnpl8Q7GK52CDpvwdqE/O6MrTx/XrXm
            YUfeSkZd+nqFm4oxmrf01hOL2IlEit1RupILwVm2/8CK2sAdazTqh4LapA962b9V
            SKm31YbsGT3kQg5EERbjIgiN6M8CAwEAAaOCAU8wggFLMB0GA1UdDgQWBBRhFUQb
            h7YE6tgcpiHke60td96d4zAJBgNVHRMEAjAAMEIGA1UdIwQ7MDmAFGEVRBuHtgTq
            2BymIeR7rS133p3joRqkGDAWMRQwEgYDVQQDDAtleGFtcGxlLmNvbYIFANEXIaYw
            HQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMIG7BgNVHREEgbMwgbCCC2V4
            YW1wbGUuY29tghBtYWlsLmV4YW1wbGUuY29tgg93d3cuZXhhbXBsZS5jb22CEmNw
            YW5lbC5leGFtcGxlLmNvbYITd2VibWFpbC5leGFtcGxlLmNvbYITd2ViZGlzay5l
            eGFtcGxlLmNvbYIWY3Bjb250YWN0cy5leGFtcGxlLmNvbYIXY3BjYWxlbmRhcnMu
            ZXhhbXBsZS5jb22CD3dobS5leGFtcGxlLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEA
            T0TaI0ypM3eqtRSddgyoy5+nXi8a9a8xFKrwEAljBua3rNR6fOfedMOg9NFwCmQD
            w96/eZJjq+xMh57yLEGu05OBbyFVsdu2AXVhwHeBaURrGn5p7IjNM+dB+ld+oCnP
            ex6iisbsfxwUqa7y2vqTU5XaUiXfccqEz8ofvuTcqNs8bgGn0Tm90XbgGnPVd7zl
            Gm4t7Gf2pvMNd2R1prJ07z42bp/z8E2DcFhb/QZnblFOhJ8jPspxYK4G5XmwwYZD
            79NDK47OyG3hTiinxroKMjqIgnLT7ZabDMGHJkcg5xOL/VdYi7ZGHAnBEwA8eadO
            dh3jFPxGGIBJTTmKIScSrm==
            -----END CERTIFICATE-----
        crt:
          type: string
          description: The certificate's contents.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIID/DCCAuSgZwBBAvIFANEXIaYwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL
            ZXhhbXBsZS5jb20wHhcNMjAwNDA2MTY0NDU2WhcNMjEwNDA2MTY0NDU2WjAWMRQw
            EgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
            ggEBALuCGWz/aFOr5TPBehISu3LkcGvnNFg9eY8rVXbNFfpBzyzdWrx5IiMtBcDx
            AZXMOU7GSZyFhSB6cjNfCaESXC/gBTa0sZ/b4b4etNUlNHUFAatb9WckQ6AtWbVA
            pxu8aw/5AjAKgMbkaNrUY3vzLzin11CyGOFkbAKwVqT13Z3Yyz/xuz7x2+yMwPBh
            9mEP0tXjvCz7NzETFSTysn9Sf+VjUle0upnpl8Q7GK52CDpvwdqE/O6MrTx/XrXm
            YUfeSkZd+nqFm4oxmrf01hOL2IlEit1RupILwVm2/8CK2sAdazTqh4LapA962b9V
            SKm31YbsGT3kQg5EERbjIgiN6M8CAwEAAaOCAU8wggFLMB0GA1UdDgQWBBRhFUQb
            h7YE6tgcpiHke60td96d4zAJBgNVHRMEAjAAMEIGA1UdIwQ7MDmAFGEVRBuHtgTq
            2BymIeR7rS133p3joRqkGDAWMRQwEgYDVQQDDAtleGFtcGxlLmNvbYIFANEXIaYw
            HQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMIG7BgNVHREEgbMwgbCCC2V4
            YW1wbGUuY29tghBtYWlsLmV4YW1wbGUuY29tgg93d3cuZXhhbXBsZS5jb22CEmNw
            YW5lbC5leGFtcGxlLmNvbYITd2VibWFpbC5leGFtcGxlLmNvbYITd2ViZGlzay5l
            eGFtcGxlLmNvbYIWY3Bjb250YWN0cy5leGFtcGxlLmNvbYIXY3BjYWxlbmRhcnMu
            ZXhhbXBsZS5jb22CD3dobS5leGFtcGxlLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEA
            T0TaI0ypM3eqtRSddgyoy5+nXi8a7a6xFKrwEAljBua3rNR6fOfedMOg9NFwCmQD
            w96/eZJjq+xMh57yLEGu05OBbyFVsdu2AXVhwHeBaURrGn5p7IjNMjdB+ld+oCmU
            ex6iisbsfxwUqa7y2vqTU5XaUiXfccqEz8ofvuTcqNs8bgGn0Tm90XbgGnPVd7zl
            Gm4t7Gf2pvMNd2R1prJ07z42bp/z8E2DcFhb/RPnblFOhJ8jPspxYK4G5XmwwYZD
            79NDK47OyG3hTiinxroKMjqIgnLT4ZabDMGHJkcg5xOL/VdYi7ZGHAnBEwA8eadO
            dh3jFPxGGIBJTTmKIScSbg==
            -----END CERTIFICATE-----
        crt_origin:
          type: string
          description: The username that generated the certificate.
          format: username
          example: username
        domain:
          type: string
          description: The domain that generated the private key.
          format: domain
          example: example.com
        ip:
          type: string
          description: The IP address.
          format: ipv4
          example: 192.168.0.1
        key:
          type: string
          description: The private key.
          format: pem-private-key
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBBCKAAQNAu4IZbP0oU6vlM8F6EhK9cuRrs+c1WD24jytPds0V+kH+LN1a
            vHkiIy0FwPABlcw5TrZJnIWFIHpyM18JoRJcM+AFNrSxn9vhvh601SU0dQUBq1v1
            ZyRDoC1ZtUCnG7xrD/kCMAqAxuRo2tRje/MvOKfXULIY4WRsArBWpPXdndjLP/G7
            PvHb7IzA8GH2YQ/S1eO8LPs3MRMVJPKyf1J/5WNSV7S6memXxDsYrnYIOm/B2oT8
            7oytPH9eteZhR95KRl36eoWbijGat/TWE4vYiUSK3VG6kgvBWbb/wIrawB1rNOqH
            gtqkD3rZv1VIqbfVhuwZPeRCDkQRFuMiCI3ozwIDAQABAoIBAFADflIS0zQRQCdL
            wol/0NmAPbDt4lpdMUg0161wapZ2CrA8bQHMNxMHnVLuBR0lHrdMyhCusVZgqebe
            AT/ok8oiMFdd2AY9UCFO/R+PVskwr7ut7BRtVyY88/Dye9zMFGumeJaDhNxaj5wB
            0coMxfPJO4pF1XQo5CZplS+jc0RtiNnRmWP/zwwtH+QwT43GXKS3U3QgX1a/7Yzw
            liUFuggsjysNPovM5NzcgzYfVlMg3F9fDnMeve2s/MO6/wCIp1+SHN89DwluDmw0
            II0sJDtBRB1nPqseLV1XwYImdSosKuaUIK225vQy/cXK9S/zcq6+d6P5efCw8nRg
            bCfwd7ECgYEA8Agkx+P7zBAWItnkrNzah6QaWd3VP5bSw6WeHwcWIS1h3ASKSr3u
            T8rp5qDTk92eV/g5Uqr5lr8txnp448wnipeK0LDF4r+uhOsHOY4B4eFiTsRecXKD
            zlcC/ees4UOzbdptqosyAG5ub8UMwEH0zPOCszpnIhZkm004EHxc8zUCgYEAx/t0
            F1DYHm834CYyHfq3XiuB3yNECKMQZ1lgcq8IXaO3EJKnaSF3INogS1lZ6hQR2AW+
            tr+U6LdBRzsxH0ZeHu/lYCZ6ssgV3H6HTLlFVRysufVdlLaeaKAMuEADrUhVgvVA
            8rNM+8WSxrfya+2a/PwyJD9YdHCITcXVdwHHCHMCgYBLhYRtECJNVlJgrMXyTZrE
            SrGvzMgntcCiph1WDdi8n5bGrvcEBTZSDLoDQl7Pi08ixorio8Db2VMBu88FfVqD
            lKKsfrIEYeL7FyeyyCd3dn6D4e0FLM6jwWTDln0iczalPbB7lEgrMpO0vv8ADsCD
            K6rX1ZxZoWoOQwF8zmRAcQKBgQC85weoJpOfXAt5zlq1+ulPKOXKs3NGfVG3bjOp
            4SuT2FvKad19b0EqZSDzR/ylIkQgvHyD/8BXexNMh9tE4aFys8UF6BMq4dnUqCiC
            DtgxJ575IY8+NKq5xcV+HenbO2KbC7RIDZqAkQauc3+o947ZvhhXKQcTJmF6pY+Y
            lLM/hQKBgQCplo1rGsimNitBb2iw2B+jDJoMBLYjWeZWcr8VMwVlN9DXPG19uXKq
            CsbrteMX3VedbeRYk/NITsasRefZq7JDSe9JbsPxj3I+/nzV0EbMXX9cxJL3hkCc
            5QAmE/BMR7yh0odK57o+mcQZtecIEO1BK/qW6Au0otQHPraygGCwkQ==
            -----END RSA PRIVATE KEY-----
        key_origin:
          type: string
          description: The username that generated the private key.
          format: username
          example: username
        searched_users:
          type: array
          description: The cPanel accounts that the system searched for domain information.
          items:
            type: string
            format: username
            example: username
        status:
          type: integer
          description: |-
            Whether the certificate is active.
            * `1` - Active.
            * `0` - Inactive.
          example: 1
          enum:
          - 0
          - 1
        statusmsg:
          type: string
          description: The certificate's status.
          example: ok
        user:
          type: string
          description: The username that stores the private key.
          format: username
          example: username
    inline_response_200_411_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_411_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_412_result_data:
      type: object
      properties:
        cabundle:
          type: string
          description: The CA bundle's contents (if applicable).
          format: pem-certificate
          nullable: true
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIB+DCCArDgBwIBAgIEWXcZhjANBgkzpkiG6w0BAQsFADATMREwDwYDVRRZZAhu
            ZXcxLnRsZDAeFw1yMDAyMDcxMzE7MTdaFw0yMTAyMDYxMzE4MTdaMBMxETAPBgEJ
            BAMMCG5ldzEudGxkMIJBInANBgkqhkiG9w0BAQEFAAOKAR3AMIIBCgKCAQEA5n3Z
            UoGCgH48vcbZfrWtnrak4yOZk/UN45gc8bZGmqbzd3qKmGXkm11aW1ID2YKGKYjL
            mKt42HbXitlH6VhQcWviuYg+JIyTXDMLV0GiGpDT0uvde3YV21Ww2i5nzoFxWyVD
            67oize5gvq9gaw5nVj6UyZ0baIB01QeJ5x52xZyuSgiS0ssWlA3rvHx8wG0+1trR
            aBwU0cn1cXP3ZMKzKus/yAUH4lMBFf8jgDzEWIwfMI5HmzUjg2kOPJQlBtZ1u0bJ
            GaKffWIMLs9Ux4p+f7FNeT/xJCHCTX7HpYDOyWwq109yHnD178NkywKoUvtx7f93
            tTI821mltPbC1PQUgQIDAQABo4IBIjCCAR4wHQYDVR0OBBYEFLThoqhCEONRK3X1
            FBgZ4gp+ESmJMAkGA1UdEwQCMAAwPgYDVR0jBDcwNYAUtOGiqEIQ41ErdfUUGBni
            Cn4RKYmhF6QVMBMxETAPBgNVBAMMCG5ldzEudGxkggRZdxmGMB0GA1UdJQQWMBQG
            CCsGAQUFBwMBBggrBgEFBQcDAjCBkgYDVR0RBIGKMIGHgghuZXcxLnRsZIINbWFp
            bC5uZXcxLnRsZIIMd3d3Lm5ldzEudGxkgg9jcGFuZWwubmV3MS50bGSCEHdlYm1h
            aWwubmV3MS50bGSCEHdlYmRpc2submV3MS50bGSCE2NwY29udGFjdHMubmV3MS50
            bGSCFGNwY2FsZW5kYXJzLm5ldzEudGxkMA0GCSqGSIb3DQEBCwUAA4IBAQCT4AQM
            wbwj3JEoQIJeP7RQyVe2/CPheqkSSajca1a3cUytwfRQ/m8DGM3L3WUZCaDEXYpJ
            +nt7k6KetL6Fs03e1W7IDADt68ahiBLIqvxEGZ5uNUYqOiEWgfp3yKEDOjkLLvzU
            GZb8FmNyeDoQ47b0mf0SRktG6W1rTMAg2kSDVoA7YNZStYvRzEliCX8cZqZ2as2d
            ou95S+aGFAPJ+WMyYRgFm+ONAnpSbd9BursEcQSfLjKLusJzXrGVG9zZ/CAK2tHy
            XIlFrj88r0q9AZKyFkh6O1XvaZBiI/UEOWS2H3zcnh5ywudze7jTj5eFz5hr0ubX
            dji/LDNHmG+dKCK7
            -----END CERTIFICATE-----
        certificate:
          type: string
          description: The certificate's contents.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDyDCCArDgBwIBAgIEWXcZhjANBgkzpkiG6w0BAQsFADATMREwDwYDVQQDDAhu
            ZXcxLnRsZDAeFw1yMDAyMDcxMzE5MTdaFw0yMTAyMDYxMzE4MTdaMBMxETAPBgMB
            BAMMCG5ldzEudGxkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5n3Z
            UoGCgH48vcbZfrWtnrak4yOZk/UN45gc8bZGmqbzd3qKmGXkm11aW1ID2YKGKYjL
            mKt42HbXitlH6VhQcWviuYg+JIyTXDMLV0GiGpDT0uvde3YV21Ww2i5nzoFxWyVD
            67oize5gvq9gaw5nVj6UyZ0baIB01QeJ5x52xZyuSgiS0ssWlA3rvHx8wG0+1trR
            aBwU0cn1cXP3ZMKzKus/yAUH4lMBFf8jgDzEWIwfMI5HmzUjg2kOPJQlBtZ1u0bJ
            GaKffWIMLs9Ux4p+f7FNeT/xJCHCTX7HpYDOyWwq109yHnD178NkywKoUvtx7f93
            tTI821mltPbC1PQUgQIDAQABo4IBIjCCAR4wHQYDVR0OBBYEFLThoqhCEONRK3X1
            FBgZ4gp+ESmJMAkGA1UdEwQCMAAwPgYDVR0jBDcwNYAUtOGiqEIQ41ErdfUUGBni
            Cn4RKYmhF6QVMBMxETAPBgNVBAMMCG5ldzEudGxkggRZdxmGMB0GA1UdJQQWMBQG
            CCsGAQUFBwMBBggrBgEFBQcDAjCBkgYDVR0RBIGKMIGHgghuZXcxLnRsZIINbWFp
            bC5uZXcxLnRsZIIMd3d3Lm5ldzEudGxkgg9jcGFuZWwubmV3MS50bGSCEHdlYm1h
            aWwubmV3MS50bGSCEHdlYmRpc2submV3MS50bGSCE2NwY29udGFjdHMubmV3MS50
            bGSCFGNwY2FsZW5kYXJzLm5ldzEudGxkMA0GCSqGSIb3DQEBCwUAA4IBAQCT4AQM
            wbwj3JEoQIJeP7RQyVe2/CPheqkSSajca1a3cUytwfRQ/m8DGM3L3WUZCaDEXYpJ
            +nt7k6KetL6Fs03e1W7IDADt68ahiBLIqvxEGZ5uNUYqOiEWgfp3yKEDOjkLLvzU
            GZb8FmNyeDoQ47b0mf0SRktG6W1rTMAg2kSDVoA7YNZStYvRzEliCX8cZqZ2as2d
            ou95S+aGFAPJ+WMyYRgFm+ONAnpSbd9BursEcQSfLjKLusJzXrGVG9zZ/CAK2tHy
            XIlFrj88r0q9AZKyFkh6O1XvaZBiI/UEOWS2H3zcnh5ywudze7jTj5eFz5hr0ubX
            dji/LDNHmG+dKCK7
            -----END CERTIFICATE-----
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.
            * `1` - Self-signed.
            * `0` - **Not** self-signed.
          example: 1
          enum:
          - 0
          - 1
        key:
          type: string
          description: The private key.
          format: pem-private-key
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEA5n3ZUoGCgH48vcbZfrYqnrak7yOZk/UN41gr8bZGmqbzd3qK
            mGXkm11aW1ID2YKGKYjLmKt59HbXitlH6VhQcWviuYr+JIyTXDMLV0GiGpDT0uvd
            e3YV21Ww2i5nzoFxWyVD67oize5gvq9gaw5nVj6UyZ0baIB01QeJ5x52xZyuSgiS
            0ssWlA3rvHx8wG0+1trRaBwU0cn1cXP3ZMKzKus/yAUH4lMBFf8jgDzEWIwfMI5H
            mzUjg2kOPJQlBtZ1u0bJGaKffWIMLs9Ux4p+f7FNeT/xJCHCTX7HpYDOyWwq109y
            HnD178NkywKoUvtx7f93tTI821mltPbC1PQUgQIDAQABAoIBAEteX4/hFYFaxhXw
            TfJnCgzaAHTdkTyWZyJC/UP0rIWpjfdFtMg8mVJMZl1yJhwb2C8AskKL34o44iZf
            AmrFHBjahFrSuC9PYGhHsK+poI47SWixA815QZBlJt1RS1R1c1Gwj9MnHHZmOnBf
            /JFFNnk3IYQDwZCcYJfATVGr3n6jLEGNwaPWFV6SHf0C4tCibSdNkkS1L/u+roHK
            2dlmo84suwiqIYlxRCh0rZcvcx5ieF5Rj9g9t2ReYWCuEOMWuPcCfWoe4VngrmMX
            V4I8NS1wtMR8qONJf4B9vcBA36296x1PZp3QEWU6hCd3TKpInKKxe6tOJA1iZ/H0
            Kn0sYSECgYEA/W2zPsHKZDHnLN80MdiRFIPnmBvdNl2kPl244S9YFCHULowxx4YA
            Mhz46dkm7VAFJdCTDZvKNZloPRG6N+Ouw2TP/gwnqZzVN2jt7+rpSYWp8s8kAASv
            pmjnpGLlAZg8BBD/gafxfjEdyB7QEUF379o+0WTxCJrcE8n8UtTcXj0CgYEA6NSR
            f1bXcfzCzLtkudEfyA9+u5mdENqoqasLfJsLzezeGFAYamQsnEEACWSbJvogHHZk
            g/gKVuSzspLDWpJT96agmUFGKoBozJrOj2TpXfSI9uDaGo0/YJsPhnuPHab0jiO5
            CjpCOAKMXaV9lbALRh4ALGiODDDud2rqzph815UCgYEA2ULKf+qzD+KYRSe1H2aC
            Ogw653Q72Pe+bpj6flKQN/IobR9TLbH7SPr9ibzYWmpXf2uoJeqBGCJD8tbXxkIy
            +N/cT/crqYUCZVZXZW8GQDmO0NI0Eq/xxb/5ljwSB6PzD6li4kyQA5cn6QBBcAmo
            QL/hSrI20SGxumVXI8vIgCECgYAUJai9cx9LfsrAeoq5xY3Rev3FcAJ2XeVwYRuq
            WaRI2nFRe0TRl/+AOeOt7GW8lrJGpDwIa2NBp6KhFjAPW1AmwuVsvYg7z0bCRbcQ
            E3RaK/naGxTkbUqJqoFKatC0iSjqT88IQohOXnIU/GgEluoy1A/Bx/5asbVA4iCV
            Zf6PjQKBgA0A3Q5lrWwuQlCXDiwsRLKSYEwgt5TFKfbiipB01m89PGd1ylz+Uzyn
            iE01Cuar6yN9pJiTJ09Tmq3S2xxavY97KFHyu6R8/jHx4mZi9OMJfxffC+84q6d+
            XVABiqBs1l0ebWCsotdXoYDDQaVrCccxPfCjUCtPmgnarz11uhZo
            -----END RSA PRIVATE KEY-----
        subject.commonName_ip:
          type: string
          description: The IP address.
          format: ipv4
          example: 192.168.0.1
    inline_response_200_412_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_412_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_413_result_data:
      type: object
      properties:
        cab:
          type: string
          description: The CA bundle's contents.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD
            VQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv
            b3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV
            UzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU
            cnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv
            RLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M
            ypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5
            1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz
            dcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl
            IjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy
            bW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY
            -----END CERTIFICATE-----
        created:
          type: integer
          description: When the certificate was created.
          format: unix_timestamp
          example: 1496950287
        crt:
          type: string
          description: The certificate's contents in Base64 PEM format.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDcTCCAlmgAwIBAgIFAU+BNVgwDQYJKoZIhvcNAQEFBQAwUTESMBAGA1UEAwwJ
            c2lza28udGxkMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGY1BhbmVsMQswCQYDVQQI
            DAJUWDEQMA4GA1UEBwwHSG91c3RvbjAeFw0xNDEwMDYyMjI2MTlaFw0xNTEwMDYy
            MjI2MTlaMFExEjAQBgNVBAMMCXNpc2tvLnRsZDELMAkGA1UEBhMCVVMxDzANBgNV
            BAoMBmNQYW5lbDELMAkGA1UECAwCVFgxEDAOBgNVBAcMB0hvdXN0b24wggEiMA0G
            CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9zx6zGiHdmWA0dKtoXmJiWXpZ9E3P
            Xx3YHsjFEWW7e5pH0vZ+jVMzDmm5nsJ7RXrAkZO1IvpIpVLvoQfiJOWVvkD+o9fW
            voK1tWJS72FSgPju+58mA2ieBuc87A790Pzuv1P3NR3zFLAjUR99zkHR1fpri/da
            M3PBWO8ET48FWkyU1kOeZaUlF67/+wrEiNgg+t1qhKOCAB61PdNVkLaSGHimksuC
            +Czk8Kq9nuS0E0TCnDtjjEyJ455FUcaCfczlTb8xkB/F9ORe74yTzD+vlk0tFMG6
            PLj/ajIwWqwO0qmQ8wX3NRxkWgGz5kVO1wrVJarKQ5EYQ3/mgvit0v6dAgMBAAGj
            UDBOMB0GA1UdDgQWBBRw+wKBo34+bgexjAa3EMDsgSCd7zAfBgNVHSMEGDAWgBRw
            +wKBo34+bgexjAa3EMDsgSCd7zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUA
            A4IBAQCHRXIs53opzKM2rM8Qe8lcw524WK6hqy2EWrZHp78N7rU7/6DQ/I3hv3Wh
            cDDIO04I2/Xhe88MLBaLoM367Ya+vy7CaLr14aLi/SfQszMA0ALBvMao+Fis0iVw
            FYq/NLgSXw+fgnpFskt8v8iQZ+4Kaal8U8e9sVgu8m0RgO7rzym1eRiIKpsKd1rh
            /SD7LbSN7M7TRL3QqF7ltw9sQhAAsQcRaBBF21pdWrqhiGZ+Eioo3hhgwNavH2ag
            qz78ddHwrFpHFwrEeUk1OfpPb76MYIce7xIy/4oQNdg6fOq4l/FrajBv+WkzDVPa
            Km6r7YmwfLN/YMZBHXSR58oOGP9W
            -----END CERTIFICATE-----
        domain_is_configured:
          type: integer
          description: |-
            Whether the certificate is installed on the account.
            * `1` â Installed.
            * `0` â Not installed.
          example: 1
          enum:
          - 0
          - 1
        domains:
          type: array
          description: The domains that the CSR covers.
          example:
          - example.servername.com
          - example.com
          - mail.example.com
          - www.example.com
          - www.example.servername.com
          items:
            type: string
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The certificate's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: Cert for example.servername.com
        id:
          type: string
          description: The certificate's identification.
          example: example_servername_com_ce52d_6e643_2813308004_119580f9b01960cjones72bc519206bc
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.
            - `1` â Self-signed.
            - `0` â Not self-signed.
          example: 1
          enum:
          - 0
          - 1
        issuer.commonName:
          type: string
          description: The name that issued the certificate.
          example: example.servername.com
        issuer.organizationName:
          type: string
          description: The certificate's organization.
          example: Organization
        issuer_text:
          type: string
          description: The certificate's issuer information.
          example: stateOrProvinceName\nTX\nlocalityName\nHouston\ncountryName\nUS\ncommonName\nexample.com\norganizationName\ncPanel
        key:
          type: string
          description: The private key in Base64 PEM format.
          format: pem-private-key
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIJJwIBAAKCAgEA4yilqsoCdEpiNOyLcPJ4FLT7vgwaLdOBeJLTMUeV2uZM4v65/tiZe7H0soDp1C55SCr3uEIEa7Lq7RUZ+F5p67BgRR19rmerKGxfN7N5Vu97pfTwW1f+lVsxUF/56lVeoAmm4okU98xJHiGGlI8ZHGJbUMYfLPy0OrA+gNwMHqMVOv1BSgpbEWCILMvnvtp0rwPutjnPVX2Dj40ia40L4Wqvp+0Yg7mZyhIOl+q6VZVIdXZslR4ZywfRBYt3ieFBDYMyNw9wN3Xy44fCpHc77+ho84W3BqrGaWSSDyf6UkZGD5mfohGf2JSp+c8J6H7hsxo7pta3K1diVXFOSfnaA+k56zW445XruwYs/SN/zvGetGi6uqhMAcVRQcYCmLCixcC6RkcUx3exxgR4q3gthDnFvWC4+NuTh8/K0BcxcuCEhRug/MfVfO3+f7RJFSJPFb9m9Lf4HHBSVkDP5WtG4XiBKCe++9Wuvxbd4QxS7YrnSopNKxkuHKswH8ONpADMYDqfLODMhNrslHNHu95Nv7AlQr8weLqMGWMp7GFqzXcl39RnVkF4Bxd3bAAsMN8/JvanMKCPjTTDrfzVFZcmHXPYOljYDdY1xfIstYVtbyFkUHZP2RPPBaPUAt90lzrKGVF8a2vdIKRiey5SZ5qu9c/mGri3oz7Lkk7qkNPAqDMCAwEAAQKCAgA3f9raG3j2CKZt381Bzzvfc0h+al6LC736Q4Ut6RuH2/S1ER9IUItPWW87nZuDp8ciBr13W0nRNmmHezxZHlgqqXEb8dSfI90Bh1jMNyFSSDihl3KSHrGotBscVBavViREXZdUicGBuXuxtkYno96yvKUq2v0K9MLkA+OBgEHFynqJaw7klBsj573dlAQO8TjI+eD8zKsHbB8Ul5rtRAy/Cl3YXWk75cDZSggevc7A0jRd3o0w8aXDoSlEfYq7OTm3n3JJWZBFPKAXTzgTDr6qItJhjS4IxXsq7RNyeIYES/8aGKKT6lJvjALrcdYt47IpHCOu447lG/h+f6xtDophLGZoAirO7lJFRVfLJh76sLF12bpXJKbbmMN+aut0nM+MLEw8A5K9OV24jJ/3+afj//5789asIyvNaQFPOX23SdLX0QbA5QWvJt2tWvvpS3ubcIJaBEMTK8asEBC68eUW0BBKJaSiYNzecUFYCBjQlxKsIrYuWZoW6fMyRel+cnqMdiH7r2p6RmgF5c9myDwq3E47jE+VrOy8uhw7EMQvT8+YSKaIbgtFZcUSU02BDRB7gWNa842m6nGs5tj5xFNQ6Wt410vilTwL+6zCQqJaKmcdE3woiIgSdrw5MssAHHjqo7QJthZfbpUAUTc6jGPNO13U1ediIRAGdQW5ALqTwQKCAQEA884bmFFZLTewHIv1PJFfNxVZfk3C7LhWE2JcI/5P/YrN4ZA8G08OYhgxqa5XnsHHQPwMM85i1HeOoPwqgTMIyLDX/Sf88+eW3ef4V2M1Y4op0ahWFEwbwXKGxOhncElObN7dfZUwVlxCReaiw2XQAGRqtQC0f+9dZysqPJr+Rz6poTiOtm7DcpW/WiGfBPvVhzBENyqouL9V3vCWYPJSLtCexECoGoPSpHKgUkwbh3+ra8SfG6FOIBj4PpMB82R7oPDjIyXF1VDfb0EwYQlKxyZoP9+NPT2MhZv/hF/Mbm/5LolVHx92hO9q6yxS6nvaFmEPr9fY1EOTWzzPOA+VyQKCAQEA7oVioaTqxENt+wHITZq100iYUpm4X1N1eENTp97QyQbQOVR/t8iGLUdvOZdIxBSTS3JFQ8TNcGDPPc+o319QGdZABNnKwFGY3Ss+5QgVeX6n0WKdxCRelUOUB174aBeXcJCKplh6xBUrLfSZxvZQQb7fv0Mb+2eKUBKTymvES1kpYdn1T0vCCHA3bVpaHuqliCoDSX3RmQICZlfSgCGBbAkmU8RuxDd9yR9l7O9MXUmLsqlsw6hvbUt+7Y13YlDtyX8gbCwEEYsoALOotY1xNfXnyZKTAXhrg+xsQLrURYZUoZiCJyK/mHCWRTPVkt89wq4IexbJ9hqlRjzpmlr8GwKCAQBxRSCs855q06SOnrehHCkQfmrFs3sMX9gdyWTllBG1yfc9BLXoOiKEkJkCLG2o5H6eQnuo1go0jBdH0+ArhnpeQ0sV4q4y4zXEgzFt6Dm1tUsYjQzxASskBQF4GkF0eZpmGmTtI5MBjHt93llgTr0EcaLh1SIHDj5m4DcPUTMyBnro3E3xlCRZ6Biu10/6EMZzuIj42Gjq7HoIyd4TzIFCHsqkgyWWrAgBPwAdPB7OJRKPTxpcy+RwJSmwaLxPSC/n5gKhIbt4D8q+9Zp0esyzGbT1d/c2rJHMwV1FMvzXkk5CwKs7enKl8FXMTRt4tXHtU8rl93JVq8+aY/YiJZuBAoIBAERG2lz7IFjeFHVtpTDRwIqilTfP2P8wnMe4PhInrgxdbu16SrUJKZ98e1I5BBNc8G0AYONtSoGItMo0z1phpkQ/GERLM8aplOB6qJ5XGg6VOuStHgwvfQOtPIp/nQvu9OK7/XRwj3Phu2KESiCyEXdAdDwDsdbdZLJXHwcqoh4Pf9EK2zW/seNIfBVJb9K5yHiZzicTZRQvhxBUw2T6MloCpH4GFM8GM3OHEV4pgeqSSvLxnLjFVmAq5EKL5Ei4cdjkExvj3aZH90N8KicOPgH8SkVhN8OL/Prein5c/LaKJV+8kEUzpTS1xc45cEGCteMsfjD97QINzpG0jgopUVECggEADIaKsx8NUQT3hm0wHRanEFJnQH5HzxaQjWbsjm2uz0KROPNIK1X5L8kypsb+EzlJtvWUqxPaOaTv4DZVpFaVzk8/2PPGsYR3mUjqMqNFYMrNwYZAXvJ/huzDPqq6+w2Pn9jcAifHNw3S8UR650v8gl7BU4fVBvhamG8JelvwLqeGWoikST9NBXVqG5IKBpUkUiFOMUNmRih9ooKvhy7GosoK8MWbmhWo1v8TTSXSagACUhAoIzb6mMN/VFC5WDbFx5AEB/G9tq/zmTqQkuo39dvgl30wyZGRNwc1aFf1Kxeven10/JN9ipp0mTa7NYSdn0RAe9ZRp5cCkgmktqmB0g==
            -----END RSA PRIVATE KEY-----
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` âÂ The certificate's key is **not** an RSA key.
          nullable: true
          example: |-
            ce52db786fd2776f69057ed8ee0d8ab267a2f328a66a3afd8
            76017a99d061ec5d24d646f80ec258c696cb742e2bcd2fef920177144d9126a4
            779c1a21ca5589ff06e673556116903493100dfba385a62d11aeec57f47e5b20
            ad8d1142fbe93f003fb62403cdcc0012ccd407009ac21639623bc52a5d6d3814
            ff9c45a7c246799f0229b4854af2aeddfa755ab13814132424f5b1680f2c357e
            1476af7422bd5863102cfc5982b3ddad7fecdeae5c1cb73789008be9ce2f24fe
            27c9202b3bca6524ba29a30972f14cbf06f0a1b7998c2361ed90221f40829faf
            644adc7b8da6f948d8745ffbe8e5b6f0c8e7ea9ef2bc26413f90666ef1200407
            eab7c3b71c6e643
        modulus_length:
          minimum: 1
          type: integer
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` âÂ The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: When the certificate expired.
          format: unix_timestamp
          example: 1528486286
        not_before:
          type: integer
          description: When the certificate started.
          format: unix_timestamp
          example: 1496950286
        serial:
          type: string
          description: The certificate's serial number.
          example: 01e57e4d92
        signature_algorithm:
          type: string
          description: The OID of the hash algorithm used to sign the certificate
            request.
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The certificate's common name.
          format: domain
          example: example.servername.com
        subject_text:
          type: string
          description: The certificate's subject text information.
          example: stateOrProvinceName\nTX\nlocalityName\nHouston\ncountryName\nUS\ncommonName\nexample.com\norganizationName\ncPanel
        validation_type:
          type: string
          description: |-
            The certificate's validation type.
            * `ev` â Extended Validation.
            * `ov` â Organization Validated.
            * `dv` â Domain Validated.
            * `null` â  The system could not parse and determine the certificate's validation type.
          example: dv
        verify_error:
          type: string
          description: A message that explains the reason for a verification error.
          example: DEPTH_ZERO_SELF_SIGNED_CERT
    inline_response_200_413_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_413_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_414_result_data:
      type: object
      properties:
        cab:
          type: string
          description: The CA bundle's contents (if applicable).
          format: pem-certificate
          example: '-----BEGIN CERTIFICATE-----MIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYDVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJvb3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJVUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJUcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyvRLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4MypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/51KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKzdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWlIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9ApybW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY-----END
            CERTIFICATE-----'
        crt:
          type: string
          description: The certificate's contents.
          format: pem-certificate
          example: '-----BEGIN CERTIFICATE-----MIIDcTCCAlmgAwIBAgIFAU+BNVgwDQYJKoZIhvcNAQEFBQAwUTESMBAGA1UEAwwJc2lza28udGxkMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGY1BhbmVsMQswCQYDVQQIDAJUWDEQMA4GA1UEBwwHSG91c3RvbjAeFw0xNDEwMDYyMjI2MTlaFw0xNTEwMDYyMjI2MTlaMFExEjAQBgNVBAMMCXNpc2tvLnRsZDELMAkGA1UEBhMCVVMxDzANBgNVBAoMBmNQYW5lbDELMAkGA1UECAwCVFgxEDAOBgNVBAcMB0hvdXN0b24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9zx6zGiHdmWA0dKtoXmJiWXpZ9E3PXx3YHsjFEWW7e5pH0vZ+jVMzDmm5nsJ7RXrAkZO1IvpIpVLvoQfiJOWVvkD+o9fWvoK1tWJS72FSgPju+58mA2ieBuc87A790Pzuv1P3NR3zFLAjUR99zkHR1fpri/daM3PBWO8ET48FWkyU1kOeZaUlF67/+wrEiNgg+t1qhKOCAB61PdNVkLaSGHimksuC+Czk8Kq9nuS0E0TCnDtjjEyJ455FUcaCfczlTb8xkB/F9ORe74yTzD+vlk0tFMG6PLj/ajIwWqwO0qmQ8wX3NRxkWgGz5kVO1wrVJarKQ5EYQ3/mgvit0v6dAgMBAAGjUDBOMB0GA1UdDgQWBBRw+wKBo34+bgexjAa3EMDsgSCd7zAfBgNVHSMEGDAWgBRw+wKBo34+bgexjAa3EMDsgSCd7zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCHRXIs53opzKM2rM8Qe8lcw524WK6hqy2EWrZHp78N7rU7/6DQ/I3hv3WhcDDIO04I2/Xhe88MLBaLoM367Ya+vy7CaLr14aLi/SfQszMA0ALBvMao+Fis0iVwFYq/NLgSXw+fgnpFskt8v8iQZ+4Kaal8U8e9sVgu8m0RgO7rzym1eRiIKpsKd1rh/SD7LbSN7M7TRL3QqF7ltw9sQhAAsQcRaBBF21pdWrqhiGZ+Eioo3hhgwNavH2agqz78ddHwrFpHFwrEeUk1OfpPb76MYIce7xIy/4oQNdg6fOq4l/FrajBv+WkzDVPaKm6r7YmwfLN/YMZBHXSR58oOGP9W-----END
            CERTIFICATE-----'
        crt_origin:
          type: string
          description: The username that generated the certificate.
          format: username
          example: username
        domain:
          type: string
          description: The domain that generated the private key.
          format: domain
          example: example.com
        ip:
          type: string
          description: The IP address.
          format: ipv4
          example: 192.168.0.1
        key:
          type: string
          description: The private key.
          format: pem-private-key
          example: '-----BEGIN RSA PRIVATE KEY-----MIIJJwIBAAKCAgEA4yilqsoCdEpiNOyLcPJ4FLT7vgwaLdOBeJLTMUeV2uZM4v65/tiZe7H0soDp1C55SCr3uEIEa7Lq7RUZ+F5p67BgRR19rmerKGxfN7N5Vu97pfTwW1f+lVsxUF/56lVeoAmm4okU98xJHiGGlI8ZHGJbUMYfLPy0OrA+gNwMHqMVOv1BSgpbEWCILMvnvtp0rwPutjnPVX2Dj40ia40L4Wqvp+0Yg7mZyhIOl+q6VZVIdXZslR4ZywfRBYt3ieFBDYMyNw9wN3Xy44fCpHc77+ho84W3BqrGaWSSDyf6UkZGD5mfohGf2JSp+c8J6H7hsxo7pta3K1diVXFOSfnaA+k56zW445XruwYs/SN/zvGetGi6uqhMAcVRQcYCmLCixcC6RkcUx3exxgR4q3gthDnFvWC4+NuTh8/K0BcxcuCEhRug/MfVfO3+f7RJFSJPFb9m9Lf4HHBSVkDP5WtG4XiBKCe++9Wuvxbd4QxS7YrnSoKxkuHKswH8ONpADMYDqfLODMhNrslHNHu95Nv7AlQr8weLqMGWMp7GFqzXcl39RnVkF4Bxd3bAAsMN8/JvanMKCPjTTDrfzVFZcmHXPYOljYDdY1xfIstYVtbyFkUHZP2RPPBaPUAt90lzrKGVF8a2vdIKRiey5SZ5qu9c/mGri3oz7Lkk7qkNPAqDMCAwEAAQKCAgA3f9raG3j2CKZt381Bzzvfc0h+al6LC736Q4Ut6RuH2/S1ER9IUItPWW87nZuDp8ciBr13W0nRNmmHezxZHlgqqXEb8dSfI90Bh1jMNyFSSDihl3KSHrGotBscVBavViREXZdUicGBuXuxtkYno96yvKUq2v0K9MLkA+OBgEHFynqJaw7klBsj573dlAQO8TjI+eD8zKsHbB8Ul5rtRAy/Cl3YXWk75cDZSggevc7A0jRd3o0w8aXDoSlEfYq7OTm3n3JJWZBFPKAXTzgTDr6qItJhjS4IxXsq7RNyeIYES/8aGKKT6lJvjALrcdYt47IpHCOu447lG/h+f6xtDophLGZoAirO7lJFRVfLJh76sLF12bpXJKbbmMN+aut0nM+MLEw8A5K9OV24jJ/3+afj//5789asIyvNaQFPOX23SdLX0QbA5QWvJt2tWvvpS3ubcIJaBEMTK8asEBC68eUW0BBKJaSiYNzecUFYCBjQlxKsIrYuWZoW6fMyRel+cnqMdiH7r2p6RmgF5c9myDwq3E47jE+VrOy8uhw7EMQvT8+YSKaIbgtFZcUSU02BDRB7gWNa842m6nGs5tj5xFNQ6Wt410vilTwL+6zCQqJaKmcdE3woiIgSdrw5MssAHHjqo7QJthZfbpUAUTc6jGPNO13U1ediIRAGdQW5ALqTwQKCAQEA884bmFFZLTewHIv1PJFfNxVZfk3C7LhWE2JcI/5P/YrN4ZA8G08OYhgxqa5XnsHHQPwMM85i1HeOoPwqgTMIyLDX/Sf88+eW3ef4V2M1Y4op0ahWFEwbwXKGxOhncElObN7dfZUwVlxCReaiw2XQAGRqtQC0f+9dZysqPJr+Rz6poTiOtm7DcpW/WiGfBPvVhzBENyqouL9V3vCWYPJSLtCexECoGoPSpHKgUkwbh3+ra8SfG6FOIBj4PpMB82R7oPDjIyXF1VDfb0EwYQlKxyZoP9+NPT2MhZv/hF/Mbm/5LolVHx92hO9q6yxS6nvaFmEPr9fY1EOTWzzPOA+VyQKCAQEA7oVioaTqxENt+wHITZq100iYUpm4X1N1eENTp97QyQbQOVR/t8iGLUdvOZdIxBSTS3JFQ8TNcGDPPc+o319QGdZABNnKwFGY3Ss+5QgVeX6n0WKdxCRelUOUB174aBeXcJCKplh6xBUrLfSZxvZQQb7fv0Mb+2eKUBKTymvES1kpYdn1T0vCCHA3bVpaHuqliCoDSX3RmQICZlfSgCGBbAkmU8RuxDd9yR9l7O9MXUmLsqlsw6hvbUt+7Y13YlDtyX8gbCwEEYsoALOotY1xNfXnyZKTAXhrg+xsQLrURYZUoZiCJyK/mHCWRTPVkt89wq4IexbJ9hqlRjzpmlr8GwKCAQBxRSCs855q06SOnrehHCkQfmrFs3sMX9gdyWTllBG1yfc9BLXoOiKEkJkCLG2o5H6eQnuo1go0jBdH0+ArhnpeQ0sV4q4y4zXEgzFt6Dm1tUsYjQzxASskBQF4GkF0eZpmGmTtI5MBjHt93llgTr0EcaLh1SIHDj5m4DcPUTMyBnro3E3xlCRZ6Biu10/6EMZzuIj42Gjq7HoIyd4TzIFCHsqkgyWWrAgBPwAdPB7OJRKPTxpcy+RwJSmwaLxPSC/n5gKhIbt4D8q+9Zp0esyzGbT1d/c2rJHMwV1FMvzXkk5CwKs7enKl8FXMTRt4tXHtU8rl93JVq8+aY/YiJZuBAoIBAERG2lz7IFjeFHVtpTDRwIqilTfP2P8wnMe4PhInrgxdbu16SrUJKZ98e1I5BBNc8G0AYONtSoGItMo0z1phpkQ/GERLM8aplOB6qJ5XGg6VOuStHgwvfQOtPIp/nQvu9OK7/XRwj3Phu2KESiCyEXdAdDwDsdbdZLJXHwcqoh4Pf9EK2zW/seNIfBVJb9K5yHiZzicTZRQvhxBUw2T6MloCpH4GFM8GM3OHEV4pgeqSSvLxnLjFVmAq5EKL5Ei4cdjkExvj3aZH90N8KicOPgH8SkVhN8OL/Prein5c/LaKJV+8kEUzpTS1xc45cEGCteMsfjD97QINzpG0jgopUVECggEADIaKsx8NUQT3hm0wHRanEFJnQH5HzxaQjWbsjm2uz0KROPNIK1X5L8kypsb+EzlJtvWUqxPaOaTv4DZVpFaVzk8/2PPGsYR3mUjqMqNFYMrNwYZAXvJ/huzDPqq6+w2Pn9jcAifHNw3S8UR650v8gl7BU4fVBvhamG8JelvwLqeGWoikST9NBXVqG5IKBpUkUiFOMUNmRih9ooKvhy7GosoK8MWbmhWo1v8TTSXSagACUhAoIzb6mMN/VFC5WDbFx5AEB/G9tq/zmTqQkuo39dvgl30wyZGRNwc1aFf1Kxeven10/JN9ipp0mTa7NYSdn0RAe9ZRp5cCkgmktqmB0g==-----END
            RSA PRIVATE KEY-----'
        key_origin:
          type: string
          description: The username that generated the private key.
          format: username
          example: username
        searched_users:
          type: array
          description: The users that the system searched for certificate information.
          items:
            type: string
            format: username
            example: username
        status:
          type: integer
          description: |-
            Whether the certificate is active.
            * `1` - Active.
            * `0` - Inactive.
          example: 1
          enum:
          - 0
          - 1
        statusmsg:
          type: string
          description: The certificate's status.
          example: ok
        user:
          type: string
          description: The username that stores the private key.
          format: username
          example: username
    inline_response_200_414_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_414_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_415_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The date the certificate was created.
          format: unix_timestamp
          example: 1538308800
        domains:
          type: array
          description: A list of the domains that the certificate covers.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: TestCert
        id:
          type: string
          description: The certificate's ID.
          example: example_com_a74f7_9dddf_1446659822_eae1ff43c4ec1991e195877c55755eff
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` â Self-signed.
            * `0` â Not self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The name that issued the certificate.
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's organization name.
          example: The Example Organization
        issuer_text:
          type: string
          description: The certificate's issuer information.
          example: "countryName\nUS\ncommonName\example.com\nlocalityName\nHouston\n\
            organizationName\ncPanel\nstateOrProvinceName\ntx"
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          type: integer
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The date the certificate expired.
          format: unix_timestamp
          example: 1569844800
        not_before:
          type: integer
          description: The date the certificate started.
          format: unix_timestamp
          example: 1538308800
        signature_algorithm:
          type: string
          description: The certificate's signature OID hash algorithm.
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The certificate's Common Name.
          example: example.com
        subject_text:
          type: string
          description: The certificate's subject text information.
          example: "countryName\nUS\ncommonName\example.com\nlocalityName\nHouston\n\
            organizationName\ncPanel\nstateOrProvinceName\ntx"
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `ev` âÂ Extended Validation.
            * `ov` âÂ Organization Validation.
            * `dv` âÂ Domain Validation.
            * `null` âÂ The system could not parse and determine the
            certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
    inline_response_200_415_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_415_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_416_result_data:
      type: object
      properties:
        commonName:
          type: string
          description: The CSR's common name.
          format: domain
          example: example.com
        created:
          type: integer
          description: The date the CSR was created.
          format: unix_timestamp
          example: 1538265600
        domains:
          type: array
          description: A list of the domains that the CSR covers.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the CSR's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The CSR's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The CSR's key's ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The CSR's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The CSR's friendly name.
          example: TestCSR
        id:
          type: string
          description: The CSR's ID.
          example: example_com_a74f7_9dddf_2c5d1615e85db817d6b640f65335fb62
        key_algorithm:
          type: string
          description: |-
            The CSR's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The CSR's key's modulus, in hexadecimal format.

            * `null` âÂ The CSR's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
    inline_response_200_416_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_416_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_417_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The certificate's creation date.
          format: unix_timestamp
          example: 1538308800
        domains:
          type: array
          description: A list of domains that the certificate covers.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * null â The certificate's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: TestCert
        id:
          type: string
          description: The certificate's ID.
          example: example_com_a74f7_9dddf_1446659822_eae1ff43c4ec1991e195877c55755eff
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` â Self-signed.
            * `0` â Not self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The certificate's Common Name.
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's Organization Name.
          example: Organization
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          type: integer
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The date that the certificate expires.
          format: unix_timestamp
          example: 1569844800
        not_before:
          type: integer
          description: The certificate's start date.
          format: unix_timestamp
          example: 1538308800
        serial:
          type: string
          description: The certificate's serial number.
          example: 01e57e4d92
        signature_algorithm:
          type: string
          description: The certificate's OID hash algorithm signature.
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The domain that issued the certificate.
          format: domain
          example: example.com
        text:
          type: string
          description: The certificate's text.
          format: pem-certificate
          example: |
            -----BEGIN CERTIFICATE-----
            MIIGBzCCA++gAwIBAgIFAeV+TZIwDQYJKoZIhvcNAQELBQAwUjELMAkGA1UECAwC
            VFgxEDAOBgNVBAcMB0hvdXN0b24xCzAJBgNVBAYTAlVTMRMwEQYDVQQDDAptcmZy
            b2cuY29tMQ8wDQYDVQQKDAZjUGFuZWwwHhcNMjAwNjA4MTUyNjA0WhcNMjEwNjA4
            MTUyNjA0WjBSMQswCQYDVQQIDAJUWDEQMA4GA1UEBwwHSG91c3RvbjELMAkGA1UE
            BhMCVVMxEzARBgNVBAMMCm1yZnJvZy5jb20xDzANBgNVBAoMBmNQYW5lbDCCAiIw
            DQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK/PpzRsms2ZZmA1EG2rNYZaAq2z
            bhUGN6YMpugDwPL9xuqDwf0WUdoBjSBbty7rb5zMCZ+Ty3xHFAo15TLQXqtM0zIo
            h/FRET9rtl6EuXFFFN+eAiV4GgZJVmVMmcgXNGgSjKZHhie5THkGJbwXXRxZryHN
            QIeLlT7DttSwoAh9rEbk6hHKyyoQQ4rSkNXREUZTN3Gk7u7et8iYWl1FBkmJkFDJ
            H4Ys678md7AiXndb4YkOQd2CEgoWXMaMLWJcFkdAmrIYhRmJvyp3BzF9hEkg+qPp
            VEyIL/xVxScdxiFKGWbiHr10UiFt/0+g0gToyUXCmsfo01p0oqrk4qRSZMnUtfdX
            W06vvD64x4Z4M4Jh5WqzVEXEdppzJx09Z7MBK6GLN82pV46x8jp87cBL1LZrpWDinerx+6Vr7YC62itfp6aJ2q6vkxCh4u8T6EjPEcpZAEh5SiQZaOLhAlqgt/lwPpuCW
            Q7LEi/Vg4aG3yb/z8e2BvRK5nnCHd7OOZqg7HJ9UnrzFxeQ8KyvcxP+oYD3h0EvZ
            1zVTbJDLbYuohqbLts3Skuk1hT9HoeWqrmzn2XkoU8LkvzCcRT0oG40BfFr4z7Zz
            sKfG9Z4e06kb1YAPrSqd9w/iI1Ej8cRhBBlowYFq9RjNlkjJCwKlxzynNAJjoQ5W
            U5NJzKjUz6ChHAAtAgMBAAGjgeMwgeAwHQYDVR0OBBYEFFczMNVfcxDsyk27GfjD
            C0Z1Yv+mMAkGA1UdEwQCMAAwfgYDVR0jBHcwdYAUVzMw1V9zEOzKTbsZ+MMLRnVi
            /6ahVqRUMFIxCzAJBgNVBAgMAlRYMRAwDgYDVQQHDAdIb3VzdG9uMQswCQYDVQQG
            EwJVUzETMBEGA1UEAwwKbXJmcm9nLmNvbTEPMA0GA1UECgwGY1BhbmVsggUB5X5N
            kjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwFQYDVR0RBA4wDIIKbXJm
            cm9nLmNvbTANBgkqhkiG9w0BAQsFAAOCAgEArbNqSdABFWy8NbpDGDAoi2rpw/aM
            Wu18iEAHmPg9YekIngNpxZg4b8SB4jrNSSqB0pK8asckxmAcho/pnAx4rOFibftd
            DmGzYxGN9h60JkVToWSn3UQ/0dbqfhfTbGiQvJHTNqB3pQVvWenMFRz9XEcpMDUj
            7UKR8v2xe5Y25yvNPVezYF2/x85awlOoSa00UlKgqh0OU+iuzQZ9T3wtk5uvlc7Z
            IEzBseIn3Kp/WG3P64Rxn95YT6QssKJ+pZ412yKM7vKdcuglNLTv5cx4ffKFN1jm
            anCmPXgYsUdAazmZVSjVuVN7d2+NL+SDVczZCdJ2Vhk5DPqv8ZnHUF7MT+K6vtQd
            J16+pszCF55t9w5uPqur67/R00dCWLpxvHRRF8J+2Xverhmex5kR6a1nUlbP1oOP
            Vq+EmcAL0PP6qdDr8fkjgvNyX7hT+cuiPBbxpY6XfDSlat5+5T2lJ1Ny6GWhBnaR
            35g3EF8ysu3AYQnDwtZrOrEa08lDN3mbrkT3ImSa5oZKgOrlpCZ0dzi8p4wSrboq
            9eZyqikEvuudz+VeQf1WR/6/FsyRq2PEtjgX1atWZiPfatN5f1YVxcElTvuMzyOP
            ZXjpUs8MO+CHF1FwtKm52NNItIlnUY7KPpFU8L+oa8O2BMr91wi8NpTR2gd0F+jH
            21NkfEM7YlXzgMw=
            -----END CERTIFICATE-----
        validation_type:
          type: string
          description: "The certificate's validation type, if one exists."
          nullable: true
    inline_response_200_417_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_417_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
            example: Certificate generated
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_418_result_data:
      type: object
      properties:
        commonName:
          type: string
          description: The name that issued the CSR.
          example: example.com
        created:
          type: integer
          description: The date the CSR was created.
          format: unix_timestamp
          example: 1569884400
        domains:
          type: array
          description: The domains that the CSR covers.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the CSR's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The CSR's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The CSR's key's ECDSA compressed public point, in hexadecimal format.

            * `null` â The CSR's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The CSR's friendly name.
          example: TestCSR
        id:
          type: string
          description: The CSR's ID.
          example: example_com_a74f7_9dddf_1446659822_eae1ff43c4ec1991e195877c55755eff
        key_algorithm:
          type: string
          description: |-
            The CSR's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The CSR's key's modulus, in hexadecimal format.

            * `null` â The CSR's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        text:
          type: string
          description: The CSR's text.
          format: pem-certificate-request
          example: |-
            -----BEGIN CERTIFICATE REQUEST-----
            MIIC3TCCAcUCAQAwgZcxFDASBgNVBAMMC2V4YW1wbGUuY29tMRYwFAYDVQQLDA1E
            b2N1bWVudGF0aW9uMQswCQYDVQQGEwJVUzEiMCAGCSqGSIb3DQEJARYTbGF1cmVu
            Y2VAY3BhbmVsLm5ldDEUMBIGA1UECgwLY1BhbmVsIEluYy4xDjAMBgNVBAgMBVRl
            eGFzMRAwDgYDVQQHDAdIb3VzdG9uMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
            CgKCAQEAp092NvpqyT7mg2qDqZW1XetQGeo217o9r7AOONaTrNsMgbL/d31rQzpC
            D65SPxJ/NSpovMi48tbue3A5W6+r2CN62oFk/d34N2swN1w11NTLzOfTPQgGnBe0
            CRdqNonx68l8Cwj+auRMGakqxtaESOfx0T87Ngr/1CIqUbTzU0LembWh+1VI5Djy
            2CRmRWKkSAAu7X/OJN7cfcPh7ReZc9Ha6VmzNxbutBDRcnCJVOAGMsv2Cg4mQZhg
            yMC8KF1r/ktHneDdGJdypdrmdr0qkqzMwTaYIb6M/93Yp+bswGH4oyqa4GYeTpRu
            2OOCeydxONOnYRZWfL0SnL2Gnvnd3wIDAQABoAAwDQYJKoZIhvcNAQEFBQADggEB
            AFlolzJbcviWcdZUv+PJ7G8cAqFAxa8a3W2a0Y1U0BaMrpDfuOHpQgOtO62rr+i+
            hkrIReuk7Isyl6GoZkX17KhQ1Vo9aW8a8Ur7+0RGDbxRlK9jJWnvSFn6cMMqRSfA
            DXpptxhqBFZJIZMc3pPX9Jqycuu8bxeIvUKeSMe3Jxcl1ZXEXX47FeRZxvd+WXF9
            4Xu4KZXHdzb5tB6jPhzIaN0/3d92N/KhvCcnw3YC2fEGDkpOlZaoa7O72+aq5K3b
            M1htFv9deAHqIHefV41iOrxUCIKIhdPIjvAm774lDHLzPpJVrshO/NpA74LEkny5
            FMwKKx+6Jgx1HSWucn5kWek=
            -----END CERTIFICATE REQUEST-----
    inline_response_200_418_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_418_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          example:
          - Certificate Signing Request generated!
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_419_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The key's creation date.
          format: unix_timestamp
          example: 1601467200
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The key's ECDSA compressed public point, in hexadecimal format.

            * `null` â The key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The key's friendly name.
          example: TestKey
        id:
          type: string
          description: The key's ID.
          example: example_com_a74f7_9dddf_1446659822_eae1ff43c4ec1991e195877c55755eff
        key_algorithm:
          type: string
          description: |-
            The key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The key's modulus, in hexadecimal format.

            * `null` â The key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          type: integer
          description: |-
            The length, in bits, of the key's modulus.

            * `null` â The key is **not** an RSA key.
          nullable: true
          example: 2048
        text:
          type: string
          description: The key's contents.
          format: pem-private-key
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEAyeiHvMuJuVk8ZEY6wMzUS1g0eWaHaIWmIRe+Qrn6SwiRrm1p
            psJCiGPPPQGOSg4FzrMXqE0zsi/Tk3hUO/EEsi7CcZe8cUanjlUeXhiwrb86FCMF
            Ob9siRHQvlss7VCg8ZGXXTWZgf5yD3A1xPwdayYwF2Tc7GkNcZGUAI58geuYaq+U
            GiLczRGZep1IQ0b1cZnqDvGMx6AS6hiDqLISjnmXYY2OhG6Uyp+SuinjYzLPJ6eO
            N/7i9qqbcGmt0ssddmhR897+bTEom5SlSuyi03KZ9Rn4ZmNJgOsup9MclSBGxBys
            b6MuuM3N0/tF5QuwmDc8H6h2rNBP9vGV7RTTXQIDAQABAoIBAFS/WVoRRLmbjxG3
            uKl8UA9f8oaSVnu0vUpeoOl5Dmm4Kw2/tvzbxPlii3Xb1VGYGS/tVBy8atp74J6h
            fxm5zHLN1afAPMR/F41ShPCSBHapMUOKf4MBqhjOdYOw2Way1RsQNSxWdxxtJIr+
            WlNYTzDOUpk/KMvCPHZS2IBzTidpcFpDQ3pyDXjOoKJJH0EQWPtvxJNGrFqmU29D
            9WBqQemHnDrzg3s7JzQ5cGpbbCE+QX8IckNkslAkyhm771CtqWdeo+c45e6YfGcx
            KuAy1zGSVzQBuitzYoMUOL5olXLEj8fHzXd/cZP4yCyyabcGz2vi6luxF+28l1OL
            G1axyLECgYEA+bD5B+Y/Dp5hZ/uVR1bbvyraQpwbDesS1zgnJ53KOIl926dnWzIt
            UvM46+c9IF+UJrtzwIB6IvjAQioNFrK36bHgNGzNf9WQ54NN172qveaFLdW34z/i
            GR2ix/efm9OC41QREQ/5IKV07TibCwVazVBWascMPkH7FnguTvTCiosCgYEAzwJ+
            GPlIWjK+sqkK5JMUyuH43qAvgVfkZV906JpNRQH0Mob3bC0nXN95EoTwWXk68ULT
            o1GHv9XLbj8e+Ok7kpJQZT5vEZnDN+cy3jdTLCvcjU5Q3ToImOTp9isSAFWRTbtk
            yabLNoIIsTR/ZwwPFTZcRiK2d8k7ZhcRKdfGnrcCgYAPZ06FoTukoDqsGoYkB4S4
            72DVmSHGIwlfg5ROylouULUV9ubWZmsLYfvR+cr4k0zlcsz6RDLEs4nQyx1RmCbm
            YNXPBiNLTpaI4b3MoGPHIVB3+mZEu60sFXr0UR9kkpDRi18eKVkaHXrwI3zVGjh2
            0Az0u2DS+mkOAs4AivLxbwKBgQC0XPqbLc+Bb0dCCREJmLD8GCkrZ6wcaQUB4krN
            Q2vhnVM0Fu5K3Yi3XapynUuA2aSmgtA9MxMw7MkjlHGa9DPIgBz2KZDCaBN0iMeE
            X/XivZCbucmxBxhohsLmjh5QFj3U2Vp2bBIQuvlx1EjQ8uvNUqDRJvuOoNFVIPH+
            YBeZPwKBgA//kXfNtNMHOpch699i3rgTzbRFDmGwsr1otzvJsXw7Pr2bM4WIzUJy
            G2SUSUlQRSZK4+BBKT9S0d7TynJD6X/6R7IBotZbfXs1myYxEsKj89/BQmr47x2h
            HjYVCClNoJlsbd5C2yu1R3PikweWGoVaxE3c+AN5knqjwJ0g21Cf
            -----END RSA PRIVATE KEY-----
    inline_response_200_419_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_419_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_420_result_data:
      type: object
      properties:
        excluded_domain:
          type: string
          description: A domain that has AutoSSL disabled.
          example: example.com
    inline_response_200_420_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that include domain's AutoSSL information.
          items:
            $ref: "#/components/schemas/inline_response_200_420_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_421_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The certificate's hostname.
          format: domain
          example: example.com
        problem:
          type: string
          description: text description of the problem.
          example: "example.com contains 400 domains, which exceeds the maximum number\
            \ (200) of domains allowed for the \"Sectigo\" AutoSSL provider. This\
            \ system will include those 200 domains on the certificate that appear\
            \ to be the website's most important. To allow AutoSSL to secure each\
            \ domain, divide the 400 domains among separate websites. (The websites\
            \ can all serve the same content from the same document root.)"
        time:
          type: string
          description: When the problem occurred.
          format: ISO-8601 Date Time
          example: 2018-06-07T05:30:09.000Z
    inline_response_200_421_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_421_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_422_result_data:
      type: object
      properties:
        bundle:
          type: string
          description: The CA bundle's tag.
          example: VeriSign Trial Secure Server CA - G2
        cab:
          type: string
          description: The CA bundle's contents.
          format: pem-certificate
          example: '-----BEGIN CERTIFICATE----- MIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD
            VQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv b3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV
            UzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU cnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv
            RLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M ypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5
            1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz dcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl
            IjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy bW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY
            -----END CERTIFICATE-----'
        domain:
          type: string
          description: The certificate's hostname.
          format: domain
          example: example.com
    inline_response_200_422_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_422_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_423_result_data:
      type: object
      properties:
        cert_match_method:
          type: string
          description: |-
            The method that the system used to match the certificate with the mail
            service.

            * `none` â No domain matches the certificate.
            * `exact` â The domain exactly matches the certificate.
            * `exact-wildcard` â The domain exactly matches the certificate.
            * `mail-wildcard` â The `mail` subdomain of the domain matches the domain of the wildcard certificate.
            * `www-wildcard` â The `www` subdomain of the domain matches the domain of the wildcard certificate.
            * `hostname-wildcard` â The hostname's domain matches the domain of the wildcard certificate.
            * `hostname` â The hostname matches the domain of the certificate.
            * `localdomain_on_cert-mail-wildcard` â A `mail` subdomain of a domain on the server that matches the certificate.
            * `localdomain_on_cert-www-wildcard` â A `www` subdomain of a domain on the server matches the certificate.
            * `localdomain_on_cert` â A domain on the server matches the certificate.
          example: hostname
          enum:
          - none
          - exact
          - exact-wildcard
          - mail-wildcard
          - www-wildcard
          - hostname-wildcard
          - hostname
          - localdomain_on_cert-mail-wildcard
          - localdomain_on_cert-www-wildcard
          - localdomain_on_cert
        cert_valid_not_after:
          type: integer
          description: The certificate's expiration date.
          format: unix_timestamp
          example: 1394288638
        is_currently_valid:
          type: integer
          description: |-
            Whether the certificate is currently valid.

            * `1` âÂ Valid.
            * `0` âÂ Invalid.

            **Note:**

            If the certificate is valid, the following statements are true:
              * The certificate is **not** self-signed (the `ssldomain_matches_cert` value is `1`).
              * The certificate matches the SSL domain (the `ssldomain_matches_cert` value is `1`).
              * The certificate is within its validity period (the `cert_valid_not_after` value is **less** than the current time and date).
          example: 0
          enum:
          - 1
          - 0
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` â Self-signed.
            * `0` â Not self-signed.

            **Note:**

            If the `cert_match_method` value is `none`, you should ignore this return's value.
          example: 1
          enum:
          - 1
          - 0
        is_wild_card:
          type: integer
          description: |-
            Whether the certificate is a wildcard certificate.

            * `1` â Wildcard.
            * `0` â Not a wildcard.
          example: 0
          enum:
          - 1
          - 0
        ssldomain:
          type: string
          description: The best domain to use to access the service.
          format: domain
          example: hostname.example.com
        ssldomain_matches_cert:
          type: integer
          description: |-
            Whether an SSL-protected domain matches the certificate.

            * `1` â Matches.
            * `0` â Does **not** match.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_423_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_423_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_424_result_data:
      type: object
      properties:
        action:
          type: string
          description: The action that the function used to install the certificate.
          example: update
        cert_id:
          type: string
          description: The certificate ID.
          example: example_com_bbe7e_16e2d_1369007999_1d87a0cdb540f5aae607b10e9a1a82fb
        domain:
          type: string
          description: The domain that the certificate covers.
          format: domain
          example: example.com
        extra_certificate_domains:
          type: array
          description: The domains that require extra certificates for mail and other
            services.
          items:
            type: string
            format: domain
            example: ssl.example.com
        html:
          type: string
          description: "The results, in HTML format."
          example: |-
            The SSL certificate is now installed onto the domain "example.com" using the IP address "192.168.0.1".
            The existing virtual host was updated with the new certificate. Apache is restarting in the background.
        ip:
          description: The domain's IP address.
          example: 192.168.0.1
          oneOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        key_id:
          type: string
          description: The key ID.
          example: bbe7e_16e2d_df7539f280eb1ecf6c1096190e41ada7
        message:
          type: string
          description: "The results, in text format."
          example: |-
            The SSL certificate is now installed onto the domain "example.com" using the IP address "192.168.0.1".
            The existing virtual host was updated with the new certificate.
            Apache is restarting in the background.
        statusmsg:
          type: string
          description: The results.
          example: |-
            The SSL certificate is now installed onto the domain "example.com" using the IP address "192.168.0.1".
            The existing virtual host was updated with the new certificate.
            Apache is restarting in the background.
            The SSL certificate is now installed onto the domain "example.com" using the IP address "192.168.0.1".
            The existing virtual host was updated with the new certificate.
            Apache is restarting in the background
        user:
          type: string
          description: The domain's owner.
          format: username
          example: example
        warning_domains:
          type: array
          description: The domains that the certificate does not cover.
          items:
            type: string
            format: domain
            example: warning.com
        working_domains:
          type: array
          description: The domains that the certificate covers.
          items:
            type: string
            format: domain
            example: example.com
    inline_response_200_424_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_424_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_425_result_data_certificate:
      type: object
      properties:
        domains:
          type: array
          description: The domains that the certificate covers.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The certificate's key is **not** an ECDSA key.
          nullable: true
        id:
          type: string
          description: The certificate's ID.
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.
            * `1` â Self-signed.
            * `0` â Not self-signed.
          example: 1
          enum:
          - 0
          - 1
        issuer.commonName:
          type: string
          description: "The issuer's Common Name, typically a domain name."
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's organization.
          example: Organization
        issuer_text:
          type: string
          description: The X.509 information about the issuer that contains CSR information.
          example: |-
            commonName
            example.com
            countryName
            US
            emailAddress
            username@example.com
            organizationName
            Example
            stateOrProvinceName
            Texas
            localityName
            Houston
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

              * `rsaEncryption` â RSA.
              * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` âÂ The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          minimum: 1
          type: integer
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` âÂ The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The certificate's expiration time.
          format: unix_timestamp
          example: 1397169490
        not_before:
          type: integer
          description: The certificate's start time.
          format: unix_timestamp
          example: 1365633490
        signature_algorithm:
          type: string
          description: The signature algorithm of the certificate.
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The certificate's Common Name.
          example: example.com
        subject_text:
          type: string
          description: The X.509 information about the certificate's subject that
            contains CSR information.
          example: |-
            commonName
            example.com
        validation_type:
          type: string
          description: |-
            The certificate's validation type.
            * `ev` â Extended Validation.
            * `ov` â Organization Validation.
            * `dv` â Domain Validation.
            * `null` â The system could not parse and determine the certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
        verify_error:
          type: string
          description: |-
            Any errors that exist during the certificate verification process. If there are no errors, this will return an empty string.

            **Note:**

            You **must** set the `verify_certificate` parameter to `1` for this return to appear.
          example: ""
      description: An object containing the certificate information.
    inline_response_200_425_result_data:
      type: object
      properties:
        certificate:
          $ref: "#/components/schemas/inline_response_200_425_result_data_certificate"
        host:
          type: string
          description: The issuer's hostname.
          format: domain
          example: example.com
    inline_response_200_425_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_425_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_426_result_certificate:
      type: object
      properties:
        auto_ssl_provider:
          type: string
          description: The AutoSSL provider's name.
          example: cPanel
        auto_ssl_provider_display_name:
          type: string
          description: The AutoSSL provider's display name.
          example: Sectigo
        domains:
          type: array
          description: The domains that the certificate covers.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The certificate's key is **not** an ECDSA key.
          nullable: true
        id:
          type: string
          description: The certificate's ID.
          example: example_com_a74f7_9dddf_1446659822_eae1ff43c4ec1991e195877c55755eff
        is_autossl:
          type: integer
          description: |-
            Whether the AutoSSL service provided the certificate.
            * `1` - Provided by the AutoSSL service.
            * `0` - Not provided by the AutoSSL service.
          example: 1
          enum:
          - 0
          - 1
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.
            * `1` - Self-signed.
            * `0` - Not self-signed.
          example: 1
          enum:
          - 0
          - 1
        issuer.commonName:
          type: string
          description: The name that issued the certificate.
          format: domain
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's organization name.
          example: The Example Organization
        issuer_text:
          type: string
          description: The issuer's X.509 information.
          example: |-
            example.com
            countryName
            US
            emailAddress
            username@example.com
            organizationName
            Example
            stateOrProvinceName
            Texas
            localityName
            Houston
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` âÂ The certificate's key is **not** an RSA key.
          format: hex
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          minimum: 1
          type: integer
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` âÂ The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: When the certificate expired.
          format: unix_timestamp
          example: 1446659822
        not_before:
          type: integer
          description: When the certificate started.
          format: unix_timestamp
          example: 1415123822
        signature_algorithm:
          type: string
          description: The signature algorithm of the certificate.
          format: sha256
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The certificate's common name.
          format: domain
          example: example.com
        subject_text:
          type: string
          description: The subject's X.509 information.
          example: |-
            commonName
            example.com
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            **Note:**
            * `ev` -  Extended Validation.
            * `ov` - Organization Validation.
            * `dv` - Domain Validation.
            * null - The system could not parse and determine the certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
      description: An object that contains information about each certificate.
    inline_response_200_426_result_data:
      type: object
      properties:
        certificate:
          $ref: "#/components/schemas/inline_response_200_426_result_certificate"
        certificate_text:
          type: string
          description: The certificate's text.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDcTCCAlmgAwIBAgIFAU+BNVgwDQYJKoZIhvcNAQEFBQAwUTESMBAGA1UEAwwJ
            c2lza28udGxkMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGY1BhbmVsMQswCQYDVQQI
            DAJUWDEQMA4GA1UEBwwHSG91c3RvbjAeFw0xNDEwMDYyMjI2MTlaFw0xNTEwMDYy
            MjI2MTlaMFExEjAQBgNVBAMMCXNpc2tvLnRsZDELMAkGA1UEBhMCVVMxDzANBgNV
            BAoMBmNQYW5lbDELMAkGA1UECAwCVFgxEDAOBgNVBAcMB0hvdXN0b24wggEiMA0G
            CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9zx6zGiHdmWA0dKtoXmJiWXpZ9E3P
            Xx3YHsjFEWW7e5pH0vZ+jVMzDmm5nsJ7RXrAkZO1IvpIpVLvoQfiJOWVvkD+o9fW
            voK1tWJS72FSgPju+58mA2ieBuc87A790Pzuv1P3NR3zFLAjUR99zkHR1fpri/da
            M3PBWO8ET48FWkyU1kOeZaUlF67/+wrEiNgg+t1qhKOCAB61PdNVkLaSGHimksuC
            +Czk8Kq9nuS0E0TCnDtjjEyJ455FUcaCfczlTb8xkB/F9ORe74yTzD+vlk0tFMG6
            PLj/ajIwWqwO0qmQ8wX3NRxkWgGz5kVO1wrVJarKQ5EYQ3/mgvit0v6dAgMBAAGj
            UDBOMB0GA1UdDgQWBBRw+wKBo34+bgexjAa3EMDsgSCd7zAfBgNVHSMEGDAWgBRw
            +wKBo34+bgexjAa3EMDsgSCd7zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUA
            A4IBAQCHRXIs53opzKM2rM8Qe8lcw524WK6hqy2EWrZHp78N7rU7/6DQ/I3hv3Wh
            cDDIO04I2/Xhe88MLBaLoM367Ya+vy7CaLr14aLi/SfQszMA0ALBvMao+Fis0iVw
            FYq/NLgSXw+fgnpFskt8v8iQZ+4Kaal8U8e9sVgu8m0RgO7rzym1eRiIKpsKd1rh
            /SD7LbSN7M7TRL3QqF7ltw9sQhAAsQcRaBBF21pdWrqhiGZ+Eioo3hhgwNavH2ag
            qz78ddHwrFpHFwrEeUk1OfpPb76MYIce7xIy/4oQNdg6fOq4l/FrajBv+WkzDVPa
            Km6r7YmwfLN/YMZBHXSR58oOGP9W
            -----END CERTIFICATE-----
        docroot:
          type: string
          description: The document root of the domain that the certificate covers.
          format: path
          example: /home/username/public_html
        domains:
          type: array
          description: The domains that the certificate covers.
          items:
            type: string
            format: domain
            example: example.com
        fqdns:
          type: array
          description: |-
            An array of every valid fully qualified domain
            name (FQDN) on the virtual host, which includes service
            subdomains (proxy subdomains).
          items:
            type: string
            format: domain
            example: www.example.com
        ip:
          description: The host's IP address.
          example: 192.168.0.1
          oneOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        is_primary_on_ip:
          type: integer
          description: |-
            Whether the website is primary on the IP address.
            * `1` - Primary.
            * `0` - Not primary.
          example: 1
          enum:
          - 0
          - 1
        mail_sni_status:
          type: integer
          description: |-
            Whether SNI is active on the domain.
            * `1` - Active.
            * `0` - Inactive.
          example: 1
          enum:
          - 0
          - 1
        needs_sni:
          type: integer
          description: |-
            Whether the website requires SNI to function.
            * `1` - Requires SNI.
            * `0` - Does not require SNI.
          example: 0
          enum:
          - 0
          - 1
        servername:
          type: string
          description: The server's hostname.
          format: domain
          example: example.com
    inline_response_200_426_result:
      type: object
      properties:
        data:
          type: array
          properties: {}
          items:
            $ref: "#/components/schemas/inline_response_200_426_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_427_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the `autossl_check` task is in progress for the current user.
            * `1` - In progress.
            * `0` - **Not** currently in progress.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_428_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the sslinstall feature is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_429_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the Apache web server supports SNI.
            * `1` - Supported.
            * `0` - **Not** supported.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_430_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The date the certificate was created.
          format: unix_timestamp
          example: 1569884400
        domain_is_configured:
          type: integer
          description: |-
            Whether the certificate is installed on the account.

            * `1` â Installed.
            * `0` â Not installed.
          example: 1
          enum:
          - 1
          - 0
        domains:
          type: array
          description: A list of domains that the certificate covers.
          items:
            type: string
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: TestCert
        id:
          type: string
          description: The certificate's ID.
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` â Self-signed.
            * `0` â Not self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The issuer's name.
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's organization.
          example: Organization
        issuer_text:
          type: string
          description: The certificate's issuer information.
          example: |-
            countryName
            US
            stateOrProvinceName
            TX
            localityName
            Houston
            organizationName
            WebPros International, LLC
            commonName
            WebPros International, LLC Certification Authority
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          type: integer
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The certificate's expiration date.
          format: unix_timestamp
          example: 1601467200
        not_before:
          type: integer
          description: The certificate's start date.
          format: unix_timestamp
          example: 1569844800
        serial:
          type: string
          description: The certificate's serial number.
          example: 45462cd0d6537b20cf2f3eb8aec07140
        signature_algorithm:
          type: string
          description: The OID hash algorithm signature of the certificate.
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The certificate's Common Name (CN).
          example: example.com
        subject_text:
          type: string
          description: The certificate's subject text information.
          example: |-
            commonName
            www.example.com
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `ev` â Extended Validation.
            * `ov` âÂ Organization Validation.
            * `dv` â Domain Validation.
            * `null` â The system could not parse and determine the
            certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
    inline_response_200_430_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_430_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_431_result_data:
      type: object
      properties:
        commonName:
          type: string
          description: The CSR's Common Name or Distinguished Name.
          example: example.com
        created:
          type: integer
          description: The CSR's creation date.
          format: unix_timestamp
          example: 1538265600
        domains:
          type: array
          description: A list of the domains that the CSR covers.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the CSR's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The CSR's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The CSR's key's ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The CSR's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The CSR's friendly name.
          example: TestCSR
        id:
          type: string
          description: The CSR's ID.
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
        key_algorithm:
          type: string
          description: |-
            The CSR's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The CSR's key's modulus, in hexadecimal format.

            * `null` âÂ The CSR's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
    inline_response_200_431_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_431_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_432_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The key's creation date.
          format: unix_timestamp
          example: 1569844800
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The key's ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The key's friendly name.
          example: TestKey
        id:
          type: string
          description: The key ID.
          example: b116e_473f5_ad6b3bd9517fb157830d0e37a03bc596
        key_algorithm:
          type: string
          description: |-
            The key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The key's modulus, in hexadecimal format.

            * `null` âÂ The key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          minimum: 1
          type: integer
          description: |-
            The length, in bits, of the key's modulus.

            * `null` âÂ The key is **not** an RSA key.
          nullable: true
          example: 2048
    inline_response_200_432_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_432_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_433_result_data:
      type: object
      properties:
        host:
          type: string
          description: The hostname.
          format: domain
          example: example.com
        id:
          type: string
          description: The certificate's ID.
          example: example_com_a74f7_9dddf_1446659822_eae1ff43c4ec1991e195877c55755eff
        type:
          type: string
          description: |-
            The type of SSL item.
            * `key`
            * `csr`
            * `crt`
          example: key
          enum:
          - key
          - csr
          - crt
    inline_response_200_433_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_433_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_434_result_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether SNI for mail is enabled.
            * `1` - SNI is enabled.
            * `0` - SNI is **not** enabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_434_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_434_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_435_result_data:
      type: object
      properties:
        success:
          type: integer
          description: |-
            Whether the system rebuilt the configuration files.
            * `1` - Configuration files rebuilt.
            * `0` - Configuration files **not** rebuilt.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_435_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_435_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_436_result:
      type: object
      properties:
        data: {}
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_441_result:
      type: object
      properties:
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_444_result_data_details_issuer:
      type: object
      properties:
        commonName:
          type: string
          description: The issuer's Common Name or Distinguished Name.
          example: example.com
        countryName:
          type: string
          description: The certificate's two-letter country code.
          format: ISO-3166-1 (alpha-2)
          example: US
        emailAddress:
          type: string
          description: The issuer's email address.
          format: email
          example: username@example.com
        localityName:
          type: string
          description: The issuer's locality or city.
          example: Houston
        organizationName:
          type: string
          description: The issuer's organization name.
          example: Organization
        stateOrProvinceName:
          type: string
          description: The issuer's state or province name.
          example: Texas
      description: A object that contains the issuer's details.
    inline_response_200_444_result_data_details_subject:
      type: object
      properties:
        commonName:
          type: string
          description: The certificate's Common Name or Distinguished Name.
          example: example.com
        countryName:
          type: string
          description: The certificate's two-letter country code.
          format: ISO-3166-1 (alpha-2)
          example: US
        emailAddress:
          type: string
          description: The certificate's email address.
          format: email
          example: username@example.com
        localityName:
          type: string
          description: The certificate's locality or city.
          example: Houston
        organizationName:
          type: string
          description: The certificate's organization name.
          example: Organization
        stateOrProvinceName:
          type: string
          description: The certificate's state or province name.
          example: Texas
      description: An object containing the certificate's ownership details.
    inline_response_200_444_result_data_details:
      type: object
      properties:
        domains:
          type: array
          description: A list of the certificate's domains.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` â The certificate's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: TestCert
        id:
          type: string
          description: The certificate's ID.
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` â Self-signed.
            * `0` â Not self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer:
          $ref: "#/components/schemas/inline_response_200_444_result_data_details_issuer"
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` â The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        not_after:
          type: integer
          description: The certificate's expiration date.
          format: unix_timestamp
          example: 1601467200
        not_before:
          type: integer
          description: The certificate's start time.
          format: unix_timestamp
          example: 1569844800
        signature_algorithm:
          type: string
          description: The certificate's OID hash algorithm signature.
          example: sha256WithRSAEncryption
        subject:
          $ref: "#/components/schemas/inline_response_200_444_result_data_details_subject"
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `ev` â Extended Validation.
            * `ov` â Organization Validation.
            * `dv` â Domain Validation.
            * `null` â The system could not parse and determine the
            certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
      description: An object containing the certificate's details.
    inline_response_200_444_result_data:
      type: object
      properties:
        cert:
          type: string
          description: The contents of the certificate.
          format: pem-certificate
          example: '-----BEGIN CERTIFICATE-----MIIDcTCCAlmgAwIBAgIFAU+BNVgwDQYJKoZIhvcNAQEFBQAwUTESMBAGA1UEAwwJc2lza28udGxkMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGY1BhbmVsMQswCQYDVQQIDAJUWDEQMA4GA1UEBwwHSG91c3RvbjAeFw0xNDEwMDYyMjI2MTlaFw0xNTEwMDYyMjI2MTlaMFExEjAQBgNVBAMMCXNpc2tvLnRsZDELMAkGA1UEBhMCVVMxDzANBgNVBAoMBmNQYW5lbDELMAkGA1UECAwCVFgxEDAOBgNVBAcMB0hvdXN0b24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9zx6zGiHdmWA0dKtoXmJiWXpZ9E3PXx3YHsjFEWW7e5pH0vZ+jVMzDmm5nsJ7RXrAkZO1IvpIpVLvoQfiJOWVvkD+o9fWvoK1tWJS72FSgPju+58mA2ieBuc87A790Pzuv1P3NR3zFLAjUR99zkHR1fpri/daM3PBWO8ET48FWkyU1kOeZaUlF67/+wrEiNgg+t1qhKOCAB61PdNVkLaSGHimksuC+Czk8Kq9nuS0E0TCnDtjjEyJ455FUcaCfczlTb8xkB/F9ORe74yTzD+vlk0tFMG6PLj/ajIwWqwO0qmQ8wX3NRxkWgGz5kVO1wrVJarKQ5EYQ3/mgvit0v6dAgMBAAGj\UDBOMB0GA1UdDgQWBBRw+wKBo34+bgexjAa3EMDsgSCd7zAfBgNVHSMEGDAWgBRw+wKBo34+bgexjAa3EMDsgSCd7zAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCHRXIs53opzKM2rM8Qe8lcw524WK6hqy2EWrZHp78N7rU7/6DQ/I3hv3WhcDDIO04I2/Xhe88MLBaLoM367Ya+vy7CaLr14aLi/SfQszMA0ALBvMao+Fis0iVwFYq/NLgSXw+fgnpFskt8v8iQZ+4Kaal8U8e9sVgu8m0RgO7rzym1eRiIKpsKd1rh/SD7LbSN7M7TRL3QqF7ltw9sQhAAsQcRaBBF21pdWrqhiGZ+Eioo3hhgwNavH2agqz78ddHwrFpHFwrEeUk1OfpPb76MYIce7xIy/4oQNdg6fOq4l/FrajBv+WkzDVPaKm6r7YmwfLN/YMZBHXSR58oOGP9W-----END
            CERTIFICATE-----'
        details:
          $ref: "#/components/schemas/inline_response_200_444_result_data_details"
        text:
          type: string
          description: The parsed information from the OpenSSL command-line tool.
          example: |
            Certificate:
             Data:
             Version: 3 (0x2)
             Serial Number:
             d1:e8:74:8c:d0:69:d2:55
             Signature Algorithm: sha1WithRSAEncryption
             Issuer: CN = example.com, C = US, emailAddress = username@example.com, O = Example, ST = Texas, L = Houston
             Validity
             Not Before: Apr 10 22:38:10 2013 GMT
             Not After : Apr 10 22:38:10 2014 GMT
             Subject: CN = example.com, C = US, emailAddress = username@example.com, O = Example, ST = Texas, L = Houston
             Subject Public Key Info:
             Public Key Algorithm: rsaEncryption
             Public-Key: (2048 bit)
             Modulus:
             00:c6:9c:e3:37:1a:fc:e6:1b:e4:29:4d:8e:ee:ec:
             bd:7a:52:12:ef: 34:71:64:77:e0:79:76:6d:ba:f0:
             77:fd:f0:92:18:b0:84:c3:f7:12:3a:a9:b9:1d:16:
             6c:a0:10:6d:f0:55:17:35:27:ff:81:a7:46:e6:d4:
             36:97:34:01:3a:2f:6d:61:9a: 04:20:e3:fd:06:11:
             8b:a4:5e:4f:6d:0d:93:8e:3b:cc:cb:19:b3:cb:74:
             7a:54:82:ae:52:9e:46:31:7a:02:44:0b:7b:26:e8:
             84:aa:91:2b:25:c1:42:0c:cc:5d:c4:d5: c4:cf:df:
             de:4c:7c:22:99:ab:06:79:99:16:1e:a7:49:5b:9b:
             89:97:18:3c:1e:4b:c6:c5:b5:b2:9d:7d:be:b9:91:
             c6:08:38:7d:dc:81:18:2b:0c:2c:da:29:f4:aa:a2:
             72:46:d9:c2:68:31:89:51:ab:32:af:7a:8d:9b:a7:
             d8:b8:b5:37:21:03:91:1d:4e:d8:fc:f1:0e:1f:96:
             17:d6:90:25:c1:3a:1a:76:4c:9e:2b:7e:b9:9c:f5:
             86:0a:cf:ea: 2f:eb:bc:33:ee:69:49:b9:c2:e6:a0:
             ef:ee:90:19:4a:2a:64:7e:ef:96:46:7e:7d:e2:35:
             ec:d9:cf:34:42:7a:3d:c1:22:b9:68:a2:b3:02:a3:
             7f:f5
             Exponent: 65537 (0x10001)
             X509v3 extensions:
             X509v3 Subject Key Identifier:
             6A:A1:EA:62:FB:B2:C4:AC:04:B0:43:DD:56:BE:8A:8D:FA:16:D3:F4
             X509v3 Authority Key Identifier:
             keyid:6A:A1:EA:62:FB:B2:C4:AC:04:B0:43:DD:56:BE:8A:8D:FA:16:D3:F4

             X509v3 Basic Constraints:
             CA:TRUE
             Signature Algorithm: sha1WithRSAEncryption
             3c:1e:f7:3d:20:1b:a2:bd:5c:d6:0f:2a:9e:f3:b0:83:bf:a9:
             a0:90:9b:96:b1:a6:1e:8b:be:7c:f5:72:58:a0:48:3e:68: 43:
             06:37:63:0a:cb:9c:23:98:c6:9e:f1:73:e8:4b:71:ac:07:fc:
             d0:5c:e1:55:4f:be:a7:75:5a:57:da:a1:c2:46:63:8f:3a:70:
             4c:42:3c:03:4c:a0:47:a3:fc: ae:15:03:25:a5:78:63:a2:73:
             cd:47:d5:64:7c:d4:f5:85:f7:03:b8:b4:d8:95:75:6a:78:5c:
             e6:c7:69:02:7b:a4:fc:4d:8c:80:7b:c7:1c:71:04:ba:53:71:
             7a: ce:00:cb:0e:5e:21:89:02:ba:90:02:8e:b5:79:8e:84:50:
             b0:21:63:b0:ac:19:80:c5:1d:a2:95:68:b7:ee:35:10:fa:db:
             f5:bf:b0:16:b1:34:76:f2:d6:ee:07:3b:6d:b6:0c:1d:b4:e5:
             53:50:23:b8:c4:bf:fe:d6:77:ec:89:68:a0:d8:dd:f4:f5:fa:
             7d:f6:c4:72:02:b1:e8:87:f7:e1:16:71:80:2e:e7:94:7b:eb:
             c6:a7:07:36:05:6d:34:b4:25:74:e9:c2:2c:9e:3d:bc:97:8e:
             84:ce:cc:4f:1f:11:67:ad:30:f6:83:3e:be:bb:88:48:10:65:
             f7:4b:2f:80
    inline_response_200_444_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_444_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_445_result_data_details:
      type: object
      properties:
        commonName:
          type: string
          description: The CSR's Common Name or Distinguished Name.
          example: example.com
        countryName:
          type: string
          description: |-
            The CSR's [ISO-3166](https://en.wikipedia.org/wiki/ISO_3166)
            country code.
          example: US
        created:
          type: integer
          description: The CSR's creation date.
          format: unix_timestamp
          example: 1538265600
        domains:
          type: array
          description: A list of the domains that the CSR covers.
          items:
            type: string
            example: example.com
        emailAddress:
          type: string
          description: The CSR's email address.
          format: email
          example: username@example.com
        friendly_name:
          type: string
          description: The CSR's friendly name.
          example: TestCSR
        id:
          type: string
          description: The CSR's ID.
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
        key_algorithm:
          type: string
          description: The key algorithm that encrypts the CSR.
          example: rsaEncryption
        localityName:
          type: string
          description: The certificate's locality or city.
          example: Houston
        modulus:
          type: string
          description: The CSR's modulus.
          nullable: true
          example: a74f7636fa6ac93ee6836a83a995b55deb5019ea36d7ba3dafb00e38d693acdb0c81b2ff777d6b433a420fae523f127f352a68bcc8b8f2d6ee7b70395bafabd8237ada8164fdddf8376b30375c35d4d4cbcce7d33d08069c17b409176a3689f1ebc97c0b08fe6ae44c19a92ac6d68448e7f1d13f3b360affd4222a51b4f35342de99b5a1fb5548e438f2d824664562a448002eed7fce24dedc7dc3e1ed179973d1dae959b33716eeb410d172708954e00632cbf60a0e26419860c8c0bc285d6bfe4b479de0dd189772a5dae676bd2a92acccc1369821be8cffddd8a7e6ecc061f8a32a9ae0661e4e946ed8e3827b277138d3a76116567cbd129cbd869ef9dddf
        organizationName:
          type: string
          description: The CSR's organization name.
          example: Organization
        organizationalUnitName:
          type: string
          description: The CSR's organizational unit name.
          example: Department
        stateOrProvinceName:
          type: string
          description: The CSR's state or province name.
          example: Texas
      description: An object contaning the CSR's contents.
    inline_response_200_445_result_data:
      type: object
      properties:
        csr:
          type: string
          description: The CSR's text.
          example: |-
            -----BEGIN CERTIFICATE REQUEST-----
            MIIC3TCCAcUCAQAwgZcxFDASBgNVBAMMC2V4YW1wbGUuY29tMRYwFAYDVQQLDA1E
            b2N1bWVudGF0aW9uMQswCQYDVQQGEwJVUzEiMCAGCSqGSIb3DQEJARYTbGF1cmVu
            Y2VAY3BhbmVsLm5ldDEUMBIGA1UECgwLY1BhbmVsIEluYy4xDjAMBgNVBAgMBVRl
            eGFzMRAwDgYDVQQHDAdIb3VzdG9uMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
            CgKCAQEAp092NvpqyT7mg2qDqZW1XetQGeo217o9r7AOONaTrNsMgbL/d31rQzpC
            D65SPxJ/NSpovMi48tbue3A5W6+r2CN62oFk/d34N2swN1w11NTLzOfTPQgGnBe0
            CRdqNonx68l8Cwj+auRMGakqxtaESOfx0T87Ngr/1CIqUbTzU0LembWh+1VI5Djy
            2CRmRWKkSAAu7X/OJN7cfcPh7ReZc9Ha6VmzNxbutBDRcnCJVOAGMsv2Cg4mQZhg
            yMC8KF1r/ktHneDdGJdypdrmdr0qkqzMwTaYIb6M/93Yp+bswGH4oyqa4GYeTpRu
            2OOCeydxONOnYRZWfL0SnL2Gnvnd3wIDAQABoAAwDQYJKoZIhvcNAQEFBQADggEB
            AFlolzJbcviWcdZUv+PJ7G8cAqFAxa8a3W2a0Y1U0BaMrpDfuOHpQgOtO62rr+i+
            hkrIReuk7Isyl6GoZkX17KhQ1Vo9aW8a8Ur7+0RGDbxRlK9jJWnvSFn6cMMqRSfA
            DXpptxhqBFZJIZMc3pPX9Jqycuu8bxeIvUKeSMe3Jxcl1ZXEXX47FeRZxvd+WXF9
            4Xu4KZXHdzb5tB6jPhzIaN0/3d92N/KhvCcnw3YC2fEGDkpOlZaoa7O72+aq5K3b
            M1htFv9deAHqIHefV41iOrxUCIKIhdPIjvAm774lDHLzPpJVrshO/NpA74LEkny5
            FMwKKx+6Jgx1HSWucn5kWek=
            -----END CERTIFICATE REQUEST-----
        details:
          $ref: "#/components/schemas/inline_response_200_445_result_data_details"
        text:
          type: string
          description: The parsed information from the OpenSSL command-line tool.
          example: |
            Certificate Request:
             Data:
             Version: 0 (0x0)
             Subject: CN = example.com, C = US, emailAddress = username@example.com, O = Example, ST = Texas, L = Houston
             Subject Public Key Info:
             Public Key Algorithm: rsaEncryption
             Public-Key: (2048 bit)
             Modulus:
             00:bf:44:22:cb:13:2b:7f:41:9f:48:85:d6:2c:77:
             03:cf:84:db:90:5c:5a:ed:e5:9c:cb:d6:9d:4b:fc:
             67:58:b7:db:71:dd:eb:8e:5a:77:6f:03:5d:96:85:
             60:dc:91:45:59:85:ff:9e:57:76:a5:b5:cd:dc:48:
             25:89:3f:8f:17:c1:c2:1e:4d:ec:f0:08:1a:a9:cc:
             2d:45:34:be:82:77:a5:e4:bb:0b:82:bc:82:51:c3:
             ac:1b:ed:c3:a4:b3:e6:14:4f:ba:9e:39:af:08:ae:
             3c:2c:15:bd:dc:03:17:93:01:95:4f:c0:2a:0f:3b:
             46:5f:5e:6f:96:d5:b2:dd:53:22:a9:91:e4:36:8e:
             f2:60:5b:ca:b3:72:e6:be:53:8b:9e:b6:72:26:04:
             85:37:f4:89:c1:78:91:7d:46:96:71:c4:be:39:f3:
             cc:1d:79:bc:33:61:5c:5f:76:52:4a:7d:d0:60:31:
             79:96:44:6e:6a:77:72:70:1f:3f:08:24:e6:d1:50:
             c0:6a:86:98:df:56:8b:ae:2f:c1:97:bc:ed:4c:70:
             a1:a6:b2:7e:25:97:8f:95:73:a1:84:71:43:da:33:
             48:d5:44:17:e1:28:1e:37:93:63:fa:ec:45:17:39:
             e5:ff:62:90:6b:b2:eb:11:5b:32:b2:ce:51:0b:8a:
             3e:95
             Exponent: 65537 (0x10001)
             Attributes:
             a0:00
             Signature Algorithm: sha1WithRSAEncryption
             41:bd:99:89:7a:1b:c2:71:90:f7:5a:17:05:c9:77:c8:f0:0e:
             62:0f:85:0d:fb:16:02:74:34:5f:7a:93:3e:50:8e:cf:f4:6f:
             ee:ab:7b:c9:ef:7c:76:59:dd:85:fd:7d:4e:ac:95:9d:b7:ae:
             8a:89:fc:1f:5b:ee:ee:6b:cd:9b:4e:2d:2a:fb:1b:32:8f:8f:
             56:70:d1:42:c1:72:ed:04:4b:27:5a:ee:5a:e1:2b:6e:53:59:
             aa:14:25:87:7f:2b:c3:7a:f5:b2:6c:71:2a:93:62:40:ca:87:
             b4:fe:34:a1:95:77:1e:98:f1:71:5e:14:97:61:73:07:8d:bc:
             3e:e1:f8:47:f7:00:8b:06:a5:1c:84:a3:88:9a:7b:37:74:5d:
             34:a6:ae:22:ab:a3:b8:9f:d7:ab:60:9a:70:81:15:13:0f:d9:
             ff:ab:7a:2b:fd:cb:96:04:ad:00:6b:e4:74:4e:59:57:a5:9e:
             84:c7:74:d8:62:08:37:b3:ee:cc:74:b2:b6:26:e8:c0:37:32:
             19:dc:1c:ff:97:4a:cc:1c:36:c3:a7:2d:ca:77:53:c4:1d:1c:
             3c:36:5b:f8:90:46:01:48:49:61:9b:ef:bb:b3:a8:94:0b:3f:
             50:51:93:29:9f:aa:9a:ab:ae:3d:3c:72:8a:0b:bc:2f:3f:19:
             d7:5d:70:14
    inline_response_200_445_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_445_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_446_result_data_details:
      type: object
      properties:
        created:
          type: integer
          description: The key's creation date.
          format: unix_timestamp
          example: 1365633415
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The key's ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The key's friendly name.
          example: TestKey
        id:
          type: string
          description: The key's ID.
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
        key:
          type: string
          description: The key's contents.
          format: pem-private-key
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIJJwIBAAKCAgEA4yilqsoCdEpiNOyLcPJ4FLT7vgwaLdOBeJLTMUeV2uZM4v65
            /tiZe7H0soDp1C55SCr3uEIEa7Lq7RUZ+F5p67BgRR19rmerKGxfN7N5Vu97pfTw
            W1f+lVsxUF/56lVeoAmm4okU98xJHiGGlI8ZHGJbUMYfLPy0OrA+gNwMHqMVOv1B
            SgpbEWCILMvnvtp0rwPutjnPVX2Dj40ia40L4Wqvp+0Yg7mZyhIOl+q6VZVIdXZs
            lR4ZywfRBYt3ieFBDYMyNw9wN3Xy44fCpHc77+ho84W3BqrGaWSSDyf6UkZGD5mf
            ohGf2JSp+c8J6H7hsxo7pta3K1diVXFOSfnaA+k56zW445XruwYs/SN/zvGetGi6
            uqhMAcVRQcYCmLCixcC6RkcUx3exxgR4q3gthDnFvWC4+NuTh8/K0BcxcuCEhRug
            /MfVfO3+f7RJFSJPFb9m9Lf4HHBSVkDP5WtG4XiBKCe++9Wuvxbd4QxS7YrnSopN
            KxkuHKswH8ONpADMYDqfLODMhNrslHNHu95Nv7AlQr8weLqMGWMp7GFqzXcl39Rn
            VkF4Bxd3bAAsMN8/JvanMKCPjTTDrfzVFZcmHXPYOljYDdY1xfIstYVtbyFkUHZP
            2RPPBaPUAt90lzrKGVF8a2vdIKRiey5SZ5qu9c/mGri3oz7Lkk7qkNPAqDMCAwEA
            AQKCAgA3f9raG3j2CKZt381Bzzvfc0h+al6LC736Q4Ut6RuH2/S1ER9IUItPWW87
            nZuDp8ciBr13W0nRNmmHezxZHlgqqXEb8dSfI90Bh1jMNyFSSDihl3KSHrGotBsc
            VBavViREXZdUicGBuXuxtkYno96yvKUq2v0K9MLkA+OBgEHFynqJaw7klBsj573d
            lAQO8TjI+eD8zKsHbB8Ul5rtRAy/Cl3YXWk75cDZSggevc7A0jRd3o0w8aXDoSlE
            fYq7OTm3n3JJWZBFPKAXTzgTDr6qItJhjS4IxXsq7RNyeIYES/8aGKKT6lJvjALr
            cdYt47IpHCOu447lG/h+f6xtDophLGZoAirO7lJFRVfLJh76sLF12bpXJKbbmMN+
            aut0nM+MLEw8A5K9OV24jJ/3+afj//5789asIyvNaQFPOX23SdLX0QbA5QWvJt2t
            WvvpS3ubcIJaBEMTK8asEBC68eUW0BBKJaSiYNzecUFYCBjQlxKsIrYuWZoW6fMy
            Rel+cnqMdiH7r2p6RmgF5c9myDwq3E47jE+VrOy8uhw7EMQvT8+YSKaIbgtFZcUS
            U02BDRB7gWNa842m6nGs5tj5xFNQ6Wt410vilTwL+6zCQqJaKmcdE3woiIgSdrw5
            MssAHHjqo7QJthZfbpUAUTc6jGPNO13U1ediIRAGdQW5ALqTwQKCAQEA884bmFFZ
            LTewHIv1PJFfNxVZfk3C7LhWE2JcI/5P/YrN4ZA8G08OYhgxqa5XnsHHQPwMM85i
            1HeOoPwqgTMIyLDX/Sf88+eW3ef4V2M1Y4op0ahWFEwbwXKGxOhncElObN7dfZUw
            VlxCReaiw2XQAGRqtQC0f+9dZysqPJr+Rz6poTiOtm7DcpW/WiGfBPvVhzBENyqo
            uL9V3vCWYPJSLtCexECoGoPSpHKgUkwbh3+ra8SfG6FOIBj4PpMB82R7oPDjIyXF
            1VDfb0EwYQlKxyZoP9+NPT2MhZv/hF/Mbm/5LolVHx92hO9q6yxS6nvaFmEPr9fY
            1EOTWzzPOA+VyQKCAQEA7oVioaTqxENt+wHITZq100iYUpm4X1N1eENTp97QyQbQ
            OVR/t8iGLUdvOZdIxBSTS3JFQ8TNcGDPPc+o319QGdZABNnKwFGY3Ss+5QgVeX6n
            0WKdxCRelUOUB174aBeXcJCKplh6xBUrLfSZxvZQQb7fv0Mb+2eKUBKTymvES1kp
            Ydn1T0vCCHA3bVpaHuqliCoDSX3RmQICZlfSgCGBbAkmU8RuxDd9yR9l7O9MXUmL
            sqlsw6hvbUt+7Y13YlDtyX8gbCwEEYsoALOotY1xNfXnyZKTAXhrg+xsQLrURYZU
            oZiCJyK/mHCWRTPVkt89wq4IexbJ9hqlRjzpmlr8GwKCAQBxRSCs855q06SOnreh
            HCkQfmrFs3sMX9gdyWTllBG1yfc9BLXoOiKEkJkCLG2o5H6eQnuo1go0jBdH0+Ar
            hnpeQ0sV4q4y4zXEgzFt6Dm1tUsYjQzxASskBQF4GkF0eZpmGmTtI5MBjHt93llg
            Tr0EcaLh1SIHDj5m4DcPUTMyBnro3E3xlCRZ6Biu10/6EMZzuIj42Gjq7HoIyd4T
            zIFCHsqkgyWWrAgBPwAdPB7OJRKPTxpcy+RwJSmwaLxPSC/n5gKhIbt4D8q+9Zp0
            esyzGbT1d/c2rJHMwV1FMvzXkk5CwKs7enKl8FXMTRt4tXHtU8rl93JVq8+aY/Yi
            JZuBAoIBAERG2lz7IFjeFHVtpTDRwIqilTfP2P8wnMe4PhInrgxdbu16SrUJKZ98
            e1I5BBNc8G0AYONtSoGItMo0z1phpkQ/GERLM8aplOB6qJ5XGg6VOuStHgwvfQOt
            PIp/nQvu9OK7/XRwj3Phu2KESiCyEXdAdDwDsdbdZLJXHwcqoh4Pf9EK2zW/seNI
            fBVJb9K5yHiZzicTZRQvhxBUw2T6MloCpH4GFM8GM3OHEV4pgeqSSvLxnLjFVmAq
            5EKL5Ei4cdjkExvj3aZH90N8KicOPgH8SkVhN8OL/Prein5c/LaKJV+8kEUzpTS1
            xc45cEGCteMsfjD97QINzpG0jgopUVECggEADIaKsx8NUQT3hm0wHRanEFJnQH5H
            zxaQjWbsjm2uz0KROPNIK1X5L8kypsb+EzlJtvWUqxPaOaTv4DZVpFaVzk8/2PPG
            sYR3mUjqMqNFYMrNwYZAXvJ/huzDPqq6+w2Pn9jcAifHNw3S8UR650v8gl7BU4fV
            BvhamG8JelvwLqeGWoikST9NBXVqG5IKBpUkUiFOMUNmRih9ooKvhy7GosoK8MWb
            mhWo1v8TTSXSagACUhAoIzb6mMN/VFC5WDbFx5AEB/G9tq/zmTqQkuo39dvgl30w
            yZGRNwc1aFf1Kxeven10/JN9ipp0mTa7NYSdn0RAe9ZRp5cCkgmktqmB0g==
            -----END RSA PRIVATE KEY-----
        key_algorithm:
          type: string
          description: |-
            The key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The key's modulus, in hexadecimal format.

            * `null` âÂ The key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          type: integer
          description: |-
            The length, in bits, of the key's modulus.

            * `null` âÂ The key is **not** an RSA key.
          nullable: true
          example: 2048
      description: An object of the key's details.
    inline_response_200_446_result_data:
      type: object
      properties:
        details:
          $ref: "#/components/schemas/inline_response_200_446_result_data_details"
        text:
          type: string
          description: "The raw information from the [OpenSSL](https://www.openssl.org/)\
            \ command-line tool."
          example: |
            Private-Key: (2048 bit)
            modulus:
             00:b1:16:ee:3e:de:ff:41:3c:f2:cb:b5:c5:0a:3d:
                c8:0d:64:bc:02:9f:e1:90:c9:7f:da:e8:03:e6:2c:
             47:9f:e4:ff:5e:0d:95:64:5d:32:c2:b7:c9:01:ae:
                30:e5:17:da:82:78:f4:15:b9:46:40:eb:8b:99:5c:
             cc:4b:e4:2a:e4:ee:0e:28:29:01:79:ee:d4:90:bc:
                5d:9e:ab:b0:46:7c:de:4f:df:b2:d7:d1:76:89:88:
             ad:f3:6c:36:f3:a0:07:8c:90:88:19:52:0a:68:a1:
                4d:c0:26:9e:8d:53:70:91:83:87:f4:8a:d9:b5:0f:
             a7:ed:31:f3:8f:34:d2:ca:e7:d1:31:ea:42:17:5d:
                4d:48:7d:b3:73:07:72:40:9a:58:55:c8:b3:b6:ff:
             c2:b5:f6:ba:64:bd:3e:06:62:42:cd:44:0b:d2:f1:
                76:5e:bb:20:55:47:d4:10:86:2d:ec:6b:e7:d2:0e:
             5d:99:48:ca:4d:66:35:e1:1a:db:1b:96:0a:41:64:
                aa:c4:1b:1f:9d:90:e3:2e:aa:70:61:f7:77:b6:7b:
             f7:44:22:d8:73:0b:53:84:63:c3:f4:a4:19:e2:07:
                f6:0b:42:8a:3d:70:cb:92:24:80:44:e7:36:5d:01:
             a2:e0:e5:cd:50:e1:f7:7c:5a:9a:b5:da:c4:0f:c4:
                73:f5
            publicExponent: 65537 (0x10001)
            privateExponent:
             5b:c3:ae:21:16:1c:df:09:5e:27:01:41:e1:54:b2:
                5d:7e:5d:8e:5e:9a:dc:14:0e:14:b9:35:8c:08:55:
             f5:1d:0c:d7:07:e2:e9:e7:01:6e:b5:1d:8b:a9:5f:
                dc:d6:c7:7b:e4:81:56:e0:72:ef:21:1f:6d:91:10:
             ac:22:c7:b7:69:44:1c:bb:62:f0:74:39:e1:e6:39:
                fd:06:aa:89:5c:1b:36:f8:8c:0c:19:96:7b:1e:40:
             45:6b:45:ee:68:76:80:f8:44:0e:1a:dd:19:ea:bc:
                07:5d:fb:ba:f0:09:dc:dd:73:8d:dc:85:83:b5:61:
             27:20:43:3d:69:f9:f0:f9:e1:73:76:29:5a:b0:05:
                23:65:47:e8:39:f0:21:be:17:84:73:0a:08:15:4e:
             7b:e2:14:6a:72:c7:d3:13:ff:98:ee:96:c9:40:a3:
                d3:0d:6c:90:48:25:7c:79:74:bf:be:fa:18:62:4d:
             c9:95:d4:d9:1a:47:59:4b:98:9a:2f:95:94:f4:4e:
                78:cc:39:ef:9f:f7:6e:eb:db:cb:e5:95:ef:8f:ee:
             5b:bf:c7:2a:29:e5:76:16:28:53:04:8e:ef:3f:66:
                6f:34:a1:21:09:d6:da:ac:dd:ad:8c:2e:72:78:87:
             01:45:f2:fa:3b:b9:23:2d:cf:5f:66:dc:c7:1c:0b:
                e1
            prime1:
             00:e9:14:c4:18:92:16:8e:ad:fd:cf:17:f0:8c:f7:
             55:e0:58:3d:e3:cd:bd:4d:4e:00:64:ee:f0:cf:a5:
                b0:14:19:85:ea:03:a8:be:18:78:34:3b:04:8c:b8:
             be:9a:ee:fc:0a:3e:6f:d2:8f:8f:fd:31:2d:02:97:
                6e:bb:18:5b:9c:6a:85:6e:25:95:a4:40:4e:0b:91:
             a1:c3:85:bd:84:0c:d5:72:34:13:12:d9:20:56:52:
                06:53:aa:06:2d:d0:61:2b:0b:d9:94:c6:d7:62:0f:
             c9:7d:17:cc:81:39:b3:59:e5:ce:77:d5:8a:82:ab:
                2d:37:8a:51:49:3a:aa:c7:37
            prime2:
             00:c2:80:b7:b4:85:25:37:30:b4:45:f3:3a:69:cf:
                c3:86:43:89:db:d4:09:6b:72:54:a6:89:b4:a7:43:
             3c:dd:da:c6:46:89:93:0a:05:9a:8c:d6:05:5c:6a:
                4d:34:1e:84:5b:14:28:b7:ef:d2:be:a5:10:9c:5f:
             e7:35:fb:15:e2:9e:4a:60:0a:73:01:f0:55:6c:75:
                25:8a:9b:b0:32:d3:28:41:11:e2:85:2d:f6:35:76:
             6c:68:14:ba:02:98:44:82:e1:c6:ca:f7:07:78:ca:
                ff:1a:60:3a:e1:88:91:55:a1:ae:11:46:29:4b:f0:
             0f:e0:de:8a:0d:26:91:5c:33
            exponent1:
                1d:2a:ad:13:4a:0c:aa:94:19:43:b6:02:33:11:ac:
             5c:63:8e:73:18:46:cd:0a:aa:bf:f6:aa:89:c1:79:
                14:3a:d1:68:24:47:14:6a:a9:78:17:be:8d:01:7d:
             50:94:01:54:22:d6:09:6a:4f:a1:66:6a:f4:7d:10:
                ad:36:f2:17:d3:b8:98:bc:f9:49:d1:86:32:aa:69:
             ac:b6:ea:ad:40:91:e1:35:a5:01:61:cc:4b:20:fe:
                8b:af:a6:10:4b:98:2d:33:d1:69:6d:ac:7c:27:ef:
             95:c8:c9:9d:8e:23:e4:66:fe:7c:3e:6b:93:c8:69:
                e3:1e:5a:e7:a8:00:c0:e7
            exponent2:
             6d:2e:3b:f0:c5:5c:a2:a2:60:4f:73:bd:32:70:41:
                dd:38:44:46:75:bb:e3:e8:85:c4:06:40:b6:33:74:
             13:45:1f:4f:b1:22:2c:da:00:6b:56:28:24:3c:37:
                a2:2e:0f:35:e1:17:0a:49:41:0f:6b:30:eb:d6:99:
             bf:1f:76:a5:83:1d:54:d4:08:c2:e9:d9:c9:cb:e8:
                8a:e9:e1:fa:65:b5:8e:f1:2f:2a:7b:26:5d:d4:5f:
             fd:fc:c4:7d:78:63:dc:e4:47:e6:de:cb:fe:ee:54:
                4c:c5:ff:c7:62:15:d2:ef:b2:fa:57:5c:0f:18:6e:
             91:57:da:3e:8f:8b:c1:29
            coefficient:
                00:bd:71:a9:3c:18:7b:0c:93:ab:d5:bf:f3:be:ea:
             35:45:86:ce:60:0f:67:b3:2d:ba:5f:cf:9f:b6:1a:
                13:27:cb:da:e7:ad:f3:c7:c2:06:7c:9e:00:d5:6c:
             07:74:71:2c:35:39:c9:4b:24:cc:11:fd:60:c2:a2:
                0b:28:b9:8b:4d:48:c6:0d:f0:39:34:dc:e2:c9:3a:
             b8:c6:64:0a:17:df:c4:f1:3d:fb:18:0b:af:ed:27:
                3f:98:3b:e1:24:72:fc:5d:af:2c:e3:b6:07:3e:e1:
             2f:fe:db:44:b0:8b:c3:e5:72:82:e5:a4:4a:3a:37:
                8f:c4:9f:db:e9:1c:33:6a:f3
    inline_response_200_446_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_446_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_447_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_448_result:
      type: object
      properties:
        data:
          type: array
          description: The domains for which the function enabled or disabled secure
            redirects.
          example:
          - main.example
          - addon.example
          - addon.main.example
          items:
            type: string
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_449_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The certificate's creation date.
          format: unix_timestamp
          example: 1569844800
        domains:
          type: array
          description: A list of the certificate's domains.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The certificate's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: TestCert
        id:
          type: string
          description: The certificate's ID.
          example: example_com_c69ce_37ff5_1397169490_169c717cb2c260281df792788accf041
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` â Self-signed.
            * `0` â Not self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The issuer's Common Name or Distinguished Name.
          example: VeriSign Trial Secure Server CA - G2
        issuer.organizationName:
          type: string
          description: The issuer's Organization Name.
          example: "VeriSign, Inc."
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` âÂ The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          minimum: 1
          type: integer
          description: |-
            The length, in bits, of the certificate's key's modulus.

            * `null` âÂ The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The certificate's expiration date.
          format: unix_timestamp
          example: 1601467200
        not_before:
          type: integer
          description: The certificate's start date.
          format: unix_timestamp
          example: 1569844800
        signature_algorithm:
          type: string
          description: The certificiate's OID hash algorithm signature.
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The issuer's Common Name or Distinguished Name.
          example: example.com
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `ev` â Extended Validation.
            * `ov` â Organization Validation.
            * `dv` â Domain Validation.
            * `null` â The system could not parse and determine
            the certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
    inline_response_200_449_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_449_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_450_result_data:
      type: object
      properties:
        created:
          type: integer
          description: The key's creation date.
          format: unix_timestamp
          example: 1569844800
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` âÂ The key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The keyâs ECDSA compressed public point, in hexadecimal format.

            * `null` âÂ The key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The key's friendly name.
          example: TestKey
        id:
          type: string
          description: The key's ID.
          example: bbe7e_16e2d_df7539f280eb1ecf6c1096190e41ada7
        key_algorithm:
          type: string
          description: |-
            The keyâs algorithm.

            * `rsaEncryption` â RSA.
            * `id-ecPublicKey` â ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The key's modulus, in hexadecimal format.

            * `null` âÂ The key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          minimum: 1
          type: integer
          description: |-
            The length, in bits, of the key's modulus.

            * `null` âÂ The key is **not** an RSA key.
          nullable: true
          example: 2048
    inline_response_200_450_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_450_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_451_result_data:
      type: object
      properties:
        error:
          type: string
          description: An error message about why system couldn't read a resource's
            status file.
          example: nscd is reporting errors.
        name:
          type: string
          description: "The cPanel services, devices, and server health check points\
            \ on the\nserver.\n\n* A valid [cPanel service](https://go.cpanel.net/ThecPanelWHMServiceDaemons).\
            \ \n* `CPU Count` â\_The number of CPUs on the server.\n* `Disk mount\
            \ (mount)` â\_The server's disk mounts, where `mount`\nrepresents the\
            \ disk mount location.\n* `Server Load` â\_The server's CPU load.\n* `Memory\
            \ Used` â\_The server's current memory use.\n* `Swap`\_â\_The server's\
            \ swap space."
          example: cpsrvd
        status:
          description: |-
            Whether the resource is enabled or disabled.

            * `1` â Enabled.
            * `0` â Disabled.
            * `unknown` â The system couldn't determine the resource's status.
          example: 1
          oneOf:
          - type: integer
            description: Whether the resource is enabled or disabled.
            enum:
            - 1
            - 0
          - type: string
            description: The system couldn't determine the resource's status.
            enum:
            - unknown
        type:
          type: string
          description: |-
            The type of resource.

            * `device`
            * `metric`
            * `service`
          example: service
          enum:
          - device
          - metric
          - service
        value:
          description: |-
            The resource's status.

            * `up`
            * `down`
            * `unknown`
            * The current resource usage.
          anyOf:
          - type: string
            description: The resource's status.
            enum:
            - up
            - down
            - unknown
          - type: string
            description: The resource's current usage.
        version:
          type: string
          description: |-
            The resource's software version.

            **Important:**

            The function **only** returns this value if a valid software
            version exists.
          example: exim-4.92-1.cp1178.x86_64
    inline_response_200_451_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing the server's status.
          example:
          - name: apache_php_fpm
            status: 1
            type: service
            value: up
          - name: cpanel-dovecot-solr
            status: 1
            type: service
            value: up
          - name: cpanellogd
            status: 1
            type: service
            value: up
          - name: cpdavd
            status: 1
            type: service
            value: up
          - name: cphulkd
            status: 1
            type: service
            value: up
          - name: cpsrvd
            status: 1
            type: service
            value: up
          - name: crond
            status: 1
            type: service
            value: up
          - name: dnsadmin
            status: 1
            type: service
            value: up
          - name: exim
            status: 1
            type: service
            value: up
            version: exim-4.92-1.cp1180.x86_64
          - name: ftpd
            status: 1
            type: service
            value: up
          - name: httpd
            status: 1
            type: service
            value: up
            version: 2.4.39
          - name: imap
            status: 1
            type: service
            value: up
          - name: ipaliases
            status: 1
            type: service
            value: up
          - name: lmtp
            status: 1
            type: service
            value: up
          - name: mailman
            status: 1
            type: service
            value: up
          - name: mysql
            status: 1
            type: service
            value: up
            version: 5.7.25
          - name: named
            status: 1
            type: service
            value: up
          - name: nscd
            status: 1
            type: service
            value: up
          - name: pop
            status: 1
            type: service
            value: up
          - name: queueprocd
            status: 1
            type: service
            value: up
          - name: rsyslogd
            status: 1
            type: service
            value: up
          - name: spamd
            status: 1
            type: service
            value: up
          - name: sshd
            status: 1
            type: service
            value: up
          - name: Server Load
            status: 1
            type: metric
            value: "1.73"
          - name: CPU Count
            status: 1
            type: metric
            value: "2"
          - name: Memory Used
            status: 1
            type: device
            value: 44.12%
          - name: Swap
            status: 1
            type: device
            value: 0.73%
          - name: Disk / (/)
            status: 1
            type: device
            value: 26%
          - name: Disk /tmp (/tmp)
            status: 1
            type: device
            value: 0%
          - name: Disk /var/tmp (/var/tmp)
            status: 1
            type: device
            value: 0%
          items:
            $ref: "#/components/schemas/inline_response_200_451_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_452_result_data:
      type: object
      properties:
        backend:
          type: string
          description: The name of the server to which the system will proxy requests
            for this service group.
          format: domain
          example: example.com
        service_group:
          type: string
          description: |-
            The name of the proxying service group, if applicable.

            * null â The accountâs general service proxying backend.
          nullable: true
          example: Mail
    inline_response_200_452_result:
      properties:
        data:
          type: array
          description: The accountâs service proxying backends.
          items:
            $ref: "#/components/schemas/inline_response_200_452_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_455_result_data:
      type: object
      properties:
        created:
          type: integer
          description: |-
            Whether the function successfully created the temporary user session.
            * `1` - Success.
            * `0` - Failure.
          example: 1
          enum:
          - 0
          - 1
        session_temp_user:
          type: string
          description: The temporary user's session ID.
          example: cpses_reviY3ZSQK
    inline_response_200_455_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_455_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_456_result_data:
      type: object
      properties:
        hostname:
          type: string
          description: |-
            The Webmail server's hostname.

            **Note:**

            The function returns a `null` value when the Webmail server is not remote.
          nullable: true
          example: hostname.example.com
        session:
          type: string
          description: The session ID to submit via POST to begin using the new session.
          example: "username:D7NiAZv1nf4bXeg9:CREATE_WEBMAIL_SESSION_FOR_MAIL_USER,728fb86a7df1cf20690c65f349ac3137"
        token:
          type: string
          description: A new security token.
          example: /cpsess2462418786
    inline_response_200_456_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_456_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_457_result_data:
      type: object
      properties:
        hostname:
          type: string
          description: |-
            The Webmail server's hostname.

            **Note:**

            The function returns a `null` value when the Webmail server is not remote.
          nullable: true
          example: hostname.example.com
        session:
          type: string
          description: The session value to submit via POST to begin using the new
            session.
          example: "username:D7NiAZv1nf4bXeg9:CREATE_WEBMAIL_SESSION_FOR_MAIL_USER,728fb86a7df1cf20690c65f349ac3137"
        token:
          type: string
          description: A new security token.
          example: /cpsess2462418786
    inline_response_200_457_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_457_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_458_result_data:
      type: object
      properties:
        hostname:
          type: string
          description: |-
            The Webmail server's hostname.

            **Note:**

            The function returns a `null` value when the Webmail server is **not** remote.
          format: domain
          nullable: true
          example: hostname.example.com
        session:
          type: string
          description: The session value to submit via POST to begin using the new
            session.
          example: "username:D7NiAZv1nf4bXeg9:CREATE_WEBMAIL_SESSION_FOR_SELF,728fb86a7df1cf20690c65f349ac3137"
        token:
          type: string
          description: A new security token.
          example: /cpsess2462418786
    inline_response_200_458_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_458_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_459_result_data_role:
      type: object
      properties:
        id:
          type: integer
          description: The user's role ID number.
          example: 0
        name:
          type: string
          description: The user's role title.
          example: Owner
      description: Information about the user that owns the project.
    inline_response_200_459_result_data_limits:
      type: object
      properties:
        maximumCrawlDepth:
          type: integer
          description: The maximum number of URLs to check for dead links on a page.
          example: 500
          default: 500
      description: Restrictions placed on the monitoring checks.
    inline_response_200_459_result_data_system_type:
      type: object
      properties:
        name:
          type: string
          description: The name of the system type.
          example: Website
          default: Website
        id:
          description: The system's type ID number.
          example: 1
          default: 1
        fixedComponents:
          type: boolean
          description: |-
            Whether the system components are immutable.
              * `true` - The components are immutable.
              * `false` - The components are not immutable..
          example: true
          default: true
      description: The monitoring template used for the system.
    inline_response_200_459_result_data_systems:
      type: object
      properties:
        name:
          type: string
          description: The name of the system.
          example: MyProject
        description:
          type: string
          description: A description of the system.
          nullable: true
        domain:
          type: string
          description: The system's base domain.
          example: https://example.com
        id:
          type: integer
          description: The system's ID number.
          example: 2542
        interval:
          type: string
          description: The time interval for monitoring checks.
          example: hour
        limits:
          $ref: "#/components/schemas/inline_response_200_459_result_data_limits"
        system_type:
          $ref: "#/components/schemas/inline_response_200_459_result_data_system_type"
    inline_response_200_459_result_data:
      type: object
      properties:
        id:
          type: integer
          description: The project ID number.
          example: 1754
        identifier:
          type: string
          description: The project identifier.
          example: pro-1754
        location:
          type: string
          description: The region where monitoring checks originate.
          example: us
        name:
          type: string
          description: The project's name.
          example: MyProject
        role:
          $ref: "#/components/schemas/inline_response_200_459_result_data_role"
        systems:
          type: array
          description: Information about the system that the project monitors.
          items:
            $ref: "#/components/schemas/inline_response_200_459_result_data_systems"
      description: An object that contains project attributes.
    inline_response_200_459_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_459_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_460_result_data:
      type: object
      properties:
        app_token:
          type: string
          description: "The long-lived token for this account. The <a href=\"https://go.cpanel.net/5k\"\
            \ target=\"_blank\">koality</a> servers require this token to authenticate.\
            \ If this token is lost, the user must create a new account."
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...
        username:
          type: string
          description: The account's username. This value reflects the `email` parameter.
          example: username@example.com
        enabled:
          type: boolean
          description: |-
            Whether the account is enabled to process user data.
             * `false` - The account is disabled.
             * `true` - The account is enabled.
          nullable: true
          example: true
      description: An object that contains user attributes.
    inline_response_200_460_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_460_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings that the API generated. Warnings describe
            non-critical failures or issues the system noted while running an API
            function.
          nullable: true
          items:
            type: string
    inline_response_200_461_result_data:
      type: object
      properties:
        deleted:
          type: integer
          description: |-
            Whether or not the account has been successfully deleted.
            * `1` - Success
            * `0` - Failed
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains whether the user has been deleted.
    inline_response_200_461_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_461_result_data"
        errors:
          type: array
          description: List of errors that the API generated.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_462_result_data_system:
      type: object
      properties:
        name:
          type: string
          description: The name of the project.
          example: MyProject
        id:
          type: integer
          description: The project's ID number.
          example: 2542
    inline_response_200_462_result_data_scores:
      type: object
      properties:
        basic-uptime:
          $ref: "#/components/schemas/Score"
        basic-performance:
          $ref: "#/components/schemas/Score"
        basic-seo:
          $ref: "#/components/schemas/Score"
        basic-content:
          $ref: "#/components/schemas/Score"
        basic-tech:
          $ref: "#/components/schemas/Score"
        basic-security:
          $ref: "#/components/schemas/Score"
    inline_response_200_462_result_data_scores_1:
      type: object
      properties:
        system:
          $ref: "#/components/schemas/inline_response_200_462_result_data_system"
        scores:
          $ref: "#/components/schemas/inline_response_200_462_result_data_scores"
    inline_response_200_462_result_data:
      type: object
      properties:
        scores:
          type: array
          description: An array of objects containing score data and the associated
            system information.
          items:
            $ref: "#/components/schemas/inline_response_200_462_result_data_scores_1"
      description: An object that contains score details.
    inline_response_200_462_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_462_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_463_result_data:
      type: object
      properties:
        app_token:
          type: string
          description: "The long-lived token for this account. The <a href=\"https://go.cpanel.net/5k\"\
            \ target=\"_blank\">koality</a> servers require this token to authenticate.\
            \ If this token is lost, the user must create a new account."
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...
      description: An object that contains user authentication attributes.
    inline_response_200_463_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_463_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages that the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings that the API generated. Warnings describe
            non-critical failures or issues the system noted while running an API
            function.
          nullable: true
          items:
            type: string
    inline_response_200_464_result_data:
      type: object
      properties:
        has_site_quality_user:
          type: integer
          description: |-
            Whether the cPanel user has an associated Site Quality Monitoring account.
            * `1` - The user does have an associated account.
            * `0` - The user does not have an associated account.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains Site Quality Monitoring user attributes.
    inline_response_200_464_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_464_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings that the API generated. Warnings describe
            non-critical failures or issues the system noted while running an API
            function.
          nullable: true
          items:
            type: string
    inline_response_200_465_result_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether or not the account has been enabled.
            * `1` - Enabled
            * `0` - Disabled
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains user attributes.
    inline_response_200_465_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_465_result_data"
        errors:
          type: array
          description: List of errors that the API generated.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_466_result_data:
      type: object
      properties:
        reset:
          type: integer
          description: |-
            Whether the account data was removed.
            * `1` - The account data was removed.
            * `0` - The account data was not removed.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains the status of the account data removal
        from the cPanel user's configuration.
    inline_response_200_466_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_466_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages that the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings that the API generated. Warnings describe
            non-critical failures or issues the system noted while running an API
            function.
          nullable: true
          items:
            type: string
    inline_response_200_467_result_data:
      type: object
      properties:
        send_activation_email:
          type: integer
          description: |-
            Whether the request to send an activation email was successful.
            * `1` - The request was successful. An activation email will send.
            * `0` - The request was not successful. An activation email will not send.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains the activation email request status.
    inline_response_200_467_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_467_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages that the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings that the API generated. Warnings describe
            non-critical failures or issues the system noted while running an API
            function.
          nullable: true
          items:
            type: string
    inline_response_200_468_result_data:
      type: object
      properties:
        status:
          type: integer
          description: |-
            Whether the user's activation code is valid.
            * `1` - Valid.
            * `0` - Invalid.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains information about the user's activation
        code validation.
    inline_response_200_468_result:
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_468_result_data"
        errors:
          type: array
          description: List of errors that the API generated.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages the API generated.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_469_result_meta_fields:
      type: object
      properties:
        id:
          type: string
          description: The template's ID.
          example: fullName
        label:
          type: string
          description: The template's label.
          example: Full Name
        placeholder:
          type: string
          description: A string that temporarily takes the place of the final data.
          example: Your Name
        type:
          type: string
          description: |-
            The template's type.
            * `color`
            * `datetime-local`
            * `email`
            * `Medical`
            * `tel`
            * `text`
            * `textarea`
            * `url`
          example: text
          enum:
          - color
          - datetime-local
          - email
          - Medical
          - tel
          - text
          - textarea
          - url
    inline_response_200_469_result_meta_information:
      type: object
      properties:
        date:
          type: string
          description: The template's add date.
          format: ISO-8601 Date
          example: 2020-06-30T00:00:00.000Z
        description:
          type: string
          description: A string describing the template.
          example: Single page 'About Me' site
        id:
          type: string
          description: A template name.
          example: about_me
        name:
          type: string
          description: The template's name.
          example: About Me
        preview_image_path:
          type: string
          description: The preview directory path.
          format: path
          example: /preview.png
      description: An object that provides basic template information.
    inline_response_200_469_result_meta:
      type: object
      properties:
        fields:
          type: array
          description: This array of objects shows the information for each field
            the user can add input in the template.
          items:
            $ref: "#/components/schemas/inline_response_200_469_result_meta_fields"
        information:
          $ref: "#/components/schemas/inline_response_200_469_result_meta_information"
      description: A set of data that gives information on the template.
    inline_response_200_469_result_data:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/inline_response_200_469_result_meta"
        path:
          type: string
          description: |-
            The template directory path.

            **Note:**

              The template directory's location depends on whether the `root` user or a reseller owns the template.
          format: path
          example: /usr/local/cpanel/3rdparty/share/site_templates
        preview:
          type: integer
          description: |-
            Whether the template includes a preview image.
            * `1` - The template directory contains a `preview.png` file.
            * `0` - The template directory does **not** contain a `preview.png` file. The cPanel interface will display a placeholder image for this template.
          example: 1
          enum:
          - 0
          - 1
        template:
          type: string
          description: |-
            The template's name. This is the name of a directory that contains a `meta.json` template information
            file and exists within one of the following directories:
            * `/var/cpanel/customizations/site_templates/` âÂ The `root` user's templates.
            * `/home/username/var/cpanel/reseller/site_templates/` âÂ A reseller's templates, where `username` represents the reseller's username.
            * `/usr/local/cpanel/3rdparty/share/site_templates/` âÂ cPanel-provided templates.

            **Note:**

              The template directory's location depends on whether the `root` user or a reseller owns the template.
          example: about_me
    inline_response_200_469_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_469_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_470_result_template_settings:
      properties:
        is_empty:
          type: integer
          description: |-
            Whether the domain's `configurations.json` file exists and contains template information.
            * `1` â The `configurations.json` file exists and contains template information.
            * `0` â The `configurations.json` file does not exist, or does not contain template information.
          example: 0
          enum:
          - 0
          - 1
        path:
          type: string
          description: |-
            The template directory path.
            * `/var/cpanel/customizations/site_templates/` â The `root` user's templates.
            * `/home/username/var/cpanel/reseller/site_templates/` â A reseller's templates, where username represents the reseller's `username`.
            * `/usr/local/cpanel/3rdparty/share/site_templates/` â cPanel-provided templates.
          format: path
          example: /usr/local/cpanel/3rdparty/share/site_templates/
          enum:
          - /var/cpanel/customizations/site_templates/
          - /home/username/var/cpanel/reseller/site_templates/
          - /usr/local/cpanel/3rdparty/share/site_templates/
        template:
          type: string
          description: The template's name as it appears in the `configurations.json`
            file.
          example: mytemplate
      description: |-
        An object containing template settings.

        **Important:**

        This object also contains the user's website content. The template provider determines these values.
          * For information about the content for cPanel-provided templates, read our [Guide to Site Publisher Templates](https://go.cpanel.net/SitePublisherTemplates) documentation.
          * For more information about other templates, contact the template provider.
    inline_response_200_470_result_data:
      properties:
        documentroot:
          type: string
          description: The domain's absolute path to the directory's document root
            inside of the account's home directory.
          format: path
          example: /home/example/public_html
        domain:
          type: string
          description: The domain name.
          format: domain
          example: example.com
        homedir:
          type: string
          description: The absolute path to the cPanel account's home directory.
          format: path
          example: /home/example
        serveralias:
          type: array
          description: A list of the domain's aliases.
          items:
            type: string
            format: domain
            example: www.example.com
        template_settings:
          $ref: "#/components/schemas/inline_response_200_470_result_template_settings"
        type:
          type: string
          description: |-
            The domain's type.
            * `main` â The main domain.
            * `sub` â A subdomain.
          example: main
          enum:
          - main
          - sub
    inline_response_200_470_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing each domain's site template
            information.
          items:
            $ref: "#/components/schemas/inline_response_200_470_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_471_result:
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_472_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_473_result_data:
      properties:
        key:
          type: string
          description: The Sitejet API token for the cPanel account.
          format: hexadecimal
          example: d35d8ea651007ccd25f96486cdcdXXXX
    inline_response_200_473_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_473_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_474_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_475_result_data:
      properties:
        websiteID:
          type: integer
          description: The website ID of the created website.
          example: 123456
    inline_response_200_475_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_475_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_476_result_metadata:
      properties:
        company:
          type: string
          description: The website's comapany.
          example: cPanel
        cpanelDomainGUID:
          type: string
          description: The cPanel user's domain.
          example: example.com
        fullcms:
          type: number
          description: |-
            Whether the full Sitejet Content Management System is enabled.
            * `1` - Full CMS is enabled.
            * `0` - Full CMS is disabled.
          enum:
          - 1
          - 0
        language:
          type: string
          description: The language selection for the Sitejet Content Management System.
          format: ISO-639
          example: en
        latest_publish_date:
          type: integer
          description: The last successful publication of the Sitejet domain in Unix
            time format.
          format: unix-timestamp
        publish_status:
          type: integer
          description: |-
            Whether the Sitejet domain is published.
            * `1` - Website is published.
            * `0` - Website is not published.
          enum:
          - 1
          - 0
        websiteId:
          type: integer
          description: The website ID of the created website.
          example: 444444
    inline_response_200_476_result_quota:
      properties:
        available_space:
          type: integer
          description: The amount of space available in megabytes (MB).
          example: 1024
        can_backup:
          type: number
          description: |-
            Whether the document root has enough space to make a backup.
            * `1` - There is enough space.
            * `0` - There is not enough space.
          enum:
          - 1
          - 0
        is_empty_docroot:
          type: number
          description: |-
            Whether the document root is empty.
            * `1` - Document root is empty.
            * `0` - Document root is not empty.
          enum:
          - 1
          - 0
        required_space:
          type: integer
          description: The amount of space required in megabytes (MB) for a document
            root backup.
          example: 64
    inline_response_200_476_result_status:
      properties:
        has_sitejet_published:
          type: integer
          description: |-
            Whether the Sitejet website is published.
            * `1` - Sitejet website is published.
            * `0` - Sitejet website is not published.
          enum:
          - 1
          - 0
        has_sitejet_website:
          type: integer
          description: |-
            Whether the domain's document root diretory contains a Sitejet directory.
            * `1` - User has created a Sitejet website.
            * `0` - User has not created a Sitejet website.
          enum:
          - 1
          - 0
        is_sitejet:
          type: integer
          description: |-
            Whether the domain's document root diretory's `index.html` file contains Sitejet deployed content.
            * `1` - User has a Sitejet website.
            * `0` - User does not have a Sitejet website.
          enum:
          - 1
          - 0
    inline_response_200_476_result_data:
      properties:
        domain:
          type: string
          description: The name of the cPanel user's domain.
          example: example.com
        metadata:
          $ref: "#/components/schemas/inline_response_200_476_result_metadata"
        quota:
          $ref: "#/components/schemas/inline_response_200_476_result_quota"
        redirection_enabled:
          type: integer
          description: |-
            Whether the domain redirects to another URL.
            * 1 - Redirects.
            * 0 - Doesn't redirect.
          enum:
          - 1
          - 0
        shared_doc_root:
          type: integer
          description: |-
            whether the sitejet domain is sharing the document_root.
            * 1 - document_root is shared.
            * 0 - document_root is not shared.
          enum:
          - 1
          - 0
        is_restore_point_available:
          type: integer
          description: |-
            Whether the sitejet domain has a restore point.
            * `1` â Restore point is available.
            * `0` â Restore point is not available.
          enum:
          - 1
          - 0
        status:
          $ref: "#/components/schemas/inline_response_200_476_result_status"
    inline_response_200_476_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_476_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_477_result:
      type: object
      properties:
        data:
          type: string
          description: The cPanel account's Sitejet API token.
          format: hexadecimal
          example: d35d8ea651007ccd25f96486cdcdXXXX
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_478_result:
      type: object
      properties:
        data:
          type: string
          description: The Sitejet website's preview URL.
          format: URL
          example: https://api.sitehub.io/website/example/previewurl
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_479_result:
      type: object
      properties:
        data:
          type: string
          description: The SSO link to the Sitejet CMS.
          example: https://my.sitehub.io/website/edit?ssotoken=exampletokenstring
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_480_result_data:
      properties:
        createdAt:
          type: string
          description: The templates creation date.
          format: date-time
          example: 2023-05-04T07:21:20Z
        description:
          type: string
          description: The template's description.
          example: Example template description
        id:
          type: integer
          description: The template's ID.
          example: 123456
        image:
          type: string
          description: The relative path to the template image on the SiteJet CMS
            website.
          example: /images/1024/6824140/template_image.png
        name:
          type: string
          description: The template's name.
          example: example template
        previewUrl:
          type: string
          description: The website's preview URL.
          example: https://www.example-template.com
        tags:
          type: array
          description: The template's catagory search tags.
          items:
            type: string
            example: blog
    inline_response_200_480_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_480_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_483_result_data:
      properties:
        file_name:
          type: string
          description: |-
            The publish process's log file name.

            **Note:**

            The system stores this file in the `logs/` directory, relative to the cPanel account's home directory.
          example: /home/cpuser/logs/publish_2024-02-02T16:46:58.log
        pid:
          type: integer
          description: The publish action's process ID.
          example: 123456
    inline_response_200_483_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_483_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_484_result:
      properties:
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_485_result_data:
      type: object
      properties:
        key:
          type: string
          description: The name of the test.
          example: ACT_NOW_ALL_CAPS
        rule_type:
          type: string
          description: |-
            The type and section of the email that the SpamAssassin analyses.
            * `body_tests`
            * `full_evals`
            * `head_evals`
            * `head_tests`
            * `meta_tests`
            * `other_tests`
            * `rawbody_tests`
            * `uri_tests`
          example: body_tests
          enum:
          - body_tests
          - full_evals
          - head_evals
          - head_tests
          - meta_tests
          - other_tests
          - rawbody_tests
          - uri_tests
        score:
          description: The score to assign to the email if the result of the test
            is true.
          example: 1
          oneOf:
          - type: number
          - type: integer
    inline_response_200_485_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_485_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_486_result_data:
      type: object
      properties:
        blacklist_from:
          type: array
          description: The email addresses on the blacklist.
          items:
            type: string
            format: email
            example: username2@example.com
        required_score:
          type: array
          description: The score to mark a message as spam. The system considers mail
            that matches this score to be spam.
          items:
            type: number
            format: float
            example: 5.1
        score:
          type: array
          description: The symbolic test name and score.
          items:
            type: string
            example: ACT_NOW_CAPS 1
        whitelist_from:
          type: array
          description: The email addresses on the whitelist.
          items:
            type: string
            format: email
            example: username@example.com
    inline_response_200_486_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_486_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_487_result_data:
      type: object
      properties:
        additionalProperties:
          type: array
          description: |-
            An array containing custom SpamAssassin variable values.

            **Note:**

            The array's name is the custom SpamAssassin variable's name.
          items:
            type: string
            example: mycustomscore
        blacklist_from:
          type: array
          description: An array of email addresses on the blacklist.
          items:
            type: string
            format: email
            example: username2@example.com
        required_score:
          type: array
          description: An array containing the score at which the system will mark
            a message as spam. The system considers mail that matches this score to
            be spam.
          items:
            type: number
            format: float
            example: 5
        score:
          type: array
          description: An array of the symbolic test names and their scores.
          items:
            type: string
            example: ACT_NOW_CAPS 5
        whitelist_from:
          type: array
          description: An array of the email addresses on the whitelist.
          items:
            type: string
            format: email
            example: username@example.com
      example: "{\"blacklist_from\":[\"username2@example.com\"],\"ok_locales\":[\"\
        all\"],\"required_score\":[5],\"score\":[\"ACT_NOW_CAPS 5\"],\"whitelist_from\"\
        :[\"username@example.com\"]}"
    inline_response_200_487_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_487_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_488_result_data:
      type: object
      properties:
        bytes:
          minimum: 0
          type: integer
          description: "The domain's bandwidth usage, in bytes."
          example: 74845
        domain:
          type: string
          description: |-
            The domain for which to display bandwidth statistics.

            **Note:**

            The function only returns this value if the `protocol` return's value is `http`.
          format: domain
          example: example.com
        month_start:
          type: integer
          description: The beginning of the report window.
          format: unix_timestamp
          example: 1561957200
        protocol:
          type: string
          description: |-
            The protocol for which to provide data.
              * `http`
              * `imap`
              * `smtp`
              * `pop3`
              * `ftp`
          example: imap
          enum:
          - http
          - imap
          - smtp
          - pop3
          - ftp
    inline_response_200_488_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_488_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_489_result_data:
      type: object
      properties:
        date:
          type: integer
          description: The date that the system recorded the error.
          format: unix_timestamp
          example: 1234576704
        entry:
          type: string
          description: The error log entry.
          example: "[Fri Feb 13 19:58:24.420593 2009] [core:error] [pid 29228:tid\
            \ 47876185720577] (13)Permission denied: [client 10.0.0.2:62908] AH00132:\
            \ file permissions deny server access: /home/user/public_html/index.html"
    inline_response_200_489_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_489_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: |-
            List of warnings generated by the API. Warnings
            describe non-critical failures or other problematic conditions
            noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_490_result_data:
      type: object
      properties:
        all_domains:
          type: integer
          description: |-
            Whether the statistics file's filepath is for all the domains on a cPanel account.
            * `1` - All domains.
            * `0` - An individual domain.
          example: 1
          enum:
          - 0
          - 1
        domain:
          type: string
          description: The domain for which to display statistics.
          format: domain
          example: example.com
        path:
          type: string
          description: The filepath to the statistics file.
          format: path
          example: /tmp/user/webalizer/index.html
        ssl:
          type: integer
          description: |-
            Whether the function generates statistics from SSL requests.
            * `1` - Generates statistics for SSL requests.
            * `0` - Generates statistics for non-SSL requests.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_490_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_490_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_491_result_data:
      type: object
      properties:
        date:
          type: integer
          description: The current date and time.
          format: unix_timestamp
          example: 1565795929
        url:
          type: string
          description: The URL of the file from which the system generates statistics
            reports.
          example: tmp/cptest/analog/8.html.com
    inline_response_200_491_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_491_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_492_result_data:
      type: object
      properties:
        _count:
          type: string
          description: The queried data's value.
        _max:
          type: string
          description: The queried parameter's limit.
        _maxed:
          type: integer
          description: |-
            Whether the queried value reached its maximum value.

            * `1` â Reached maximum value.
            * `0` â Has **not** reached maximum value.
          enum:
          - 1
          - 0
        condition:
          type: integer
          description: |-
            Whether the queried data's value possesses a conditional requirement.

            * `1` â Possesses a condition.
            * `0` â Does **not** possess a condition.

            **Note:**

            The function will **only** return this value if it determines that the
            related statistic meets the subsystem installation requirements.
          enum:
          - 1
          - 0
        count:
          type: string
          description: The queried data's value.
        feature:
          type: string
          description: The queried item's feature name.
        id:
          type: string
          description: The queried item's reference name.
        is_maxed:
          type: integer
          description: |-
            Whether the queried value has reached its maximum value.

            * `1` âÂ The queried value has reached its maximum value.
            * `0` âÂ The queried value has **not** reached its maximum value.
          enum:
          - 1
          - 0
        item:
          type: string
          description: A human-readable version of the queried item.
        max:
          type: string
          description: The queried value's maximum limit.
        maxed_phrase:
          type: string
          description: |-
            The [`maketext`-formatted](https://go.cpanel.net/locale) message
            that the interface displays when the user reaches their maximum
            allowed value.
        module:
          type: string
          description: The module that retrieved the information.
          example: Quota
        name:
          type: string
          description: The display key.
          example: diskusage
        near_limit_phrase:
          type: string
          description: |-
            The [`maketext`-formatted](https://go.cpanel.net/locale) message
            that the interface displays when the user approaches their
            maximum allowed value.
        normalized:
          type: integer
          description: |-
            Whether the function normalized the output values.

            * `1` â Normalized.
            * `0` â Did **not** normalize.
          enum:
          - 1
          - 0
        percent:
          type: integer
          description: "The percentage of value, if applicable."
        percent10:
          multipleOf: 10
          type: integer
          description: "The percentage of value that the system rounds to the nearest\
            \ ten, if applicable."
        percent20:
          multipleOf: 20
          type: integer
          description: "The percentage of value that the system rounds to the nearest\
            \ twenty, if applicable."
        percent5:
          multipleOf: 5
          type: integer
          description: "The percentage of value that the system rounds to the nearest\
            \ five, if applicable."
        phrase:
          type: string
          description: The human-readable name of the queried item.
        role:
          type: string
          description: |-
            The queried value's role.

            * `CalendarContact`
            * `DNS`
            * `FileStorage`
            * `FTP`
            * `MailLocal`
            * `MailReceive`
            * `MailSend`
            * `MySQL`
            * `Postgres`
            * `SpamFilter`
            * `Webmail`
            * `WebDisk`
            * `WebServer`
          enum:
          - CalendarContact
          - DNS
          - FileStorage
          - FTP
          - MailLocal
          - MailReceive
          - MailSend
          - MySQL
          - Postgres
          - SpamFilter
          - Webmail
          - WebDisk
          - WebServer
        rowtype:
          type: string
          description: |-
            The queried value's row type.

            * `even`
            * `odd`
          enum:
          - even
          - odd
        units:
          type: string
          description: The queried value's unit of measure.
        zeroisunlimited:
          type: integer
          description: |-
            Whether a value of `0` means unlimited or zero.

            * `1` â Unlimited.
            * `0` â Zero.
          enum:
          - 1
          - 0
    inline_response_200_492_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing results from the queried account.
          example:
          - _count: "0.00"
            _max: "1024.00"
            _maxed: 0
            count: 0 bytes
            feature: bandwidth
            id: bandwidthusage
            is_maxed: 0
            item: Monthly Bandwidth Transfer
            max: 1 GB
            maxed_phrase: "You have transferred your maximum allotment of data ([format_bytes,_1])\
              \ for this month."
            module: Stats
            name: bandwidthusage
            near_limit_phrase: "You have transferred [format_bytes,_1] of your [format_bytes,_2]\
              \ data allotment for this month."
            normalized: 1
            percent: 0
            percent10: 0
            percent20: 0
            percent5: 0
            phrase: Monthly Bandwidth Transfer
            rowtype: even
            units: MB
            zeroisunlimited: 1
          - _count: "1.75"
            _max: "1024.00"
            _maxed: 0
            count: 1.75 MB
            id: diskusage
            is_maxed: 0
            item: Disk Space Usage
            langkey: INDXDiskUsage
            max: 1 GB
            maxed_phrase: "You are using your maximum storage allotment, [format_bytes,_1]."
            module: Quota
            name: diskusage
            near_limit_phrase: "You are using [format_bytes,_1] of the [format_bytes,_2]\
              \ of storage available to you."
            normalized: 1
            percent: 0
            percent10: 0
            percent20: 0
            percent5: 0
            phrase: Disk Space Usage
            rowtype: odd
            units: MB
            zeroisunlimited: 1
          items:
            $ref: "#/components/schemas/inline_response_200_492_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_493_result_analyzers:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the analyzer is turned on or off for the domain.

            - `1` - the analyzer is enabled.
            - `0` - the analyzer is disabled.

            **Note:** This is the cumulative effect of the choices the server admin and user make.
          enum:
          - 1
          - 0
        enabled_by_user:
          type: integer
          description: |-
            Whether the analyzer is turned on or off for the domain specifically by this user.

            - `1` - the analyzer is enabled by the user.
            - `0` - the analyzer is disabled by the user.
          enum:
          - 1
          - 0
        name:
          type: string
          description: |-
            Name of the analyzer.

            It must be one of the following:

            - `analog` - Analog weblog analyzer.
            - `awstats` - AWStats weblog analyzer.
            - `webalizer` - The Webalizer weblog analyzer.
          enum:
          - analog
          - awstats
          - webalizer
    inline_response_200_493_result_data:
      type: object
      properties:
        analyzers:
          type: array
          description: List of log analyzer configuration objects for this domain.
            Only analyzers that are enabled for this user on the system are shown.
          example:
          - enabled: 1
            enabled_by_user: 1
            name: awstats
          - enabled: 0
            enabled_by_user: 0
            name: analog
          - enabled: 0
            enabled_by_user: 1
            name: webalizer
          items:
            $ref: "#/components/schemas/inline_response_200_493_result_analyzers"
        domain:
          type: string
          description: The domain.
          example: domain.com
    inline_response_200_493_result_metadata_analyzers:
      type: object
      properties:
        available_for_user:
          type: integer
          description: |-
            Whether the analyzer can be configured by this user.

            - `1` - the analyzer can be configured by this user.
            - `0` - the analyzer cannot be configured by this user.
          enum:
          - 1
          - 0
        enabled_by_default:
          type: integer
          description: |-
            Whether the analyzer is turned on or off by default for all users.

            - `1` - the analyzer is enabled for all users on the server.
            - `0` - the analyzer is disabled for all users on the server.
          enum:
          - 1
          - 0
        name:
          type: string
          description: |-
            Name of the analyzer.

            It must be one of the following:

            - `analog` - Analog weblog analyzer.
            - `awstats` - AWStats weblog analyzer.
            - `webalizer` - The Webalizer weblog analyzer.
          enum:
          - analog
          - awstats
          - webalizer
    inline_response_200_493_result_metadata:
      properties:
        analyzers:
          type: array
          description: System configruation for each analyzer.
          example:
          - available_for_user: 1
            enabled_by_default: 0
            name: analog
          - available_for_user: 1
            enabled_by_default: 1
            name: awstats
          - available_for_user: 1
            enabled_by_default: 0
            name: webalizer
          items:
            $ref: "#/components/schemas/inline_response_200_493_result_metadata_analyzers"
        locked:
          type: integer
          description: |-
            Whether the analyzer can be turned on or off for the domain by the cPanel user.

            - `1` - the analyzer cannot be managed by the cPanel user. The reseller or `root` controls the configuration.
            - `0` - the analyzer can be managed by the cPanel user.
          enum:
          - 1
          - 0
        transformed:
          type: integer
          description: Post-processing may have transformed the data.
          example: 1
          enum:
          - 1
    inline_response_200_493_result:
      type: object
      properties:
        data:
          type: array
          description: A list of domains and the status of each of the web log analyzers
            available in cPanel for that domain.
          items:
            $ref: "#/components/schemas/inline_response_200_493_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_493_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_494_result_analyzers:
      type: object
      properties:
        available:
          type: integer
          description: |-
            Whether the analyzer is turned on or off for the whole server.

            - `1` - the analyzer is enabled on the server.
            - `0` - the analyzer is disabled on the server.
          enum:
          - 1
          - 0
        enabled:
          type: integer
          description: |-
            Whether the analyzer is turned on or off for the domain.

            - `1` - the analyzer is enabled.
            - `0` - the analyzer is disabled.
          enum:
          - 1
          - 0
        locked:
          type: integer
          description: |-
            Whether the analyzer can be turned on or off for the domain by the cPanel user.

            - `1` - the analyzer can be managed by the cPanel user.
            - `0` - the analyzer cannot be managed by the cPanel user. The reseller or `root` controls the configuration.
          enum:
          - 1
          - 0
        name:
          type: string
          description: |-
            Name of the analyzer.

            It must be one of the following:

            - `analog` - Analog weblog analyzer.
            - `awstats` - AWStats weblog analyzer.
            - `webalizer` - The Webalizer weblog analyzer.
          enum:
          - analog
          - awstats
          - webalizer
    inline_response_200_494_result_data:
      type: object
      properties:
        analyzers:
          type: array
          description: List of log analyzer configuration objects for this domain
          example:
          - available: 1
            enabled: 1
            locked: 0
            name: awstats
          - available: 1
            enabled: 0
            locked: 0
            name: analog
          - available: 0
            enabled: 0
            locked: 0
            name: webalizer
          items:
            $ref: "#/components/schemas/inline_response_200_494_result_analyzers"
        domain:
          type: string
          description: The domain.
          example: user
    inline_response_200_494_result:
      type: object
      properties:
        data:
          type: array
          description: A list of domains and the status of each of the web log analyzers
            available in cPanel for that domain.
          items:
            $ref: "#/components/schemas/inline_response_200_494_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_496_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_497_result:
      type: object
      properties:
        data:
          type: integer
          description: The unix timestamp that represents when the team user expires.
          format: unix-timestamp
          example: 1674575562
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_498_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_500_result_data:
      properties:
        max:
          type: integer
          description: |-
            Maximum number of team users with roles.

            **Note:**

            This value is stored in the package.
          example: 7
        used:
          type: integer
          description: The current number of team users with roles.
          example: 2
    inline_response_200_500_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_500_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed: Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_501_result:
      type: object
      properties:
        data:
          oneOf:
          - $ref: "#/components/schemas/TeamArray"
          - $ref: "#/components/schemas/TeamHash"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_507_result:
      type: object
      properties:
        data:
          type: integer
          description: The unix timestamp that represents when the team user expires.
          format: unix-timestamp
          example: 1674575562
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_511_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_513_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/FeatureDescriptions"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_514_result:
      type: object
      properties:
        data:
          type: string
          description: |-
            The cPanel account's base theme. The function returns **only** one of the following strings:
            * `jupiter`
            * `unknown` âÂ The function returns this value when it cannot determine the base theme that
            you modified to create the custom theme.
          example: jupiter
          enum:
          - jupiter
          - unknown
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_515_result:
      type: object
      properties:
        data:
          type: array
          description: An array that contains the account's themes.
          items:
            type: string
            example: jupiter
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_516_result:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            Whether the theme changed.

            * `1` â The theme changed.
            * `0` â The theme did **not** change, or the function failed.

            **Note:**

            If the function fails, check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_517_result_data:
      type: object
      properties:
        create_time:
          type: integer
          description: The API token's creation date and time.
          format: unix_timestamp
          example: 1549467298
        token:
          type: string
          description: The generated API token.
          example: JPQNSRU0DH448UJLGXH7KVJECC5QN9N9
    inline_response_200_517_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_517_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_518_result_data:
      type: object
      properties:
        create_time:
          type: integer
          description: The API token's creation date and time.
          format: unix_timestamp
          example: 1549471343
        expires_at:
          type: integer
          description: |-
            The API token's expiration time.

            * null âÂ The API token does **not** expire.
          format: unix_timestamp
          nullable: true
          example: 1609372800
        features:
          type: array
          description: |-
            The account features that the API token has access to.

            * An empty array â The API token has full access.
          example: []
          items:
            type: string
        has_full_access:
          type: integer
          description: |-
            Whether the API token has full access to the account's features.

            * `1` â The API token has full access to the account's features.
            * `0` â The API token does **not** have full access to the
            account's features.
          example: 1
          enum:
          - 1
          - 0
        name:
          type: string
          description: The API token's name.
          example: exampletoken
    inline_response_200_518_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing the account's API tokens.
          items:
            $ref: "#/components/schemas/inline_response_200_518_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_520_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the system removed the API token.

            * `1` - The system removed the API token or the API token doesn't exist.
            * `0` - The system did **not** remove the API token.

            **Note:**

            The system returns the data value in the function's metadata. This differs from our usual API return format. For more information, read our [UAPI Introduction](/cpanel/introduction/) documentation.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_521_result_data:
      type: object
      properties:
        otpauth_str:
          type: string
          description: A one-time authentication URL to encode as the QR code.
          example: otpauth://totp/Example%20cPanel%20L.L.C.:fakedomain?secret=S3I4WUY7MTHRMMWN&issuer=Example%20cPanel%20L.L.C.
        secret:
          type: string
          description: A generated code for use with two-factor authentication.
          example: S3I4WUY7MTHRMMWN
    inline_response_200_521_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_521_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_522_result_data:
      type: object
      properties:
        is_enabled:
          type: integer
          description: |-
            Whether two-factor authentication is enabled for the team user.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        issuer:
          type: string
          description: The authentication code issuer's name.
          example: "Example WebPros International, LLC"
    inline_response_200_522_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_522_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_523_result_data:
      type: object
      properties:
        is_enabled:
          type: integer
          description: |-
            Whether two-factor authentication is enabled for the account.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        issuer:
          type: string
          description: The authentication code issuer's name.
          example: "Example WebPros International, LLC"
    inline_response_200_523_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_523_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_524_result_data:
      type: object
      properties:
        tfa_removed:
          type: integer
          description: |-
            Whether the system removed the user from the two-factor authentication `userdata` file.
            * `1` - Removed.

            **Note:**

            If a removal fails, the system sends a failure response with the reason in the metadata.
          example: 1
          enum:
          - 1
    inline_response_200_524_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_524_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_525_result_data:
      type: object
      properties:
        tfa_configured:
          type: integer
          description: |-
            Whether two-factor authentication is enabled.
            * `1` - Enabled.
            * `1` - Disabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_525_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_525_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_527_result_data_accounts_issues:
      type: object
      properties:
        area:
          type: string
          description: The affected section of cPanel & WHM.
          example: info
        limit:
          minimum: 1
          type: integer
          description: The set megabyte (MB) quota limit for the affected Subaccount.
          example: 1500
        message:
          type: string
          description: A description of the issue.
          example: Your account is over quota.
        service:
          type: string
          description: |-
            The affected service.

            * `email`
            * `ftp`
            * `webdisk`
          example: email
          enum:
          - email
          - ftp
          - webdisk
        type:
          type: string
          description: |-
            The type of issue.

            * `error`
            * `warning`
            * `info`
          example: info
          enum:
          - error
          - warning
          - info
        used:
          minimum: 1
          type: integer
          description: The number of megabytes (MB) the account currently uses.
          example: 2000
    inline_response_200_527_result_data_accounts_services_email:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the Subaccount can access Webmail, POP, and
            IMAP services.

            * `1` âÂ Has service access.
            * `0` âÂ Does **not** have service access.
          example: 1
          enum:
          - 1
          - 0
        quota:
          maximum: 999999
          minimum: 0
          type: integer
          description: |-
            The Subaccount's email disk space quota, in megabytes (MB).

            * `0` âÂ The account has an unlimited email disk space quota.
          example: 100
      description: Information that indicates the Subaccount's email status.
    inline_response_200_527_result_data_accounts_services_ftp:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the Subaccount can access FTP.

            * `1` âÂ Has FTP service access.
            * `0` âÂ Does **not** have FTP service access.
          example: 0
          enum:
          - 1
          - 0
        homedir:
          type: string
          description: "The Subaccount's FTP directory, relative to the cPanel account's\
            \ home directory."
          example: /Subaccount
        quota:
          minimum: 0
          type: integer
          description: |-
            The Subaccount's FTP maximum disk space quota, in
            megabytes (MB).

            * `0` â The account has an unlimited disk space quota.
          example: 100
      description: Information about the Subaccount's FTP status.
    inline_response_200_527_result_data_accounts_services_webdisk:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the Subaccount can access Web Disk.

            * `1` âÂ Has Web Disk service access.
            * `0` âÂ Does **not** have Web Disk service access.
          example: 0
          enum:
          - 1
          - 0
        homedir:
          type: string
          description: "The Subaccount's Web Disk directory, relative to the cPanel\
            \ account's home directory."
          example: /username
        perms:
          type: string
          description: |-
            Whether the Web Disk has read or read and write
            permissions.

            * `ro` âÂ Read-only permissions.
            * `rw` âÂ Read and write permissions.
          example: rw
          enum:
          - ro
          - rw
        private:
          type: integer
          description: |-
            Whether the Web Disk directory permissions are public
            or private.

            * `1` âÂ Private (`0700`).
            * `0` âÂ Public (`0755`).
          example: 0
          enum:
          - 1
          - 0
      description: Information about the Subaccount's Web Disk status.
    inline_response_200_527_result_data_accounts_services:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/inline_response_200_527_result_data_accounts_services_email"
        ftp:
          $ref: "#/components/schemas/inline_response_200_527_result_data_accounts_services_ftp"
        webdisk:
          $ref: "#/components/schemas/inline_response_200_527_result_data_accounts_services_webdisk"
      description: "Information about the Subaccount's access to email, FTP, and Web\
        \ Disk."
    inline_response_200_527_result_data_accounts_merge_candidates:
      type: object
      properties:
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.

            * `sub` âÂ A Subaccount.
            * `hypothetical` âÂ A hypothetical Subaccount that does **not**
            yet exist, but that the user could create as part of a merge.
            * `null` âÂ **Not** a merge candidate.
          nullable: true
          enum:
          - sub
          - hypothetical
        phone_number:
          type: string
          description: |-
            The Subaccount user's phone number, in
            [ITU-T-recommended E.164](https://en.wikipedia.org/wiki/E.164)
            format.
          example: "+15551234567"
        real_name:
          type: string
          description: "The name of the Subaccount user, if provided."
          example: John Doe
        services:
          $ref: "#/components/schemas/inline_response_200_527_result_data_accounts_services"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that
            the user **cannot** remove.

            * `1` âÂ The user can remove the account.
            * `0` âÂ The user **cannot** remove the account.
          example: 1
          enum:
          - 1
          - 0
        sub_account_exists:
          type: integer
          description: |-
            Whether a Subaccount exists with the same username.

            * `1` âÂ Exists.
            * `0` â Does **not** exist.
            * `null` âÂ The account is **not** a Subaccount.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of
            the Subaccount's service accounts.

            * `1` âÂ Synchronized.
            * `0` âÂ **Not** synchronized.
            * `null` âÂ The account is **not** a Subaccount.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        type:
          type: string
          description: |-
            The type of account.

            * `sub` âÂ A Subaccount.
            * `hypothetical`Â âÂ A hypothetical Subaccount that does **not**
            yet exist, but that the user could create as part of a merge.
            * `service` âÂ A service account.
            * `cpanel` âÂ A cPanel account.
          example: sub
          enum:
          - sub
          - hypothetical
          - service
          - cpanel
        username:
          type: string
          description: |-
            The username for the Subaccount.

            **Note:**

            This value does **not** include the domain name.
          format: username
          example: username
    inline_response_200_527_result_data_accounts:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the Subaccount's user.
          format: email
          nullable: true
          example: user@example.com
        avatar_url:
          type: string
          description: The URL to the user's Subaccount profile image file.
          format: url
          nullable: true
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the Subaccount.

            * `1` âÂ Can delete.
            * `0` âÂ **Cannot** delete.
          example: 0
          enum:
          - 1
          - 0
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the Subaccount's
            password.

            * `1` âÂ Can change the password.
            * `0` âÂ **Cannot** change the password.

            **Note:**

            the function returns `0` for Subaccounts that inherit their password
            from the cPanel account.
          example: 1
          enum:
          - 1
          - 0
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the Subaccount's
            disk usage quota.

            * `1` âÂ Can change the Subaccount's disk usage quota.
            * `0` âÂ **Cannot** change the Subaccount's disk useage quota.
          example: 0
          enum:
          - 1
          - 0
        dismissed:
          type: integer
          description: |-
            Whether the cPanel account user dismissed the merge prompt
            for the service account.

            * `1` âÂ Dismissed.
            * `0` âÂ Did **not** dismiss.

            **Note:**

            **Only** service accounts return this value.
          example: 1
          enum:
          - 1
          - 0
        dismissed_merge_candidates:
          type: array
          description: |-
            A list of the service accounts that the user dismissed the merge
            prompt for.

            **Note:**

            * This array **always** returns empty.
            * We reserved this return for future use.
        domain:
          type: string
          description: The Subaccount user's associated domain.
          format: domain
          example: example.com
        full_username:
          type: string
          description: The Subaccount's username.
          format: email
          example: username@example.com
        guid:
          type: string
          description: The Subaccount's system-assigned unique identifier.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_expired_invite:
          type: integer
          description: |-
            Whether the Subaccount owns an expired invitation.

            * `1` âÂ Owns an expired invitation.
            * `0` âÂ Does **not** own an expired invitation.
          example: 0
          enum:
          - 1
          - 0
        has_invite:
          type: integer
          description: |-
            Whether the Subaccount owns an active invitation.

            * `1` âÂ Own an active invitation.
            * `0` âÂ Does **not** own an active invitation.
          example: 0
          enum:
          - 1
          - 0
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares the queried `full_username` value
            with another service account.

            * `1` âÂ Shares the service account.
            * `0` âÂ Does **not** share the service account.
          example: 0
          enum:
          - 1
          - 0
        invite_expiration:
          type: integer
          description: |-
            The time at which the new Subaccount invitation will expire.

            * `null` âÂ The account does **not** own an active invitation.
          format: unix_timestamp
          nullable: true
          example: 1600162200
        issues:
          type: array
          description: An array of objects containing information about any issues
            or problems with the Subaccount.
          items:
            $ref: "#/components/schemas/inline_response_200_527_result_data_accounts_issues"
        merge_candidates:
          type: array
          description: An array of objects containing the service accounts that the
            system could merge for this Subaccount.
          items:
            $ref: "#/components/schemas/inline_response_200_527_result_data_accounts_merge_candidates"
      description: An object containing the service accounts that match the queried
        `full_username` parameter.
    inline_response_200_527_result_data:
      type: object
      properties:
        accounts:
          $ref: "#/components/schemas/inline_response_200_527_result_data_accounts"
        conflict:
          type: integer
          description: |-
            Whether the system detected an account conflict.

            * `1` âÂ Conflict.
            * `0` âÂ **No** conflict.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_527_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_527_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_528_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/CreateUserResponse"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_529_result_data_issues:
      properties:
        area:
          type: string
          description: The affected section of cPanel & WHM.
          example: quota
        limit:
          minimum: 0
          type: integer
          description: The set quota megabyte (MB) limit for the affected account.
          example: 1500
        message:
          type: string
          description: The description of the issue.
          example: Your account is over quota.
        service:
          type: string
          description: |-
            The affected service.
            * `email`
            * `ftp`
            * `webdisk`
          example: email
          enum:
          - email
          - ftp
          - webdisk
        type:
          type: string
          description: |-
            The type of issue.
            * `error`
            * `warning`
            * `info`
          example: info
          enum:
          - error
          - warning
          - info
        used:
          minimum: 0
          type: integer
          description: The number of megabytes (MB) that the account currently uses.
          example: 2000
    inline_response_200_529_result_data_merge_candidates:
      type: object
      properties:
        alternate_email:
          type: string
        avatar_url:
          type: string
        can_delete:
          type: integer
        can_set_password:
          type: integer
        can_set_quota:
          type: integer
        dismissed:
          type: integer
        dismissed_merge_candidates:
          type: array
          items:
            type: string
        domain:
          type: string
          format: domain
        full_username:
          type: string
        guid:
          type: string
        has_expired_invite:
          type: integer
        has_invite:
          type: integer
        has_siblings:
          type: integer
        invite_expiration:
          type: integer
        issues:
          type: array
          items:
            type: string
        merge_candidates:
          type: array
          items:
            type: string
        parent_type:
          type: string
        phone_number:
          type: string
        real_name:
          type: string
        services:
          type: object
        special:
          type: integer
        sub_account_exists:
          type: integer
        synced_password:
          type: integer
        type:
          type: string
        username:
          type: string
          format: username
    inline_response_200_529_result_data_services_email:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the account can access Webmail, POP, and IMAP services.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 1
          enum:
          - 1
          - 0
        quota:
          maximum: 999999
          minimum: 0
          type: integer
          description: |-
            The account's email disk space quota.
            * The set quota megabyte (MB) limit for the account's email disk space.
            * `0` - Unlimited.
          example: 100
      description: Information that indicates the account's email status.
    inline_response_200_529_result_data_services_ftp:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the account can access FTP.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 1
          - 0
        homedir:
          type: string
          description: |-
            The account's FTP home directory.
            * A valid path, relative to the cPanel account's home directory.
          format: path
          example: /account
        quota:
          minimum: 0
          type: integer
          description: |-
            The account's FTP disk space quota.
            * An integer that represents the account's maximum FTP disk usage, in megabytes (MB).
            * `0` - Unlimited.
          example: 100
      description: Information about the account's FTP status.
    inline_response_200_529_result_data_services_webdisk:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the account can access Web Disk.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 1
          - 0
        homedir:
          type: string
          description: |-
            The account's Web Disk directory.
            * A valid path, relative to the cPanel account's home directory.
          format: path
          example: /bob
        perms:
          type: string
          description: |-
            Whether to grant write permissions to the account.
            * `ro` - Read-only permissions.
            * `rw` - Read and write permissions.
          example: rw
        private:
          type: integer
          description: |-
            Whether to set the Web Disk directory's permissions to public or private.
            * `1` - Private (0700).
            * `0` - Public (0755).
          example: 0
          enum:
          - 1
          - 0
      description: Information about the account's Web Disk status.
    inline_response_200_529_result_data_services:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/inline_response_200_529_result_data_services_email"
        ftp:
          $ref: "#/components/schemas/inline_response_200_529_result_data_services_ftp"
        webdisk:
          $ref: "#/components/schemas/inline_response_200_529_result_data_services_webdisk"
      description: "Information about the account's access to email, FTP, and Web\
        \ Disk."
    inline_response_200_529_result_data:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the account's user.
          format: email
          example: user@example.com
        avatar_url:
          type: string
          description: The user's account profile photo.  The URL must point to an
            image file.
          format: url
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the account.
            * `1` - Can delete.
            * `0` - **Cannot** delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the account's password.
            * `1` - Can change password.
            * `0` - **Cannot** change password.

            **Note:**

            The function returns `0` for accounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the account's disk usage quota.
            * `1` - Can change quota.
            * `0` - **Cannot** change quota.
          example: 0
          enum:
          - 0
          - 1
        dismissed:
          type: integer
          description: |-
            Whether the cPanel account user dismissed the merge prompt for the service account.
            * `1` - Dismissed prompt.
            * `0` - Did **not** dismiss prompt.

            **Note:**

            **Only** service accounts return this value.
          example: 1
          enum:
          - 0
          - 1
        dismissed_merge_candidates:
          type: array
          description: |-
            An array of objects that represent the service accounts that the user dismissed the merge prompt for.
            This array will always return empty.

            **Note:**

            We reserved this return for future use.
          items:
            type: object
        domain:
          type: string
          description: The account user's associated domain.
          format: domain
          example: example.com
        full_username:
          type: string
          description: "The account's username and domain name, separated by the `@`\
            \ character."
          example: user@example.com
        guid:
          type: string
          description: The account unique identifier.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_expired_invite:
          type: integer
          description: |-
            Whether the Subaccount owns an expired invitation.
            * `1` - Owns an expired invitation.
            * `0` - Does **not** own an expired invitation.
          example: 0
          enum:
          - 0
          - 1
        has_invite:
          type: integer
          description: |-
            Whether the Subaccount owns an active invitation.
            * `1` - Owns an invitation.
            * `0` - Does **not** own an invitation.
          example: 0
          enum:
          - 0
          - 1
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a `full_username` value with another service account.
            * `1` - Shares.
            * `0` - Does not share.
          example: 0
          enum:
          - 0
          - 1
        invite_expiration:
          type: integer
          description: |-
            The time at which the new Subaccount invitation will expire, given as a valid Unix epoch time or null.

            If the account does not own an active invitation, this value returns `null`.
          format: unix_timestamp
          nullable: true
          example: 1466258282
        issues:
          type: array
          description: Information about any issues or problems with the account.
          items:
            $ref: "#/components/schemas/inline_response_200_529_result_data_issues"
        merge_candidates:
          type: array
          description: |-
            The service accounts that the system could merge for this account.

            **Note:**

            You can find descriptions for this array's returns within this table.
          items:
            $ref: "#/components/schemas/inline_response_200_529_result_data_merge_candidates"
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.
            * `sub` - An account.
            * `hypothetical` - A hypothetical account does **not** yet exist, but that the user could create as part of a merge.
            * `null` - **Not** a merge candidate.
          nullable: true
          example: hypothetical
          enum:
          - sub
          - hypothetical
        phone_number:
          type: string
          description: |-
            The account user's phone number.
            * A valid phone number that conforms to [ITU-T](https://en.wikipedia.org/wiki/ITU-T)'s [E.164-recommended standard](https://en.wikipedia.org/wiki/E.164) for the representation of telephone numbers.
          example: "+15551234567"
        real_name:
          type: string
          description: |-
            The name of the account's user.
            * A first name, a last name, or a first name and last name.
            * An empty string.
          example: John Doe
        services:
          $ref: "#/components/schemas/inline_response_200_529_result_data_services"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.
            * `1` - A special account.
            * `0` - **Not** a special account.
          example: 1
          enum:
          - 1
          - 0
        sub_account_exists:
          type: integer
          description: |-
            Whether an account exists with the same username.
            * `1` - Exists.
            * `0` - Does not exist.
            * `null` - The account is **not** a service account.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the account's service accounts.
            * `1` - Synchronized.
            * `0` - **Not** synchronized.
            * `null` - The account is **not** a Subaccount
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        type:
          type: string
          description: |-
            The type of account.
            * `hypothetical` - A hypothetical account that does not exist, but that the user could create as part of a merge.
            * `service` - A service account.
          example: service
          enum:
          - hypothetical
          - service
        username:
          maxLength: 64
          type: string
          description: |-
            The account username.

            The username must meet the account name limitations.
            * Characters - `a-z`, `A-Z`, `0-9`, dot (`.`), hyphen (`-`), underscore (`_`)

            **Note::**

            This value does **not** include the domain name.
          format: username
    inline_response_200_529_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_529_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_531_result_data:
      type: object
      properties:
        dismissed_merge_candidates:
          type: array
          description: An array of objects of service candidates that the system dismissed
            from merges.
          items:
            $ref: "#/components/schemas/SubaccountMergeCandidates"
      allOf:
      - $ref: "#/components/schemas/EditUserSubaccountBase"
      - $ref: "#/components/schemas/SubaccountMergeCandidates"
    inline_response_200_531_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_531_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_532_result_issues:
      type: object
      properties:
        area:
          type: string
          description: The affected section of cPanel & WHM.
          example: quota
        limit:
          minimum: 1
          type: integer
          description: The set quota megabyte (MB) limit for the affected subaccount.
          format: megabytes
          example: 1500
        message:
          type: string
          description: The description of the issue.
          example: Your account is over quota.
        service:
          type: string
          description: The affected service.
          example: email
          enum:
          - email
          - ftp
          - webdisk
        type:
          type: string
          description: The type of issue.
          example: info
          enum:
          - error
          - warning
          - info
        used:
          type: integer
          description: The number of megabytes (MB) that the account currently uses.
          format: megabytes
          example: 2000
    inline_response_200_532_result_services_email:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Webmail, POP, and IMAP services.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 1
          enum:
          - 0
          - 1
        quota:
          minimum: 1
          type: integer
          description: The maximum amount of disk space allocated to subaccount's
            email account.
          format: megabytes
          example: 100
      description: An object containing the information that indicates the subaccount's
        email status.
    inline_response_200_532_result_services_ftp:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access FTP.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The subaccount's FTP home directory relative to the cPanel
            account's home.
          format: path
          example: /subaccount
        quota:
          maximum: 999999
          minimum: 0
          type: integer
          description: |-
            The subaccount's FTP disk space quota.
            * `0` - Unlimited.
          format: megabytes
          example: 100
      description: An object containing the information that indicates the subaccount's
        FTP status.
    inline_response_200_532_result_services_webdisk:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Web Disk.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The subaccount's Web Disk home directory relative to the cPanel
            account's home directory.
          format: path
          example: /bob
        perms:
          type: string
          description: |-
            Whether to grant write permissions to the subaccount.
            * `ro` - Read-only permissions.
            * `rw` - Read and write permissions.
          example: rw
          enum:
          - ro
          - rw
        private:
          type: integer
          description: |-
            Whether to set the Web Disk directory's permissions to public or private.
            * `1` - Private (0700).
            * `0` - Public (0755).
          example: 0
          enum:
          - 0
          - 1
      description: An object containing information that indicates the subaccount's
        Web Disk status.
    inline_response_200_532_result_services:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/inline_response_200_532_result_services_email"
        ftp:
          $ref: "#/components/schemas/inline_response_200_532_result_services_ftp"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user cannot remove.
            * `1` - A special account.
            * `0` - **Not** a special account.
          example: 1
          enum:
          - 0
          - 1
        webdisk:
          $ref: "#/components/schemas/inline_response_200_532_result_services_webdisk"
      description: "An object containing information about the subaccount's access\
        \ to email, FTP, and Web Disk."
    inline_response_200_532_result_data:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the subaccount's user.
          format: email
          example: user@example.com
        avatar_url:
          type: string
          description: The user's subaccount profile photo.
          format: url
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the subaccount.
            * `1` - Can delete.
            * `0` - **Cannot** delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's password.
            * `1` - Can change.
            * `0` - **Cannot** change.

            **Note:**

              The function returns a `0` value for subaccounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's disk usage quota.
            * `1` - Can change.
            * `0` - **Cannot** change.
          example: 0
          enum:
          - 0
          - 1
        dismissed:
          type: integer
          description: |-
            Whether the cPanel account user dismissed the merge prompt for the service account.
            * `1` - Dismissed.
            * `0` - Did **not** dismiss.

            **Note:**

             **Only** service accounts return this value.
          example: 1
          enum:
          - 0
          - 1
        dismissed_merge_candidates:
          type: array
          description: An array of objects containing information about service candidates
            that the system dismissed from merges.
          example: []
          items:
            type: string
        domain:
          type: string
          description: The subaccount user's associated domain.
          format: domain
          example: example.com
        full_username:
          type: string
          description: The subaccount's username and domain name.
          example: user@example.com
        guid:
          type: string
          description: The subaccount unique identifier.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_expired_invite:
          type: integer
          description: |-
            Whether an expired account login invitation exists.
            * `1` - Expired account invitation exists.
            * `0` - Expired account invitation does **not** exist.
          example: 0
          enum:
          - 0
          - 1
        has_invite:
          type: integer
          description: |-
            Whether an account login invitation exists.
            * `1` - Account invitation exists.
            * `0` - Account invitation does **not** exist.
          example: 0
          enum:
          - 0
          - 1
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a full_username value with another service account.
            * `1` - Shares.
            * `0` - Does **not** share.
          example: 0
          enum:
          - 0
          - 1
        invite_expiration:
          type: integer
          description: When the invitation expires.
          format: unix_timestamp
          example: 1591718154
        issues:
          type: array
          description: Information about any issues or problems with the subaccount.
          items:
            $ref: "#/components/schemas/inline_response_200_532_result_issues"
        merge_candidates:
          type: array
          description: An array of objects that represents the service accounts that
            the system could merge for this subaccount.
          example: []
          items:
            type: string
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.
            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** yet exist, but the user could create as part of a merge.
            * `null` - **Not** a merge candidate.
          nullable: true
          example: hypothetical
          enum:
          - sub
          - hypothetical
        phone_number:
          type: string
          description: "The subaccount user's phone number. A valid phone number that\
            \ conforms to [ITU-T](https://en.wikipedia.org/wiki/ITU-T)'s [E.164](https://en.wikipedia.org/wiki/E.164)\
            \ -recommended standard for the representation of telephone numbers."
          example: "+15551234567"
        real_name:
          type: string
          description: The name of the subaccount's user.
          example: John Doe
        services:
          $ref: "#/components/schemas/inline_response_200_532_result_services"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.
            * `1` â A special account.
            * `0` â **Not** a special account.
          example: 0
          enum:
          - 0
          - 1
        sub_account_exists:
          type: integer
          description: |-
            Whether a subaccount exists with the same username.
            * `1` - Exists.
            * `0` - Does **not** exist.

            **Note:**

            The function returns a `null` value if the account is **not** a service account.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the subaccount's service accounts.
            * `1` - Synchronized.
            * `0` - Not synchronized.

            **Note:**

            The function returns a `null` value if the account is **not** a subaccount.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of account.
            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does not exist, but that the user could create as part of a merge.
            * `service` - A service account.
            * `cpanel` - The cPanel account.
          example: sub
          enum:
          - sub
          - hypothetical
          - service
          - cpanel
        username:
          maxLength: 64
          minLength: 1
          pattern: "^[\\w\\.]{1,64}$"
          type: string
          description: |-
            The username for the subaccount. A username that meets the subaccount name limitations.
            - Length  64 characters.
            - Characters  a-z, A-Z, 0-9, dot (.), hyphen (-), underscore (_).

            **Note:**

            This value does **not** include the domain name.
          example: example
    inline_response_200_532_result:
      type: object
      properties:
        data:
          type: array
          properties: {}
          items:
            $ref: "#/components/schemas/inline_response_200_532_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running an API.
          nullable: true
          items:
            type: string
    inline_response_200_533_result_data:
      type: object
      properties:
        dismissed_merge_candidates:
          type: array
          description: An array of objects of service candidates that the system dismissed
            from merges.
          items:
            $ref: "#/components/schemas/LookupServiceAccountSubaccountMergeCandidates"
      allOf:
      - $ref: "#/components/schemas/LookupServiceAccountSubaccountBase"
      - $ref: "#/components/schemas/LookupServiceAccountSubaccountMergeCandidates"
    inline_response_200_533_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_533_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_534_result:
      type: object
      properties:
        data:
          allOf:
          - $ref: "#/components/schemas/ServiceAccount"
          - properties:
              dismissed_merge_candidates:
                type: array
                description: An array of service account objects that the system dismissed
                  from merges.
                items:
                  $ref: "#/components/schemas/ServiceAccount"
              has_expired_invite:
                type: integer
                description: |-
                  Whether an expired account login invitation exists.
                  * `1` - Expired account invitation exists.
                  * `0` - Expired account invitation does not exist.
                example: 0
                enum:
                - 0
                - 1
              has_invite:
                type: integer
                description: |-
                  Whether an account login invitation exists.
                  * `1` -  Account invitation exists.
                  * `0` -  Account invitation does not exist.
                example: 0
                enum:
                - 0
                - 1
              invite_expiration:
                type: integer
                description: When the invitation expires.
                format: unix_timestamp
                nullable: true
                example: 1591718154
          - type: object
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_535_result_data_issues:
      type: object
      properties:
        area:
          type: string
          description: The affected section of cPanel & WHM.
          example: quota
        limit:
          minimum: 1
          type: integer
          description: The set quota megabyte (MB) limit for the affected subaccount.
          example: 1500
        message:
          type: string
          description: The description of the issue.
          example: Your account is over quota.
        service:
          type: string
          description: |-
            The affected service.
            * `email`
            * `ftp`
            * `webdisk`
          example: email
          enum:
          - email
          - ftp
          - webdisk
        type:
          type: string
          description: |-
            The type of issue.

            * `error`
            * `warning`
            * `info`
          example: info
          enum:
          - error
          - warning
          - info
        used:
          minimum: 1
          type: integer
          description: The number of megabytes (MB) that the account currently uses.
          example: 2000
    inline_response_200_535_result_data_services_email:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Webmail, POP, and IMAP services.

            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 1
          enum:
          - 0
          - 1
        quota:
          type: integer
          description: |-
            The maximum amount of disk space allocated to subaccount's email account. A positive integer that represents the maximum disk space that the subaccount may use, in megabytes (MB).

            **Note:**

            This function will **not** return `0` as a value.
          example: 100
      description: This object contains the information that indicates the subaccount's
        email status.
    inline_response_200_535_result_data_services_ftp:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access FTP.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The subaccount's FTP home directory.
          format: path
          example: /subaccount
        quota:
          maximum: 999999
          minimum: 0
          type: integer
          description: |-
            The subaccount's FTP disk space quota.
            * >= `1` - Represents the maximum disk space that the subaccount may use, in megabytes (MB).
            * `0`   - Unlimited.
          example: 100
      description: This object contains the information that indicates the subaccount's
        FTP status.
    inline_response_200_535_result_data_services_webdisk:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Web Disk.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The subaccount's Web Disk home directory.
          format: path
          example: /bob
        perms:
          type: string
          description: |-
            Whether to grant write permissions to the subaccount.
            * `ro` - Read-only permissions.
            * `rw` - Read and write permissions.
          example: rw
          enum:
          - ro
          - rw
        private:
          type: integer
          description: |-
            Whether to set the Web Disk directory's permissions to public or private.
            * `1` - Private (0700).
            * `0` - Public (0755).
          example: 0
          enum:
          - 0
          - 1
      description: This object contains information that indicates the subaccount's
        Web Disk status.
    inline_response_200_535_result_data_services:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services_email"
        ftp:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services_ftp"
        webdisk:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services_webdisk"
      description: "This object contains information about the subaccount's access\
        \ to email, FTP, and Web Disk."
    inline_response_200_535_result_data_dismissed_merge_candidates:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the subaccount's user.
          format: email
          example: user@example.com
        avatar_url:
          type: string
          description: The user's subaccount profile photo.
          format: url
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the subaccount.
            * `1` - Can delete.
            * `0` - **Cannot** delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's password.
            * `1` - Can change.
            * `0` - **Cannot** change.

            **Note:**

            The function returns a `0` value for subaccounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's disk usage quota.
            * `1` - Can change.
            * `0` - **Cannot** change.
          example: 0
          enum:
          - 0
          - 1
        domain:
          type: string
          description: The subaccount user's associated domain that the cPanel account
            owns.
          format: domain
          example: example.com
        full_username:
          type: string
          description: The subaccount's username and domain name.
          format: email
          example: user@example.com
        guid:
          type: string
          description: The subaccount unique identifier. The system assigned unique
            value.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a `full_username` value with another service account.
            * `1` - Shares.
            * `0` - Does **not** share.
          example: 0
          enum:
          - 0
          - 1
        issues:
          type: array
          description: Information about any issues or problems with the subaccount.
          items:
            $ref: "#/components/schemas/inline_response_200_535_result_data_issues"
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.
            * `sub`          - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does not yet exist, but the user could create as part of a merge.
            * `null`         - **Not** a merge candidate.
          nullable: true
          example: hypothetical
          enum:
          - sub
          - hypothetical
        phone_number:
          type: string
          description: The subaccount user's phone number.
          example: "+15551234567"
        real_name:
          type: string
          description: |-
            The name of the subaccount's user.

            * A first name.
            * Last name.
            * First name and last name.
            * An empty string.
          example: John Doe
        services:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.
            * `1` - A special account.
            * `0` - **Not** a special account.
          example: 1
          enum:
          - 0
          - 1
        sub_account_exists:
          type: integer
          description: |-
            Whether a subaccount exists with the same username.

            * `1` - Exists.
            * `0` - Does **not** exist.

            **Note:**

            The function returns a `null` value if the account is not a service account.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the subaccount's service accounts.

            * `1` - Synchronized.
            * `0` - **Not** synchronized.

            **Note:**

            The function returns a `null` value if the account is **not** a subaccount.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of account.

            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** exist, but that the user could create as part of a merge.
            * `service` - A service account.
            * `cpanel` - The cPanel account.
          example: sub
          enum:
          - sub
          - hypothetical
          - service
          - cpanel
        username:
          type: string
          description: The username for the subaccount.
          format: username
          example: example
    inline_response_200_535_result_data_services_1_webdisk:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether the subaccount can access Web Disk.
            * `1` - Can access.
            * `0` - **Cannot** access.
          example: 0
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The subaccount's Web Disk home directory.
          format: path
          example: /bob
        perms:
          type: string
          description: |-
            Whether to grant write permissions to the subaccount.
            * `ro` - Read-only permissions.
            * `rw` - Read and write permissions.
          example: rw
        private:
          type: integer
          description: |-
            Whether to set the Web Disk directory's permissions to public or private.
            * `1` - Private (0700).
            * `0` - Public (0755).
          example: 0
          enum:
          - 0
          - 1
      description: This object contains information that indicates the subaccount's
        Web Disk status.
    inline_response_200_535_result_data_services_1:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services_email"
        ftp:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services_ftp"
        webdisk:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services_1_webdisk"
      description: "This object contains information about the subaccount's access\
        \ to email, FTP, and Web Disk."
    inline_response_200_535_result_data_merge_candidates:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the subaccount's user.
          format: email
          example: user@example.com
        avatar_url:
          type: string
          description: The user's subaccount profile photo.
          format: url
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the subaccount.
            * `1` - Can delete.
            * `0` - **Cannot** delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's password.
            * `1` - Can change.
            * `0` - **Cannot** change.

            **Note:**

            The function returns a `0` value for subaccounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's disk usage quota.
            * `1` - Can change.
            * `0` - **Cannot** change.
          example: 0
          enum:
          - 0
          - 1
        domain:
          type: string
          description: The subaccount user's associated domain. A domain that the
            cPanel account owns.
          format: domain
          example: example.com
        full_username:
          type: string
          description: The subaccount's username and domain name.
          format: email
          example: user@example.com
        guid:
          type: string
          description: The subaccount unique identifier. The system assigned unique
            value.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a `full_username` value with another service account.
            * `1` - Shares.
            * `0` - Does **not** share.
          example: 0
          enum:
          - 0
          - 1
        issues:
          type: array
          description: Information about any issues or problems with the subaccount.
          items:
            $ref: "#/components/schemas/inline_response_200_535_result_data_issues"
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.
            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** yet exist, but the user could create as part of a merge.
            * `null` - Not a merge candidate.
          nullable: true
          example: hypothetical
          enum:
          - sub
          - hypothetical
        phone_number:
          type: string
          description: The subaccount user's phone number.
          example: "+15551234567"
        real_name:
          type: string
          description: |-
            The name of the subaccount's user.

            * A first name.
            * Last name.
            * First name and last name.
            * An empty string.
          example: John Doe
        services:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services_1"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.
            * `1` - A special account.
            * `0` - **Not** a special account.
          example: 1
          enum:
          - 0
          - 1
        sub_account_exists:
          type: integer
          description: |-
            Whether a subaccount exists with the same username.

            * `1` - Exists.
            * `0` - Does **not** exist.

            **Note:**

            The function returns a `null` value if the account is **not** a service account.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the subaccount's service accounts.

            * `1` - Synchronized.
            * `0` - **Not** synchronized.

            **Note:**

            The function returns a `null` value if the account is **not** a subaccount.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of account.

            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** exist, but that the user could create as part of a merge.
            * `service` - A service account.
            * `cpanel` - The cPanel account.
          example: sub
          enum:
          - sub
          - hypothetical
          - service
          - cpanel
        username:
          type: string
          description: |-
            The username for the service account that meets the account name limitations.

            * Length - 64 characters
            * Characters â `a-z`, `A-Z`, `0-9`, dot (`.`), hyphen (`-`), underscore (`_`).

            **Note:**

            This value does **not** include the domain name.
          format: username
          example: example
    inline_response_200_535_result_data:
      type: object
      properties:
        alternate_email:
          type: string
          description: An alternate email address for the subaccount's user.
          format: email
          example: user@example.com
        avatar_url:
          type: string
          description: The user's subaccount profile photo.
          format: url
          example: https://img.example.com/avatars/example.jpg
        can_delete:
          type: integer
          description: |-
            Whether the cPanel account user can delete the subaccount.
            * `1` - Can delete.
            * `0` - **Cannot** delete.
          example: 0
          enum:
          - 0
          - 1
        can_set_password:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's password.
            * `1` - Can change.
            * `0` - **Cannot** change.

            **Note:**

            The function returns a `0` value for subaccounts that inherit their password from the cPanel account.
          example: 1
          enum:
          - 0
          - 1
        can_set_quota:
          type: integer
          description: |-
            Whether the cPanel account user can change the subaccount's disk usage quota.
            * `1` - Can change.
            * `0` - **Cannot** change.
          example: 0
          enum:
          - 0
          - 1
        dismissed:
          type: integer
          description: |-
            Whether the cPanel account user dismissed the merge prompt for the service account.

            **Note:**

            Only service accounts return this value.
            * `1` - Dismissed.
            * `0` - Did **not** dismiss.
          example: 1
          enum:
          - 0
          - 1
        dismissed_merge_candidates:
          type: array
          description: An array of objects of service candidates that the system dismissed
            from merges.
          items:
            $ref: "#/components/schemas/inline_response_200_535_result_data_dismissed_merge_candidates"
        domain:
          type: string
          description: The subaccount user's associated domain. A domain that the
            cPanel account owns.
          format: domain
          example: example.com
        full_username:
          type: string
          description: The subaccount's username and domain name.
          format: email
          example: user@example.com
        guid:
          type: string
          description: The subaccount unique identifier. The system assigned unique
            value.
          example: N4641:EXAMPLE.COM:564CC8A7:A82EA007D8348AC631C0170F9418EC1DEB0D164CC5A722A87C55EF5DD2AD98D4
        has_expired_invite:
          type: integer
          description: |-
            Whether an expired account login invitation exists.
            * `1` - Expired account invitation exists.
            * `0` - Expired account invitation does **not** exist.
          example: 0
          enum:
          - 0
          - 1
        has_invite:
          type: integer
          description: |-
            Whether an account login invitation exists.
            * `1` - Account invitation exists.
            * `0` - Account invitation does **not** exist.
          example: 0
          enum:
          - 0
          - 1
        has_siblings:
          type: integer
          description: |-
            Whether the service account shares a `full_username` value with another service account.
            * `1` - Shares.
            * `0` - Does **not** share.
          example: 0
          enum:
          - 0
          - 1
        invite_expiration:
          type: integer
          description: When the invitation expires.
          format: unix_timestamp
          example: 1591718154
        issues:
          type: array
          description: Information about any issues or problems with the subaccount.
          items:
            $ref: "#/components/schemas/inline_response_200_535_result_data_issues"
        merge_candidates:
          type: array
          description: An array of objects that represents the service accounts that
            the system could merge for this subaccount.
          items:
            $ref: "#/components/schemas/inline_response_200_535_result_data_merge_candidates"
        parent_type:
          type: string
          description: |-
            The type of account that could own the service account.
            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** yet exist, but the user could create as part of a merge.
            * `null` - Not a merge candidate.
          nullable: true
          example: hypothetical
          enum:
          - sub
          - hypothetical
        phone_number:
          type: string
          description: The subaccount user's phone number.
          example: "+15551234567"
        real_name:
          type: string
          description: |-
            The name of the subaccount's user.

            * A first name.
            * Last name.
            * First name and last name.
            * An empty string.
          example: John Doe
        services:
          $ref: "#/components/schemas/inline_response_200_535_result_data_services_1"
        special:
          type: integer
          description: |-
            Whether the account is a system-created special account that the user **cannot** remove.
            * `1` - A special account.
            * `0` - **Not** a special account.
          example: 1
          enum:
          - 0
          - 1
        sub_account_exists:
          type: integer
          description: |-
            Whether a subaccount exists with the same username.

            * `1` - Exists.
            * `0` - Does **not** exist.

            **Note:**

            The function returns a `null` value if the account is **not** a service account.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        synced_password:
          type: integer
          description: |-
            Whether the user has synchronized the passwords for each of the subaccount's service accounts.

            * `1` - Synchronized.
            * `0` - **Not** synchronized.

            **Note:**

            The function returns a `null` value if the account is **not** a subaccount.
          nullable: true
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The type of account.

            * `sub` - A subaccount.
            * `hypothetical` - A hypothetical subaccount that does **not** exist, but that the user could create as part of a merge.
            * `service` - A service account.
            * `cpanel` - The cPanel account.
          example: sub
        username:
          type: string
          description: |-
            The username for the subaccount.

            The username for the service account that meets the account name limitations.

            * Length - 64 characters
            * Characters â `a-z`, `A-Z`, `0-9`, dot (`.`), hyphen (`-`), underscore (`_`).

            **Note:**

            This value does **not** include the domain name.
          format: username
          example: example
    inline_response_200_535_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_535_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_538_result_args:
      type: object
      properties:
        repository_root:
          type: string
          description: The absolute path to the repostiory's `root` directory.
      description: |-
        An object containing one or more action- and subsystem-specific
        arguments, if any exist.

        For example, a task that returns an `action` value of `create` and
        a `subsystem` value of `VersionControl` will include the
        `repository_root` argument.
    inline_response_200_538_result_data:
      type: object
      properties:
        action:
          type: string
          description: |-
            The task's action.

            * `create`

            **Note:**

            `create` is the only possible value.
          example: create
          enum:
          - create
        args:
          $ref: "#/components/schemas/inline_response_200_538_result_args"
        id:
          type: string
          description: The task's ID number.
          example: 00000000\/5a9ec8dd4c345d
        subsystem:
          type: string
          description: |-
            The subsystem that will handle the process.

            * `VersionControl`

            **Note:**

            `VersionControl` is the only possible value.
          example: VersionControl
          enum:
          - VersionControl
    inline_response_200_538_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing data for a task in the user
            task queue.
          example:
          - action: create
            args: {}
            id: 00000000\/5a9ec8dd4c345d
            subsystem: VersionControl
          - action: create
            args:
              repository_root: /home/user/public_html/example
            id: 00000000/h39dnn27suc13l
            subsystem: VersionControl
          items:
            $ref: "#/components/schemas/inline_response_200_538_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_539_result_data:
      type: object
      properties:
        allow_park_subdomain_on_hostname:
          type: integer
          description: |-
            Whether the system allows users to park subdomains of the server's hostname.

            * `1` - Allows.
            * `0` - Doesn't allow.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        allow_remote_domains:
          type: integer
          description: |-
            Whether the system allows users to create addon domains or aliases that resolve to other servers.

            * `1` - Allows.
            * `0` - Doesn't allow.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        allow_reset_password:
          type: integer
          description: |-
            Whether cPanel's [*Reset Password*](https://go.cpanel.net/resetsubaccountpass) feature is enabled for the account.

            * `1` - *Reset Password* feature enabled.
            * `0` - *Reset Password* feature not enabled.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        allow_reset_password_for_subaccounts:
          type: integer
          description: |-
            Whether cPanel's [*Reset Password*](https://go.cpanel.net/resetsubaccountpass) feature is enabled for subaccounts on the account.

            * `1` - *Reset Password* feature enabled.
            * `0` - *Reset Password* feature not enabled.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        allow_unregistered_domains:
          type: integer
          description: |-
            Whether the system allows users to add domains they didn't register with a domain name registrar.

            * `1` - Allows.
            * `0` - Doesn't allow.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        apache_port:
          type: string
          description: The IP address or IP address with a firewall port number that
            Apache uses to listen for requests and serve web pages over an unsecured
            connection.
          nullable: true
          example: 192.0.2.0:80
        apache_ssl_port:
          type: string
          description: The IP address or IP address with a firewall port number that
            Apache uses to listen for requests and serve web pages over a secure connection.
          nullable: true
          example: 192.0.2.0:443
        api_shell:
          type: integer
          description: |-
            Whether the user can access cPanel's [*API Shell*](https://go.cpanel.net/cpaneldocsAPIShell) interface (*cPanel >> Home >> Advanced >> API Shell*).

            * `1` - Can access.
            * `0` - Can't access.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        awstats_browser_update:
          type: integer
          description: |-
            Whether the user can update their [AWStats](http://awstats.sourceforge.net/) software.

            * `1` - Can update.
            * `0` - Can't update.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        awstats_reverse_dns:
          type: integer
          description: |-
            Whether the AWStats statistical analysis software interprets visitors' domain names as IP addresses.

            * `1` - Interprets visitors' domain names as IP addresses.
            * `0` - Doesn't interpret visitors' domain names as IP addresses.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        cpanel_root_directory:
          type: string
          description: The cPanel `root` directory.
          format: path
          nullable: true
          example: /usr/local/cpanel
        database_prefix_required:
          type: integer
          description: |-
            Whether the account requires database prefixing.

            * `1` - Requires database prefixing.
            * `0` - Doesn't require database prefixing.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        default_theme:
          type: string
          description: The cPanel interface's default theme.
          nullable: true
          example: jupiter
        disable_analog:
          type: integer
          description: |-
            Whether users can access the [*Analog Stats*](https://go.cpanel.net/cpaneldocsAnalogStats) interface (*cPanel >> Home >> Metrics >> Analog Stats*).

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        disable_awstats:
          type: integer
          description: |-
            Whether the [AWStats](http://awstats.sourceforge.net/) software is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        disable_boxtrapper:
          type: integer
          description: |-
            Whether [*BoxTrapper*](https://go.cpanel.net/cpaneldocsBoxTrapper) is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        disable_mailman:
          type: integer
          description: |-
            Whether Mailman mailing lists are enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        disable_roundcube:
          type: integer
          description: |-
            Whether [Roundcube webmail](https://roundcube.net/) is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        disable_spamassassin:
          type: integer
          description: |-
            Whether the Apache SpamAssassin spam filter is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        disable_spambox:
          type: integer
          description: |-
            Whether Apache SpamAssassin's spam box feature is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        disable_webalizer:
          type: integer
          description: |-
            Whether the [Webalizer](http://www.webalizer.org/) statistics program is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        display_cpanel_doclinks:
          type: integer
          description: |-
            Whether the system displays links to cPanel feature documentation in the cPanel interface.

            * `1` - Displays documentation links.
            * `0` - Doesn't display documentation links.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        dnsadmin_app:
          type: string
          description: |-
            The application that processes DNS management requests.

            * The value is an application's file path, relative to the user's home directory.
            * `dnsadmin`
            * `auto-detect SSL`
          nullable: true
          example: dnsadmin
          oneOf:
          - type: string
            description: "The application's file path, relative to the user's home\
              \ directory."
          - type: string
            enum:
            - dnsadmin
            - auto-detect SSL
        docroots_in_public_html_only:
          type: integer
          description: |-
            Whether the system restricts users from creating addon domains and subdomains outside of their `public_html` directory.

            * `1` - Restricts users from creating addon domains and subdomains outside of their `public_html` directory.
            * `0` - Allows users to creating addon domains and subdomains outside of their `public_html` directory.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        email_filter_storage_directory:
          type: string
          description: The location of the Exim email filter storage directory.
          format: path
          nullable: true
          example: /etc/vfilters
        empty_trash_days:
          type: string
          description: The minimum age of files that the system will automatically
            purge from `.trash` folders in user home directories.
          nullable: true
          example: disabled
        enable_file_protect:
          type: integer
          description: |-
            Whether [EasyApache 4's *FileProtect* option](https://go.cpanel.net/EasyApache4FileprotectOption) is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        file_upload_maximum_bytes:
          maximum: 10240
          minimum: 1
          type: integer
          description: "The maximum file size, in megabytes (MB), that a user can\
            \ upload to a server."
          nullable: true
        file_upload_must_leave_bytes:
          minimum: 1
          type: integer
          description: The minimum filesystem quota that the system requires after
            a file uploads to a server.
          nullable: true
          example: 5
        file_usage:
          type: integer
          description: |-
            Whether file usage information displays in the cPanel *Home* interface's statistics bar.

            * `1` - Displays file usage information.
            * `0` - Doesn't display file usage information.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        ftp_server:
          type: string
          description: |-
            The FTP server.

            * `pure-ftpd` - The Pure-FTPD server.
            * `proftpd` - The ProFTPD FTP server.
            * `disabled` - FTP has been disabled on this server.
          nullable: true
          example: disabled
          enum:
          - pure-ftpd
          - proftpd
          - disabled
        htaccess_check_recurse:
          minimum: 0
          type: integer
          description: The maximum number of directories deep to look for `.htaccess`
            files when you change the PHP handler.
          nullable: true
          example: 2
        invite_sub:
          type: integer
          description: |-
            Whether cPanel account users can send invitations to new Subaccount users via cPanel's [*User Manager*](https://go.cpanel.net/cpaneldocsUserManager) interface (*cPanel >> Home >> Preferences >> User Manager*).

            * `1` - Can send invitations.
            * `0` - Can't send invitations.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        ipv6_listen:
          type: integer
          description: |-
            Whether the `cpsrvd` daemon and other cPanel & WHM services listen on IPv6.

            * `1` - Listen on IPv6.
            * `0` - Don't listen on IPv6.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        is_mod_userdir_enabled:
          type: integer
          description: |-
            Whether the [Apache `mod_userdir` Tweak](https://go.cpanel.net/whmdocsApachemod_userdirTweak) is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        local_nameserver_type:
          type: string
          description: |-
            The DNS nameserver's type.

            * `powerdns` - The PowerDNS nameserver.
            * `bind` - The bind nameserver.
            * `disabled` - Nameserver's have been disabled on this server.
          nullable: true
          example: powerdns
          enum:
          - powerdns
          - bind
          - disabled
        logout_redirect_url:
          type: string
          description: The logout redirection URL.
          format: url
          nullable: true
          example: https://cpanel.net
        mail_server:
          type: string
          description: |-
            The mailserver type.

            * `dovecot` - The Dovecot mailserver.
            * `disabled` - The mailserver is disabled on this system.
          nullable: true
          example: dovecot
          enum:
          - dovecot
          - disabled
        mailbox_storage_format:
          type: string
          description: |-
            The mailbox storage format for new accounts.

            * `mdbox` - The mdbox storage format.
            * `maildir` - The maildir storage format.
          nullable: true
          example: maildir
          enum:
          - mdbox
          - maildir
        minimum_password_strength:
          maximum: 100
          minimum: 0
          type: integer
          description: The minimum strength for cPanel account passwords.
          nullable: true
          example: 65
        minimum_password_strength_mysql:
          maximum: 100
          minimum: 0
          type: integer
          description: The minimum strength for MySQL or MariaDB passwords.
          nullable: true
          example: 65
        mysql_host:
          type: string
          description: The MySQL or MariaDB hostname or IP address.
          nullable: true
          example: localhost
          oneOf:
          - type: string
            format: domain
          - type: string
            format: ipv4
        mysql_version:
          type: string
          description: The MySQL or MariaDB version.
          nullable: true
          example: "5.7"
        php_loader:
          type: string
          description: |-
            The PHP loaders through which the system executes internal PHP scripts.

            * `ioncube` - The ionCube PHP loader.
            * `sourceguardian` - The SourceGuardian PHP loader.
            * `ioncube,sourceguardian` - Both the ionCube and SourceGuardian PHP loaders are in use.
            * An emtpy string - PHP loader is not in use.
          nullable: true
          example: ioncube
          enum:
          - ""
          - ioncube
          - sourceguardian
          - "ioncube,sourceguardian"
        php_maximum_execution_time:
          minimum: 90
          type: integer
          description: The number of seconds that a PHP script can run before the
            system terminates it.
          nullable: true
          example: 90
        php_open_basedir_home:
          type: integer
          description: |-
            Whether PHP `open_basedir` protection is enabled on the server.

            * `1` - Enabled.
            * `0` - Not enabled.

            **Important:**

            We removed WHM's *PHP open_basedir Tweak* interface (*WHM >> Home >> Security Center >> PHP open_basedir Tweak*)
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        php_post_maximum_size:
          maximum: 2047
          minimum: 55
          type: integer
          description: "The maximum size, in megabytes (MB), of a POST request."
          nullable: true
          example: 55
        php_system_default_version:
          type: string
          description: The system's default version of PHP.
          nullable: true
          example: ea-php73
        php_upload_maximum_filesize:
          maximum: 2047
          minimum: 50
          type: integer
          description: "The maximum file size, in megabytes (MB), that a PHP script\
            \ may upload."
          nullable: true
          example: 50
        phpmyadmin_disable_search_info_schema:
          type: integer
          description: |-
            Whether the user can search for the phpMyAdmin information schema.

            * `1` - Searches are enabled.
            * `0` - Searches are **not** enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        require_ssl:
          type: integer
          description: |-
            Whether the system requires passwords and other sensitive information use SSL encryption.

            * `1` - Requires SSL.
            * `0` - Doesn't require SSL.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        skip_apache_clients_optimizer:
          type: integer
          description: |-
            Whether the Apache Client Optimizer is enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        skip_bandwidth_limit_check:
          type: integer
          description: |-
            Whether the system automatically suspends HTTP service for accounts that exceed their bandwidth limit.

            * `1` - Suspends HTTP service.
            * `0` - Doesn't suspend HTTP service.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        skip_mailbox_warnings_check:
          type: integer
          description: |-
            Whether mailbox usage warnings are enabled.

            * `1` - Enabled.
            * `0` - Not enabled.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        ssl_default_key_type:
          type: string
          description: |-
            The default SSL/TLS encryption algorithm used by the system.

            * `rsa-2048` - The rsa-2048 encryption algorithm.
            * `ecdsa-secp384r1` - The ecdsa-secp384r1 encryption algorithm.
            * `ecdsa-prime256v1` - The ecdsa-prime256v1 encryption algorithm.
            * `rsa-4096` - The rsa-4096 encryption algorithm.
          nullable: true
          example: rsa-2048
          enum:
          - rsa-2048
          - ecdsa-secp384r1
          - ecdsa-prime256v1
          - rsa-4096
        use_information_schema:
          type: integer
          description: |-
            Whether the system uses the MySQL `INFORMATION_SCHEMA` view. This view includes disk usage by all MySQL tables in the disk usage totals.

            * `1` - Uses MySQL's `INFORMATION_SCHEMA` view.
            * `0` - Doesn't use MySQL's `INFORMATION_SCHEMA` view.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        use_mail_for_mailman_url:
          type: integer
          description: |-
            Whether the system prefixes Mailman URLs with mail. For example, `http://mail.domain.com/mailman`.

            * `1` - Prefixes Mailman URLs with the `mail.` prefix.
            * `0` - Doesn't prefix Mailman URLs with the `mail.` prefix.
          nullable: true
          example: 0
          enum:
          - 1
          - 0
        version:
          type: string
          description: The system's Linux Kernel version.
          nullable: true
          example: "3.4"
    inline_response_200_539_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_539_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_540_result_data:
      type: object
      properties:
        host:
          type: string
          description: The web server's hostname.
          example: example.com
    inline_response_200_540_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_540_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_541_result_data_feature:
      type: object
      properties:
        additionalProperties:
          type: integer
          description: |-
            Whether the feature is enabled.
            * `1` - Enabled.
            * `0` - Disabled.

            **Note:**

            The feature's name is the return name.
          example: 1
          enum:
          - 0
          - 1
          x-additionalPropertiesName: feature
      description: |-
        The available features on the account that exist in the `/var/cpanel/users/user` file`, where user represents the cPanel user.

        **Note:**

        This object returns any custom features that the hosting provider adds to the `/var/cpanel/users/user` file.
      example: "{\"custom_feature\":1}"
    inline_response_200_541_result_data_mxcheck:
      type: object
      properties:
        additionalProperties:
          type: string
          description: |-
            The domain's MX type.

            * `local` - Accept mail locally for the domain.
            * `remote` - Do not accept mail locally for the domain.
            * `secondary` - Accept mail until a higher priority mail server is available.

            **Note:**

            The return's name is the domain name.
          example: local
          enum:
          - local
          - remote
          - secondary
          x-additionalPropertiesName: domain
      description: Domains and their mail exchanger (MX) type.
      example: "{\"example.com\":\"local\",\"example2.com\":\"remote\"}"
    inline_response_200_541_result_data:
      type: object
      properties:
        backup_enabled:
          type: integer
          description: |-
            Whether the user has backups enabled.
            * `1` - Backups enabled.
            * `0` - Backups not enabled.
          example: 1
          enum:
          - 0
          - 1
        bandwidth_limit:
          minimum: 0
          type: integer
          description: |-
            The account's bandwidth limit.
            * `0` - unlimited
            * A maximum amount of bandwidth, in bytes.
          example: 0
        cgi_enabled:
          type: integer
          description: |-
            Whether CGI is enabled.
            * `1` - Enabled.
            * `0` - Not enabled.
          example: 1
          enum:
          - 0
          - 1
        contact_email:
          type: string
          description: The account's contact email address.
          format: email
          example: user@example.com
        contact_email_2:
          type: string
          description: "The account's alternate contact email address, if one exists."
          format: email
          example: user2@example.com
        cpanel_root_directory:
          type: string
          description: The `root` directory.
          format: path
          example: /usr/local/cpanel
        created:
          type: integer
          description: "The account's creation date in [Unix time](http://en.wikipedia.org/wiki/Unix_time)\
            \ format."
          format: unix_timestamp
          example: 1432220941
        created_in_version:
          type: string
          description: The version of cPanel used during account creation.
          format: cPanel version
          example: 11.94.0.0
        database_owner:
          type: string
          description: |-
            The owner of the account's databases.
            * `root`
            * A reseller account's username.
            * The account's username.
          format: username
          example: root
        dead_domains:
          type: array
          description: The account's inactive domains.
          items:
            type: string
            format: domain
            example: example.example.com
        demo_mode:
          type: integer
          description: |-
            Whether demo mode is enabled.
            * `1` - Enabled.
            * `0` - Not enabled.
          example: 1
          enum:
          - 0
          - 1
        disk_block_limit:
          minimum: 0
          type: integer
          description: |-
            The number of disk blocks for the account.
            * `0` - unlimited
            * A maximum amount of disk blocks, in kilobytes.
          example: 100000000
        dkim_enabled:
          type: integer
          description: |-
            Whether DomainKeys Identified Mail (DKIM) is enabled.
            * `1` - Enabled.
            * `0` - Not enabled.
          example: 1
          enum:
          - 0
          - 1
        domain:
          type: string
          description: The account's main domain.
          format: domain
          example: example.com
        domains:
          type: array
          description: list of the account's domains and subdomains.
          items:
            type: string
            format: domain
            example: example.com
        feature:
          $ref: "#/components/schemas/inline_response_200_541_result_data_feature"
        feature_list:
          type: string
          description: "The account's [feature list](https://go.cpanel.net/whmdocs84FeatureManager)\
            \ name."
          example: feature_list
        gid:
          type: integer
          description: The account's group ID.
          example: 5678
        home:
          type: string
          description: The user's home directory.
          format: path
          example: /home/user
        home_directory_links:
          type: array
          description: Any symlinks to the cPanel account's home directory. An array
            of one or more home directory symlinks.
          items:
            example: symlink
        ip:
          type: string
          description: The account's IPv4 address.
          format: ipv4
          example: 192.0.2.0
        lang:
          type: string
          description: The account's language.
          example: english
        last_modified:
          type: integer
          description: |-
            The most recent modification time of the `/var/cpanel/users/user` file in [Unix time format](https://en.wikipedia.org/wiki/Unix_time).

            **Note:**

            `user` represents the cPanel user.
          format: unix_timestamp
          example: 1416586493
        legacy_backup_enabled:
          type: integer
          description: |-
            Whether legacy backups are enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        locale:
          type: string
          description: "The account's default locale, a two-letter [ISO-3166 code](http://www.iso.org/iso/country_codes.htm)."
          format: ISO-3166-1 (alpha-2)
          example: en
        mailbox_format:
          type: string
          description: |-
            The storage format that the account's mailboxes use.
            * `maildir`
            * `mbox`
          example: maildir
          enum:
          - maildir
          - mbox
        maximum_addon_domains:
          description: |-
            The account's maximum number of addon domains.
            * `unlimited`
            * An integer that represents a number of addon domains.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_databases:
          description: |-
            The account's maximum number of SQL databases.
            * `unlimited`
            * An integer that represents a number of SQL databases.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_defer_fail_percentage:
          description: |-
            The [percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam) that the account can send per hour before outgoing mail is rate-limited.
            * `unlimited`
            * An integer value.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_email_account_disk_quota:
          description: |-
            The maximum size, that the account can define when it creates an email account.
            * `unlimited`
            * An integer value, in Megabytes (MB).
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_emails_per_hour:
          description: |-
            The maximum number of emails that the account can send in one hour.
            * A positive integer.
            * `0` or `unlimited` - The account can send an unlimited number of emails.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_ftp_accounts:
          description: |-
            The account's maximum number of FTP accounts.
            * `unlimited`
            * An integer that represents a number of FTP accounts.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_mail_accounts:
          description: |-
            The maximum number of email accounts for the account.
            * `unlimited`
            * An integer that represents a number of email accounts.
          example: "0"
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_mailing_lists:
          description: |-
            The account's maximum number of mailing lists.
            * `unlimited`
            * An integer that represents a number of mailing lists.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_parked_domains:
          description: |-
            The account's maximum number of aliases.
            * `unlimited`
            * An integer that represents a number of aliases.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_passenger_apps:
          description: |-
            The account's maximum number of Ruby applications.
              * `unlimited`
              * An integer that represents a number of applications.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maximum_subdomains:
          description: |-
            The account's maximum number of subdomains.
            * `unlimited`
            * An integer that represents a number of subdomains.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        mxcheck:
          $ref: "#/components/schemas/inline_response_200_541_result_data_mxcheck"
        notify_account_authn_link:
          type: integer
          description: |-
            Whether the systems sends a notification when someone links the account to an external authentication account.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_account_authn_link_notification_disabled:
          type: integer
          description: |-
            Whether the systems sends a notification when someone disables notifications for external authentication account links.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_account_login:
          type: integer
          description: |-
            Whether the system sends a notification when someone logs in to the account.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_account_login_for_known_netblock:
          type: integer
          description: |-
            Whether the system sends a notification when a user on a known netblock logs in to the account.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_account_login_notification_disabled:
          type: integer
          description: |-
            Whether the system sends a notification when someone disables notifications for account logins.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_expiry:
          type: integer
          description: |-
            Whether the system sends a notification when an AutoSSL certificate expires.
            * `1` - Notifies.
            * `0` - Doesn't notify
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_expiry_coverage:
          type: integer
          description: |-
            Whether the system sends a notification when AutoSSL cannot renew a certificate because domains that fail Domain Control Validation (DCV) exist on the current certificate.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_coverage:
          type: integer
          description: |-
            Whether the system sends a notification when AutoSSL renews a certificate.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_coverage_reduced:
          type: integer
          description: |-
            Whether the system sends a notification when AutoSSL renews a certificate, but the new certificate lacks at least one domain that the previous certificate secured.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_uncovered_domains:
          type: integer
          description: |-
            Whether the system sends a notification when AutoSSL renews a certificate, but the new certificate lacks at least one domain that the previous certificate secured.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_bandwidth_limit:
          type: integer
          description: |-
            Whether the systems sends a notification when the account reaches its bandwidth quota.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_contact_address_change:
          type: integer
          description: |-
            Whether the systems sends a notification when someone changes the contact address for the account.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_contact_address_change_notification_disabled:
          type: integer
          description: |-
            Whether the systems sends a notification when someone disables the notification for contact address changes.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_disk_limit:
          type: integer
          description: |-
            Whether the systems sends a notification when the account reaches its disk usage limit.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_password_change:
          type: integer
          description: |-
            Whether the systems sends a notification when someone changes the account's password.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_password_change_notification_disabled:
          type: integer
          description: |-
            Whether the systems sends a notification when someone disables notifications for password changes.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_ssl_expiry:
          type: integer
          description: |-
            Whether the systems sends a notification when an SSL certificate on the account expires.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_twofactorauth_change:
          type: integer
          description: |-
            Whether the systems sends a notification when the account's Two-Factor Authentication (2FA) credentials change.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        notify_twofactorauth_change_notification_disabled:
          type: integer
          description: |-
            Whether the systems sends a notification when someone disables notifications for 2FA.
            * `1` - Notifies.
            * `0` - Doesn't notify.
          example: 1
          enum:
          - 0
          - 1
        owner:
          type: string
          description: |-
            The account's owner.
            * `root`
            * A reseller account's username.
            * The account's username.
          format: username
          example: root
        package_extensions:
          type: array
          description: The account's package extensions.
          example:
          - ext1
          - ext2
          - ext3
          items:
            type: string
        plan:
          type: string
          description: The account's hosting package.
          example: packagename
        pushbullet_access_token:
          type: string
          description: The account's Pushbullet access token.
          example: "1234567890"
        shell:
          type: string
          description: The account's shell.
          format: path
          example: /bin/bash
        spf_enabled:
          type: integer
          description: |-
            Whether Sender Policy Framework (SPF) is enabled.
            * `1` - Enabled.
            * `0` - Not enabled.
          example: 1
          enum:
          - 0
          - 1
        ssl_default_key_type:
          type: string
          description: |-
            The type of key to generate for the userâs TLS certificates and CSRs.

            * `system` â The systemâs `ssl_default_key_type` value in the [`cpanel.config` file](https://go.cpanel.net/ThecpanelconfigFile).
            * `rsa-2048` â 2,048-bit RSA.
            * `rsa-4096` â 4,096-bit RSA.
            * `ecdsa-prime256v1` â ECDSA prime256v1 (âP-256â).
            * `ecdsa-secp384r1` â ECDSA secp384r1 (âP-384â).
          example: rsa-2048
          enum:
          - system
          - rsa-2048
          - rsa-4096
          - ecdsa-prime256v1
          - ecdsa-secp384r1
        theme:
          type: string
          description: The account's current theme.
          example: jupiter
        uid:
          type: integer
          description: The account's user ID on the system.
          example: 1234
        user:
          type: string
          description: An existing account's username.
          example: username
        utf8_mailbox:
          type: integer
          description: |-
            Whether UTF-8-encoded mailbox names are enabled for the cPanel account.
            * `1` - Enabled.
            * `0` - Not enabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_541_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_541_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1`  Success
            * `0`  Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_542_result_data_clone_urls:
      type: object
      properties:
        read_only:
          type: array
          description: |-
            A list of clone URLs with read-only permissions. The function
            returns a blank array if the account does **not** include the
            *Shell Access* setting.

            **Important:**

            If the server uses a [nonstandard SSH port](https://go.cpanel.net/firewall),
            the system returns a clone URL that includes the port number.
          items:
            type: string
            format: url
            example: https://user@example.com/home/user/example
        read_write:
          type: array
          description: |-
            A list of of clone URLs with read-write permissions. The function
            returns a blank array if the account does **not** include the
            *Shell Access* setting.

            **Important:**

            If the server uses a [nonstandard SSH port](https://go.cpanel.net/firewall),
            the system returns a clone URL that includes the port number.
          items:
            type: string
            example: ssh://user@example.com/home/user/example
      description: An object containing URLs to use to clone the repository.
    inline_response_200_542_result_data_source_repository:
      type: object
      properties:
        remote_name:
          type: string
          description: The source repository's name.
          example: remote
        url:
          type: string
          description: The source repository's clone URL.
          format: url
          example: http://user@domain.com/home/user/domain
      description: |-
        A object containing information about a cloned repository's source
        repository.

        **Note:**

        The function **only** returns this object if it will clone a
        repository.
    inline_response_200_542_result_data_args:
      type: object
      properties:
        log_file:
          type: string
          description: |-
            The absolute path to the process's log file.

            **Note:**

            The function **only** returns this value if the process
            generated a log file.
          example: /home/username/.cpanel/logs/vc_1234567890.123456_git_deploy.log
        repository_root:
          type: string
          description: The absolute path to the repository's directory within the
            user's `home` directory.
          format: path
          example: /home/user/example
      description: |-
        A list of arguments for the
        [Task Queue](https://go.cpanel.net/whmdocsTaskQueueMonitor)
        system's process.
    inline_response_200_542_result_data_tasks:
      type: object
      properties:
        action:
          type: string
          description: |-
            The task's action.

            * `create`

            **Note:**

            `create` is the only possible value.
          example: create
          enum:
          - create
        args:
          $ref: "#/components/schemas/inline_response_200_542_result_data_args"
        id:
          type: string
          description: |-
            The [Task Queue](https://go.cpanel.net/whmdocsTaskQueueMonitor)
            system's task ID number.
          example: 00000000/5a9ec8dd4c345d
        sse_url:
          type: string
          description: The SSE interface to track the progress of the process.
          example: /sse/UserTasks/B3A27B96-51F7-11E8-92E3-CC90C4F823F0
        subsystem:
          type: string
          description: |-
            The [Task Queue](https://go.cpanel.net/whmdocsTaskQueueMonitor)
            subsystem that will handle the task.

            * `VersionControl`

            **Note:**

            `VersionControl` is the only possible value.
          example: VersionControl
          enum:
          - VersionControl
    inline_response_200_542_result_data:
      type: object
      properties:
        available_branches:
          type: array
          description: "An list of available branches for the cloned or existing repository,\
            \ if any exist."
          example:
          - master
          - olive
          items:
            type: string
        branch:
          type: string
          description: |-
            The repository's current branch.

            * `null` â The system has **not** finished the clone process for
            the repository, or no local branches exist.
          nullable: true
          example: master
        clone_urls:
          $ref: "#/components/schemas/inline_response_200_542_result_data_clone_urls"
        last_update:
          type: string
          description: |-
            Information about the most-recent (HEAD) commit for the current branch.

            **Note:**

            * The system may require a large amount of time to clone large
            repositories. Until this process finishes, HEAD information is unavailable.
            * `null` is the only possible value.
        name:
          type: string
          description: The repository's display name.
          example: example
        repository_root:
          type: string
          description: The absolute path of the directory that contains the repository
            in the user's `home` directory.
          format: path
          example: /home/user/public_html/example
        source_repository:
          $ref: "#/components/schemas/inline_response_200_542_result_data_source_repository"
        tasks:
          type: array
          description: |-
            An array of objects containing information about the
            [Task Queue](https://go.cpanel.net/whmdocsTaskQueueMonitor)
            system's process that will clone the repository.

            **Note:**

            The function **only** returns this value if it will clone a
            repository.
          items:
            $ref: "#/components/schemas/inline_response_200_542_result_data_tasks"
        type:
          type: string
          description: |-
            The repository type.

            * `git` âÂ A Git repostiory.

            **Note:**

            `git` is the only possible value.
          example: git
    inline_response_200_542_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_542_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_544_result_clone_urls:
      type: object
      properties:
        read_only:
          type: array
          description: |-
            A list of clone URLs with read-only permissions.

            This function returns a blank array if the account does
            not include the *Shell Access* setting.

            **Important:**

            If the server uses a nonstandard SSH port, the system returns a
            clone URL that includes the port number.
          items:
            type: string
        read_write:
          type: array
          description: |-
            A list of clone URLs with read-write permissions.

            This function returns a blank array if the account does
            not include the *Shell Access* setting.

            **Important:**

            If the server uses a nonstandard SSH port, the system returns a
            clone URL that includes the port number.
          items:
            type: string
      description: An array of objects containing URLS to use to clone the repository.
    inline_response_200_544_result_last_deployment_repository_state:
      type: object
      properties:
        author:
          type: string
          description: The author's name and email address for the commit that the
            system most recently deployed.
        date:
          type: integer
          description: The timestamp for the commit that the system most recently
            deployed.
          format: unix_timestamp
        identifier:
          type: string
          description: The identifier (SHA-1 value) for the commit that the system
            most recently deployed.
        message:
          type: string
          description: The commit message for the commit that the system most recently
            deployed.
      description: A object containing information about the state of the repository
        at the time of the most recent deployment.
    inline_response_200_544_result_last_deployment:
      type: object
      properties:
        deployment_date:
          type: integer
          description: The timestamp for the most-recent deployment.
          format: unix_timestamp
        repository_state:
          $ref: "#/components/schemas/inline_response_200_544_result_last_deployment_repository_state"
      description: |-
        An object containing information about the commit that the system
        most recently deployed.

        **Note:**

        The system **only** returns this object if deployment information
        exists.
    inline_response_200_544_result_last_update:
      type: object
      properties:
        author:
          type: string
          description: The most-recent commit's author's name and email address.
          example: Jane Doe <jane.doe@example.com>
        date:
          type: integer
          description: The timestamp for the most-recent commit.
          format: unix_timestamp
          example: 1569844800
        identifier:
          type: string
          description: The identifier (SHA-1 value) for the most-recent commit.
          example: 2fd4e1c67a2d28fced849ee1bb76e7391b93eb12
        message:
          type: string
          description: The commit message.
          example: I'm committing some particularly cromulent code.
      description: "An object containing information about the most-recent (HEAD)\
        \ commit\nfor the current branch. \n\n**Note:**\n\nThis object's information\
        \ resembles the output of the `git log -1`\ncommand.\n\n**Important:**\n\n\
        * If the repository does not include any commits, the function returns\na\
        \ `null` value instead of an object.\n* The system may require a large amount\
        \ of time to clone larger\nrepositories. Until this process finishes, HEAD\
        \ information is\nunavailable."
      nullable: true
    inline_response_200_544_result_source_repository:
      type: object
      properties:
        remote_name:
          type: string
          description: The source repository's name.
          example: origin
        url:
          type: string
          description: The source repository's clone URL.
          example: ssh://clone.domain.com/cloneme
      description: |-
        An object containing information about the source repository.

        **Note:**

        The function **only** returns this object if you cloned a source
        repository.
    inline_response_200_544_result_args:
      type: object
      properties:
        log_file:
          type: string
          description: |-
            The absolute path to the process's log file.

            **Note:**

            The function only returns this value if the process generated
            a log file.
          format: path
          example: /home/username/.cpanel/logs/vc_1234567890.123456_git_deploy.log
        repository_root:
          type: string
          description: The absolute path to the repository's directory in the user's
            `home` directory.
          example: /home/user/example
      description: A list of arguments for the Task Queue system's process.
    inline_response_200_544_result_tasks:
      type: object
      properties:
        action:
          type: string
          description: |-
            The task's action.

            * `create` â Create the repository.
            * `deploy` â Deploy the repository.
          enum:
          - create
          - deploy
        args:
          $ref: "#/components/schemas/inline_response_200_544_result_args"
        id:
          type: string
          description: The Task Queue system's task ID number.
          example: 00000000/5a9ec8dd4c345d
        sse_url:
          type: string
          description: The Secure Server Events (SSE) interface URL to track the progress
            of the process.
          example: /sse/UserTasks/B3A27B96-51F7-11E8-92E3-CC90C4F823F0
        subsystem:
          type: string
          description: |-
            The Task Queue subsystem that will handle the task.

            * `VersionControl` is the only possible value.
          example: VersionControl
          enum:
          - VersionControl
    inline_response_200_544_result_data:
      type: object
      properties:
        available_branches:
          type: array
          description: |-
            A list of available local and remote branches for the cloned
            or existing repository.

            * An empty array âÂ No branches exist.
            * `null` â The repository is a bare repository.
          nullable: true
          items:
            type: string
        branch:
          type: string
          description: |-
            The repository's current branch.

            * `null` â The system has not finished the clone process for the
            repository, no local branches exist, or the repository is a bare
            repository.
          nullable: true
        clone_urls:
          $ref: "#/components/schemas/inline_response_200_544_result_clone_urls"
        deployable:
          type: integer
          description: |-
            Whether the system could deploy the repository.

            * `1` âÂ Can deploy.
            * `0` âÂ Cannot deploy.
          enum:
          - 1
          - 0
        last_deployment:
          $ref: "#/components/schemas/inline_response_200_544_result_last_deployment"
        last_update:
          $ref: "#/components/schemas/inline_response_200_544_result_last_update"
        name:
          type: string
          description: The repository's display name.
          example: example
        repository_root:
          type: string
          description: The absolute directory path in the user's `home` directory
            containing the repository.
          format: path
          example: /home/user/public_html/example
        source_repository:
          $ref: "#/components/schemas/inline_response_200_544_result_source_repository"
        tasks:
          type: array
          description: |-
            An array of objects containing information about the
            [Task Queue](https://go.cpanel.net/whmdocsTaskQueueMonitor)
            system's process that will clone the repository.

            **Note:**

            The function only returns this value if the clone process is
            **not** finished.
          items:
            $ref: "#/components/schemas/inline_response_200_544_result_tasks"
        type:
          type: string
          description: |-
            The repository type.

            * `git` is the only possible value.
          example: git
          enum:
          - git
    inline_response_200_544_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing repository data.
          example:
          - available_branches:
            - master
            branch: master
            clone_urls:
              read_only:
              - https://user@example.com/home/user/example
              read_write:
              - ssh://user@example.com/home/user/example
            deployable: 1
            last_deployment:
              deployment_date: 1598774400
              repository_state:
                author: User Name <user.name@example.com>
                date: 1598774400
                identifier: 2fd4e1c67a2d28fced849ee1bb76e7391b93eb12
                message: I'm committing some particularly cromulent code.
            last_update:
              author: Jane Doe <jane.doe@example.com>
              date: 1598774400
              identifier: 2fd4e1c67a2d28fced849ee1bb76e7391b93eb12
              message: I'm committing some particularly cromulent code.
            name: example
            repository_root: /home/user/example
            tasks:
            - action: create
              args:
                log_file: /home/user/.cpanel/logs/vc_1526305129.123456_git_create.log
                repository_root: /home/user/example
              id: 00000000/5a9ec8dd4c345d
              sse_url: /sse/UserTasks/B3A27B96-51F7-11E8-92E3-CC90C4F823F0
              subsystem: VersionControl
            type: git
          - available_branches:
            - master
            branch: master
            deployable: 1
            last_update:
              author: June Due <june.due@example2.com>
              clone_urls:
                read_only:
                - https://user@example.com/home/user/example
                read_write:
                - ssh://user@example.com/home/user/example
              date: 1599730200
              identifier: 4ee0b73ddf78213c41fcc185acfab68ced99046d
              last_deployment:
                deployment_date: 1599730200
                repository_state:
                  author: User Name <user.name@example.com>
                  date: 1599730200
                  identifier: 2fd4e1c67a2d28fced849ee1bb76e7391b93eb12
                  message: I'm committing some particularly cromulent code.
              message: "My code makes more sense, actually."
              tasks:
              - action: create
                args:
                  log_file: /home/user/.cpanel/logs/vc_1526305129.123456_git_create.log
                  repository_root: /home/user/example
                id: 00000000/5a9ec8dd4c345d
                sse_url: /sse/UserTasks/B3A27B96-51F7-11E8-92E3-CC90C4F823F0
                subsystem: VersionControl
            name: example2
            repository_root: /home/user/example2
            type: git
          items:
            $ref: "#/components/schemas/inline_response_200_544_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_545_result_data_clone_urls:
      type: object
      properties:
        read_only:
          type: array
          description: |-
            A list of clone URLs with read-only permissions.

            This function returns an empty list if the account does
            **not** include the *Shell Access* setting.

            **Important:**

            If the server uses a nonstandard SSH port, the system returns a
            clone URL that includes the port number.
          items:
            type: string
            format: url
        read_write:
          type: array
          description: |-
            A list of clone URLs with read-write permissions.

            This function returns an empty list if the account does
            **not** include the *Shell Access* setting.

            **Important:**

            If the server uses a nonstandard SSH port, the system returns a
            clone URL that includes the port number.
          items:
            type: string
      description: "An object containing the URLs to use to clone the repository.\n\
        \nThe function returns an empty object if the account does **not**\ninclude\
        \ the *Shell Access* setting.\n\n**Important:**\n\nIf the server uses a nonstandard\
        \ SSH port, the system returns a\nclone URL that includes the port number. "
    inline_response_200_545_result_data_last_deployment:
      type: object
      properties:
        deployment_date:
          type: integer
          description: The timestamp for the most recent deployment.
          format: unix_timestamp
        repository_state:
          $ref: "#/components/schemas/inline_response_200_544_result_last_deployment_repository_state"
      description: |-
        An object containing information about the commit that the system
        most recently deployed.

        **Note:**

        If no deployment information exists, the function returns a `null` value.
      nullable: true
    inline_response_200_545_result_data_last_update:
      type: object
      properties:
        author:
          type: string
          description: The most recent commit's author name and email address.
        date:
          type: integer
          description: The timestamp for the most recent commit.
          format: unix_timestamp
        identifier:
          type: string
          description: The identifier (SHA-1 value) for the most recent commit.
        message:
          type: string
          description: The commit message.
      description: |-
        An object containing information about the most recent (HEAD) commit for
        the current branch.

        **Note:**

        This object's information resembles the output of the `git log -1`
        command.

        **Important:**

        * If the repository does **not** include any commits, the function
        returns a `null` value instead of an object.
        * The system may require a large amount of time to clone larger repositories.
        Until this process finishes, HEAD information is unavailable.
      nullable: true
    inline_response_200_545_result_data_source_repository:
      type: object
      properties:
        remote_name:
          type: string
          description: The source repository's name.
        url:
          type: string
          description: The source repository's clone URL.
      description: |-
        An object containing information about the source repository.

        **Note:**

        The function **only** returns this object if you cloned a source
        repository.
    inline_response_200_545_result_data_args:
      type: object
      properties:
        log_file:
          type: string
          description: |-
            The absolute path to the process log file in the user's
            `home` directory.

            **Note:**

            The function **only** returns this value if the process
            generated a log file.
        repository_root:
          type: string
          description: The repository's absolute directory path in the user's `home`
            directory.
      description: An object containing arguments for the Task Queue system's process.
    inline_response_200_545_result_data_tasks:
      type: object
      properties:
        action:
          type: string
          description: |-
            The task's action.

            * `create` â Create the repository.
            * `deploy` â Deploy the repository.
          enum:
          - create
          - deploy
        args:
          $ref: "#/components/schemas/inline_response_200_545_result_data_args"
        id:
          type: string
          description: The Task Queue system's task ID number.
        subsystem:
          type: string
          description: |-
            The Task Queue subsystem that will handle the task.

            * `VersionControl`

            **Note:**

            * `VersionControl` is the only possible value.
          enum:
          - VersionControl
    inline_response_200_545_result_data:
      type: object
      properties:
        available_branches:
          type: array
          description: |-
            A list of local and remote branches available for the cloned or
            existing repository.

            * An empty array, if no branches exist.
            * `null` â The repository is a bare repository.
          items:
            type: string
            nullable: true
        branch:
          type: string
          description: |-
            The repository's current branch.

            * `null` â The system has not finished the clone process for the
            repository, no local branches exist, or the repository is a bare
            repository.
          nullable: true
        clone_urls:
          $ref: "#/components/schemas/inline_response_200_545_result_data_clone_urls"
        deployable:
          type: integer
          description: |-
            Whether the system could deploy the repository.

            * `1` âÂ Can deploy.
            * `0` âÂ Cannot deploy.
          enum:
          - 1
          - 0
        last_deployment:
          $ref: "#/components/schemas/inline_response_200_545_result_data_last_deployment"
        last_update:
          $ref: "#/components/schemas/inline_response_200_545_result_data_last_update"
        name:
          type: string
          description: The repository's display name.
        repository_root:
          type: string
          description: The directory path that exists in the user's `home` directory
            containing the repository.
        source_repository:
          $ref: "#/components/schemas/inline_response_200_545_result_data_source_repository"
        tasks:
          type: array
          description: |-
            An array of objects containing information about the
            [Task Queue](https://go.cpanel.net/whmdocsTaskQueueMonitor)
            system's process that will clone the repository.

            **Note:**

            The function **only** returns this value if the clone process is
            not finished.
          items:
            $ref: "#/components/schemas/inline_response_200_545_result_data_tasks"
        type:
          type: string
          description: |-
            The repository type.

            * `git` â A [Git](https://git-scm.com/) repository.

            **Note:**

            * `git` is the only possible value.
          enum:
          - git
      example: "{\"available_branches\":[\"master\"],\"branch\":\"master\",\"clone_urls\"\
        :{\"read_only\":[\"https://user@example.com/home/user/example\"],\"read_write\"\
        :[\"ssh://user@example.com/home/user/example\"]},\"deployable\":1,\"last_deployment\"\
        :{\"deployment_date\":1569844800,\"repository_state\":{\"author\":\"User Name\
        \ <user.name@example.com>\",\"date\":1569844800,\"identifier\":\"2fd4e1c67a2d28fced849ee1bb76e7391b93eb121\"\
        ,\"message\":\"I'm committing some particularly cromulent code.\"}},\"last_update\"\
        :{\"author\":\"Jane Doe <jane.doe@example.com>\",\"date\":1569844800,\"identifier\"\
        :\"2fd4e1c67a2d28fced849ee1bb76e7391b93eb12\",\"message\":\"I'm committing\
        \ some particularly cromulent code.\"},\"name\":\"example\",\"repository_root\"\
        :\"/home/user/example\",\"tasks\":[{\"action\":\"create\",\"args\":{\"repository_root\"\
        :\"/home/user/example\"},\"id\":\"00000000/5a9ec8dd4c345d\",\"subsystem\"\
        :\"VersionControl\"}],\"type\":\"git\"}"
    inline_response_200_545_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_545_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_546_result_data_timestamps:
      type: object
      properties:
        queued:
          type: string
          description: The time at which the deployment process. entered the task
            queue.
          example: "1525289545.16293"
      description: A hash of timestamps for the deployment process.
      format: object
    inline_response_200_546_result_data:
      type: object
      properties:
        deploy_id:
          type: string
          description: The deployment ID number.
          example: "12"
        log_path:
          type: string
          description: "The absolute path to the task's log file vc_TIMESTAMP_git_deploy.log,\
            \ where TIMESTAMP represents the time in Unix epoch time."
          format: path
          example: /home/user/.cpanel/logs/vc_1525289545.785367_git_deploy.log
        repository_root:
          type: string
          description: The repository's directory.
          format: path
          example: /home/username/example
        sse_url:
          type: string
          description: The SSE interface to track the progress of the deployment process.
          format: url-path
          example: /sse/UserTasks/B3A27B96-51F7-11E8-92E3-CC90C4F823F0
        task_id:
          type: string
          description: The Task Queue system's task ID number.
          example: 00000000/5a9ec8dd4c345d
        timestamps:
          $ref: "#/components/schemas/inline_response_200_546_result_data_timestamps"
    inline_response_200_546_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_546_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_548_result_repository_state:
      type: object
      properties:
        author:
          type: string
          description: The most-recent commit's author's name and email address as
            they exist in the user's Git configuration files.
          example: Jane Doe <jane.doe@example.com>
        branch:
          type: string
          description: The repository's current branch.
          example: master
        date:
          type: integer
          description: "The timestamp for the most-recent commit, in Unix time format."
          format: unix_timestamp
          example: 1410277881
        identifier:
          type: string
          description: The identifier (SHA-1 value) for the most-recent commit.
          example: 2fd4e1c67a2d28fced849ee1bb76e7391b93eb12
        message:
          type: string
          description: The commit message.
          example: This is a commit.
      description: An object containing information about the repository's state at
        the time of deployment.
    inline_response_200_548_result_timestamps:
      type: object
      properties:
        active:
          type: string
          description: "The time at which the system started the deployment process,\
            \ in Unix time format."
          example: "1525289448.83553"
        canceled:
          type: string
          description: |-
            The time at which the system cancelled the deployment process, in Unix time format.

            **Note:**

            * The function only returns this value if the system cancelled the deployment process.
            * The system logs messages for this function in the `~/.cpanel/logs/vc_TIMESTAMP_git_deploy.log` file, where `TIMESTAMP` represents the Unix timestamp.
          example: "1525289448.83553"
        failed:
          type: string
          description: |-
            The time at which the deployment process failed, in Unix time format.

            **Note:**

            * The function only returns this value if the deployment process failed.
            * The system logs messages for this function in the `~/.cpanel/logs/vc_TIMESTAMP_git_deploy.log` file, where `TIMESTAMP` represents the Unix timestamp.
          example: "1525289448.83553"
        queued:
          type: string
          description: "The time at which the deployment process entered the task\
            \ queue, in Unix time format."
          example: "1525289448.83553"
        succeeded:
          type: string
          description: |-
            The time at which the deployment process finished successfully, in Unix time format.

            **Note:**

             The function only returns this value if the deployment process succeeded.
          example: "1525289448.83553"
      description: An object containing timestamps for the deployment process.
    inline_response_200_548_result_data:
      type: object
      properties:
        deploy_id:
          type: integer
          description: The deployment ID number.
          example: 13
        log_path:
          type: string
          description: The absolute path to the task's log file.
          format: path
          example: /home/user/.cpanel/logs/vc_1525289448.759720_git_deploy.log
        repository_root:
          type: string
          description: The aboslute path to the cPanel-managed repository directory.
          format: path
          example: /home/username/example
        repository_state:
          $ref: "#/components/schemas/inline_response_200_548_result_repository_state"
        sse_url:
          type: string
          description: The SSE interface to track the progress of the deployment process.
          format: url-path
          example: /sse/UserTasks/B3A27B96-51F7-11E8-92E3-CC90C4F823F0
        task_id:
          type: string
          description: "The [Task Queue](https://go.cpanel.net/whmdocsTaskQueueMonitor)\
            \ system's task ID number."
          example: 00000000/5aea11e886a5d8
        timestamps:
          $ref: "#/components/schemas/inline_response_200_548_result_timestamps"
    inline_response_200_548_result:
      type: object
      properties:
        data:
          type: array
          description: An array of objects containing deployment task data.
          items:
            $ref: "#/components/schemas/inline_response_200_548_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_553_result_data:
      type: object
      properties:
        domain:
          type: string
          description: The domain name.
          format: domain
          example: example.com
        proxy_subdomains:
          type: array
          description: |-
            An array of service subdomains (proxy subdomains) listed for the domain.

            **Note:**

            This only returns values when `vhost_is_ssl` equals `1`.
          nullable: true
          example:
          - cpanel
          - webmail
          - autodiscover
          - whm
          - webdisk
          items:
            type: string
        vhost_is_ssl:
          type: integer
          description: |-
            Whether an SSL certificate secures the domain.
            * `1` - Secured.
            * `0` - **Not** secured.
          example: 1
          enum:
          - 0
          - 1
        vhost_name:
          type: string
          description: The name of the virtual host.
          format: domain
          example: hostname.example.com
    inline_response_200_553_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_553_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_554_result_data:
      type: object
      properties:
        domain:
          type: string
          description: A valid domain name on the virtual host.
          format: domain
          example: example.com
        is_proxy:
          type: integer
          description: |-
            Whether the system automatically created the service subdomain or a user manually created the domain.
            * `1` - The system automatically created the service subdomain.
            * `0` - A user manually created the domain.

            **Note:**

            If a user manually creates a subdomain that matches a preassigned subdomain (for example, cpanel or whm), then the function returns `0`.
          example: 1
          enum:
          - 0
          - 1
        vhost_name:
          type: string
          description: The name of the virtual host or website.
          format: domain
          example: hostname.example.com
    inline_response_200_554_result:
      type: object
      properties:
        data:
          type: array
          properties: {}
          description: An array of objects containing data for a domain.
          items:
            $ref: "#/components/schemas/inline_response_200_554_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_555_result_data:
      type: object
      properties:
        displayname:
          type: string
          description: "The webmail client name, as it will display in the interface."
          example: Roundcube
        icon:
          type: string
          description: "An icon file's path, relative to the `/usr/local/cpanel/base/frontend`\
            \ directory."
          example: /webmail/jupiter/images/roundcube_logo.png
        id:
          type: string
          description: The webmail client's ID.
          example: roundcube
        url:
          type: string
          description: The webmail client's URL.
          format: url-path
          example: /cpsess##########/3rdparty/roundcube/index.php
    inline_response_200_555_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_555_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_556_result_data_sites:
      type: object
      properties:
        id:
          type: string
          description: |-
            The WordPress site's unique ID.

            **Note:**

            `null` is the only possible value. We have not implemented this return.
          nullable: true
          example: "null"
        site:
          type: string
          description: The WordPress site's URL. The URL does not contain a protocol
            prefix.
          example: example.com
        type:
          type: string
          description: |-
            The type of process that is active.

            **Note:**

            `backup` is the only possible value.
          example: backup
    inline_response_200_556_result_data:
      type: object
      properties:
        any_running:
          type: integer
          description: |-
            Whether any backups are in progess.
            * `1` - Backups are in progress.
            * `0` - No backups are in progress.
          example: 0
          enum:
          - 0
          - 1
        sites:
          type: array
          description: An array that contains each site with a backup in progress.
            The function only populates this array if it is actively processing a
            backup.
          items:
            $ref: "#/components/schemas/inline_response_200_556_result_data_sites"
        sse_url:
          type: string
          description: "The SSE service URL that the system uses to monitor the backup\
            \ progress. The SSE service URL does not contain a protocol, hostname,\
            \ or port."
          example: /sse/WordPressBackup
    inline_response_200_556_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_556_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * 1 - Success.
            * 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_557_result_data:
      type: object
      properties:
        ok:
          type: integer
          description: |-
            Whether the system cancelled an active backup.
            * `1` â Backup cancelled.
            * `0` â Could not cancel the backup or no active backup in progress.
          example: 0
          enum:
          - 0
          - 1
        site:
          type: string
          description: The site's URL without the protocol prefix.
          oneOf:
          - format: domain
            example: example.com
          - format: url-path
            example: example.com/wordpress
    inline_response_200_557_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_557_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_558_result_data:
      type: object
      properties:
        ok:
          type: integer
          description: |-
            Whether the system released the system resources.
            * `1` - Resources released.
            * `0` - Backup in progress.
          example: 1
          enum:
          - 0
          - 1
        site:
          type: string
          description: The site's URL **without** the protocol prefix.
          example: example.com
      nullable: true
    inline_response_200_558_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_558_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_559_result_data_available:
      type: object
      properties:
        date:
          type: integer
          description: The date and time the system created the backup.
          format: unix_timestamp
          example: 1539267197000
        file:
          type: string
          description: The backup's file name with the `tar.zip` extension.
          example: example.com__2018-10-10T10:53:31-0500.tar.gz
        path:
          type: string
          description: The absolute path to the backup file.
          example: /home/example/wordpress-backups/example.com__2018-10-10T10:53:31-0500.tar.gz
        site:
          type: string
          description: The site's URL **without** the protocol prefix.
          example: example.com
    inline_response_200_559_result_data:
      type: object
      properties:
        available:
          type: array
          description: An array of objects containing a list of the WordPress site's
            backups.
          nullable: true
          items:
            $ref: "#/components/schemas/inline_response_200_559_result_data_available"
        dir:
          type: string
          description: The absolute path to the backup directory.
          example: /home/example/wordpress-backups
    inline_response_200_559_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_559_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_560_result_data:
      type: object
      properties:
        action_id:
          type: string
          description: The unique ID of the backup process.
          nullable: true
          example: example.com__2018-10-10T10:53:31-0500
        is_running:
          type: integer
          description: |-
            Whether a backup is active.
            * `1` - Backup in progress.
            * `0` - No backup in progress.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_560_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_560_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_561_result_data:
      type: object
      properties:
        backup_id:
          type: string
          description: The unique ID of the backup process.
          example: example.com__2018-10-10T10:53:31-0500
        site:
          type: string
          description: The WordPress site's URL without the protocol prefix.
          oneOf:
          - format: domain
            example: example.com
          - format: url-path
            example: example.com/wordpress
        sse_url:
          type: string
          description: "The SSE path **without** the protocol, hostname, or port that\
            \ the system uses to monitor the backup progress."
          format: url-path
          example: /sse/WordPressBackup
    inline_response_200_561_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_561_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_562_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the system cancelled the scan.

            * `1` - Cancelled.
            * `0` - **Not** cancelled.
          example: 0
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_565_result_data_after:
      type: object
      properties:
        addon_config:
          type: string
          description: The WordPress instance's configuration file location.
          format: path
          example: /home/example/.cpaddons/cPanel::Blogs::WordPressX.0.yaml
        addon_name:
          type: string
          description: |-
            The converted instance's cPAddon name.

            **Note:**

            `cPanel::Blogs::WordPressX` is the only possible value.
          example: cPanel::Blogs::WordPressX
          enum:
          - cPanel::Blogs::WordPressX
        addon_type:
          type: string
          description: |-
            The converted instance's cPAddon type.

            **Note:**

            `modern` is the only possible value.
          example: modern
          enum:
          - modern
        admin_url:
          type: string
          description: The converted instance's administrator login URL.
          format: url-path
          example: example.com/wordpress-41/wp-login.php
        admin_username:
          type: string
          description: The instance's administrator username.
          example: wpadmin
        available_version:
          type: string
          description: The latest WordPress version.
          example: 4.9.1
        current_version:
          type: string
          description: The WordPress instance's installed version.
          example: 4.9.1
        db_name:
          type: string
          description: The converted instance's database name.
          example: example_wp1
        db_prefix:
          type: string
          description: The converted instance's database prefix.
          example: example
        db_server:
          type: string
          description: The converted instance's database server network path.
          example: localhost
        db_type:
          type: string
          description: The converted instance's database type.
          example: mysql
        db_username:
          type: string
          description: The converted instance's database username.
          example: example_wp1
        domain:
          type: string
          description: The converted instance's domain name.
          format: domain
          example: example.com
        full_path:
          type: string
          description: The instance's full installation path.
          format: path
          example: /home/example/public_html/wordpress-41
        homedir:
          type: string
          description: The cPanel account's home directory.
          format: path
          example: /home/example
        id:
          type: string
          description: The converted instance's unique ID.
          example: cPanel__Blogs__WordPress.1.1509732223
        initial_install_version:
          type: string
          description: The instance's original installation version.
          example: "4.1"
        migrated_from:
          type: string
          description: The instance's original installation cPAddon name.
          example: cPanel::Blogs::WordPress
        migrated_on:
          type: integer
          description: The time the system converted the instance.
          format: unix_timestamp
          example: 1513965986
        rel_path:
          type: string
          description: The relative file path to the converted instance's document
            root.
          format: path
          example: wordpress-41
        site_url:
          type: string
          description: The converted instance's URL.
          format: url-path
          example: example.com/wordpress-41
      description: An object that contains the instance's information after conversion.
    inline_response_200_565_result_data_before:
      type: object
      properties:
        addon_config:
          type: string
          description: The WordPress instance's configuration file location.
          format: path
          example: /home/example/.cpaddons/cPanel::Blogs::WordPressX.0.yaml
        addon_name:
          type: string
          description: The instance's cPAddon name.
          example: cPanel::Blogs::WordPress
        addon_type:
          type: string
          description: |-
            The instance's cPAddon type.

            **Note:**

            `legacy` is this only possible value.
          example: legacy
          enum:
          - legacy
        admin_url:
          type: string
          description: The instance's administrator login URL.
          format: url-path
          example: example.com/wordpress-41/wp-login.php
        admin_username:
          type: string
          description: The instance's administrator username.
          example: wpadmin
        available_version:
          type: string
          description: The latest WordPress version.
          example: 4.9.1
        current_version:
          type: string
          description: The WordPress instance's installed version.
          example: 4.9.1
        db_name:
          type: string
          description: The instance's database name.
          example: example_wp1
        db_prefix:
          type: string
          description: The instance's database prefix.
          example: example
        db_server:
          type: string
          description: The instance's database server network path.
          example: localhost
        db_type:
          type: string
          description: The instance's database type.
          example: mysql
        db_username:
          type: string
          description: The instance's database username.
          example: example_wp1
        domain:
          type: string
          description: The instance's domain name.
          format: domain
          example: example.com
        full_path:
          type: string
          description: The instance's full installation path.
          format: path
          example: /home/example/public_html/wordpress-41
        homedir:
          type: string
          description: The cPanel account's home directory.
          format: path
          example: /home/example
        id:
          type: string
          description: The instance's unique ID.
          example: cPanel__Blogs__WordPress.1.1509732223
        initial_install_version:
          type: string
          description: The instance's original installation version.
          example: "4.1"
        rel_path:
          type: string
          description: The relative file path to the instance's document root.
          format: path
          example: wordpress-41
        site_url:
          type: string
          description: The instance's URL.
          format: url-path
          example: example.com/wordpress-41
      description: A object that contains the instance's information before conversion.
    inline_response_200_565_result_data:
      type: object
      properties:
        after:
          $ref: "#/components/schemas/inline_response_200_565_result_data_after"
        before:
          $ref: "#/components/schemas/inline_response_200_565_result_data_before"
    inline_response_200_565_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_565_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_566_result_data:
      type: object
      properties:
        version:
          type: string
          description: The WordPress Manager pluginâs version.
          example: 1.0.1-0
    inline_response_200_566_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_566_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_567_result_data_admins:
      type: object
      properties:
        ID:
          minimum: 1
          type: integer
          description: The user's automatically generated identifier.
          example: 1
        display_name:
          type: string
          description: The user's display name.
          example: admin
        user_email:
          type: string
          description: The user's email address.
          format: email
          example: admin@example.com
        user_login:
          type: string
          description: The user's login name.
          example: admin
        user_nicename:
          type: string
          description: "The user's simplified username, which you can use as an HTML\
            \ ID or similar."
          example: admin
        user_status:
          type: integer
          description: |-
            The user's verified status.
            * `1` â Verified.
            * `0` â Unverified.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_567_result_data:
      type: object
      properties:
        addon_config:
          type: string
          description: The WordPress instance's configureation absolute file path
            location.
          format: path
          example: /home/example/.cpaddons/cPanel::Blogs::WordPressX.0.yaml
        addon_name:
          type: string
          description: |-
            The WordPress cPAddon used to install the instance.
            * `cPanel::Blogs::WordPress`
            * `cPanel::Blogs::WordPressX`
            * `cPanel::Blogs::WordPressUnmanaged`
          example: cPanel::Blogs::WordPressX
          enum:
          - cPanel::Blogs::WordPress
          - cPanel::Blogs::WordPressX
          - cPanel::Blogs::WordPressUnmanaged
        addon_type:
          type: string
          description: |-
            The WordPress instance's installation method.
            * `modern` â Installed by RPM-managed WordPress cPAddon.
            * `legacy` â Installed by legacy cPAddon.
            * `unmanaged` â Installed by third-party tool or the WordPress installer.
          example: modern
          enum:
          - modern
          - legacy
          - unmanaged
        admin_url:
          type: string
          description: The URL to the instance's administration interface.
          format: url-path
          example: example.com/wp-login.php
        admin_username:
          type: string
          description: The administrator username configured at the time of installation.
          example: admin
        admins:
          type: array
          description: A list of the WordPress instance's administrators.
          items:
            $ref: "#/components/schemas/inline_response_200_567_result_data_admins"
        autoupdate:
          type: boolean
          description: |-
            Whether the user enabled automatic updates.
            * `true` â Enabled.
            * `false` â Disabled.
          example: true
        autoupdate.core.has_filter:
          type: boolean
          description: |-
            Whether one of more filters modify the core autoupdate settings.
            * `true` â Filter(s) applied.
            * `false` â No filters applied.

            **Note**

            Typically, plugins apply filters to the autoupdate settings.
          example: false
        autoupdate.core.major:
          type: boolean
          description: |-
            Whether the user enabled automatic updates for major releases.
            * `true` â Enabled.
            * `false` â Disabled.
          example: false
        autoupdate.core.minor:
          type: boolean
          description: |-
            Whether the user enabled automatic updates for minor releases.
            * `true` â Enabled.
            * `false` â Disabled.
          example: true
        available_version:
          type: string
          description: The lastest WordPress instance's version.
          example: 4.9.6
        created_on:
          type: integer
          description: The WordPress instance's installation date.
          format: unix_timestamp
          example: 1528208546
        current_version:
          type: string
          description: The WordPress instance's version.
          example: 4.9.5
        db_name:
          type: string
          description: A database name.
          example: example_wp2
        db_prefix:
          type: string
          description: A database table prefix.
          example: wp
        db_server:
          type: string
          description: The WordPress instance's database server hostname.
          example: localhost
        db_type:
          type: string
          description: The WordPress instance's database type.
          example: mysql
          enum:
          - mysql
        db_username:
          type: string
          description: The WordPress instance's database username.
          example: example_wp
        domain:
          type: string
          description: The WordPress instance's installation domain.
          format: domain
          example: example.com
        full_path:
          type: string
          description: The WordPress instance's full installation absolute filepath.
          format: path
          example: /home/example/public_html
        homedir:
          type: string
          description: The cPanel account's home directory.
          format: path
          example: /home/example
        id:
          type: string
          description: The WordPress instance's unique identifier.
          example: cPanel__Blogs__WordPressX.0.1528208546
        initial_install_version:
          type: string
          description: The WordPress instance's version at installation.
          example: 4.7.2
        recent:
          type: integer
          description: |-
            Whether the system added the WordPress instance in the last 24 hours.
            * `1` â Added recently.
            * `0` â Added previously.
          example: 1
          enum:
          - 0
          - 1
        rel_path:
          type: string
          description: |-
            The WordPress instance's installation path, relative to the damin's document root.

            **Note:**

            This function returns an empty value if the relative path is the document root.
          format: path
          example: ' '
        site_url:
          type: string
          description: The WordPress instance's home page URL.
          format: url-path
          example: example.com/wordpress
    inline_response_200_567_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_567_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_568_result_data_instances:
      type: object
      properties:
        addon_config:
          type: string
          description: The WordPress instance's configuration file location.
          format: path
          example: /home/example/.cpaddons/cPanel::Blogs::WordPressX.0.yaml
        addon_name:
          type: string
          description: |-
            The WordPress cPAddon that installed the instance.
            * `cPanel::Blogs::WordPress`
            * `cPanel::Blogs::WordPressX`
            * `cPanel::Blogs::WordPressUnmanaged`
          example: cPanel::Blogs::WordPressX
          enum:
          - cPanel::Blogs::WordPress
          - cPanel::Blogs::WordPressX
          - cPanel::Blogs::WordPressUnmanaged
        addon_type:
          type: string
          description: |-
            The WordPress instance's installation method.
            * `modern` â Installed by RPM-managed WordPress cPAddon.
            * `legacy` â Installed by legacy cPAddon.
            * `unmanaged` â Installed by third-party tool or the WordPress installer.
          example: modern
          enum:
          - modern
          - legacy
          - unmanaged
        admin_url:
          type: string
          description: The URL to the instance's administration interface.
          format: url-path
          example: example.com/wp-login.php
        admin_username:
          type: string
          description: The administrator username the installer created at the time
            of installation.
          example: admin
        available_version:
          type: string
          description: This return is unused.
          nullable: true
        created_on:
          type: integer
          description: The WordPress instance's installation date.
          format: unix_timestamp
          example: 1528208546
        current_version:
          type: string
          description: This return is unused.
          nullable: true
        db_name:
          type: string
          description: The WordPress instance's database name.
          example: example_wp
        db_prefix:
          type: string
          description: The WordPress instance's database prefix.
          example: wp
        db_server:
          type: string
          description: The WordPress instance's database server hostname.
          example: localhost
        db_type:
          type: string
          description: |-
            The WordPress instance's database type.

            **Note**
            `mysql` is the only possible value.
          example: mysql
          enum:
          - mysql
        db_username:
          type: string
          description: The WordPress instance's database username.
          example: example_wp
        domain:
          type: string
          description: The WordPress instance's domain.
          format: domain
          example: example.com
        full_path:
          type: string
          description: The WordPress instance's full installation path.
          format: path
          example: /home/example/public_html
        homedir:
          type: string
          description: The cPanel account's home directory.
          format: path
          example: /home/example
        id:
          type: string
          description: The WordPress instance's unique identifier.
          example: cPanel__Blogs__WordPressX.0.1528208546
        import_guid:
          type: string
          description: The imported WordPress instance's unique identifier.
          example: 8AF1767E-68CD-11E8-90D1-96B06D626D05
        imported_on:
          type: integer
          description: The WordPress instance's import date.
          format: unix_timestamp
          example: 1528209264
        initial_install_version:
          type: string
          description: The WordPress instance's version number at installation.
          example: 4.9.6
        migrated_from:
          type: string
          description: The cPAddon that the system migrated the instance from.
          example: cPanel::Blogs::WordPress
        migrated_on:
          type: integer
          description: The timestamp when the system migrated the instance from legacy
            to modern WordPress cPAddon.
          format: unix_timestamp
          example: 1528209264
        recent:
          type: integer
          description: |-
            Whether the system added the WordPress instance in the last 24 hours.
            * `1` â Added recently.
            * `0` â Added previously.
          example: 1
          enum:
          - 0
          - 1
        rel_path:
          type: string
          description: |-
            The WordPress instance's installation path.

            **Note**
            This function returns an empty value if the relative path is the document root.
          format: path
          example: ' '
        site_url:
          type: string
          description: The WordPress instance's home page URL.
          format: url-path
          example: example.com
    inline_response_200_568_result_data:
      type: object
      properties:
        errors:
          type: array
          description: This array contains the errors that the system experienced
            while it retrieved the instances.
          items:
            type: string
        instances:
          type: array
          description: This array of objects contains the WordPress instance information.
          items:
            $ref: "#/components/schemas/inline_response_200_568_result_data_instances"
    inline_response_200_568_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_568_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` â Success.
            - `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_569_result_data_packages:
      type: object
      properties:
        full: {}
        new_bundled: {}
        no_content: {}
        partial: {}
        rollback: {}
    inline_response_200_569_result_data_offers:
      type: object
      properties:
        current: {}
        download: {}
        locale: {}
        mysql_version: {}
        new_bundled: {}
        packages:
          $ref: "#/components/schemas/inline_response_200_569_result_data_packages"
        partial_version: {}
        php_version: {}
        response: {}
        version: {}
    inline_response_200_569_result_data:
      type: object
      properties:
        offers:
          type: array
          description: |-
            This array contains the returned value from [wordpress.org's](https://wordpress.org/) Version Check API.

            **Note:**

             For additional information about the returned values, read [WordPress's Version Check API](https://codex.wordpress.org/WordPress.org_API) documentation.
          items:
            $ref: "#/components/schemas/inline_response_200_569_result_data_offers"
        translations:
          type: array
          items:
            type: string
    inline_response_200_569_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_569_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_570_result_data_instances:
      type: object
      properties:
        addon_config:
          type: string
          description: The WordPress instance's configuration file location.
          example: /home/example/.cpaddons/cPanel::Blogs::WordPressX.0.yaml
        addon_name:
          type: string
          description: |-
            The WordPress cPAddon that installed the instance.
            * `cPanel::Blogs::WordPress`
            * `cPanel::Blogs::WordPressX`
            * `cPanel::Blogs::WordPressUnmanaged`
          example: cPanel::Blogs::WordPressX
          enum:
          - cPanel::Blogs::WordPress
          - cPanel::Blogs::WordPressX
          - cPanel::Blogs::WordPressUnmanaged
        addon_type:
          type: string
          description: |-
            The WordPress instance's installation method.
            * `modern` â Installed by RPM-managed WordPress cPAddon.
            * `legacy` â Installed by legacy cPAddon.
            * `unmanaged` â Installed by third-party tool or the WordPress installer.
          example: modern
          enum:
          - modern
          - legacy
          - unmanaged
        admin_url:
          type: string
          description: The URL to the instance's administration interface.
          format: url-path
          example: example.com/wp-login.php
        admin_username:
          type: string
          description: The administrator username the installer created at the time
            of installation.
          example: admin
        available_version:
          type: string
          description: The latest Wordpress's version.
          example: 4.9.5
        current_version:
          type: string
          description: The WordPress instance's installed version.
          example: 4.9.5
        db_name:
          type: string
          description: The WordPress instance's database name.
          example: example_wp
        db_prefix:
          type: string
          description: The WordPress instance's database prefix.
          example: wp
        db_server:
          type: string
          description: The WordPress instance's database server hostname.
          example: localhost
        db_type:
          type: string
          description: |-
            The WordPress instance's database type.
            * `mysql`
            * `postgres`
          example: mysql
          enum:
          - mysql
          - postgres
        db_username:
          type: string
          description: The WordPress instance's database username.
          example: example_wp
        domain:
          type: string
          description: The WordPress instance's domain.
          format: domain
          example: example.com
        full_path:
          type: string
          description: The WordPress instance's full installation path.
          format: path
          example: /home/example/public_html
        homedir:
          type: string
          description: The cPanel account's home directory.
          format: path
          example: /home/example
        id:
          type: string
          description: The WordPress instance's unique identifier.
          example: cPanel__Blogs__WordPressX.0.1528208546
        initial_install_version:
          type: string
          description: The WordPress instance's version number at installation.
          example: 4.9.6
        rel_path:
          type: string
          description: The WordPress instance's installation path relative to the
            domain's document root.
          format: path
          example: public_html
        site_url:
          type: string
          description: The WordPress instance's home page URL.
          format: url-path
          example: example.com
    inline_response_200_570_result_data:
      type: object
      properties:
        instances:
          type: array
          description: An array of objects that contains the WordPress instance information.
          items:
            $ref: "#/components/schemas/inline_response_200_570_result_data_instances"
        is_running:
          type: integer
          description: |-
            Whether the system detects an active scan.

            * `1` - A scan is active.
            * `0` - No scans are active.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_570_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_570_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_571_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the RPM-based WordPress cPAddon exists on the server.
            * `1` - Exists.
            * `0` - Does **not** exist.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_572_result_data:
      type: object
      properties:
        guid:
          type: string
          description: The unique identifier for the scan. A valid string.
          example: B3A27B96-51F7-11E8-92E3-CC90C4F823F0
        log:
          type: string
          description: The absolute path to the log file for the scan.
          format: path
          example: /home/example/.cpanel/plugins/wordpress/scans/B3A27B96-51F7-11E8-92E3-CC90C4F823F0
        sse_url:
          type: string
          description: |-
            The SSE interface that other applications can use to track the progress of the scan.

            **Note:**

            For more information about the SSE interface, read the [Server Sent Events](#server-sent-events-sse) section.
          format: url-path
          example: /sse/WordPressScan/B3A27B96-51F7-11E8-92E3-CC90C4F823F0
    inline_response_200_572_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_572_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_573_result_data:
      properties:
        items:
          oneOf:
          - $ref: "#/components/schemas/RestoreInProgress"
          - $ref: "#/components/schemas/RestoreNotInProgress"
    inline_response_200_573_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_573_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_574_result:
      type: object
      properties:
        data:
          type: integer
          description: |-
            Whether the system cleaned up the temporary system resources.
            * `1` - Successful.
            * `0` - Unsuccessful.
          example: 1
          enum:
          - 0
          - 1
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_575_result_data:
      type: object
      properties:
        restore_id:
          type: string
          description: The unique identifier for the restoration operation. The name
            of the backup file without the file extension.
          example: example.com__2018-11-15T08:03:22-0600
    inline_response_200_575_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_575_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_576_result:
      type: object
      properties:
        data: {}
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_577_result_data:
      properties:
        details:
          type: object
          description: Detailed information of the WordPress site.
        install_status:
          type: string
          description: Installation status of the WordPress site.
          example: in progress
    inline_response_200_577_result:
      type: object
      properties:
        data:
          type: array
          description: An object that contains the installation status and information
            for the WordPress site.
          items:
            $ref: "#/components/schemas/inline_response_200_577_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_578_result_data:
      type: object
      properties:
        description:
          type: string
          description: The cPAddon's name.
          example: WordPress (cPanel)
        module:
          type: string
          description: The module's name.
          example: cPanel::Blogs::WordPress
    inline_response_200_578_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_578_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_579_result_data:
      type: object
      properties:
        addon:
          type: string
          description: The name of the cPAddon in double colon-delimited form.
          example: cPanel::Blogs::WordPressX
        admin_user:
          type: string
          description: The administrative user for the cPAddon instance.
        autoupdate:
          type: integer
          description: |-
            Whether the system processes automatic updates for the cPAddon instance.
            * `1` - Automatic updates enabled.
            * `0` - Automatic updates disabled.
          example: 0
          enum:
          - 0
          - 1
        db_name:
          type: string
          description: The cPAddon instance's database name.
          example: example_wp
        db_type:
          type: string
          description: The cPAddon instance's database type.
          example: mysql
          enum:
          - mysql
          - postgre
        db_user:
          type: string
          description: The cPAddon instance's database user.
          example: example_wp
        domain:
          type: string
          description: The domain on which the instance is installed.
          format: domain
          example: example.com
        installdir:
          type: string
          description: The full path of the directory in which the system deployed
            the cPAddon.
          example: /home/example/public_html/wordpress
        url_to_install:
          type: string
          description: The URL to access the cPAddon instance.
          format: url
          example: http://example.com/wordpress/
    inline_response_200_579_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_579_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_580_result_data:
      type: object
      properties:
        addon:
          type: string
          description: The name of the cPAddon in double colon-delimited form.
          example: cPanel::Blogs::WordPressX
        domain:
          type: string
          description: The domain on which the instance is installed.
          example: example.com
        installdir:
          type: string
          description: The full path of the directory in which the system deployed
            the cPAddon.
          example: /home/example/public_html/wordpress
        instance:
          type: string
          description: The name of the instance and the number suffix.
          example: cPanel::Blogs::WordPressX.0
        unique_id:
          type: string
          description: |-
            The unique identifier for the cPAddon.

            **Note:**

             This identifier will not change when you change the cPAddon's settings. However, if a new instance reuses a cPaddon's instance name, the system updates the unique identifier. You can use this identifier to select a specific instance to modify. A unique identifier.
          example: cPanel::Blogs::WordPressX.0.1486754861
    inline_response_200_580_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_580_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_581_result_data:
      type: object
      properties:
        dependencies:
          type: array
          description: The domains that your changes will affect.
          example:
          - this.com
          - that.com
          - theother.com
          items:
            type: string
        domain:
          type: string
          description: The domain.
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether Greylisting is enabled.
            - `1` â Enabled.
            - `0` â Disabled.
          example: 0
          enum:
          - 0
          - 1
        searchhint:
          type: string
          description: A comma-separated list of domain-related search terms.
          example: "this, that, the other"
        type:
          type: string
          description: |-
            The domain type.
            - `main` â A main domain.
            - `addon` â An addon domain.
            - `parked` â A parked domain.
          example: main
          enum:
          - main
          - addon
          - parked
    inline_response_200_581_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_581_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            - 1 â Success.
            - 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_582_result_data:
      type: object
      properties:
        dependencies:
          type: array
          description: An array of domains that your changes will affect.
          example:
          - this.com
          - that.com
          - theother.com
          items:
            type: string
        domain:
          type: string
          description: The domain.
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether Greylisting is disabled.
            * `1` â Enabled.
            * `0` â Disabled.
          example: 0
          enum:
          - 0
          - 1
        searchhint:
          type: string
          description: A comma-separated list of domain-related search terms.
          example: "this, that, the other"
        type:
          type: string
          description: |-
            The domain type.
            * `main` â A main domain.
            * `sub` â A subdomain.
          example: main
          enum:
          - main
          - sub
    inline_response_200_582_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_582_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_583_result_data:
      type: object
      properties:
        dependencies:
          type: array
          description: An array of domains that your changes will affect.
          example:
          - this.com
          - that.com
          - theother.com
          items:
            type: string
        domain:
          type: string
          description: The domain.
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether Greylisting is enabled.
            * `1` â Enabled.
            * `0` â Disabled.
          example: 0
          enum:
          - 0
          - 1
        searchhint:
          type: string
          description: A comma-separated list of domain-related search terms.
          example: "this, that, and the other."
        type:
          type: string
          description: |-
            The domain type.
            * `main` â A main domain.
            * `sub` â A subdomain.
          example: main
    inline_response_200_583_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_583_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_584_result_data:
      type: object
      properties:
        dependencies:
          type: array
          description: An array of domains that your changes will affect.
          example:
          - example.com
          - example1.com
          - example2.com
          items:
            type: string
            format: domain
        domain:
          type: string
          description: The domain.
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether Greylisting is disabled.
            * `1` â Enabled.
            * `0` â Disabled.
          example: 0
          enum:
          - 0
          - 1
        searchhint:
          type: string
          description: A comma-separated list of domain-related search terms.
          example: "example, example1, example2"
        type:
          type: string
          description: |-
            The domain type.
            * `main` â A main domain.
            * `sub` â A subdomain.
          example: main
          enum:
          - main
          - sub
    inline_response_200_584_result:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_584_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_585_result_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether Greylisting is enabled.
            * `1` â Enabled.
            * `0` â Disabled.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_585_result:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_585_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_586_result_cPGreyList:
      type: object
      properties:
        total_disabled:
          minimum: 0
          type: integer
          description: The number of domains with Greylisting disabled.
          example: 1
        total_enabled:
          minimum: 0
          type: integer
          description: The number of domains with Greylisting enabled.
          example: 0
      description: An object that contains the number of domains with Greylisting
        enabled or disabled.
    inline_response_200_586_result_data:
      type: object
      properties:
        cPGreyList:
          $ref: "#/components/schemas/inline_response_200_586_result_cPGreyList"
        dependencies:
          type: array
          description: An array of domains that your changes to a selected domain
            will affect.
          example:
          - this.com
          - that.com
          - theother.com
          items:
            type: string
            format: domain
        domain:
          type: string
          description: The domain.
          format: domain
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether Greylisting is enabled.
            * `1` â Enabled.
            * `0` â Disabled.
          example: 0
          enum:
          - 0
          - 1
        searchhint:
          type: string
          description: A comma-separated list of domain-related search terms.
          example: "this, that, and the other."
        type:
          type: string
          description: |-
            The domain type.
            * `main` â A main domain.
            * `sub` â A subdomain.
          example: main
          enum:
          - main
          - sub
    inline_response_200_586_result:
      type: object
      properties:
        data:
          type: array
          properties: {}
          items:
            $ref: "#/components/schemas/inline_response_200_586_result_data"
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * 1 â Success.
            * 0 â Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_587_result:
      type: object
      properties:
        data:
          type: array
          description: An array of recommended PHP versions.
          items:
            type: string
            example: php80
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_result_metadata"
        status:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `errors` field for more details.
          example: 1
          enum:
          - 1
          - 0
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
    inline_response_200_588_result:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: array
            description: |-
              An object that contains recommendation information about a package.

              **Note:**

              The function uses the name of the referenced package as the return name.
            items:
              type: object
              properties:
                desc:
                  type: string
                  description: |-
                    The recommendation's description.

                    **Note:**

                    The function **only** returns this value if one exists.
                level:
                  type: string
                  description: |-
                    The level that triggers a recommendation to appear, based on [Bootstrap 3 alert components](http://getbootstrap.com/components/#alerts).

                    * `primary`
                    * `success`
                    * `info`
                    * `warning`
                    * `danger`

                    **Note:**

                    * The function **only** returns this value if one exists.
                    * This return's value only affects the UI if set to `danger`.
                  enum:
                  - primary
                  - success
                  - info
                  - warning
                  - danger
                name:
                  type: string
                  description: The recommendation's name.
                "on":
                  type: string
                  description: |-
                    The action that triggers a recommendation.

                    * `add`
                    * `remove`
                  enum:
                  - add
                  - remove
                options:
                  type: array
                  description: An object that contains each option for the package's
                    recommendations.
                  items:
                    type: object
                    properties:
                      items:
                        type: array
                        description: |-
                          An array of information that corresponds with a text value.

                          **Note:**

                          The function **only** returns this value if one exists.
                        items:
                          type: string
                      level:
                        type: string
                        description: |-
                          The level that triggers a recommendation to appear, based on [Bootstrap 3 alert components](http://getbootstrap.com/components/#alerts).

                          * `primary`
                          * `success`
                          * `info`
                          * `warning`
                          * `danger`

                          **Note:**

                          * The function **only** returns this value if one exists.
                          * This return's value only affects the UI if set to `danger`.
                        enum:
                        - primary
                        - success
                        - info
                        - warning
                        - danger
                      recommended:
                        type: boolean
                        description: |-
                          The type of recommendation that the interface will return.

                          * `true` - Recommended.
                          * `false` - Not recommended.

                          **Note:**

                          * The function **only** returns this value if one exists.
                          * If the function does **not** return this value, then the interface will display informational text.
                      text:
                        type: string
                        description: The text that the user interface displays.
                      url:
                        type: string
                        description: |-
                          A URL that provides more information.

                          **Note:**

                          The function **only** returns this value if one exists.
                        format: url
                url:
                  type: string
                  description: |-
                    A URL to provide more information.

                    **Note:**

                    The function **only** returns this value if one exists.
                  format: url
          example:
            ea-php55-php:
            - desc: "PHP DSO runs as the user [asis,nobody] by default. In a shared\
                \ hosting environment, this is a security issue."
              level: danger
              name: PHP DSO
              "on": add
              options:
              - items:
                - ea-apache24-mod_ruid2
                - ea-apache24-mod_mpm_itk
                level: success
                recommended: true
                text: "We strongly recommend that you install one of the following\
                  \ packages unless this is a single-user system:"
              - level: warning
                recommended: false
                text: "If you use suPHP, you will add some security, but may experience\
                  \ performance issues on your server."
              url: https://www.example.com
        errors:
          type: array
          description: List of errors if the API failed.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages generated by the API.
          nullable: true
          items:
            type: string
        metadata:
          properties: {}
        status:
          type: integer
          description: |-
            * `1` â Success.
            * `0` â Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings generated by the API. Warnings describe non-critical
            failures or other problematic conditions noted while running a API.
          nullable: true
          items:
            type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
x-tagGroups:
- name: API Development Tools
  tags:
  - API Token Management
  - Batch
  - SSE Task Management
  - URL Parsing
- name: Authentication
  tags:
  - External Authentication
  - Two-Factor Settings
- name: Block Ip Addresses
  tags:
  - Block IP
- name: Commerce Integration
  tags:
  - Market Integration
  - SSL Certificates
- name: Contact Information
  tags:
  - Contact Information
- name: cPanel Account
  tags:
  - Account Enhancements
  - Account Information
  - Account Management
  - AuditLog
  - Contact Information
  - cPanel Features
  - Disk Quotas
  - Personalization
  - Resource Usage and Statistics
  - Subaccount Management
  - Team Roles
  - Team Users
- name: cPanel Account Backups
  tags:
  - Backup
  - File Restoration
- name: cPanel Plugin Framework
  tags:
  - Plugins
- name: cPanel Theme Management
  tags:
  - Application Information
  - Brand Management
  - Browser Cache Management
  - Language
  - Theme Settings
- name: Directory Management
  tags:
  - Directory Indexes
  - Directory Privacy
  - Directory Protection
- name: DNS
  tags:
  - DNS
  - DNS Information
  - DNS Security
  - Dynamic DNS
  - Email DNS Settings
- name: Domain Management
  tags:
  - Direct Link Protection (Hotlink)
  - Domain Information
  - Domain Redirection
  - SubDomain
  - Virtual Host Information
- name: Email
  tags:
  - Email Accounts
  - Email Filtering
  - Email Forwarding
  - Email Server Information
  - Email Suspensions
  - Mail Server Information
  - Mailbox Management
  - Mailing Lists
  - Signing and Encryption (GnuPG Keys)
  - Spam Filtering (Greylisting)
  - Spam Management
  - Spam Prevention (BoxTrapper)
  - Webmail Applications
  - Webmail Sessions
- name: Files
  tags:
  - FTP Accounts
  - FTP Server Settings
  - Image Tools
  - Manage Files
  - WebDisk Settings
- name: GIT Management
  tags:
  - Deployment Settings
  - Repository Management
- name: MySQL and MariaDB
  tags:
  - Database Information
  - Database Management
  - Remote Databases
  - User Management
- name: Notifications
  tags:
  - Pushbullet
- name: Optional Applications
  tags:
  - Antivirus Protection (ClamAV)
  - Calendar and Contacts (DAV)
  - Calendar and Contacts Server
  - cPanel Addons (cPAddons)
  - WordPress Manager Backups
  - WordPress Manager Settings
- name: PostgreSQL
  tags:
  - PostgreSQL Database Management
  - PostgreSQL User Management
- name: Retrieve bandwidth information
  tags:
  - Bandwidth
- name: Security
  tags:
  - Known SSH Hosts Management
  - Login Information
- name: Server Information
  tags:
  - cPanel Server Information
  - Notifications
  - Password Strength
  - SSH
- name: ServiceProxy
  tags:
  - ServiceProxy
- name: Site Quality Monitoring
  tags:
  - SiteQuality
- name: SSL Certificates
  tags:
  - Auto-generated SSL Certificates
  - cPanel Account SSL Management
  - SNI Email Settings
  - SSL Certificate Management
  - Verify Domain Ownership
- name: Statistics
  tags:
  - Domain Statistics
  - Weblog Settings
- name: Web Server Configuration
  tags:
  - EA4
  - EasyApache Settings
  - PHP
- name: Web Server Management
  tags:
  - Application Manager
  - ModSecurity
  - NginxCaching
  - PHP Settings
- name: Website Configuration
  tags:
  - Handler Management
  - Logs
  - Mime Type Management
  - Site Information
  - Site Installation
  - Site Publisher Management
  - Sitejet
