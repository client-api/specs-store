openapi: 3.0.2
info:
  title: WHM API
  description: WHM API.
  termsOfService: https://cpanel.net/legal-notices/
  contact:
    name: "WebPros International, LLC"
    url: https://cpanel.net/support/
    email: cs@cpanel.net
  license:
    name: cPanel License
    url: https://cpanel.net/legal-notices/
  version: 11.125.9901.267
externalDocs:
  url: https://cpanel.net/developers/
servers:
- url: "https://{host}:{port}/json-api"
  description: A server running WHM.
  variables:
    host:
      description: The hostname of a server running WHM.
      default: whm-server.tld
    port:
      description: The WHM port.
      default: "2087"
security:
- BasicAuth: []
tags:
- name: Account Creation
  description: Accounts / Account Creation
- name: Account Creation
  description: Accounts Creation / Accounts
- name: Account Enhancement Limit
  description: Resellers / Account Enhancement Limit
- name: Account Enhancements
  description: The Account Enhancements module for WHM.
- name: Account Enhancements
  description: The Account Enhancement module for WHM.
- name: Account Enhancements
  description: Accounts / Account Enhancements
- name: Account Limits
  description: Resellers / Account Limits
- name: Account Management
  description: Accounts / Account Management
- name: Account Permissions
  description: Resellers / Account Permissions
- name: Account Restoration
  description: The Account Restoration module for WHM API 1.
- name: Account Settings
  description: Resellers / Account Settings
- name: AccountEnhancement
  description: The Account Enhancement module for WHM.
- name: Accounts
  description: The Accounts module for WHM API 1.
- name: API Authentication
  description: Integrations / API Authentication
- name: API Execution
  description: The Server Administration module for WHM API 1.
- name: API Execution
  description: API Development Tools / API Execution
- name: API Statistics
  description: API Development Tools / API Statistics
- name: API Token Management
  description: API Development Tools / API Token Management
- name: Applications
  description: API Development Tools / Applications
- name: Authentication
  description: The Authentication module for WHM API 1.
- name: Authentication Providers
  description: Authentication / Authentication Providers
- name: Auto-Generated Certificates
  description: SSL Certificates / Auto-Generated Certificates
- name: Backup Destination
  description: Backups / Backup Destination
- name: Backup or Restore
  description: Backups / Backup or Restore
- name: Backup Settings
  description: Backups / Backup Settings
- name: Backups
  description: The Backups module for WHM API 1.
- name: Bandwidth and Disk Quotas
  description: Accounts / Bandwidth and Disk Quotas
- name: Configuration Clusters
  description: Server Administration / Configuration Clusters
- name: Configurations
  description: Server Administration / Configurations
- name: Connected Applications
  description: Server Administration / Connected Applications
- name: Connections
  description: Server Administration / Connections
- name: cPanel Account Mail Management
  description: Mail / cPanel Account Mail Management
- name: cPanel Account Settings
  description: SSL Certificates / cPanel Account Settings
- name: cPanel Account Transfer
  description: Transfers / cPanel Account Transfer
- name: cPanel Analytics
  description: The cPanel Analytics module for WHM API 1.
- name: cPCloud
  description: cPCloud Service related WHM API 1 functions.
- name: cPHulk
  description: The cPHulk module for WHM API 1.
- name: Customizations
  description: The Customizations module for WHM API 1.
- name: Databases
  description: The Databases module for WHM API 1.
- name: DNS
  description: The DNS module for WHM API 1.
- name: DNS Cluster Settings
  description: DNS / DNS Cluster Settings
- name: DNS Security
  description: DNS / DNS Security
- name: DNS Zones
  description: DNS / DNS Zones
- name: Domain Information
  description: Accounts / Domain Information
- name: Domain Information
  description: Accounts / Domain Domain Information
- name: Domain Management
  description: DNS / Domain Management
- name: EasyApache
  description: The EasyApache module for WHM API 1.
- name: EasyApache Settings
  description: Web Server Configuration / EasyApache Settings
- name: External Authentication
  description: Authentication / External Authentication
- name: Feature Access
  description: Hosting Plans / Feature Access
- name: Feature Lists
  description: Hosting Plans / Feature Lists
- name: Greylisting
  description: The Greylisting module for WHM API 1.
- name: Hosting Plan Extensions
  description: Hosting Plans / Hosting Plan Extensions
- name: Hosting Plans
  description: Hosting Plans / Hosting Plans
- name: Install or Uninstall Package
  description: System Package Management / Install or Uninstall Package
- name: Integration
  description: The Integration module for WHM API 1.
- name: IP Addresses
  description: The IP Addresses module for WHM API 1.
- name: IPv4 Address Settings
  description: IP Address Management / IPv4 Address Settings
- name: IPv6 Address Settings
  description: IP Address Management / IPv6 Address Settings
- name: Legacy Migration
  description: Backups / Legacy Migration
- name: License Management
  description: The Server Administration module for WHM API 1.
- name: License Management
  description: Server Administration / License Management
- name: Links
  description: Integrations / Links
- name: List Package Information
  description: System Package Management / List Package Information
- name: Login URL
  description: Authentication / Login URL
- name: Mail
  description: The Mail module for WHM API 1.
- name: Mail DNS Settings
  description: Mail / Mail DNS Settings
- name: Mail Server Settings
  description: Mail / Mail Server Settings
- name: Manage MySQL Server
  description: Databases / Manage MySQL Server
- name: Management
  description: Login Security (cPHulk) / Management
- name: Market
  description: The Market module for WHM API 1.
- name: Market Integration
  description: Commerce Integration / Market Integration
- name: ModSecurity
  description: The ModSecurity module for WHM API 1.
- name: MySQL Databases
  description: Databases / MySQL Databases
- name: Network Address Translation
  description: IP Address Management / Network Address Translation
- name: NFS
  description: NFS
- name: NGINX Manager
  description: The NGINX Manager module for WHM API 1.
- name: Notifications
  description: Server Administration / Notifications
- name: Package Manager Settings
  description: System Package Management / Package Manager Settings
- name: Packages
  description: The Packages module for WHM API 1.
- name: Passwords
  description: Accounts / Passwords
- name: PHP
  description: The PHP module for WHM API 1.
- name: PHP-FPM
  description: Web Server Configuration / PHP-FPM
- name: Plugin-Based Features
  description: The plugin-based features module for WHM API 1.
- name: PostgreSQL Databases
  description: Databases / PostgreSQL Databases
- name: Product Management
  description: cPanel Market / Product Management
- name: Provider Management
  description: cPanel Market / Provider Management
- name: Remote MySQL Databases
  description: Databases / Remote MySQL Databases
- name: RemoteStorage
  description: RemoteStorage
- name: Reporting
  description: Login Security (cPHulk) / Reporting
- name: Reseller Account Management
  description: Resellers / Account Management
- name: Resellers
  description: The Resellers module for WHM API 1.
- name: Resolvers
  description: DNS / Resolvers
- name: Restore Account
  description: Account Restoration / Restore Account
- name: Restore Queue Management
  description: Account Restoration / Restore Queue Management
- name: Restore Queue Reporting
  description: Account Restoration / Restore Queue Reporting
- name: RPM
  description: The RPM module for WHM API 1.
- name: Rule Settings
  description: Web Server Security (ModSecurity) / Rule Settings
- name: Rule Vendor Settings
  description: Web Server Security (ModSecurity) / Rule Vendor Settings
- name: Script Hooks
  description: The Script Hooks module for WHM API 1.
- name: Scripts Hooks
  description: Integrations / Scripts Hooks
- name: Security
  description: The Security module for WHM API 1.
- name: Server Administration
  description: The Server Administration module for WHM API 1.
- name: Server Nodes
  description: Server Administration / Server Nodes
- name: Server Profiles
  description: Server Administration / Server Profiles
- name: Server Settings
  description: Web Server Security (ModSecurity) / Server Settings
- name: Services
  description: Server Administration / Services
- name: ServicesCluster
  description: ServicesCluster
- name: Session
  description: API Development Tools / Session
- name: Settings
  description: Login Security (cPHulk) / Settings
- name: Sitejet
  description: The Sitejet module for WHM API.
- name: Spam Management
  description: Mail / Spam Management
- name: Spam Protection (Greylisting)
  description: Mail / Spam Protection (Greylisting)
- name: SSH Keys and Connections
  description: Authentication / SSH Keys and Connections
- name: SSL
  description: The SSL module for WHM API 1.
- name: SSL Server Settings
  description: SSL Certificates / SSL Server Settings
- name: Styles
  description: The Server Administration module for WHM API 1.
- name: Styles
  description: The Styles and Themes module for WHM API 1.
- name: Styles
  description: Server Administration / Account Management
- name: Support Access
  description: cPanel Support Tickets / Support Access
- name: Support Tickets
  description: The Support Tickets module for WHM API 1.
- name: Suspensions
  description: Accounts / Suspensions
- name: System Information
  description: Server Administration / System Information
- name: System Information
  description: The Server Administration module for WHM API 1.
- name: Ticket Management
  description: cPanel Support Tickets / Ticket Management
- name: Transfer Configuration
  description: Transfers / Transfer Configuration
- name: Transfer Monitoring
  description: Transfers / Transfer Monitoring
- name: Transfers
  description: The Transfers module for WHM API 1.
- name: Two-Factor Authentication
  description: Authentication / Two-Factor Authentication
- name: Updates
  description: The Updates module for WHM API 1.
- name: Updates
  description: Server Administration / Updates
- name: WHM
  description: Security / WHM Access
- name: WHM Access
  description: Security / WHM Access
paths:
  /_getpkgextensionform:
    get:
      tags:
      - Packages
      - Hosting Plan Extensions
      summary: Return hosting plan extension templates
      description: |-
        This function retrieves a hosting plan's package extension templates. When you call this
        function, the system checks the hosting plan's `_PACKAGE_EXTENSIONS` value.  The function
        returns the contents of the `/var/cpanel/packages/extensions/name.tt2` file for each package
        extension in the list, where name represents the package extension's name.

        For more information, read our
        [Guide to Package Extensions](https://go.cpanel.net/GuidetoPackageExtensions).

        **Note:**

        This function returns only metadata if the hosting plan does not use package extensions, or
        if the extensions' template files are empty.
      operationId: _getpkgextensionform
      parameters:
      - name: pkg
        in: query
        description: The hosting plan's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: package1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
  /abort_transfer_session:
    get:
      tags:
      - Transfers
      - cPanel Account Transfer
      summary: Stop transfer session
      description: This function aborts an active transfer session.
      operationId: abort_transfer_session
      parameters:
      - name: transfer_session_id
        in: query
        description: The transfer session's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: exampleservercopya20140206192428NtyW
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
  /accept_eula:
    get:
      tags:
      - Updates
      summary: Save EULA acceptance
      description: |-
        This function records acceptance of cPanel & WHM's legal terms. To do this, the function creates a touchfile in the `/var/cpanel/activate/` directory.

        **Important:**

          Server owners *must* accept these agreements before they use cPanel & WHM.
      operationId: accept_eula
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
  /accesshash:
    get:
      tags:
      - SSH Keys and Connections
      summary: Return cPanel account access hash
      description: |-
        This function regenerates or retrieves a user's access hash. For more information about access hashes, read our [Remote Access Key](https://docs.cpanel.net/whm/clusters/remote-access-key/) documentation.

        **Warning:**

        We **deprecated** this function. We **strongly** suggest that you use the WHM API 1 `api_token_create` function.
      operationId: accesshash
      parameters:
      - name: generate
        in: query
        description: |-
          Whether to regenerate the access hash.
          * `1` — Regenerate the access hash.
          * `0` — Do **not** regenerate the access hash.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: user
        in: query
        description: The user's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: root
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
      deprecated: true
  /accountsummary:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Return cPanel account summary
      description: |-
        This function retrieves a summary of a user's account.

        **Note:**

        You must use either the user or domain parameters.
      operationId: accountsummary
      parameters:
      - name: domain
        in: query
        description: The account's main domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: user
        in: query
        description: The account's username.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_4"
  /acctcounts:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Return reseller's owned accounts' information
      description: "This function lists a reseller's total accounts, suspended accounts,\
        \ and account creation limit."
      operationId: acctcounts
      parameters:
      - name: user
        in: query
        description: "A reseller's username, to query that reseller. If you do not\
          \ specify a value, the function lists information for the authenticated\
          \ account."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_5"
  /activate_zone_key:
    get:
      tags:
      - DNS
      - DNS Security
      summary: Enable domain's DNSSEC key
      description: This function activates a domain's DNSSEC security key.
      operationId: activate_zone_key
      parameters:
      - name: domain
        in: query
        description: The domain for which to activate a security key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: key_id
        in: query
        description: |-
          The security key's ID.

          **Note:**

          Use the WHM AP1 `fetch_ds_records_for_domains` function to locate the domain's security key ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
  /add_autossl_user_excluded_domains:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Disable AutoSSL for domain
      description: This function disables AutoSSL for an account's specified domains.
      operationId: add_autossl_user_excluded_domains
      parameters:
      - name: domain
        in: query
        description: |-
          Disable AutoSSL for this domain.

          **Note:**

          To disable AutoSSL for multiple domains, increment the parameter name. For example, `domain=example.com`, `domain-1=example1.com`, and `domain-2=example.com`.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: domain
        examples:
          multiple:
            description: Disable AutoSSL for multiple domains.
            value:
            - example.com
            - example1.com
            - example2.com
          single:
            description: Disable AutoSSL for a single domain.
            value:
            - example.com
      - name: username
        in: query
        description: The cPanel user's account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_7"
  /add_configclusterserver:
    post:
      tags:
      - Server Administration
      - Configuration Clusters
      summary: Add configuration cluster server
      description: |-
        This function adds a server to a configuration cluster. The function's return data appears in
        the `metadata` section of its output.

        We recommend that you run this function as a `POST` request with SSL enabled:

        * The length of the remote access key may cause problems if you run the function with the `GET`
        method (for example, a URL in your browser).
        * You risk security problems if you enter a remote access key through the `GET` method.

        **Important:**

        * Run this function as a `root`-level user on the server that you wish to use as the parent server.
        * If you log in to a configuration cluster server that is **not** the parent server, **nothing**
        will indicate that the server is part of a configuration cluster. You can **only** view and modify
        this information from the parent server.
      operationId: add_configclusterserver
      parameters:
      - name: key
        in: query
        description: A truncated version of the server's remote access key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0
      - name: name
        in: query
        description: The remote configuration cluster server's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: user
        in: query
        description: The username for the server's `root`-level account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: root
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_8"
  /add_override_features_for_user:
    get:
      tags:
      - Packages
      - Feature Access
      summary: Add cPanel account feature list overrides
      description: This function adds feature overrides to a cPanel account.
      operationId: add_override_features_for_user
      parameters:
      - name: features
        in: query
        description: A JSON-encoded list of features to override and whether to enable
          or disable them.
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: integer
                description: |-
                  Whether to enable or disable a feature.

                  * `1` — Enable.
                  * `0` — Disable.

                  **Note:**

                  For a list of available features, use WHM API 1's `get_feature_names` function.
                enum:
                - 1
                - 0
              example:
                backup: 1
      - name: user
        in: query
        description: The cPanel username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_9"
  /add_zone_key:
    get:
      tags:
      - DNS
      - DNS Security
      summary: Create domain's DNSSEC zone key
      description: |-
        This function generates a DNSSEC zone key for a domain.

        **Note:**

        * Only servers that run PowerDNS can use DNSSEC. If you call this function on
        a server that doesn't use PowerDNS, you will receive an error.
        * After you enable DNSSEC on the domain, you **must** add the Delegation of Signing (DS)
        records to your zone record and your registrar.
        * You **cannot** modify the DNSSEC security key. To make any changes, you **must** disable,
        delete, and re-create the DNSSEC security key.
      operationId: add_zone_key
      parameters:
      - name: algo_num
        in: query
        description: |-
          The algorithm that the system uses to generate the security key.

          * `5` — RSA/SHA-1
          * `6` — DSA-NSEC3-SHA1
          * `7` — RSA SHA1-NSEC3-SHA1
          * `8` — RSA/SHA-256
          * `13` — ECDSA Curve P-256 with SHA-256
          * `14` — ECDSA Curve P-384 with SHA-384

          **Note:**

          We recommend that you use a `13` (ECDSA Curve P-256 with SHA-256) value if
          your registrar supports it.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 13
          enum:
          - 5
          - 6
          - 7
          - 8
          - 13
          - 14
      - name: domain
        in: query
        description: The domain for which to enable DNSSEC.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: key_type
        in: query
        description: |-
          The type of security key to add.

          * `ksk` — Key Signing Key.
          * `zsk` — Zone Signing Key.

          **Note:**

          You **must** call these values in lowercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ksk
      - name: active
        in: query
        description: |-
          Whether to activate the new security key.

          * `1` — Activate.
          * `0` — Do **not** activate.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: key_size
        in: query
        description: |-
          The security key size, in bits.

          **Note:**

          This parameter defaults to the following values, depending on the `algo_num`
          and `key_type` values:

          * `algo_num` = `5`
            * `ksk` = `2048`
            * `zsk` = `1024`
          * `algo_num` = `6`
            * `ksk` = `2048`
            * `zsk` = `1024`
          * `algo_num` = `7`
            * `ksk` = `2048`
            * `zsk` = `1024`
          * `algo_num` = `8`
            * `ksk` = `2048`
            * `zsk` = `1024`
          * `algo_num` = `13`
            * `ksk` and `zsk` = `256`
          * `algo_num` = `14`
            * `ksk` and `zsk` = `384`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 256
          enum:
          - 256
          - 384
          - 1024
          - 2048
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_10"
  /adddns:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Create DNS zone
      description: |-
        This function creates a DNS zone. If `trueowner=user`, this function does the following:
        * Adds a DNS entry in the `/var/cpanel/users/USER` file, where `USER` represents the `trueowner` parameter's value.
        * Creates the `/etc/vdomainaliases/DOMAIN` file, where `DOMAIN` represents the new zone's domain.
        * Creates the `/etc/vfilters/DOMAIN` file, where `DOMAIN` represents the new zone's domain.

        When you call this function, the system uses the domain name and IP address that you supply. WHM's standard zone template determines all other zone information.

        This function generates the DNS zone's [MX record](https://en.wikipedia.org/wiki/MX_record), [domain PTR](https://en.wikipedia.org/wiki/Reverse_DNS_lookup#Multiple_pointer_records), and [A records](https://en.wikipedia.org/wiki/List_of_DNS_record_types#A) automatically.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: adddns
      parameters:
      - name: domain
        in: query
        description: The new zone's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: ip
        in: query
        description: The domain's IP address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.0.20
      - name: has_ipv6
        in: query
        description: |-
          Whether to add an IPv6 address to the new zone.
          * `1` — Add the IPv6 address in the `ipv6` parameter to the new zone.
          * `0` — Do **not** add an IPv6 address to the new zone.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: ipv6
        in: query
        description: The domain's IPv6 address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv6
          nullable: true
          example: 2001:0db8:0:0:1:0:0:1
      - name: template
        in: query
        description: |-
          The zone file template.
          * `standard`
          * `simple`
          * `standardvirtualftp`
          * The name of a custom zone template file in the `/var/cpanel/zonetemplates` directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: standard
          default: standard
      - name: trueowner
        in: query
        description: The new zone's owner. This parameter defaults to the currently-authenticated
          user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          nullable: true
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_11"
  /addips:
    get:
      tags:
      - IP Addresses
      - IPv4 Address Settings
      summary: Add IP addresses
      description: |-
        This function adds an IPv4 address or addresses to the server.
        When you add an IP address, the system attempts to add an alias of that IP
        address to the main network interface. This process rebuilds the IP address
        pool, which resides in the `/etc/ipaddrpool` file. The system stores IP addresses
        within the `/etc/ips` file. The `ipaliases` service activates those IP addresses
        when the server starts.
      operationId: addips
      parameters:
      - name: ips
        in: query
        description: |-
          The IPv4 address or address range
          in [Class C CIDR format](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          ipv4:
            summary: IPv4 address
            value: 192.168.0.0
          ipv4range:
            summary: IPv4 address range
            value: 192.168.0.20/28
      - name: netmask
        in: query
        description: |-
          The IPv4 address' netmask.

          **Note:**

          If the `ips` parameter is in Class C CIDR format,
          the range mask **must** be a value from `24` through `30`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 255.255.255.0
      - name: excludes
        in: query
        description: |-
          An IPv4 address or comma-delimited list of IPv4 addresses to exclude.

          **Note:**

          If you do not specify a value,
          the function does not exclude any IPv4 addresses.
        required: false
        style: form
        explode: false
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple IP addresses.
            value: "excludes=192.0.20.0,192.0.20.1"
          single:
            summary: A single IP address.
            value: 192.0.20.0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_12"
  /addpkg:
    get:
      tags:
      - Packages
      - Hosting Plans
      summary: Create hosting plan
      description: |-
        This function creates a hosting plan (package).

        **Note:**

        The [Access Control Lists](https://go.cpanel.net/GuidetoWHMPluginsAccessControlLists)
        restricts some of this function's parameters, which limit the features that
        WHM users can access.
      operationId: addpkg
      parameters:
      - name: name
        in: query
        description: |-
          The new hosting plan's name.

          **Note:**

          * You **cannot** use the name `extensions` for a hosting plan.
          * You **cannot** modify hosting plan names after creation. Do **not**
          include details that may change over time, such as price.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: package1
      - name: _PACKAGE_EXTENSIONS
        in: query
        description: |-
          A space-separated list of the hosting plan's
          [package extensions](https://go.cpanel.net/GuidetoPackageExtensions).

          If you do **not** provide a value, the hosting plan will **not** include package
          extensions.

          **Note:**

          * We **strongly** recommend that you manage package extensions through WHM API
          1's `addpkgext` and `delpkgext` functions.
          * You can include the extension's variables in your function call, in `key=value` format.
          Consult the extension's documentation for a list of possible variables.
          * Extension names and variables are case-sensitive.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: '''extension1 extension2 extension3'''
      - name: bwlimit
        in: query
        description: |-
          The hosting plan's maximum bandwidth use, in megabytes (MB).

          * `0`, `unlimited`, or `null` — The hosting plan allows unlimited bandwidth.

          **Note:**

          The `0`, `unlimited`, and `null` values are **only** available to users that possess
          the corresponding unlimited ACL permission.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/bwlimit"
      - name: cgi
        in: query
        description: |-
          Whether CGI access is enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          **Note:**

          When a
          [server profile](https://go.cpanel.net/whmdocsServerProfile) disables the
          [Web Server role](https://go.cpanel.net/serverroles#roles), this parameter
          defaults to `0`. On these servers, you **cannot** enable CGI access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 1
          - 0
      - name: cpmod
        in: query
        description: |-
          The hosting plan's cPanel theme.

          This parameter defaults to the server's
          [default cPanel theme](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup#select-a-default-theme-for-the-cpanel-interface).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      - name: digestauth
        in: query
        description: |-
          Whether to enable Digest Authentication for accounts on the hosting plan.

          * `1` — Enable.
          * `0` — Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: featurelist
        in: query
        description: |-
          The hosting plan's feature list.

          If you do **not** use this parameter, the function assigns the `default`
          feature list to the account.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: feature_list
          default: default
      - name: frontpage
        in: query
        description: |-
          Whether Microsoft® FrontPage® Extensions are enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          **Note:**

          cPanel & WHM ignores all FrontPage settings and parameters.
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 1
          - 0
      - name: hasshell
        in: query
        description: |-
          Whether the hosting plan allows shell access.

          * `1` — The hosting plan allows shell access.
          * `0` — The hosting plan does **not** allows shell access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: ip
        in: query
        description: |-
          Whether the account has a dedicated IP address.

          * `y` — The account possesses a dedicated IP address.
          * `n` — The account does not possess a dedicated IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "n"
          default: "n"
          enum:
          - "y"
          - "n"
      - name: language
        in: query
        description: |-
          The hosting plan's default locale, in its two-letter
          [ISO-3166 code](http://www.iso.org/iso/country_codes.htm)
          format.

          This parameter defaults to the server's default locale.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166-1 (alpha-2)
          example: en
      - name: MAX_DEFER_FAIL_PERCENTAGE
        in: query
        description: |-
          The percentage of failed or deferred email messages that the hosting plan allows users
          to send per hour before outgoing mail is rate-limited.

          * `0` or `unlimited` — The hosting plan allows users ot send an unlimited number of
          failed or deferred messages.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAX_DEFER_FAIL_PERCENTAGE"
      - name: MAX_EMAIL_PER_HOUR
        in: query
        description: |-
          The maximum number of emails that the hosting plan allows users to send in one hour.

          * `0` or `unlimited` — The hosting plan allows users to send an unlimited number of emails.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAX_EMAIL_PER_HOUR"
      - name: max_emailacct_quota
        in: query
        description: |-
          The hosting plan's maximum email account quota size, in megabytes (MB).

          * `0`, `unlimited`, or `null` — The hosting plan allows unlimited email account quota.

          **Note:**

          The `0`, `unlimited`, and `null` values are **only** available to users that possess
          the corresponding unlimited ACL permission.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/max_emailacct_quota"
      - name: max_team_users
        in: query
        description: The hosting plan's maximum number of Team users.
        required: false
        style: form
        explode: true
        schema:
          maximum: 7
          minimum: 0
          type: integer
          example: 7
      - name: maxaddon
        in: query
        description: |-
          The hosting plan's maximum number of addon domains.

          * `unlimited` or `null` — The hosting plan allows unlimited addon domains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxaddon"
      - name: maxftp
        in: query
        description: |-
          The hosting plan's maximum number of FTP accounts.

          * `unlimited`, or `null` — The hosting plan allows unlimited FTP accounts.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxftp"
      - name: maxlst
        in: query
        description: |-
          The hosting plan's maximum number of mailing lists.

          * `unlimited`, or `null` — The hosting plan allows unlimited mailing lists.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxlst"
      - name: maxpark
        in: query
        description: |-
          The hosting plan's maximum number of parked domains (aliases).

          * `unlimited` or `null` — The hosting plan allows unlimited parked domains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxpark"
      - name: maxpop
        in: query
        description: |-
          The hosting plan's maximum number of email accounts.

          * `unlimited`, or `null` — The hosting plan allows unlimited email accounts.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxpop"
      - name: maxsql
        in: query
        description: |-
          The hosting plan's maximum number of each available type of SQL
          database.

          For example, if you set this value to `5` and the system administrator
          allows MySQL® and PostgreSQL® databases, users can create up to five MySQL
          databases and up to five PostgreSQL databases.

          * `unlimited`, or `null` — The hosting allows unlimited databases.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxsql"
      - name: maxsub
        in: query
        description: |-
          The hosting plan's maximum number of subdomains.

          * `unlimited`, or `null` — The hosting plan allows unlimited subdomains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxsub"
      - name: quota
        in: query
        description: |-
          The hosting plan's disk space quota, in megabytes (MB).

          * `0`, `unlimited`, or `null` — The hosting plan allows unlimited disk space.

          **Note:**

          The `0`, `unlimited`, and `null` values are **only** available to users that possess
          the corresponding unlimited ACL permission.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/quota"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_13"
  /addpkgext:
    get:
      tags:
      - Packages
      - Hosting Plan Extensions
      summary: Add hosting plan extension
      description: |-
        This function adds a package extension to a hosting plan (package).

        **Notes:**

        * If you need to edit a package extension's parameters, call this function again
        with the same package extension name and the updated package extension variables.

        * You can include the extension's variables in your function call, in `key=value` format.
          Consult the extension's documentation for a list of possible variables. Extension variables
          are case-sensitive.
      operationId: addpkgext
      parameters:
      - name: _PACKAGE_EXTENSIONS
        in: query
        description: |-
          The hosting plan's
          [package extensions](https://go.cpanel.net/GuidetoPackageExtensions).

          **Note:**

          * Use space-delimited format to add multiple package extensions.
          * Extension names are case-sensitive.
        required: true
        style: spaceDelimited
        explode: false
        schema:
          type: string
        examples:
          multiple:
            summary: Add multiple package extensions.
            value: extension1 extension2 extension3
          single:
            summary: Add a single package extension.
            value: extension1
      - name: name
        in: query
        description: |-
          The hosting plan's name.

          **Note:**

          You **cannot** use the `extensions` name for a hosting plan.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: package1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_14"
  /addzonerecord:
    post:
      tags:
      - DNS
      - Domain Management
      summary: Create DNS zone record
      description: |-
        This function adds a DNS zone record.

        **Important:**

        * When you call this function, you **must** include the additional parameters for the selected zone record type.
        * When you disable the [DNS role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.

        **Note:**

        On servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.
          * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.
          * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).
      operationId: addzonerecord
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DnsAddZoneParameterType"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_15"
  /allow_all_whm_root_access:
    get:
      tags:
      - WHM Access
      summary: Clear all CIDR restrictions to login to cPanel & WHM with the root
        password.
      description: This function removes all restrictions to root login to cPanel
        & WHM login based on IP.
      operationId: allow_all_whm_root_access
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_16"
  /analyze_transfer_session_remote:
    get:
      tags:
      - Transfers
      - Transfer Monitoring
      summary: Validate remote server's credentials
      description: "This function checks the remote server's credentials, which a\
        \ transfer session uses to connect."
      operationId: analyze_transfer_session_remote
      parameters:
      - name: transfer_session_id
        in: query
        description: The transfer session's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: exampleservercopya20140206192428NtyW
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_17"
  /api_token_create:
    get:
      tags:
      - Authentication
      - API Token Management
      summary: Create WHM API token
      description: |-
        This function creates an API token. You can use API tokens instead of a password
        or access hash key to execute WHM API 1 functions over HTTPS. For more information
        about API tokens, read our
        [Manage API Tokens in WHM](https://docs.cpanel.net/whm/development/manage-api-tokens-in-whm/)
        documentation.

        **Important:**

        You **must** call this function over an SSL connection.
      operationId: api_token_create
      parameters:
      - name: token_name
        in: query
        description: |-
          The API token's name.

          **Note:**

          * An API token name's maximum length is 50 characters, and the name may **only**
          contain alphanumeric characters, dashes (`-`), and underscores (`_`).
          * You **must** assign a name that does **not** already exist to the API token.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      - name: acl
        in: query
        description: |-
          The privileges to assign to the token. If you do not use this parameter, the system
          assigns **all** of your privileges to the token.

          **Note:**

          * You can **only** assign privileges that you possess to the API token.
          * To assign multiple privileges to the token, increment the parameter name. For
          example: `acl-0`, `acl-1`, `acl-2`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Assign multiple privileges.
            value: acl-0=create-acct acl-1=list-accts acl-2=kill-acct
          single:
            summary: Assign a single privilege.
            value: all
      - name: expires_at
        in: query
        description: |-
          The API token's expiration time. If you do not use this parameter, the
          API token will not expire.

          * A date, in [Unix Epoch format](http://en.wikipedia.org/wiki/Unix_time).
          * `0` — The API token will **not** expire.

          **Important:**

           When an API token expires, the system **does** not delete it. You **must**
           manually delete expired API tokens.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1609372800
          default: 0
      - name: whitelist_ip
        in: query
        description: |-
          One or more optional remote IP or CIDR IP ranges this token may be used from. If you do not use this parameter, the system
          does not limit which IPs can use this token.

          **Note:**

          * To assign multiple whitelisted IPs to the token, increment the parameter name. For
          example: `whitelist_ip-0`, `whitelist_ip-1`, `whitelist_ip-2`.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/whitelist_ip"
        examples:
          multiple:
            summary: Assign multiple IP or CIDR ranges.
            value: whitelist_ip-0=192.0.2.1 whitelist_ip-1=192.0.2.5 whitelist_ip-2=192.0.2.8/29
              whitelist-ip-3=fc00:abcd::f whitelist-ip-4=2620:0:28a4::/48
          single:
            summary: Assign a single IP or CIDR range.
            value: 192.0.2.8/29
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_18"
  /api_token_get_details:
    get:
      tags:
      - Authentication
      - API Token Management
      summary: Look up API token details
      description: This function looks up an API token’s details based on the token
        itself.
      operationId: api_token_get_details
      parameters:
      - name: token
        in: query
        description: The API token.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: GVJWD78FF12NMBFKYKPS9BJ483C0XSQH
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_19"
  /api_token_list:
    get:
      tags:
      - Authentication
      - API Token Management
      summary: Return WHM API tokens
      description: This function lists a WHM account's API tokens.
      operationId: api_token_list
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_20"
  /api_token_revoke:
    get:
      tags:
      - Authentication
      - API Token Management
      summary: Disable WHM API token
      description: This function revokes an API token from the WHM account.
      operationId: api_token_revoke
      parameters:
      - name: token_name
        in: query
        description: |-
          The API token's name.

          **Note:**

          To revoke multiple API tokens, increment this parameter's name. For example: `token_name-1`, `token_name-2`, and `token_name-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: subway
        examples:
          multiple:
            summary: Revoke multiple API tokens.
            value: token_name-1=subway&token_name-2=job&token_name-3=jmkMRXBnhp20iz
          single:
            summary: Revoke a single API token.
            value: subway
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
  /api_token_update:
    get:
      tags:
      - Authentication
      - API Token Management
      summary: Update WHM API token's settings
      description: This function updates an API token's settings.
      operationId: api_token_update
      parameters:
      - name: token_name
        in: query
        description: The API token's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: token
      - name: acl
        in: query
        description: |-
          The new privileges to assign to the token. If you do **not** use this parameter,
          the system will assign all of your privileges to the token.

          For a list of Access Control List (ACL) privileges, read our
          [Edit Reseller Nameservers and Privileges](https://docs.cpanel.net/whm/resellers/edit-reseller-nameservers-and-privileges/#feature-limits-acl-lists)
          documentation.

          **Note:**

          * You can **only** assign privileges that you possess to the API token.

          * The function replaces **all** current privileges with the privileges that you pass
          in this parameter.

          * To assign multiple privileges to the token, increment the parameter name.
          For example, `acl-1`, `acl-2`, `acl-3`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Assign multiple privilges.
            value: acl-0=create-acct acl-1=list-accts acl-2=kill-acct
          single:
            summary: Assign a single privilege.
            value: all
      - name: expires_at
        in: query
        description: |-
          The API token's expiration time. If you do not use this parameter,
          the API token will **not** expire.

          * A date, in [Unix Epoch format](http://en.wikipedia.org/wiki/Unix_time).
          * `0` — The API token will **not** expire.

          **Important:**

          When an API token expires, the system does **not** delete it. You **must**
          manually delete expired API tokens.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1609372800
          default: 0
      - name: new_name
        in: query
        description: |-
          The API token's new name. If you do not use this parameter, the API token's name
          remains the same.

          **Note:**

          * An API token name's maximum length is 50 characters, and the name may **only**
          contain alphanumeric characters, dashes (`-`), and underscores (`_`).

          * You **must** assign a name that does **not** already exist to the API token.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 50
          type: string
          example: example
      - name: whitelist_ip
        in: query
        description: |-
          The new remote IP or CIDR IP ranges to assign to this token. If you do not use this parameter, the system
          does not limit which IPs can use this token.

          **Note:**

          * The function replaces **all** current whitelisted IPs with the IPs you pass
          in this parameter.

          * To assign multiple whitelisted IPs to the token, increment the parameter name. For
          example: `whitelist_ip-0`, `whitelist_ip-1`, `whitelist_ip-2`.

          * If a token has whitelisted IPs set, they can be cleared by passing `whitelist_ip=any` as a parameter.
          This will allow any IP to make API calls using that token.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/whitelist_ip_1"
        examples:
          clear:
            summary: Clear a token's whitelisted IPs list.
            value: whitelist_ip=any
          multiple:
            summary: Assign multiple IPs or CIDR ranges.
            value: whitelist_ip-0=192.0.2.1 whitelist_ip-1=192.0.2.5 whitelist_ip-2=192.0.2.8/29
              whitelist-ip-3=fc00:abcd::f whitelist-ip-4=2620:0:28a4::/48
          single:
            summary: Assign a single IP or CIDR range.
            value: whitelist_ip=192.0.2.8/29
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_22"
  /applist:
    get:
      tags:
      - Applications
      summary: Return WHM API 1 functions list
      description: This function lists available WHM API 1 functions.
      operationId: applist
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
  /apply_dmarc:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Apply a DMARC record to a domain
      description: This function applies a DMARC record to the specified domain(s).
      operationId: EmailAuth::apply_dmarc
      parameters:
      - name: policy
        in: query
        description: |-
          The DMARC record to apply to the requested domains.

          **Note:**

          When using multiple policies, each policy must have a matching domain.

          When using a single policy, it will be applied to all specified domains.

          Visit the following link for more information about the DMARC record specification: https://dmarc.org/resources/specification/
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: "To apply multiple DMARC policies, duplicate the policy arguments."
            value: policy="v=DMARC1; p=none;" policy="v=DMARC1; p=reject;" policy="v=DMARC1;
              p=quarantine;"
          single:
            summary: "To apply a single DMARC record to domains, specify a single\
              \ policy."
            value: policy="v=DMARC1;p=reject;pct=100;rua=mailto:postmaster@example.com"
      - name: domain
        in: query
        description: |-
          The domain for which to apply the DMARC record.

          **Note:**

           To apply multiple domain DMARC records, duplicate the parameter name. For example, use the `domain=example-1.com`, `domain=example-2.com`, and `domain=example-3.com` parameters.

           If you do not include this argument, the system applies the DMARC record to **all** domains on the system.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: To apply multiple DMARC records
            value: domain=example-1.com domain=example-2.com domain=example-3.com
          single:
            summary: To apply a single domain DMARC record
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
  /assign_account_enhancement:
    get:
      tags:
      - Account Enhancements
      summary: Assign Account Enhancement
      description: This function assigns an Account Enhancement to a cPanel account.
      operationId: assign_account_enhancement
      parameters:
      - name: account
        in: query
        description: The username of the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: name
        in: query
        description: The name of the account enhancement.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: enhancement 5000
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_25"
  /authorizesshkey:
    get:
      tags:
      - SSH Keys and Connections
      summary: Enable SSH key for server
      description: |-
        This function authorizes a public SSH key to access the server.
        When you call this function, it adds the key to the `/root/.ssh/authorized_keys` file.

        **Warning:**

        * Do **not** transfer private keys over insecure ports.
        * Only `root` and `root`-enabled resellers can use this function, and it only affects
        the `root` public SSH keys. To perform this function on a regular user account, call
        the cPanel API 2 `SSH::authkey` function via the WHM API. For more information, read our
        [Use WHM API to Call cPanel API and UAPI](https://go.cpanel.net/UseWHMAPItoCallcPanelAPIandUAPI)
        documentation.
      operationId: authorizesshkey
      parameters:
      - name: authorize
        in: query
        description: |-
          Whether to authorize the public SSH key to access the server.

          * `1` — Authorize.
          * `0` — Do **not** authorize.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: file
        in: query
        description: |-
          The public SSH key file's name.

          **Note:**

          * This file **must** exist in the `/root/.ssh` directory.
          * If you call **both** the `file` and the `text` parameters, the function **ignores**
          the `file` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: sshkey.pub
      - name: text
        in: query
        description: |-
          The text of the SSH public key file.

          **Note:**

          * If you call **both** the `file` and the `text` parameters, the function **ignores**
          the `file` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCys7JbGhkAZ8E4Pmq8D4EBm1UedKK2oMhs3RVIEFRJX6S86Itw6Qmhds62LNGrxuVL11W6v25+maIiBhXnslyQpd838tHyAC7J/SJojDid8acovX/4xgJQaJHLAh9tLgyQXnNhIxIGJ4nVZ+8OqM2Vb1Cps+E5H17ivG07PXnVPEvwMaeWkm2DnGgSy5kmjVpNKlj9GWFCn/SJd7up7QnbGKoz87pxKDs3esp+ziuPEAJHLeXnKHWPVukQgtRUpUBdqkCvu5hUkhpaiWmBR8yxajkxbSObPw+ZkELhmm+fQseOfEbrwToMRJCO7gAKwBtNi7OhyFM7YFrvdo0xh6cn
      - name: options
        in: query
        description: |-
          A comma-separated list of options to include with the public SSH key.
          For a list of options, read the
          [OpenBSD manaual](https://man.openbsd.org/sshd.8#AUTHORIZED_KEYS_FILE_FORMAT).

          This parameter defaults to no options.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "agent-forwarding,cert-authority"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_26"
  /available_transfer_modules:
    get:
      tags:
      - Transfers
      - Transfer Monitoring
      summary: Return available transfer modules
      description: |-
        This function lists all available transfer modules.

        **Note:**

          For more information about how this function works with other functions in the transfer and restore process, read our
          [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide)
          documentation.
      operationId: available_transfer_modules
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_27"
  /background_mysql_upgrade_checker_run:
    get:
      tags:
      - Databases
      - Manage MySQL Server
      summary: Validate MySQL status before upgrade
      description: |-
        This function checks your MySQL configuration file and table engine before an upgrade to MySQL 8.0.

        **Important:**

        When you disable the
        [MySQL/MariaDB role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles)
        **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: background_mysql_upgrade_checker_run
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_28"
  /background_mysql_upgrade_status:
    get:
      tags:
      - Databases
      - Manage MySQL Server
      summary: Return MySQL or MariaDB upgrade status
      description: |-
        This function retrieves the status of a background MySQL® or MariaDB® upgrade.

        **Important:**

          When you disable the [MySQL/MariaDB](https://go.cpanel.net/serverroles) role and remote MySQL is **not** already configured, the system **disables** this function.
      operationId: background_mysql_upgrade_status
      parameters:
      - name: upgrade_id
        in: query
        description: |-
          The logfile's name.

          **Note:**

            Log files exist in the `/var/cpanel/logs/` directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mysql_upgrade.20141108-172923
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_29"
  /backup_config_get:
    get:
      tags:
      - Backups
      - Backup Settings
      summary: Return backup configuration file data
      description: This function retrieves your backup destination configuration file
        data.
      operationId: backup_config_get
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_30"
  /backup_config_set:
    get:
      tags:
      - Backups
      - Backup Settings
      summary: Update the system's backup configuration
      description: This function configures a server's backup system. The system saves
        these settings in the `/var/cpanel/backups/config` file.
      operationId: backup_config_set
      parameters:
      - name: backup_daily_enable
        in: query
        description: |-
          Whether to enable daily backups.

          * `1` — Enable.
          * `0` — Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: backup_daily_retention
        in: query
        description: The number of daily backups to retain.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 5
          default: 5
      - name: backup_monthly_dates
        in: query
        description: |-
          Which days of the month to run backups.

          **Note:**

          To add multiple days, use a comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          maximum: 31
          minimum: 1
          type: integer
          example: 1
          default: 1
      - name: backup_monthly_enable
        in: query
        description: |-
          Whether to enable monthly backups.

          * `1` — Enable.
          * `0` — Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: backup_monthly_retention
        in: query
        description: The number of monthly backups to retain.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 5
          default: 1
      - name: backup_weekly_day
        in: query
        description: |-
          Which day of the week to run weekly backups.

          * `0` — Sunday.
          * `1` — Monday.
          * `2` — Tuesday.
          * `3` — Wednesday.
          * `4` — Thursday.
          * `5` — Friday.
          * `6` — Saturday.
        required: false
        style: form
        explode: true
        schema:
          maximum: 6
          minimum: 1
          type: integer
          example: 1
          default: 0
      - name: backup_weekly_enable
        in: query
        description: |-
          Whether to enable weekly backups.

          * `1` — Enable.
          * `0` — Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: backup_weekly_retention
        in: query
        description: The number of weekly backups to retain.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 4
          default: 4
      - name: backupaccts
        in: query
        description: |-
          Whether to back up cPanel user accounts.

          * `1` — Back up.
          * `0` — Do **not** back up.

          **Note:**

          This setting affects whether the system enables the *File and Directory Restoration*
          interfaces in
          [cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)
          and in
          [WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).
          For more information, read the
          [How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)
          documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: backupbwdata
        in: query
        description: |-
          Whether to back up bandwidth tracking data.

          * `1` — Back up.
          * `0` — Do **not** back up.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: backupdays
        in: query
        description: |-
          Which days of the week to run daily backups.

          * `0` — Sunday.
          * `1` — Monday.
          * `2` — Tuesday.
          * `3` — Wednesday.
          * `4` — Thursday.
          * `5` — Friday.
          * `6` — Saturday.

          **Note:**

          For multiple days, use a comma-delimited list.
        required: false
        style: form
        explode: true
        schema:
          maximum: 6
          minimum: 0
          type: string
          example: "0,1,2,3,4,5,6"
          default: "0,2,4,6"
      - name: backupdir
        in: query
        description: The primary backup directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /backup
          default: /backup
      - name: backupenable
        in: query
        description: |-
          Whether to enable backups.

          * `1` — Enable.
          * `0` — Disable.

          **Note:**

          This setting affects whether the system enables the *File and Directory Restoration*
          interfaces in
          [cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)
          and in
          [WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).
          For more information, read the
          [How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)
          documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: backupfiles
        in: query
        description: |-
          Whether to back up system files.

          * `1` — Back up.
          * `0` — Do **not** back up.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: backuplogs
        in: query
        description: |-
          Whether to back up the error logs.

          * `1` — Back up.
          * `0` — Do **not** back up.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: backupmount
        in: query
        description: |-
          Whether to mount a backup partition.

          * `1` — Mount.
          * `0` — Do **not** mount.

          **Note:**

          This setting affects whether the system enables the *File and Directory Restoration*
          interfaces in
          [cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)
          and in
          [WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).
          For more information, read the
          [How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)
          documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: backupsuspendedaccts
        in: query
        description: |-
          Whether to back up suspended accounts.

          * `1` — Back up.
          * `0` — Do **not** back up.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: backuptype
        in: query
        description: |-
          The type of backup to create.

          * `compressed`
          * `uncompressed`
          * `incremental`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: compressed
          default: compressed
          enum:
          - compressed
          - uncompressed
          - incremental
      - name: check_min_free_space
        in: query
        description: |-
          Whether to ensure that the destination server possesses the minimum
          free disk space available.

          * `1` — Check the free disk space on the destination server.
          * `0` — Do **not** check the free disk space on the destination server.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: disable_metadata
        in: query
        description: |-
          Whether the backup system will create metadata when a backup runs.

          * `1` — Disable metadata creation.
          * `0` — Enable metadata creation.

          **Note:**

          This setting affects whether the system enables the *File and Directory Restoration*
          interfaces in
          [cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)
          and in
          [WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).
          For more information, read the
          [How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)
          documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: errorthreshhold
        in: query
        description: The number of times that the system will try to use the additional
          backup destination.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 3
          default: 3
      - name: force_prune_daily
        in: query
        description: |-
          Whether to strictly enforce the value of the `backup_daily_retention`
          parameter.

          * `1` — Strictly enforce the `backup_daily_retention` parameter.
          * `0` — Only enforce the `backup_daily_retention` parameter **after** a
          successful complete backup.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: force_prune_monthly
        in: query
        description: |-
          Whether to strictly enforce the value of the `backup_monthly_retention`
          parameter.

          * `1` — Strictly enforce the `backup_monthly_retention` parameter.
          * `0` — Only enforce the `backup_monthly_retention` parameter **after** a
          successful complete backup.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: force_prune_weekly
        in: query
        description: |-
          Whether to strictly enforce the value of the `backup_weekly_retention`
          parameter.

          * `1` — Strictly enforce the `backup_weekly_retention` parameter.
          * `0` — Only enforce the `backup_weekly_retention` parameter **after** a
          successful complete backup.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: gziprsyncopts
        in: query
        description: The `gzip` environment variables.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: --rysncable
          default: ""
      - name: keeplocal
        in: query
        description: |-
          Whether to delete backups from the local directory.

          * `1` — Delete.
          * `0` — Do **not** delete.

          **Note:**

          This setting affects whether the system enables the *File and Directory Restoration*
          interfaces in
          [cPanel](https://docs.cpanel.net/cpanel/files/file-and-directory-restoration-for-cpanel/)
          and in
          [WHM](https://docs.cpanel.net/whm/backup/file-and-directory-restoration-for-whm/).
          For more information, read the
          [How to Manage Metadata Settings](https://docs.cpanel.net/knowledge-base/backup/how-to-manage-metadata-settings/)
          documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: linkdest
        in: query
        description: |-
          Whether to check the `rsync` function for hardlink support.

          * `1` — Check.
          * `0` — Do **not** check.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: localzonesonly
        in: query
        description: |-
          Whether to use a local zone file from the `/var/named/domain.tld`
          file or the `dnsadmin` daemon, where `domain.tld` represents the target domain.

          * `1` — Use the `/var/named/domain.tld` file.
          * `0` — Use `dnsadmin`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: maximum_restore_timeout
        in: query
        description: "How long a restoration will attempt to run, in seconds. If the\
          \ restoration does not succeed in this amount of time, it will stop."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 21600
          default: 21600
      - name: maximum_timeout
        in: query
        description: "How long a backup will attempt to run, in seconds. If the backup\
          \ does not succeed in this amount of time, it will stop."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 7200
          default: 7200
      - name: min_free_space
        in: query
        description: |-
          The minimum amount of free disk to check for on the destination server.

          **Note:**

          If the value of the `min_free_space_unit` parameter is `percent`, the maximum
          value is `100`.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 1024
          default: 5
      - name: min_free_space_unit
        in: query
        description: |-
          The units of measurement of disk space for the `min_free_space` return.

          * `MB` — Megabytes.
          * `percent` — Percent available.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: MB
          default: percent
          enum:
          - MB
          - percent
      - name: mysqlbackup
        in: query
        description: |-
          The backup method to use for MySQL® databases.

          * `accounts` — Back up databases in each account's archive.
          * `dir` — Back up the entire MySQL directory.
          * `both` — Back up databases in each account's archive and the entire
          MySQL directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: accounts
          default: accounts
          enum:
          - accounts
          - dir
          - both
      - name: postbackup
        in: query
        description: |-
          Whether to run the `/usr/local/cpanel/scripts/postcpbackup` script after
          the backup finishes.

          * `1` — Run.
          * `0` — Do **not** run.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: prebackup
        in: query
        description: |-
          Whether to run the `/usr/local/cpanel/scripts/precpbackup` script before
          the system processes backups.

          * `1` — Run.
          * `0` — Do **not** run.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: psqlbackup
        in: query
        description: |-
          Whether to back up PostgreSQL® databases.

          * `1` — Back up.
          * `0` — Do **not** back up.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: remote_restore_staging_dir
        in: query
        description: |-
          The directory that temporarily stores a remote backup's data during a backup restoration.
          The data is a compressed (`.tar.gz`) or uncompressed (`.tar`) account tarball.

          **Important:**

          The system restores backups one at a time. The backup staging directory **must**
          be large enough to contain the largest remote backup file that you wish to restore.
          For example, if you wish to restore three backups, sized 1.5 GB, 528 MB, and
          950 MB each, your backup staging directory must be able to hold at **least** 1.5 GB.

          **Note:**

          The system empties the directory after the system restores the backup.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /backup
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_31"
  /backup_date_list:
    get:
      tags:
      - Backups
      - Backup Settings
      summary: Return dates where backup files exist
      description: "This function lists the dates where backup file exists, whether\
        \ stored locally or stored on remote backup destinations when local backups\
        \ are disabled."
      operationId: backup_date_list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_32"
  /backup_destination_add:
    get:
      tags:
      - Backups
      - Backup Destination
      summary: Add a backup destination
      description: This function adds a backup destination.
      operationId: backup_destination_add
      parameters:
      - name: application_key
        in: query
        description: |-
          The application key's name.

          **Note:**

          This parameter is only valid for the `Backblaze` backup type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: A123b45CD678e9
      - name: application_key_id
        in: query
        description: |-
          The application key ID that authenticates the Backblaze B2 account.

          **Note:**

          This parameter is only valid for the `Backblaze` backup type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12a345B678c9
      - name: authtype
        in: query
        description: |-
          The authorization type.

          * `password`
          * `key`

          **Note:**

          This parameter is only valid for the following backup types:
          * `SFTP`
          * `Rsync`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: password
          enum:
          - password
          - key
      - name: aws_access_key_id
        in: query
        description: |-
          The Amazon S3™ Access Key ID.

          **Note:**

          This parameter is only valid for the following backup types:
          * `AmazonS3`
          * `S3Compatible`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: AKIAYLWMPOZZJCERC28Q
      - name: bucket
        in: query
        description: |-
          The Amazon S3™ bucket.

          **Note:**

          This parameter is only valid for the following backup types:
          * `AmazonS3`
          * `S3Compatible`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ChockFullOfNuts
      - name: bucket_id
        in: query
        description: |-
          The bucket's ID string.

          **Note:**

          This parameter is only valid for the `Backblaze` backup type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: a12b34cd5678e9f
      - name: bucket_name
        in: query
        description: |-
          The bucket's name.

          **Note:**

          This parameter is only valid for the `Backblaze` backup type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ChockFullOfNuts
      - name: client_id
        in: query
        description: |-
          The Google Drive client ID.

          **Note:**

          This parameter is only valid for the `GoogleDrive` backup type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: aBcdeFgHIjK123
      - name: client_secret
        in: query
        description: |-
          The Google Drive client secret.

          **Note:**

          This parameter is only valid for the `GoogleDrive` backup type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: aBcde123FgHIjK456
      - name: disabled
        in: query
        description: |-
          Whether to disable the backup destination.

          * `1` — Disable the backup destination.
          * `0` — Enable the backup destination.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: host
        in: query
        description: |-
          The remote server's hostname.

          **Note:**

          This parameter is only valid for the following backup types:
          * `Custom`
          * `FTP`
          * `SFTP`
          * `Rsync`
          * `WebDAV`
          * `S3Compatible`
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: hostname
          example: backups.example.com
      - name: name
        in: query
        description: The backup destination's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: destination_name
      - name: password
        in: query
        description: |-
          The remote server account's password or secret
          access key.

          **Note:**

          This parameter is only valid for the following backup types:
          * `AmazonS3`
          * `Custom`
          * `FTP`
          * `SFTP`
          * `Rsync`
          * `WebDAV`
          * `S3Compatible`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: script
        in: query
        description: |-
          The absolute file path to the user-supplied transport solution script.

          **Note:**

          This parameter is only valid for the `Custom` backup type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /home/backups/beammeupscotty.pl
      - name: type
        in: query
        description: |-
          The type of backup destination.

          * `Custom`
          * `FTP`
          * `Local`
          * `SFTP`
          * `WebDAV`
          * `AmazonS3`
          * `Rsync`
          * `GoogleDrive`
          * `S3Compatible`
          * `Backblaze`

          **Note:**

          This value determines which parameters you can use with the function.

          **Warning:**

          Use any of these encrypted connections to transfer system backup files:

          * Amazon S3™
          * Backblaze
          * GoogleDrive
          * Rsync
          * S3 Compatible
          * SFTP
          * WebDAV with SSL enabled
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Local
          enum:
          - Custom
          - FTP
          - Local
          - SFTP
          - WebDAV
          - AmazonS3
          - Rsync
          - GoogleDrive
          - S3Compatible
          - Backblaze
      - name: username
        in: query
        description: |-
          The remote server account's username.

          **Note:**

          This parameter is only valid for the following backup types:
          * `Custom`
          * `FTP`
          * `SFTP`
          * `Rsync`
          * `WebDAV`
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: folder
        in: query
        description: |-
          The path to the backups directory on the remote server.

          **Note:**

          This parameter is only valid for the following backup types:
          * `AmazonS3`
          * `GoogleDrive`
          * `S3Compatible`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: subfolder
          default: ""
      - name: mount
        in: query
        description: |-
          Whether the path is mounted.

          * `1` — The path is mounted.
          * `0` — The path is **not** mounted.

          **Note:**

          This parameter is only valid for the `Local` backup type.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: no_mount_fail
        in: query
        description: |-
          Whether to fail the backup attempt if the mount fails.

          * `1` — Fail the backup attempt.
          * `0` — Do **not** fail the backup attempt.

          **Note:**

          This parameter is only valid for the `Local` backup type.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: only_used_for_logs
        in: query
        description: |-
          Whether to use this transport only for logs.

          * `1` — This destination will be skipped for regular backups.
          * `0` — Both log and regular backups will be uploaded.

          This setting defaults to 0.
          The only time log files get their own backup is via scripts/remote_log_transfer
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: passive
        in: query
        description: |-
          Whether to use passive FTP.

          * `1` — Use passive FTP.
          * `0` — Use active FTP.

          **Note:**

          This parameter is only valid for the `FTP` backup type.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: passphrase
        in: query
        description: |-
          The private key file's passphrase, if the `authtype` parameter is the `key` value.

          **Note:**

          This parameter is only valid for the following backup types:
          * `SFTP`
          * `Rsync`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: path
        in: query
        description: |-
          The path to the backups directory on the remote server.

          * This parameter is **required** for the `Local` backup type.
          * If you do **not** use this parameter, the system will not set a value.

          **Note:**

          This parameter is only valid for the following backup types:
          * `Backblaze`
          * `Custom`
          * `Local`
          * `FTP`
          * `SFTP`
          * `Rsync`
          * `WebDAV`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: backups
      - name: port
        in: query
        description: |-
          The TCP port to use.

          **Note:**

          * This parameter defaults to the standard port used by the queried backup `type` parameter.
          * This parameter is only valid for the following backup types:
            * `FTP`
            * `SFTP`
            * `Rsync`
            * `WebDAV`
        required: false
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 21
      - name: privatekey
        in: query
        description: |-
          The file path to the private key file, if the `authtype` parameter is the `key` value.

          **Note:**

          This parameter is only valid for the following backup types:
          * `SFTP`
          * `Rsync`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /home/backups/key
      - name: ssl
        in: query
        description: |-
          Whether to use SSL.

          * `1` — Use SSL.
          * `0` — Do **not** use SSL.

          **Note:**

          This parameter is only valid for the `WebDAV` backup type.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: timeout
        in: query
        description: |-
          The session timeout, measured in seconds.

          **Note:**

          * This parameter is **not** valid for the `Local` backup `type` parameter.
          * The default value depends on the `type` parameter's value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 30
      - name: upload_system_backup
        in: query
        description: |-
          Whether to upload system backups.

          * `1` — Upload system backups.
          * `0` — Do **not** upload system backups.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_33"
  /backup_destination_delete:
    get:
      tags:
      - Backups
      - Backup Destination
      summary: Delete a backup destination
      description: This function removes a backup destination from the backup configuration
        file.
      operationId: backup_destination_delete
      parameters:
      - name: id
        in: query
        description: The destination's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "11111111"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_34"
  /backup_destination_get:
    get:
      tags:
      - Backups
      - Backup Destination
      summary: Return a backup destination's settings
      description: Use this function to obtain a backup destination's settings.
      operationId: backup_destination_get
      parameters:
      - name: id
        in: query
        description: The backup destination's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 0W1ei2rd3A4lI5sT6he7Be8st
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_35"
              examples:
                amazons3:
                  summary: type=AmazonS3
                  value:
                    data:
                      aws_access_key_id: access-key-id
                      bucket: s3-bucket-brigade
                      disabled: 0
                      folder: ""
                      id: Sr1ThYOnnBIXUupTcSBYQywk
                      name: Amazon S3
                      timeout: 30
                      type: AmazonS3
                      upload_system_backup: 0
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                backblaze:
                  summary: type=BackBlaze
                  value:
                    data:
                      application_key: keyS3cret
                      application_key_id: appID
                      bucket_id: backblaze-bucket-id
                      bucket_name: backblaze-bucket-name
                      disabled: 0
                      id: c85HdhrAkpiqumuXylEzrOcb
                      name: BackBlaze
                      path: ""
                      timeout: 180
                      type: Backblaze
                      upload_system_backup: 0
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                custom:
                  summary: type=Custom
                  value:
                    data:
                      disabled: 0
                      host: example.com
                      id: Hhd85FsIxbxsLneBMNw1Dmdp
                      name: destination unknown
                      path: ""
                      script: /bin/bacula_start
                      timeout: 30
                      type: Custom
                      upload_system_backup: 0
                      username: scott_bacula
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                ftp:
                  summary: type=FTP
                  value:
                    data:
                      disabled: 0
                      host: example.com
                      id: YXzdB0ZcPZ8daPvRfobqQh6H
                      name: FTP backups
                      passive: 1
                      path: ""
                      port: 21
                      timeout: 30
                      type: FTP
                      upload_system_backup: 0
                      username: backup_daemon
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                google:
                  summary: type=GoogleDrive
                  value:
                    data:
                      client_id: CientID
                      client_secret: backups3crets
                      disabled: 0
                      folder: ""
                      id: N9jC0iMGNbDwIph7m0MfkDd4
                      name: Googlyness
                      timeout: 30
                      type: GoogleDrive
                      upload_system_backup: 0
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                local:
                  summary: type=Local
                  value:
                    data:
                      disabled: 0
                      id: SenJqhJKEEE3rPM4XO7dfBaj
                      mount: 0
                      name: additional local
                      no_mount_fail: 0
                      path: /backup
                      type: Local
                      upload_system_backup: 0
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                rsync:
                  summary: type=Rsync
                  value:
                    data:
                      authtype: password
                      disabled: 0
                      host: example.com
                      id: xOL7IT7cwJhGYYra09hrPU1r
                      name: rsync
                      path: ""
                      port: 22
                      timeout: 30
                      type: Rsync
                      upload_system_backup: 0
                      username: scott_bacula
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                s3compatable:
                  summary: type=S3Compatable
                  value:
                    data:
                      aws_access_key_id: 563DFGHCVD
                      bucket: thepail
                      disabled: 0
                      folder: ""
                      host: osdc.rcc.example.com
                      id: 68UUM_lypmgTi9_fEaG9MIvY
                      name: s3Compatable
                      timeout: 30
                      type: S3Compatible
                      upload_system_backup: 0
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                sftp:
                  summary: type=SFTP
                  value:
                    data:
                      authtype: key
                      disabled: 0
                      host: example.com
                      id: OD5CeyEbHMEmDe0dqhtO3KYl
                      name: SFTPBACKUP
                      path: ""
                      port: 22
                      privatekey: /root/.ssh/the_rsa
                      timeout: 30
                      type: SFTP
                      upload_system_backup: 0
                      username: scott_bacula
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
                webdav:
                  summary: type=WebDAV
                  value:
                    data:
                      disabled: 0
                      host: example.com
                      id: ZlSBGjZEr3HVIqhqsdVgWYOM
                      name: WebDav
                      path: ""
                      port: 8443
                      ssl: 1
                      timeout: 30
                      type: WebDAV
                      upload_system_backup: 0
                      username: scot_bacula
                    metadata:
                      command: backup_destination_get
                      reason: OK
                      result: 1
                      version: 1
  /backup_destination_list:
    get:
      tags:
      - Backups
      - Backup Destination
      summary: Return a list of backup destinations
      description: This function lists backup destinations.
      operationId: backup_destination_list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_36"
  /backup_destination_set:
    post:
      tags:
      - Backups
      - Backup Destination
      summary: Update backup destination settings
      description: Use this function to edit a backup destination's settings.
      operationId: backup_destination_set
      requestBody:
        description: The destination settings.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/BackupDestinationSetParameterType"
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_37"
  /backup_destination_validate:
    get:
      tags:
      - Backups
      - Backup Destination
      summary: Validate a backup destination
      description: This function validates a backup destination.
      operationId: backup_destination_validate
      parameters:
      - name: disableonfail
        in: query
        description: |-
          Whether to disable the backup destination if validation fails.

          * `1` — Disable.
          * `0` — Do **not** disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: id
        in: query
        description: The destination's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 0W1ei2rd3A4lI5sT6he7Be8st
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_38"
  /backup_does_client_id_have_google_credentials:
    get:
      tags:
      - Backups
      - Backup Destination
      summary: Return Google Drive™ client ID credentials
      description: This function returns whether a Google Drive™ client ID credential
        file exists.
      operationId: backup_does_client_id_have_google_credentials
      parameters:
      - name: client_id
        in: query
        description: The user's Google Drive client ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: aBcdeFgHIjK123
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_39"
  /backup_generate_google_oauth_uri:
    get:
      tags:
      - Backups
      - Backup Destination
      summary: Create Google Drive™ OAuth redirect URI
      description: |-
        This function generates a
        [Google Drive™ OAuth redirect URI](https://developers.google.com/identity/protocols/OAuth2InstalledApp).
      operationId: backup_generate_google_oauth_uri
      parameters:
      - name: client_id
        in: query
        description: The Google Drive client ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: aBcdeFgHIjK123
      - name: client_secret
        in: query
        description: |-
          The Google Drive
          [client secret](https://www.oauth.com/oauth2-servers/client-registration/client-id-secret/).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: aBcde123FgHIjK456
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_40"
  /backup_get_transport_status:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return backup transport events' status
      description: This function retrieves the status of any backup transport events
        on the account.
      operationId: backup_get_transport_status
      parameters:
      - name: state
        in: query
        description: "That transport's current state. If you do not specify this parameter,\
          \ the function returns the status of all transports on the account."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: running
      - name: transport_id  or  transport_name
        in: query
        description: "The transport's ID or the transport's name. If you do not specify\
          \ this parameter, the function returns all transports on the account."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: transportname
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_41"
  /backup_list_transported:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return backup files sent through transport
      description: This function lists backup files that the system sent through a
        specified additional backup transport.
      operationId: backup_list_transported
      parameters:
      - name: transport
        in: query
        description: |-
          The transport ID.

          If you do not specify this parameter, the function returns backup information for all transports.

          **Note:**

          You may obtain the IDs for all configured transports by calling WHM API 1's `backup_destination_list` function.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: nN04BhzirlJUNSLSBXSMBEYG
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_42"
  /backup_set_list:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return backup files in the local disk
      description: This function lists backup files for the server's accounts in the
        local disk.
      operationId: backup_set_list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_43"
  /backup_set_list_combined:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return backup files for the server's accounts
      description: This function lists locally-stored and backup-destination stored
        backup files for the server's accounts.
      operationId: backup_set_list_combined
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_44"
  /backup_skip_users_all:
    get:
      tags:
      - Backups
      - Backup Settings
      summary: Enable or disable backups
      description: This function enables and disables the backup and legacy backups.
      operationId: backup_skip_users_all
      parameters:
      - name: backupversion
        in: query
        description: |-
          The type of backup.
            * `backup` - Standard backups.
            * `legacy` - Legacy backups.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: backup
          enum:
          - backup
          - legacy
      - name: state
        in: query
        description: |-
          Whether to enable the backup type that the `backupversion` parameter
          specifies for all users.
            * `1` - Enable.
            * `0` - Disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_45"
  /backup_skip_users_all_status:
    get:
      tags:
      - Backups
      - Backup Settings
      summary: Return backup configuration status
      description: This function checks each user's backup configuration status while
        the `backup_skip_users_all` function runs.
      operationId: backup_skip_users_all_status
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_46"
  /backup_user_list:
    get:
      tags:
      - Backups
      - Backup Settings
      summary: Return users with a backup file
      description: "This function lists users with a backup file, stored locally or\
        \ on additional backup destinations, on a specified date."
      operationId: backup_user_list
      parameters:
      - name: restore_point
        in: query
        description: The desired date.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ISO-8601 Date
          example: 2014-10-10T00:00:00.000Z
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_47"
  /batch:
    get:
      tags:
      - API Execution
      summary: Run multiple WHM API 1 functions
      description: This function combines calls for multiple WHM API 1 functions.
      operationId: batch
      parameters:
      - name: command
        in: query
        description: |-
          The WHM API 1 function to call.

          **Important:**

          Specify a `command` parameter for each function.

          **Note:**

          Include the function's input parameters as a URI-encoded list after the function name.
          For example, to call the `killdns` function with a `domain` parameter value of `example.com`
          directly you would use:

            `killdns?domain=example.com`

          To call this function using the `batch` function, URI-encode the command and pass it as part of the `batch` function:

            `/json-api/batch?api.version=1&command=killdns%3Fdomain%3Dexample.com`

          You can call the same function multiple times within a single batch API call. For example:

            `/json-api/batch?api.version=1&command=version&command=version&command=version`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: version
      - name: abort_on_error
        in: query
        description: |-
          Whether to stop processing remaining commands in the batch when a command returns an error.

          * `1` — Do **not** process remaining commands in the batch when an error occurs.
          * `0` — When an error occurs, process the remaining commands in the batch.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_48"
  /batch_create_cphulk_records:
    post:
      tags:
      - cPHulk
      - Management
      summary: Add login security record to list with comment
      description: This function adds one or more records to cPHulk's whitelist or
        blacklist. The function includes the option to add unique comments for each
        IP address that you add.
      operationId: batch_create_cphulk_records
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/batch_create_cphulk_records_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_49"
  /block_incoming_email_from_country:
    get:
      tags:
      - Mail
      - Spam Management
      summary: Add block on emails from specific countries
      description: This function blocks email from specific countries.
      operationId: block_incoming_email_from_country
      parameters:
      - name: country_code
        in: query
        description: |-
          The country to block.
          The [ISO 3166-1 alpha-2 code](https://www.iso.org/iso-3166-country-codes.html) two-letter country code.

          **Warning:**

          Do **not** block the `ZZ` country code if the server uses a [NAT](https://docs.cpanel.net/knowledge-base/general-systems-administration/1-1-nat/) configuration.

          **Note:**

            * To search all available country codes, read the ISO's [Full list of Country Codes](https://www.iso.org/obp/ui) documentation.
            * To block multiple countries, duplicate or increment the parameter name. For example: `country_code-1`, `country_code-2`, and `country_code-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple country codes.
            value: country_code-1=AA country_code-2=AB country_code-3=AC
          single:
            summary: A single country code.
            value: AA
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_50"
  /block_incoming_email_from_domain:
    get:
      tags:
      - Mail
      - Spam Management
      summary: Add block on emails from specific domains
      description: This function blocks email from specific domains.
      operationId: block_incoming_email_from_domain
      parameters:
      - name: domain
        in: query
        description: |-
          The domain to block.

          **Note:**

          * The function returns `0` for the `updated` return if the server already blocks that domain.
          * An FQDN requires **at least** [a label, a dot (`.`), and a top-level domain (TLD)](https://en.wikipedia.org/wiki/Domain_name#Domain_name_syntax).
          * Enter an asterisk (`*`) to represent [a wildcard label or TLD](https://en.wikipedia.org/wiki/Wildcard_DNS_record).
          * To block multiple domains, duplicate or increment the parameter name.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example.com domain-1=example1.com domain-2=example2.com
          multiple-alternative:
            summary: Multiple domains.
            value: domain=example.com domain=example1.com domain=example2.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_51"
  /changepackage:
    get:
      tags:
      - Packages
      - Account Management
      summary: Update user hosting plan
      description: This function changes a cPanel account's hosting plan (package).
      operationId: changepackage
      parameters:
      - name: pkg
        in: query
        description: The hosting plan's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: package1
      - name: user
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_52"
  /check_remote_ssh_connection:
    get:
      tags:
      - SSH Keys and Connections
      summary: Validate SSH connection to another server
      description: This function tests an SSH connection to another server.
      operationId: check_remote_ssh_connection
      parameters:
      - name: host
        in: query
        description: The remote server's hostname.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: port
        in: query
        description: The remote server's port number.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 22
          default: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_53"
  /cluster_member_has_trust_with:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Return whether DNS cluster server can share records
      description: |-
        This function queries whether nameservers in a DNS cluster can share records with one another. Servers in a DNS cluster **must** exist in a [Reverse Trust relationship](https://go.cpanel.net/whmdocsDNSCluster) to share information. This relationship requires each server to have an [API token](https://go.cpanel.net/ManageAPITokens).

        **Note:**

          DNS servers in a Write-Only role do not need to exist in a Reverse Trust relationship. For more information, read our [Guide to DNS Cluster Configurations](https://go.cpanel.net/DNSClusterConfig) documentation.
      operationId: cluster_member_has_trust_with
      parameters:
      - name: host
        in: query
        description: The nameserver's IP address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.0.2.0
      - name: althost
        in: query
        description: "The nameserver's alternate IP address. This is useful, for example,\
          \ if your DNS cluster exists in a\_NAT-configured network."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.0.3.0
          default: ""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_54"
  /configurebackgroundprocesskiller:
    get:
      tags:
      - Server Administration
      - Services
      summary: Update background process stopper
      description: This function configures the server's background process killer.
      operationId: configurebackgroundprocesskiller
      parameters:
      - name: processes_to_kill
        in: query
        description: |-
          A process to kill in the `/usr/local/cpanel/etc/sym` directory.

          **Note:**

          To enable the background killer for multiple processes, duplicate or increment the parameter name.

          For example, `processes_to_kill`, `processes_to_kill-0`, and `processes_to_kill-1`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Kill multiple processes.
            value: "eggdrop-0, eggdrop-1, eggdrop-2"
          single:
            summary: Kill a single process.
            value: eggdrop
      - name: trusted_users
        in: query
        description: |-
          Unaffected users. If you do not specify a value, the function affects all of the users on the server.

          **Note:**

          To trust multiple users, duplicate or increment the parameter name.

          For example, `trusted_users`, `trusted_users-0`, and `trusted_users-1`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_55"
  /configureservice:
    get:
      tags:
      - Server Administration
      - Services
      summary: Enable or disable a service and its monitoring
      description: |-
        This function enables or disables a service and its monitoring.

        **Note:**

        If the user only possesses the `clustering`
        [Access Control List (ACL)](https://go.cpanel.net/ACLReferenceChart),
        then this function can only act on the `named` service.
      operationId: configureservice
      parameters:
      - name: service
        in: query
        description: |-
          The service to configure. For more information about each service, read our
          [*Service Manager*](https://go.cpanel.net/whmdocsServiceManager)
          documentation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mysql
          enum:
          - apache_php_fpm
          - cpanel-dovecot-solr
          - cpanel_php_fpm
          - cpanellogd
          - cpdavd
          - cphulkd
          - cpsrvd
          - crond
          - dnsadmin
          - exim
          - exim-altport
          - ftpd
          - httpd
          - imap
          - ipaliases
          - lmtp
          - mailman
          - mysql
          - named
          - nscd
          - p0f
          - pop
          - postgresql
          - queueprocd
          - rsyslogd
          - spamd
          - sshd
      - name: enabled
        in: query
        description: |-
          Whether to enable the service.

          * `1` — Enable.
          * `0` — Disable.

          If you do not use this parameter, the function will **not** change
          the enabled status of the service.

          **Warning:**

          Do **not** use this function to disable the `cpsrvd` service.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: exim-altportnum
        in: query
        description: |-
          A port or list of comma-separated ports on which Exim will listen for
          inbound connections.

          **Note:**

          The function **only** uses this parameter if you set `exim-altport` as
          the `service` parameter's value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "26, 5000, 6000"
          default: "26"
      - name: monitored
        in: query
        description: |-
          Whether to monitor the service in WHM's
          [*Service Status*](https://docs.cpanel.net/whm/server-status/service-status/)
          interface (*WHM >> Home >> Server Status >> Service Status*).

          * `1` — Monitor.
          * `0` — Do **not** monitor.

          If you do not use this parameter, the function will **not** change the
          monitoring status of the service.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_56"
  /convert_addon_fetch_conversion_details:
    get:
      tags:
      - Domain Information
      summary: Return additional domain conversion details
      description: |-
        This function returns the details of a conversion from an addon
        domain to an account. Use WHM API 1's `convert_addon_domain_to_account`
        to start a conversion.

        **Important:**

        When you disable the
        [Web Server role](https://go.cpanel.net/howtouseserverprofiles),
        the system **disables** this function.
      operationId: convert_addon_fetch_conversion_details
      parameters:
      - name: job_id
        in: query
        description: The conversion's job identification number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 2
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_57"
  /convert_addon_fetch_domain_details:
    get:
      tags:
      - Domain Information
      summary: Return additional domain data
      description: |-
        This function retrieves domain data for an addon domain.

        **Important:**

        When you disable the
        [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: convert_addon_fetch_domain_details
      parameters:
      - name: domain
        in: query
        description: The addon domain for which to retrieve details.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_58"
  /convert_addon_get_conversion_status:
    get:
      tags:
      - Domain Information
      summary: Return conversion status for additional domain
      description: |-
        This function returns the status of the convert addon domain to
        account process for specified conversion jobs. For data about the conversion
        status of all jobs, use the WHM API 1 `convert_addon_fetch_conversion_details`
        function.

        **Important:**

        When you disable the
        [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: convert_addon_get_conversion_status
      parameters:
      - name: job_id
        in: query
        description: |-
          The conversion's job identification number.

          **Note:**

          To list entries for multiple conversion jobs, increment the parameter name. For example: `job_id-0`, `job_id-1`, and `job_id-2`.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
        examples:
          multiple:
            summary: Get the status for multiple conversion jobs.
            value: job_id-1=10&job_id-2=33&job_id-3=15
          single:
            summary: Get status for a single conversion job.
            value: 10
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_59"
  /convert_addon_initiate_conversion:
    get:
      tags:
      - Domain Information
      summary: Start additional domain conversion
      description: |-
        This function initiates the conversion process for an addon domain
        into a cPanel account.

        **Note:**

        For information about the data that the system migrates when you convert an
        addon domain, read our
        [Addon Domain Conversion List documentation](https://go.cpanel.net/AddonConversionList).

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles),
        the system **disables** this function.
      operationId: convert_addon_initiate_conversion
      parameters:
      - name: domain
        in: query
        description: The addon domain to convert into an account's main domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: username
        in: query
        description: The username for a specified account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: copymysqldb-*
        in: query
        description: |-
          Copy a MySQL® database from the source account to the new account with a new
          database name.

          This parameter's format consists of `copymysqldb`, a hyphen, and the name of
          the existing database. For example, `copymysqldb-olddatabase`.

          If you do **not** specify this parameter, the system does **not** copy any MySQL
          databases to the new account.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Copy multiple databases.
            value: copymysqldb-olddatabase1=newdatabase1 copymysqldb-olddatabase2=newdatabase2
          single:
            summary: Copy a single database.
            value: newdatabase
      - name: movemysqldb
        in: query
        description: |-
          Move the specified MySQL database from the source account to the new account.

          If you do **not** specify this parameter, the system does **not** move any MySQL
          databases to the new account.

          **Note:**

          To move multiple databases, increment the parameter name. For example, `movemysqldb-1`,
          `movemysqldb-2`, and `movemysqldb-3`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Move multiple databases.
            value: movemysqldb-1=exampledb1 movemysqldb-2=exampledb2 movemysqluser-3=exampledb3
          single:
            summary: Move a single database.
            value: exampledb
      - name: movemysqluser
        in: query
        description: |-
          Move the specified MySQL database user from the source account into the new
          MySQL database account.

          If you do **not** specify this parameter, the system does **not** move any MySQL
          database users to the new account.

          **Note:**

          To move multiple database users, increment the parameter name. For example, `movemysqluser-1`,
          `movemysqluser-2`, and `movemysqluser-3`.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Move multiple database users.
            value: movemysqluser-1=dbuser1 movemysqluser-2=dbuser2 movemysqluser-3=dbuser3
          single:
            summary: Move a single database user.
            value: dbuser1
      - name: pkgname
        in: query
        description: The hosting package that you want to assign to the new account.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: mycustompkg
          default: default
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_60"
  /convert_addon_list_addon_domains:
    get:
      tags:
      - Domain Information
      summary: Return current user's additional domains
      description: |-
        This function returns a list of addon domains that belong to the current user.

        **Important:**
        When you disable the [Web Server role](https://https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: convert_addon_list_addon_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_61"
  /convert_addon_list_conversions:
    get:
      tags:
      - Domain Information
      summary: Return additional domains conversion queue
      description: |-
        This function returns a list of addon domains undergoing conversion
        into cPanel accounts.

        **Important:**

        When you disable the [Web Server role](https://https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: convert_addon_list_conversions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_62"
  /convert_all_domains_to_fpm:
    get:
      tags:
      - PHP-FPM
      summary: Enable PHP-FPM on all domains
      description: |-
        This function activates PHP-FPM for any non-PHP-FPM domains on a server.

        **Important:**

        When you disable the [*Web Server*](https://go.cpanel.net/howtouseserverprofiles) role, the system **disables** this function.

        **Warning:**

        We **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM on a server with less than the required RAM, your server may experience severe performance issues.
      operationId: convert_all_domains_to_fpm
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_63"
  /convert_and_migrate_from_legacy_config:
    get:
      tags:
      - Backups
      - Legacy Migration
      summary: Migrate server to new backup system
      description: This function converts and migrates a server from the Legacy Backup
        system to the Backup system.
      operationId: convert_and_migrate_from_legacy_config
      parameters:
      - name: no_convert
        in: query
        description: |-
          Whether to convert the server from the Legacy Backup system to
          the Backup system.
           * `1` — Convert.
           * `0` — Do **not** convert.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_64"
  /convertopensshtoputty:
    get:
      tags:
      - SSH Keys and Connections
      summary: Migrate OpenSSH key to PuTTY format
      description: |-
        This function converts an OpenSSH private key to a PuTTY key.

        **Warning:**

        Do **not** transfer private keys over insecure ports.
      operationId: convertopensshtoputty
      parameters:
      - name: file
        in: query
        description: The private key file's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: KeyFile
      - name: keep_file
        in: query
        description: |-
          Whether to keep the OpenSSH file on the server after conversion.
          * `1` — Keep the file.
          * `0` — Delete the file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: passphrase
        in: query
        description: The private key file's passphrase.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
          default: ""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_65"
  /cors_proxy_get:
    get:
      tags:
      - API Execution
      summary: Enable CORS HTTP requests
      description: This function allows your system to perform Cross-Origin Resource
        Sharing (CORS) HTTP requests.
      operationId: cors_proxy_get
      parameters:
      - name: url
        in: query
        description: The website that you wish to access.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://www.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_66"
      x-cpanel-internal-only: false
  /cpanel:
    get:
      tags:
      - API Execution
      summary: Run cPanel API or UAPI function
      description: |-
        You can call cPanel API and UAPI functions through the WHM API.

        This method is useful, for example, when you develop plugins for WHM users, particularly resellers, but need to access cPanel functions. You can make these calls from within either the WHM or cPanel interfaces.

        **Important:**

        We recommend that you use the WHM API 1 `uapi_cpanel` function. The `uapi_cpanel` function is a more flexible way to call cPanel API functions from WHM. For example, you can use the `uapi_cpanel` function with the WHM API 1 `batch` function.

        Before calling a cPanel API function via this method, read its documentation. The cPanel API function may require other parameters **not** listed in this document.
      operationId: cpanel
      parameters:
      - name: cpanel_jsonapi_func
        in: query
        description: |-
          The UAPI function name.

          **Important:**

          Function names are **case-sensitive**.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: listpopswithdisk
      - name: cpanel_jsonapi_module
        in: query
        description: |-
          The UAPI module name.

          **Important:**

          Module names are **case-sensitive**.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Email
      - name: cpanel_jsonapi_user
        in: query
        description: |-
          The cPanel username for the account through which to call the function.

          Make **certain** that you specify the username in lowercase characters **only**. cPanel & WHM automatically converts usernames to lowercase when you create a cPanel account. For this reason, if you supply a username that includes some or all capital letters, the call will fail.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: user
      - name: cpanel_jsonapi_apiversion
        in: query
        description: |-
          The cPanel API version to use.
          * `1` — Use cPanel API 1.
          * `2` — Use cPanel API 2.
          * `3` — Use UAPI.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 3
          default: 2
          enum:
          - 1
          - 2
          - 3
      - name: Variable Names and Values
        in: query
        description: |-
          The function's input parameters and their values. You can add any additional parameters supported by the underlying cPanel API function.

          Example: `domain=example.com`

          **Note:**
          * Separate multiple `parameter=value` pairs with the ampersand character (`&`).
          * You **must** URI-encode these values.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_67"
  /cpgreylist_is_server_netblock_trusted:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Return Greylisting trust status of server netblock
      description: This function returns the Greylisting trusted status of the server's
        netblock.
      operationId: cpgreylist_is_server_netblock_trusted
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_68"
  /cpgreylist_list_entries_for_common_mail_provider:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Return Greylisting IP addresses of mail providers
      description: This function lists Greylisting's IP addresses for the specified
        mail provider.
      operationId: cpgreylist_list_entries_for_common_mail_provider
      parameters:
      - name: provider
        in: query
        description: |-
          The mail provider.

          **Note:**

           * To list entries for multiple mail providers, increment the parameter name. For example, `provider-0`, `provider-1`, and `provider-2`.
           * Call WHM API 1's `cpgreylist_load_common_mail_providers_config` function to return a list of valid provider keys.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: List multiple mail provider entries.
            value: provider-0=example-0 provider-1=example-1 provider-2=example-2
          single:
            summary: List a single mail provider entry.
            value: cpanel
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_69"
  /cpgreylist_load_common_mail_providers_config:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Return Greylisting mail providers
      description: This function returns Greylisting's list of common mail service
        providers.
      operationId: cpgreylist_load_common_mail_providers_config
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_70"
  /cpgreylist_save_common_mail_providers_config:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Update Greylisting new mail provider handling
      description: This function sets whether Greylisting trusts new entries to cPanel's
        common mail providers list.
      operationId: cpgreylist_save_common_mail_providers_config
      parameters:
      - name: autotrust_new_common_mail_providers
        in: query
        description: |-
          Whether Greylisting automatically trusts new mail providers that cPanel adds to the common mail providers list.

          * `1` — Automatically trust new mail providers cPanel adds to the common mail providers list.
          * `0` — Do **not** automatically trust new mail providers cPanel adds to the common mail providers list.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: PROVIDERKEY
        in: query
        description: |-
          Whether Greylisting automatically trusts new IP addresses that cPanel adds to this mail provider.

          * `1` — Automatically trust new IP addresses cPanel adds to this mail provider.
          * `0` — Do **not** automatically trust new IP addresses cPanel adds to this mail provider.

          If you do not specify this parameter, the system will **not** change Greylisting settings for **any** existing provider.

          **Note:**

           The parameter's name is the provider's key name.
           Example key and value:
           * `google=0`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_71"
  /cpgreylist_status:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Return Greylisting status
      description: This function returns the status of Greylisting.
      operationId: cpgreylist_status
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_72"
  /cpgreylist_trust_entries_for_common_mail_provider:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Add mail provider to Greylisting trusted hosts
      description: This function marks the IP addresses for the specified mail provider
        as trusted. Greylisting will not defer emails from trusted IP addresses.
      operationId: cpgreylist_trust_entries_for_common_mail_provider
      parameters:
      - name: provider
        in: query
        description: |-
          The mail providers’ names.

          Call the `cpgreylist_load_common_mail_providers_config` API function
          to retrieve the system’s recognized provider names.

          **Note:**

           To trust multiple mail providers, increment the parameter name (for example: `provider-0`, `provider-1`, and `provider-2`).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel
        examples:
          multiple:
            summary: Trust multiple mail providers.
            value: provider-1=cpanel&provider-2=google
          single:
            summary: Trust a single mail provider.
            value: cpanel
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_73"
  /cpgreylist_untrust_entries_for_common_mail_provider:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Add mail provider to Greylisting non-trusted hosts
      description: |-
        This function marks the IP addresses for the specified mail provider as not trusted.
        Greylisting defers emails from non-trusted IP addresses.
      operationId: cPGreyList-cpgreylist_untrust_entries_for_common_mail_provider
      parameters:
      - name: provider
        in: query
        description: |-
          The mail provider.

          **Note:**

          To trust multiple mail providers,
           increment the parameter name. For example, provider-0, provider-1, provider-2.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel
        examples:
          multiple:
            summary: Trust multiple mail providers
            value: provider-1=10 provider-2=33 provider-3=15
          single:
            summary: Trust a single mail provider
            value: "1"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_74"
  /cphulk_status:
    get:
      tags:
      - cPHulk
      - Management
      summary: Return login security status
      description: This function returns the status of the cPHulk service.
      operationId: cphulk_status
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_75"
  /create_account_enhancement:
    get:
      tags:
      - Account Enhancements
      summary: Create Account Enhancement
      description: This function creates a new account enhancement.
      operationId: create_account_enhancement
      parameters:
      - name: id
        in: query
        description: |-
          The identifier of the item you are targeting.

          **Note:**
          * You must use an [account enhancements ID](https://go.cpanel.net/add-account-enhancements) that a 3rd-party plugin defines.
          * To return a list of valid account enhancement IDs, run the WHM API 1 `list_account_enhancements` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: sample-enhancement-id
      - name: name
        in: query
        description: The name of the account enhancement.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 80
          type: string
          example: featurename 5000
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_76"
  /create_cpgreylist_trusted_host:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Add IP address to Greylisting trusted hosts
      description: This function adds an IP address to the *Greylisting Trusted Hosts*
        list.
      operationId: cPGreyList-create_cpgreylist_trusted_host
      parameters:
      - name: ip
        in: query
        description: |-
          The record's IP address, or a range of IP addresses.

          **Note:**

          To add multiple IP addresses, increment the parameter name. For example, `ip-1`, `ip-2`, and `ip-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 192.168.0.1
        examples:
          multiple:
            summary: To add multiple IP addresses.
            value: ip-1=192.168.0.1&ip-2=192.168.0.2&ip-3=192.168.0.3
          single:
            summary: To add a single IP address.
            value: 192.168.0.1
      - name: comment
        in: query
        description: A comment.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
          example: NoComment
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_77"
  /create_cphulk_record:
    get:
      tags:
      - cPHulk
      - Management
      summary: Add login security record to list
      description: This function adds a new record or records to cPHulk's whitelist
        or blacklist.
      operationId: create_cphulk_record
      parameters:
      - name: ip
        in: query
        description: |-
          The record's IP address, if there is only one IP address to add.

          **Note:**

          To add multiple IP addresses, increment the parameter name. For example, `ip-1`, `ip-2`, and `ip-3`.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/ip-address"
        examples:
          multiple:
            description: Add multiple IP addresses.
            value:
            - 192.168.0.1
            - 192.168.0.2
            - 192.168.0.3
          single:
            description: Add a single IP address.
            value:
            - 192.168.0.1
      - name: list_name
        in: query
        description: "The cPHulk list's name.\n\n* `black` - Add a new record or records\
          \ to the blacklist.\n* `white` - Add a new record or records to the whitelist. "
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: white
          enum:
          - black
          - white
      - name: comment
        in: query
        description: A comment to include.
        required: false
        style: form
        explode: true
        schema:
          maximum: 255
          type: string
          example: George Wendt flying through the air.
      - name: skip_enabled_check
        in: query
        description: "Whether to skip checking if cPHulk runs on the server.\n\n*\
          \ `1` - Do **not** check if cPHulk is running.\n* `0` - Check if cPHulk\
          \ is running.\n\n**Note:**\n\n If cPHulk is disabled and you check its status,\
          \ the function returns the following message: `cPHulk is disabled on the\
          \ server.` "
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_78"
  /create_featurelist:
    get:
      tags:
      - Packages
      - Feature Lists
      summary: Create feature list
      description: |-
        This function creates or updates a feature list.

        **Note:**

        A reseller **must** possess the
        [Add/Remove Package feature](https://docs.cpanel.net/whm/resellers/edit-reseller-nameservers-and-privileges/#packages)
        to use this function.
      operationId: create_featurelist
      parameters:
      - name: featurelist
        in: query
        description: The feature list's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: CustomFeatureList
      - name: featurelistname
        in: query
        description: |-
          Whether to add a specific feature in the feature list.

          * `1` — Add the feature.
          * `0` — Do **not** add the feature.

          **Note:**

          * The parameter's name is a feature's name. For example, the `changemx=1`
          adds the *Change Mail Exchanger* feature to the feature list.

          * You can add or omit multiple features.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: overwrite
        in: query
        description: |-
          Whether to overwrite an existing feature list.

          * `1` — Overwrite.
          * `0` — Do **not** overwrite.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_79"
  /create_integration_group:
    get:
      tags:
      - Integration
      - Links
      summary: Create integration link group
      description: This function creates a group to store integrations links in the
        cPanel interface.
      operationId: create_integration_group
      parameters:
      - name: group_id
        in: query
        description: |-
          The group's ID within the system.

          **Warning:**

           If you create a link with a `group_id` value that already exists, the function replaces the existing group with the newly-created group.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WHMCS
      - name: label
        in: query
        description: The label for the group to display in the cPanel interface.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WHMCS+Control
      - name: order
        in: query
        description: |-
          The order in which to display the group in the cPanel interface.

          **Note:**

           By default, the function will automatically create an item under the username menu in the interface header.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      - name: user
        in: query
        description: The cPanel account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_80"
  /create_integration_link:
    get:
      tags:
      - Integration
      - Links
      summary: Create integration link
      description: |-
        This function creates an integration link in the cPanel interface.

        **Note:**

        The function creates the `APP.adminconfig` and `APP.userconfig` integration link files in the `/var/cpanel/integration/links/USERNAME` directory, where `APP` represents the application name and `USERNAME` represents the user for whom you create integration links.
      operationId: create_integration_link
      parameters:
      - name: app
        in: query
        description: |-
          The application to link.

          **Note:**
          * If you create a link with an `app` value that already exists, the function will replace the existing link with the newly-created link.
          * The value you assign to the `app` parameter is how you identify that integration link when listing or removing integration links.
          * You may include underscore (`_`) characters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WHMCS_billing
      - name: implements
        in: query
        description: |-
          The service for which to implement authentication.

          **Note:**

          This is a string from the `get_users_links` function. The function typically returns one of the following values.

          * `billing` - This link appears in the user menu
          * `customer_service` - This link appears in the user menu
          * `support` - This link appears in the user menu
          * `upgrade` - This link appears in the user menu and context-sensitive areas when the user may require more of a resource
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: billing
      - name: label
        in: query
        description: The label to display in the cPanel login interface.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WHMCS Billing
      - name: subscriber_unique_id
        in: query
        description: The subscriber's unique ID that the system will present to the
          URL in the `autologin_token_url` endpoint.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "1234"
      - name: token
        in: query
        description: The token that the system will present to the URL in the `autologin_token_url`
          endpoint.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: subway
      - name: user
        in: query
        description: The cPanel account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: autologin_token_url
        in: query
        description: |-
          The URL to which the server will send the `app`, `token`, `user`, and `subscriber_unique_id` values through an `HTTP POST` request. The destination server will respond with a JSON-encoded object with either a `redirect_url` key or the `retry` and `attempt` keys.

          **Note:**

          * You **must** include either the `autologin_token_url` parameter, the `url` parameter, or both.
          * If you do not set the `autologin_token_url` parameter, or that server does not respond or exist, then the server will redirect the user to the location in the `url` parameter.
          * If the response contains `redirect_url`, the system will redirect the user to that URL. (For example:, `{"redirect_url":" http://www.whmcs.com/client_area/login/?one_time_user_token_that_expires_in_120_seconds=d41d8cd98f00 ”}` will send the user to that unique URL.)
          * If the response contains `retry` and `attempt`, the system will wait for the retry value in seconds for a maximum of 60 seconds and then attempt the call again. The attempt value indicates the number of attempts that your system has tried. The system will stop after three attempts. (For example, `{"retry":30, "attempt":2}` represents the second attempt to connect, and the system will pause the user for 30 seconds before it tries again.)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: json
          example: http://www.example.com/login.cgi
      - name: base64_png_image
        in: query
        description: |-
          The icon image.

          **Note:**

          If you **do not** specify a value, the interface uses a standard puzzle piece icon.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: base64 image
          example: iVBORw0KGgoAAAANSUhEUgAAAJgAAADYCAYAAA AXmipNAAAACXBIWXMAAALVAAAC1QHAwm8lAAAAGXRFWHRTb2Z0d2FyZQB
            3d3cuaW5rc2NhcGUub3Jnm+48GgAAAUNJREFUeJztziFKg2EABuD3+ydz qGBwiGBZ385hstoMu4DNA8w7eIuBRUyWBYvJsC6CYWCwGGSy7bN6AOFn8
            DwneJI/6mTYreNBryYl8A9KktTxoJfu0W66y3mSw6Q8pD+/LJNsWv6x5Z p6NbzJ/sF7uj/3Sf3OJqPUep6P0WnbObZfk1qu02zOks0spXylk+eUvOS
            4v2g7x/bbSamPSecuqZ+p5TbN6inLvbcyma3azrH9Sr1IJyejQcq6yWL0 WqbTddspAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            AANr0C5EmMYv5JZrpAAAAAElFTkSuQmCC
      - name: group_id
        in: query
        description: |-
          The group ID in which to add the icon of the linked service.

          * `files`
          * `databases`
          * `domains`
          * `email`
          * `metrics`
          * `security`
          * `software`
          * `advanced`
          * `pref`

          **Note:**

          If you **do not** specify a value, the function automatically creates an item under the username menu in the interface header.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: advanced
          enum:
          - files
          - databases
          - domains
          - email
          - metrics
          - security
          - software
          - advanced
          - pref
      - name: hide
        in: query
        description: |-
          Whether the cPanel interface will display the integration link.

           * `1` - Do **not** display the link.
           * `0` - Display the link.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: order
        in: query
        description: The order in which to display the icon in the cPanel interface
          inside the `group_id` group.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "999"
      - name: url
        in: query
        description: |-
          The URL to which to send the user if the `autologin_token_url` location does not respond or is not present.

          **Note:**

          * You **must** include either the `autologin_token_url` parameter, the `url` parameter, or both.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://www.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_81"
  /create_parked_domain_for_user:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Create domain alias
      description: This function creates an alias (parks a domain on a web virtual
        host).
      operationId: create_parked_domain_for_user
      parameters:
      - name: domain
        in: query
        description: The domain name to park.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: park.example.com
      - name: username
        in: query
        description: The cPanel user account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: web_vhost_domain
        in: query
        description: |-
          An existing web virtual host to which the new domain name should be added.

          **Note:**

           If this is not the cPanel account’s main domain, then the system will consider the new domain to be an [addon domain](https://go.cpanel.net/cpaneldocsAddonDomains).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: vhost.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_82"
  /create_remote_root_transfer_session:
    get:
      tags:
      - Transfers
      - cPanel Account Transfer
      summary: Create remote server transfer session as root user
      description: |-
        This function creates a transfer session as the `root` user.

        **Important:**

          For information about the ports that cPanel & WHM uses, read our [How to Configure Your Firewall for cPanel Services](https://go.cpanel.net/firewall) documentation.

        **Note:**

          For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.

        ### Authentication
        There are several methods that you can use to authenticate a transfer session with the remote server:

        #### Authenticate as root
        If you use SSH to authenticate as the `root` user, the remote server's SSH must accept `root` logins. For more information read [OpenSSH's `sshd_config`](https://linux.die.net/man/5/sshd_config) documentation.

        The following table displays the correct parameters and values for this authentication method:

        | Parameter | Value |
        |-|-|
        | `user` | `root` |
        | `password` | `root`'s password |

        You can also use an SSH public key to authenticate the `root` user. If the SSH public key is encrypted, include the SSH key's passphrase.

        The following table displays the correct parameters and values for this authentication method:

        | Parameter | Value if the SSH Key is not encrypted | Value if the SSH Key is encrypted |
        |-|-|-|
        | `user` | `root` | `root` |
        | `sshkey_name` | The `root` user's SSH key. | The `root` user's SSH key. |
        | `sshkey_passphrase` | *(none)* | The `root` user's SSH key passphrase. |

        #### Authenticate as a user
        Many server administrators do not permit direct `root` logins via SSH on their servers.
        * If the remote server forbids root logins, you **must** use another user and their password on the remote server, and then escalate to the `root` user. For more information read [OpenSSH's `sshd_config`](https://linux.die.net/man/5/sshd_config) documentation.
        * If the system administrator used WHM's [*Manage Wheel Group Users*](https://go.cpanel.net/whmdocsManageWheelGroupUsers) interface (*WHM >> Home >> Security Center >> Manage Wheel Group Users*) to grant the user `su` access, then you will need to specify `su` and the `root` password.
        * If the user has `sudo` access, you do **not** need the `root` password.

        The following table displays the correct parameters and values for this authentication method:

        | Parameter | Value if the user has sudo access | Value if the user has su access |
        |-|-|-|
        | `user` | The username. | The username. |
        | `password` | The user's password. | The user's password. |
        | `root_escalation_method` | `sudo` | `su` |
        | `root_password` | *(none)* | The `root` user's password. |

        You can also use an SSH public key instead of a password to authenticate that user. If the SSH public key is encrypted, include the SSH key's passphrase.

        The following table displays the correct parameters and values for this authentication method:

        | Parameter | sudo | su |
        |-|-|-|
        | `user` | The username. | The username. |
        | `sshkey_name` | The user's SSH key. | The user's SSH key. |
        | `sshkey_passphrase` (If encrypted) | The user's SSH key passphrase. | The user's SSH key passphrase. |
        | `root_escalation_method` | `sudo` | `su` |
        | `root_password` | *(none)* | The `root` user's password. |
      operationId: create_remote_root_transfer_session
      parameters:
      - name: comm_transport
        in: query
        description: |-
          The method by which the transfer system will execute commands on the remote system.
          * `ssh` — Use SSH. The function uses the remote server's indicated SSH `port` value.
          * `whostmgr` — Use the remote server's secure WHM port. This will reject invalid  TLS handshakes.
          * `whostmgr_insecure` — Use the remote server's secure WHM port, but **ignores** any TLS verification failures.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ssh
          default: ssh
          enum:
          - ssh
          - whostmgr
          - whostmgr_insecure
      - name: compressed
        in: query
        description: |-
          Whether to compress data before transfer.
          * `1` — Compress.
          * `0` — Do **not** compress.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: copy_reseller_privs
        in: query
        description: |-
          Whether to transfer reseller privileges.
          * `1` — Transfer.
          * `0` — Do **not** transfer.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: enable_custom_pkgacct
        in: query
        description: |-
          Whether to use a custom `pkgacct` scripts on the remote server for the transfer session.
          * `1` — Use a custom `pkgacct` script.
          * `0` — Do **not** use a custom script.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: host
        in: query
        description: The remote server's hostname or IP address.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host"
        example: 192.168.0.0
      - name: low_priority
        in: query
        description: |-
          Whether to run the remote server processes at low priority in order to reduce impact on server performance.
          * `1` — Run at low priority.
          * `0` — Run at high priority.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: restore_threads
        in: query
        description: The number of CPU threads to use for restore sessions.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      - name: transfer_threads
        in: query
        description: The number of CPU threads to use for transfer sessions.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      - name: unencrypted
        in: query
        description: |-
          Whether to not use SSL to encrypt data.
          * `1` — Do **not** use SSL.
          * `0` — Use SSL.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: unrestricted_restore
        in: query
        description: |-
          Whether to skip the Restricted Restore system.
          * `1` — Skip.
          * `0` — Do **not** skip.

          **Note:**

            If you want to pass the `force` parameter in the WHM API 1 `enqueue_transfer_item` function, you **must** set this parameter to a value of `0`.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: use_backups
        in: query
        description: |-
          Whether to use an existing backup instead of packaging the data again if the backup is less than 24 hours old.
          * `1` — Use an existing backup.
          * `0` — Package the data.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: user
        in: query
        description: The username to use to connect to the remote server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: root
      - name: password
        in: query
        description: |-
          The username's password.

          **Note:**

           Use this parameter if you will authenticate to the remote server with a password. Do **not** use this parameter if you will authenticate to the remote server with an SSH key.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: port
        in: query
        description: The remote server's SSH port number.
        required: false
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 22
          default: 22
      - name: root_escalation_method
        in: query
        description: |-
          The escalation method to use to connect to the remote server.
          * `su`
          * `sudo`

          **Note:**

           Use this parameter if the `sshd_config` file's `PermitRootLogin` value is `No`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: sudo
          enum:
          - su
          - sudo
      - name: root_password
        in: query
        description: |-
          `root`'s password on the remote server.

          **Note:**

           Use this parameter if the `sshd_config` file's `PermitRootLogin` value is `No` and you will use the `root` user's password to escalate access.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: sshkey_name
        in: query
        description: |-
          The SSH key's name.

          **Note:**

          * Use this parameter if you will authenticate to the remote server with an SSH key. Do **not** use this parameter if you will authenticate to the remote server with a password.
          * SSH keys are available in WHM's [*Manage root's SSH Keys*](https://go.cpanel.net/whmdocsManagerootsSSHKeys) interface (*WHM >> Home >> Security Center >> Manage root’s SSH Keys*).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: FrancisScott
      - name: sshkey_passphrase
        in: query
        description: |-
          The SSH key's passphrase.

          **Note:**

           Use this parameter if you will authenticate to the remote server with an SSH key, and the key is encrypted.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: kkwtoowoygidsa
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_83"
  /create_remote_user_transfer_session:
    get:
      tags:
      - Transfers
      - cPanel Account Transfer
      summary: Create remote server transfer session
      description: |-
        This function creates a transfer session with a non-root user to a remote server.

        **Important:**

        * The source and target servers must be able to communicate over port `2087` to use this feature.
        * The source and target servers must also be able to communicate over the port that your servers use for SSH connections.
        * For more information about the ports that cPanel & WHM uses, read our [How to Configure Your Firewall for cPanel & WHM Services](https://go.cpanel.net/firewall) documentation.

        **Note:**

        For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.
      operationId: create_remote_user_transfer_session
      parameters:
      - name: host
        in: query
        description: The server hostname for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: hostname.example.com
      - name: password
        in: query
        description: The account's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: unrestricted_restore
        in: query
        description: |-
          Whether to skip the Restricted Restore process.
          * `1` - Skip Restricted Restore.
          * `0` - Use Restricted Restore.

          **Note:**

          You **must** set this parameter to a value of 1.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_84"
  /create_subdomain:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Create subdomain
      description: This function creates a subdomain.
      operationId: create_subdomain
      parameters:
      - name: document_root
        in: query
        description: |-
          The subdomain's document root within the home directory.

            **Note:**

           * An invalid document root path will cause this function to **fail**.
           * If the *Restrict document roots to public_html* value is set to `On` in WHM's [Tweak Settings](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*), this parameter **must** begin with the `public_html/` path. For more information, read the [cpanel.config](https://go.cpanel.net/cpanelconfiginvalid) file documentation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: public_html/directory_name
      - name: domain
        in: query
        description: The subdomain name to create.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: subdomain.example.com
      - name: use_canonical_name
        in: query
        description: |-
          Whether to use a canonical name in the [Apache® configuration for self-referential URLs](https://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname).

          * `1` — Use the canonical name.
          * `0` — Do **not** use the canonical name.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_85"
  /create_user_session:
    get:
      tags:
      - Server Administration
      - Session
      summary: Create a temporary user session
      description: |-
        This function creates a new temporary user session for a specified service.
        This allows users with WHM access to log in to third-party applications
        (for example, billing systems) without storing the account password.

        **Note:**

        * The system destroys the temporary session after 15 minutes of inactivity.
        * For more information about the Single Sign On feature, read our
        [Guide to API Authentication](/whm/tokens/)
        documentation.
      operationId: create_user_session
      parameters:
      - name: service
        in: query
        description: The session's service.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpaneld
          enum:
          - cpaneld
          - whostmgrd
          - webmaild
      - name: user
        in: query
        description: The session's cPanel account username or a valid email address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      - name: app
        in: query
        description: |-
          The cPanel or WHM application to which the session will link. This
          parameter defaults to a blank string, which redirects the user to the
          cPanel
          [*Home*](https://docs.cpanel.net/cpanel/the-cpanel-interface/the-cpanel-interface/)
          interface.

          * A valid application name, to link the session to an application.
          * An invalid application name, to create the session but **not** link
          it to an application.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Backups_Home
          enum:
          - Backups_Home
          - Calendar_Configure
          - ContactInfo_Change
          - Cron_Home
          - Database_MySQL
          - Database_phpMyAdmin
          - Domains_AddonDomains
          - Domains_SubDomains
          - Email_AccountLevelFiltering
          - Email_Accounts
          - Email_Archive
          - Email_Authentication
          - Email_AutoResponders
          - Email_BoxTrapper
          - Email_DefaultAddress
          - Email_DeliveryReport
          - Email_Forwarders
          - Email_GreyListing
          - Email_MailingLists
          - Email_MX
          - Email_SpamFilter
          - Email_UserLevelFiltering
          - FileManager_Home
          - Locale_Change
          - Password_Change
          - Site_Software
          - Site_Software_*
          - Stats_AWStats
          - WHMCS_billing
          - add_a_dns_zone
          - add_an_a_entry_for_your_hostname
          - add_a_new_ip_address
          - add_a_package
          - additional_mysql_access_hosts
          - add_remove_recognized_ip_addresses
          - apache_configuration
          - apache_mod_userdir_tweak
          - apache_status
          - api_shell
          - api_tokens
          - apps_managed_by_appconfig
          - assign_ipv6_address
          - background_process_killer
          - backup_configuration
          - backup_restoration
          - backup_system_migration
          - backup_user_selection
          - basic_webhost_manager_setup
          - blocker
          - change_account_contact_email
          - change_hostname
          - change_log
          - change_multiple_sites_ip_addresses
          - change_mysql_user_password
          - change_ownership_of_an_account
          - change_ownership_of_multiple_accounts
          - change_root_password
          - change_sites_ip_address
          - cloudlinux_lve_manager
          - compiler_access
          - configuration_cluster
          - configure_application_locales
          - configure_cpanel_analytics
          - configure_cpanel_cron_jobs
          - configure_postgresql
          - configure_remote_service_ips
          - configure_security_policies
          - contact_manager
          - convert_addon_domain_to_account
          - copy_a_locale
          - copy_an_account_from_another_server_with_an_account_password
          - cpanel_development_forum
          - cpanel_log_rotation_configuration
          - cpanel_plugin_file_generator
          - cpanel_web_disk_configuration
          - cpanel_web_services_configuration
          - cphulk_brute_force_protection
          - create_a_new_account
          - create_support_ticket
          - customization
          - daily_process_log
          - database_map_tool
          - delete_a_dns_zone
          - delete_a_locale
          - delete_a_package
          - directoryindex_priority
          - dns_cluster
          - dns_server
          - easyapache_4
          - edit_a_locale
          - edit_a_package
          - edit_backup_mx_hosts
          - edit_blacklisted_smtp_ips
          - edit_dns_zone
          - edit_mx_entry
          - edit_only_verify_recipient_smtp_hosts
          - edit_questions_and_answers
          - edit_reseller_name_servers_and_privileges
          - edit_sender_verification_bypass_ips
          - edit_system_mail_preferences
          - edit_trusted_smtp_ips
          - edit_zone_templates
          - email_all_resellers
          - email_all_users
          - email_deliverability
          - enable_dkim_and_spf_globally
          - exim_configuration_manager
          - feature_manager
          - file_and_directory_restoration
          - forceful_server_reboot
          - force_password_change
          - ftp_server_configuration
          - ftp_server_proftpd_pureftpd
          - ftp_server_selection
          - generate_an_ssl_certificate_and_signing_request
          - global_configuration
          - graceful_server_reboot
          - grant_cpanel_support_access
          - greylisting
          - host_access_control
          - http_server_apache
          - ico-security-advisor
          - imap_server
          - include_editor
          - initial_quota_setup
          - install_an_rpm
          - install_an_ssl_certificate_on_a_domain
          - install_a_perl_module
          - install_a_perl_module_process
          - install_cpaddons_site_software
          - ip_migration_wizard
          - ipv6_ranges
          - legacy_backup_configuration
          - legacy_language_file_upload
          - legacy_restore_backups
          - legacy_restore_multiple_backups
          - legacy_restore_multiple_backups_confirmation
          - limit_bandwidth_usage
          - list_accounts
          - list_parked_domains
          - list_subdomains
          - list_suspended_accounts
          - locale_editor
          - locale_xml_download
          - locale_xml_upload
          - log_rotation
          - mailbox_conversion
          - mail_delivery_reports
          - mailing_list_manager_mailman
          - mail_queue_manager
          - mailserver_configuration
          - mail_server_exim
          - mail_troubleshooter
          - manage_account_suspension
          - manage_autossl
          - manage_compiler_group
          - manage_cpaddons_site_software
          - manage_custom_rbls
          - manage_databases
          - manage_database_users
          - manage_demo_mode
          - manage_external_authentication
          - manage_external_authentication_providers
          - manage_external_authentication_users
          - manage_hooks
          - manage_mysql_profiles
          - manage_plugins
          - manage_resellers_ip_delegation
          - manage_resellers_shared_ip
          - manage_roots_ssh_keys
          - manage_services_ssl_certificates
          - manage_shell_access
          - manage_ssl_hosts
          - manage_wheel_group_users
          - market_provider_manager
          - memory_usage_restrictions
          - modify_an_account
          - modify_cpanel_whm_news
          - modify_upgrade_multiple_accounts
          - modsecurity_configuration
          - modsecurity_tools
          - modsecurity_vendors
          - module_installers
          - multiphp_ini_editor
          - multiphp_manager
          - mysql_mariadb_upgrade
          - mysql_root_password
          - nameserver_record_report
          - nameserver_selection
          - non_standard_locale_configuration
          - park_a_domain
          - password_modification
          - password_strength_configuration
          - perform_a_dns_cleanup
          - php_fpm_service_for_apache
          - phpMyAdmin
          - piped_log_configuration
          - process_manager
          - purchase_and_install_an_ssl_certificate
          - quota_modification
          - raw_apache_log_download
          - raw_ftp_log_download
          - rearrange_an_account
          - rebuild_rpm_database
          - rebuild_the_ip_address_pool
          - remote_access_key
          - repair_a_mysql_database
          - repair_mailbox_permissions
          - reseller_center
          - reserved_ips_editor
          - reset_account_bandwidth_limit
          - reset_a_dns_zone
          - reset_a_mailman_password
          - reset_resellers
          - resolver_configuration
          - restore_a_full_backup_cpmove_file
          - restore_modules_summary
          - review_transfers_and_restores
          - security_questions
          - server_information
          - server_profile
          - server_time
          - service_manager
          - service_status
          - setup_edit_domain_forwarding
          - set_zone_time_to_live_ttl
          - shell_fork_bomb_protection
          - show_accounts_over_quota
          - show_current_disk_usage
          - show_current_running_processes
          - show_edit_reserved_ips
          - show_ip_address_usage
          - show_mysql_processes
          - show_or_delete_current_ip_addresses
          - show_reseller_accounts
          - skeleton_directory
          - smtp_restrictions
          - software_development_kit
          - spamd_startup_configuration
          - sql_server_mysql
          - sql_server_pgsql
          - ssh_password_authorization_tweak
          - ssh_server_openssh
          - ssl_storage_manager
          - statistics_software_configuration
          - support_center
          - synchronize_dns_records
          - system_update
          - task_queue_monitor
          - terminal
          - terminate_accounts
          - theme_manager
          - traceroute_enable_disable
          - transfer_tool
          - tweak_settings
          - two_factor_authentication
          - unsuspend_bandwidth_exceeders
          - update_database_map
          - update_database_map_process
          - update_preferences
          - update_server_software
          - upgrade_downgrade_an_account
          - upgrade_to_latest_version
          - view_available_locales
          - view_bandwidth_usage
          - view_mail_statistics_summary
          - view_relayers
          - view_reseller_usage_and_manage_account_status
          - view_sent_summary
          - web_template_editor
      - name: cp_security_token
        in: query
        description: The session's security token.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: cpsess1234567890
      - name: locale
        in: query
        description: |-
          The session's locale. This parameter defaults to the *Server Locale* setting in WHM's
          [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/#system)
          interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).

          **Note:**

          * If you specify a locale, the server sends a cookie to your browser with
          that locale setting. The cookie expires after one year.
          * Users can change the locale with the language options at the bottom of
          the login interface.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: fr
      - name: preferred_domain
        in: query
        description: |-
          The hostname or IP address for the function to use in the `url`
          return. This parameter's value defaults to the server's hostname.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_86"
  /createacct:
    get:
      tags:
      - Account Creation
      summary: Create cPanel account
      description: |-
        This function creates a cPanel account and sets up its domain information.

        **Note:**

        * On servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.
        * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.
        * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).
      operationId: createacct
      parameters:
      - name: domain
        in: query
        description: The account's main domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: username
        in: query
        description: |-
          The new account's username. cPanel usernames **must** adhere to the following criteria:
          * The first eight characters of a username **must** be unique.
          * A username **cannot** begin with a number or the test string.

          **Note:**

          * Use the `Cpanel::Validate::Username` Perl module to validate usernames before you call this function. For more information, read the `/usr/local/cpanel/Cpanel/Validate/Username.pod` file.
          * The system will automatically convert this value to all lowercase letters.
          * MySQL's unique character limitations do **not** exist on servers that use MariaDB.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 16
          type: string
          example: username
      - name: account_enhancements
        in: query
        description: "Assign [Account Enhancements](https://go.cpanel.net/account-enhancements)\
          \ to the cPanel account. To view your server's Account Enhancements, run\
          \ WHM API 1's `list_account_enhancements` function."
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/account_enhancements"
        examples:
          multiple:
            summary: Assign multiple enhancements
            value:
            - My Custom Enhancement
            - Sample Enhancement
          single:
            summary: Assign one enhancement
            value: My Custom Enhancement
      - name: bwlimit
        in: query
        description: |-
          The account's maximum bandwidth.
          * `0`, `unlimited`, or `null` — The account possesses unlimited bandwidth.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/bwlimit_1"
      - name: cgi
        in: query
        description: |-
          Whether the account has [Common Gateway Interface (CGI)](https://en.wikipedia.org/wiki/Common_Gateway_Interface) access enabled.
          * `1` — Enabled.
          * `0` — Disabled.

          **Note:**

           When a [server profile](https://docs.cpanel.net/whm/server-configuration/server-profile/) disables the [Web Server](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/86/) role, this parameter defaults to `0`. On these servers, you **cannot** enable CGI access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 1
          - 0
      - name: contactemail
        in: query
        description: The account's contact email address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
          default: ""
      - name: cpmod
        in: query
        description: |-
          The account's cPanel theme.

          **Note:**

          This parameter defaults to the server's [default cPanel theme](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup/).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      - name: customip
        in: query
        description: |-
          The account's IP address.

          **Note:**

          If you do not specify this parameter, the system will determine the account's IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.0.2.0
      - name: dkim
        in: query
        description: |-
          Whether [DomainKeys Identified Mail (DKIM)](https://en.wikipedia.org/wiki/DomainKeys_Identified_Mail) is enabled for the account.
          * `1` — Enabled.
          * `0` — Disabled.

          **Note:**

          This parameter defaults to the *Enable DKIM on domains for newly created accounts* setting's value in WHM's *[Tweak Settings](https://docs.cpanel.net/whm/server-configuration/tweak-settings/) interface (WHM >> Home >> System Configuration >> Tweak Settings)*.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: dmarc
        in: query
        description: |-
          Whether [Domain-based Message Authentication, Reporting, and Conformance (DMARC)](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-glossary/#dmarc) is enabled for the account.
          * `1` — Enabled.
          * `0` — Disabled.

          **Note:**

          This parameter defaults to the *Enable DMARC on domains for newly created accounts* setting's value in the _Domains_ section of WHM's *[Tweak Settings](https://docs.cpanel.net/whm/server-configuration/tweak-settings/#domains) interface (WHM >> Home >> System Configuration >> Tweak Settings)*.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: featurelist
        in: query
        description: The account's assigned feature list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: feature_list
          default: default
      - name: forcedns
        in: query
        description: |-
          Whether to overwrite an existing DNS zone with the new account's information. The system performs this action if a matching DNS zone currently exists.
          * `1` — Overwrite.
          * `0` — Do **not** overwrite.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: frontpage
        in: query
        description: |-
          Whether the account has Microsoft® FrontPage Extensions enabled.

          **Note:**

           cPanel & WHM ignores all FrontPage settings and parameters.
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: integer
          nullable: true
      - name: gid
        in: query
        description: |-
          The account's group ID.

          **Note:**

          * To use this parameter, the function's caller **must** authenticate as the root user.
          * If you do **not** specify this parameter, the system generates a group ID.
          * This **must** be a unique value that is **not** currently associated with disk usage and does **not** exist on the server.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 123456789
      - name: hasshell
        in: query
        description: |-
          Whether the account has shell (SSH) access enabled.
          * `1` — Enabled.
          * `0` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: hasuseregns
        in: query
        description: |-
          A legacy parameter.
          * `1` — Enabled.
          * `0` — Disabled.

          **Important:**

           Only include this parameter if you set a useregns value of 1.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: homedir
        in: query
        description: |-
          The absolute path to the account's `home` directory.

          **Note:**

          * To use this parameter, the function's caller **must** authenticate as the `root` user.
          * If you do not specify a value, the system uses the `/home/user` directory, where `user` is the account's username.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /home/user
      - name: ip
        in: query
        description: |-
          Whether the account has a dedicated IP address.
          * `y` — The account possesses a dedicated IP address.
          * `n` — The account does **not** possess a dedicated IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "n"
          default: "n"
          enum:
          - "y"
          - "n"
      - name: language
        in: query
        description: |-
          The account's default locale.

          **Note:**

          * This value is case-sensitive.
          * For region-specific locales, use the ISO 639-1 code, an underscore (`_`), and the [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) code.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: en
      - name: mail_node_alias
        in: query
        description: |-
          A [linked cPanel mail server](https://docs.cpanel.net/whm/server-configuration/link-server-nodes/) on which to also create the account. This is the server's alias (friendly name) defined when creating the link to a cPanel mail server.

          **Note:**

           This function **requires** a linked cPanel mail server.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: mailnode
      - name: mailbox_format
        in: query
        description: |-
          A mailbox format to use, if you do not wish to use the system's default mailbox format.

          **Note:**

          * Use this parameter when you transfer between servers with different mailbox formats.
          * This parameter defaults to the *The mailbox storage format for new accounts setting* in the *Mail* section of WHM's [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/#mail) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: mdbox
          enum:
          - mdbox
          - maildir
      - name: max_defer_fail_percentage
        in: query
        description: |-
          The percentage of failed or deferred email messages that the account can send per hour. If the account exceeds this value its outgoing mail is rate-limited.
          * `0` or `unlimited` — The account can send an unlimited number of failed or deferred messages.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/max_defer_fail_percentage"
      - name: max_email_per_hour
        in: query
        description: |-
          The maximum number of emails that the account can send in one hour.
          * `0` or `unlimited` — The account can send an unlimited number of emails.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/max_email_per_hour"
      - name: max_emailacct_quota
        in: query
        description: |-
          The maximum size that the account can define when it creates an email account.
          * `0` or `unlimited` — The account possesses an unlimited quota.

          **Important:**

           * This value applies to each email account, **not** each cPanel account.
           * If you define this parameter it overwrites the hosting plan's defined value for the account.
           * We recommend that you allow the account's plan to determine this value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/max_emailacct_quota_1"
      - name: max_team_users
        in: query
        description: |-
          The maximum number of Team users for this account.
          This parameter should be a number between 0 and the server's default value, inclusively.
          This parameter can not be a number greater than the server's default value.
        required: false
        style: form
        explode: true
        schema:
          maximum: 7
          minimum: 0
          type: integer
          example: 7
      - name: maxaddon
        in: query
        description: |-
          The account's maximum number of addon domains.
          * `unlimited`, or `null` — The account possesses unlimited addon domains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxaddon_1"
      - name: maxftp
        in: query
        description: |-
          The account's maximum number of FTP accounts.
          * `0`, `unlimited`, or `null` — The account possesses unlimited FTP accounts.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxftp_1"
      - name: maxlst
        in: query
        description: |-
          The account's maximum number of mailing lists.
          * `0`, `unlimited`, or `null` — The account possesses unlimited mailing lists.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxlst_1"
      - name: maxpark
        in: query
        description: |-
          The account's maximum number of parked domains (aliases).
          * `unlimited` or `null` — The account possesses unlimited parked domains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxpark_1"
      - name: maxpop
        in: query
        description: |-
          The account's maximum number of email accounts.
          * `0`, `unlimited`, or `null` — The account possesses unlimited email accounts.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxpop_1"
      - name: maxsql
        in: query
        description: |-
          The account's maximum number of each available type of SQL database.
          For example, this parameter has a `5` value and the system administrator allows
          MySQL® and PostgreSQL® databases. Users can create up to five MySQL databases
          and up to five PostgreSQL databases.
          * `0`, `unlimited`, or `null` — The account possesses unlimited databases.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxsql_1"
      - name: maxsub
        in: query
        description: |-
          The account's maximum number of subdomains.
          `unlimited` or `null` — The account possesses unlimited subdomains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxsub_1"
      - name: mxcheck
        in: query
        description: |-
          The account's main mail exchanger's type.
          * `local` - Local Mail Exchanger.
          * `secondary` - Backup Mail Exchanger.
          * `remote` - Remote Mail Exchanger.
          * `auto` - Automatically Detect Configuration.

          **Note:**

          The function does **not** configure the primary MX entry to point to the appropriate exchanger. You must [perform this function separately](https://docs.cpanel.net/whm/dns-functions/email-routing-configuration/).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: auto
          default: local
          enum:
          - local
          - secondary
          - remote
          - auto
      - name: owner
        in: query
        description: |-
          The name of the account owner.
          * `root`
          *  A valid reseller account username on the server.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: root
      - name: ownerself
        in: query
        description: |-
          Set the account to own itself. Ignored if `owner` is set.
          * `1` — Set account to own itself.
          * `0` — Do nothing.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: pass
        in: query
        description: |-
          The account's password.

          **Note:**

           * You can use either the `pass` or the `password` parameter, but **not** both.
           * If you don't specify this value, the system generates a secure password.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: password
        in: query
        description: |-
          The account's password.

          **Note:**

           * You can use **either** the `pass` or the `password` parameter, but **not** both.
           * If you don't specify this value, the system generates a secure password.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: pkgname
        in: query
        description: |-
          A new plan name. Use this parameter to save unique account settings as a new plan.

          **Note:**

           * If you do **not** use this parameter but specify `1` for the `savepkg` value, the system will generate a plan name.
           * If you do **not** use this parameter and specify `0` or do not use the `savepkg` parameter, the function does not save a new plan.
           * If you do **not** use this parameter, the function will not save the new account settings.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: my_new_package
      - name: plan
        in: query
        description: |-
          The account's hosting plan (package).

          **Important:**

           If you provide this value, **do not** use the optional quota-related parameters below. Instead, we recommend that you allow the account's plan to determine these values.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: default
          default: default
      - name: quota
        in: query
        description: |-
          The account's disk space quota.
          * `0` — The account's disk space is unlimited.
        required: false
        style: form
        explode: true
        schema:
          maximum: 999999
          minimum: 0
          type: integer
          format: megabytes
          example: 500
          default: 0
      - name: reseller
        in: query
        description: |-
          Whether to grant reseller privileges to the account.
          * `1` — Grant reseller privileges.
          * `0` — Do **not** grant reseller privileges.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: reseller_without_domain
        in: query
        description: |-
          Create the user as a reseller without an associated domain.
          * `1` - Create the account as a reseller without an associated domain.
          * `0` - Do **not** create the account as a reseller without an associated domain.

          **Warning:**

          If you create a reseller without a domain, certain parts of WHM will not function
          for that user. These limitations exist both when logged in as that user **and**
          when you attempt to perform actions which affect that user.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: savepkg
        in: query
        description: |-
          Whether to save the account's settings as a new plan.
          * `1` — Save.
          * `0` — Do **not** save.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: showpass
        in: query
        description: |-
          Whether to display the account password in the output.
          * `y` — Display the account password in the output.
          * `n` — Do NOT display the account password in the output.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "n"
          default: "y"
          enum:
          - "y"
          - "n"
      - name: spamassassin
        in: query
        description: |-
          Whether the account has Apache SpamAssassin™ enabled.
          * `1` — Enabled.
          * `0` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: spambox
        in: query
        description: |-
          Whether to enable spam box filtering for the account.
          * `y` - Enable spam box filtering.
          * `n` - Disable spam box filtering.
          **Note:**

           You **must** enable Apache SpamAssassin™ to use the Spam Box feature.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "y"
          default: "y"
          enum:
          - "y"
          - "n"
      - name: spf
        in: query
        description: |-
          Whether [Sender Policy Framework (SPF)](https://en.wikipedia.org/wiki/Sender_Policy_Framework) is enabled for the account.
          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the *Enable SPF on domains for newly created accounts*
          setting's value in WHM's [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/) interface (*WHM >> Home >> System Configuration >> Tweak Settings*).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: uid
        in: query
        description: |-
          The account's user ID.

          **Note:**

           * To use this parameter, the function's caller **must** authenticate as the `root` user.
           * If you do not specify this parameter, the system generates a user ID.
           * This **must** be a unique value that is **not** currently associated with disk usage and does **not** exist on the server.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 123456789
      - name: useregns
        in: query
        description: |-
          Whether to use registered nameservers for the domain.
          * `1` - Use registered nameservers.
          * `0` - Use the server's default nameservers.

          **Important:**

           If you set this parameter to `1`, you must also include the `hasuseregns` parameter with a value of `1`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_87"
  /current_mysql_version:
    get:
      tags:
      - Databases
      - Manage MySQL Server
      summary: Return MySQL version
      description: |-
        This function retrieves the server's version of MySQL® or MariaDB®.

        **Important:**

          When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: current_mysql_version
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_88"
  /deactivate_zone_key:
    get:
      tags:
      - DNS
      - DNS Security
      summary: Disable domain's DNSSEC key
      description: |-
        This function deactivates a domain's DNSSEC security key.

        **Note:**

        Only servers that run PowerDNS can use DNSSEC. If you call this function on a server
        that doesn't use PowerDNS, you will receive an error.
      operationId: deactivate_zone_key
      parameters:
      - name: domain
        in: query
        description: The domain for which to deactivate a security key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: key_id
        in: query
        description: |-
          The security key's ID.

          **Note:**

          Use the WHM AP1 `fetch_ds_records_for_domains` function to locate the
          domain's security key ID.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_89"
  /delete_account_archives:
    get:
      tags:
      - Transfers
      - Transfer Configuration
      summary: Remove cPanel account's archives
      description: This function removes a cPanel user account's archives.
      operationId: delete_account_archives
      parameters:
      - name: user
        in: query
        description: The cPanel account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: mountpoint
        in: query
        description: The filepath to the archive storage location.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /home/example/
          default: /home
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_90"
  /delete_account_enhancement:
    get:
      tags:
      - Account Enhancements
      summary: Remove an Account Enhancement
      description: This function removes an account enhancement.
      operationId: delete_account_enhancement
      parameters:
      - name: name
        in: query
        description: The name of the account enhancement.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: enhancement 5000
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_91"
  /delete_configclusterserver:
    get:
      tags:
      - Server Administration
      - Configuration Clusters
      summary: Delete server from configuration cluster
      description: |-
        This function removes a server from a configuration cluster. The function's return
        data appears in the `metadata` section of its output.

        **Important:**

        If you log in to a configuration cluster server that is **not** the parent server,
        **nothing** will indicate that the server is part of a configuration cluster. You can
        **only** view and modify this information from the parent server.
      operationId: delete_configclusterserver
      parameters:
      - name: name
        in: query
        description: The hostname or IP address of a remote configuration cluster
          server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_92"
  /delete_cpgreylist_trusted_host:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Remove IP address from Greylisting trusted hosts
      description: This function deletes an IP address from the Greylisting _Trusted
        Hosts_ list.
      operationId: delete_cpgreylist_trusted_host
      parameters:
      - name: ip
        in: query
        description: |-
          The record's IP address, or a range of IP addresses.

          **Note:**

          To add multiple IP addresses, increment the parameter name (for example, `ip-1`, `ip-2`, `ip-3`).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 192.168.0.1
        examples:
          cidr-ipv4:
            summary: CIDR Format IPv4
            value: 192.168.0.1/16
          cidr-ipv6:
            summary: CIDR Format IPv6
            value: 2001:db8::/32
          multiple:
            description: Multiple IP addresses.
            value: ip-1=192.168.0.1&ip-2=192.168.0.2&ip-3=192.168.0.3
          single:
            description: A single IP address.
            value: 192.168.0.1
          single-ipv4:
            summary: Single IPv4 Address
            value: 192.0.2.0
          single-ipv6:
            summary: Single IPv6 Address
            value: 2001:db8::1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_93"
  /delete_cphulk_record:
    get:
      tags:
      - cPHulk
      - Management
      summary: Remove login security record from list
      description: This function deletes a record or records from cPHulk's whitelist
        or blacklist.
      operationId: delete_cphulk_record
      parameters:
      - name: ip
        in: query
        description: |-
          The record's IP address.

          **Note:**

           To delete multiple IP addresses, increment the parameter name. For example, `ip-1`, `ip-2`, `ip-3`.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/ip-address"
        examples:
          multiple:
            description: Multiple IP addresses.
            value:
            - 192.168.0.1
            - 192.168.0.2
            - 2001:db8::1
            - 2002:db8::1
          single:
            description: Single IP address.
            value:
            - 192.168.0.1
      - name: list_name
        in: query
        description: |-
          The cPHulk list's name.

          * `white`
          * `black`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: white
          enum:
          - white
          - black
      - name: skip_enabled_check
        in: query
        description: |-
          Whether to skip checking if cPHulk runs on the server.

          * `1` - Don’t check cPHulk’s status.
          * `0` - Check cPHulk’s status.

          **Note:**

           If cPHulk is disabled and you check its status, the function returns the following message:
          `cPHulk is disabled on the server`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_94"
  /delete_customizations:
    get:
      tags:
      - Customizations
      summary: Delete customization data
      description: |-
        This function deletes customization data.

        Customization data includes brand logos and colors.

        Server owners and resellers can supply customization data to whitelabel portions
        of the product or customize the cPanel experience for their users.

        This function is used to delete customization data for the Jupiter theme **only**.

        If you provide the optional `path` parameter, the API will removed only the specific element specified in the `.` separated path.
        See the parameter for more details.
      operationId: delete_customizations
      parameters:
      - name: application
        in: query
        description: The application name for the customization.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel
          enum:
          - cpanel
          - webmail
      - name: theme
        in: query
        description: The theme name for the customization.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      - name: path
        in: query
        description: |-
          The JSONPath expression to reach to property you want to delete. We support only the
          subset of JSONPath using the `.` style notation. There is presently no other JSONPath
          features supported.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: brand.icon.description
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_95"
      x-cpanel-cli-support: true
  /delete_domain:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Delete domain
      description: |-
        This function deletes a domain.

        **Note:**

        This function does **not** remove an addon domain's associated subdomain. You **must** also run this function for the associated subdomain.
      operationId: delete_domain
      parameters:
      - name: domain
        in: query
        description: The name of the domain to delete.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_96"
  /delete_featurelist:
    get:
      tags:
      - Packages
      - Feature Lists
      summary: Delete feature list
      description: This function deletes a feature list.
      operationId: delete_featurelist
      parameters:
      - name: featurelist
        in: query
        description: The feature list's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestList
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_97"
  /delete_hook:
    get:
      tags:
      - Script Hooks
      - Scripts Hooks
      summary: Delete script hook
      description: This function removes a script hook.
      operationId: delete_hook
      parameters:
      - name: id
        in: query
        description: |-
          The script hook's ID.

          **Note:**

          To retrieve a hook's ID, use the WHM API 1 `list_hooks` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: HzEpGvT6QGUYwxuX3hWB8AUq
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_98"
  /delete_rpm_version:
    get:
      tags:
      - RPM
      - Package Manager Settings
      summary: Remove rpm.versions system configuration
      description: |-
        This function removes RPM data. When you call this function, it performs the same
        actions as the following command:

        `/usr/local/cpanel/scripts/update_local_rpm_versions --del section.key value`

        For more information, read our
        [rpm.versions system](https://docs.cpanel.net/knowledge-base/rpm-versions/introduction-to-the-rpm-versions-system/)
        documentation.

        **Note:**

        After you call this function, we **strongly** recommend that you run the
        `/usr/local/cpanel/scripts/check_cpanel_pkgs` script.
      operationId: delete_rpm_version
      parameters:
      - name: key
        in: query
        description: "The [RPM's target](https://docs.cpanel.net/knowledge-base/rpm-versions/rpm-targets/)."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 3rdparty
      - name: section
        in: query
        description: The RPM's section within the `rpm.versions` file.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: rpm_groups
      - name: value
        in: query
        description: The RPM name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel-pcre
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_99"
  /delete_ssl_vhost:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Delete SSL vhost
      description: This function deletes the SSL virtual host.
      operationId: delete_ssl_vhost
      parameters:
      - name: host
        in: query
        description: The hostname whose SSL virtual host you'd like to delete.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_100"
  /deletesshkey:
    get:
      tags:
      - SSH Keys and Connections
      summary: Delete SSH key
      description: |-
        This function function deletes an SSH key from the server.

        **Warning:**

        Only the `root` account can use this function, and it only affects
        the `root` keys. To perform this function on a cPanel user account, call the
        cPanel API 2 `SSH::authkey` function through the WHM API.
      operationId: deletesshkey
      parameters:
      - name: file
        in: query
        description: The SSH key file's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /root/.ssh/test
      - name: leave_authorized
        in: query
        description: |-
          Whether to authorize the SSH key to access the server.

          * `1` — Leave authorized.
          * `0` — Do **not** leave authorized.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: user
        in: query
        description: The SSH key's username.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: username
          deprecated: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_101"
  /delip:
    get:
      tags:
      - IP Addresses
      - IPv4 Address Settings
      summary: Remove IP address
      description: This function removes an IP address from the server.
      operationId: delip
      parameters:
      - name: ip
        in: query
        description: The IPv4 address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 10.1.1.1
      - name: ethernetdev
        in: query
        description: The network alias to which the IPv4 address is bound.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: eth0
          default: ""
      - name: skipifshutdown
        in: query
        description: |-
          Whether to remove the IP address if the ethernet interface is down.
          * `1` — Do **not** remove the IP address.
          * `0` — Remove the IP address.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_102"
  /delpkgext:
    get:
      tags:
      - Packages
      - Hosting Plan Extensions
      summary: Remove hosting plan extension
      description: |-
        This function deletes a package extension from a hosting plan (package).

        **Note:**

        * You can additionally include extension's variables in your function call, in `key=value` format.
          Consult the extension's documentation for a list of possible variables. Extension variable names are case-sensitive.
      operationId: delpkgext
      parameters:
      - name: _DELETE_EXTENSIONS
        in: query
        description: |-
          The space delimited
          [package extensions](https://go.cpanel.net/GuidetoPackageExtensions)
          to delete.

          **Note:**

          * Extension names are case-sensitive.
        required: true
        style: spaceDelimited
        explode: true
        schema:
          type: string
          example: extension1 extension2
      - name: name
        in: query
        description: The hosting plan's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: package1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_103"
  /disable_authentication_provider:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Disable identity provider
      description: This function disables a external authentication identity provider
        for a specified service.
      operationId: disable_authentication_provider
      parameters:
      - name: provider_id
        in: query
        description: A valid identity provider's identification key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanelid
      - name: service_name
        in: query
        description: |-
          The cPanel & WHM service's name:

          * `cpaneld`
          * `webmaild`
          * `whostmgrd`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpaneld
          enum:
          - cpaneld
          - webmaild
          - whostmgrd
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_104"
  /disable_autossl:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Disable AutoSSL
      description: This function disables the AutoSSL feature.
      operationId: disable_autossl
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_105"
  /disable_cpgreylist:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Disable Greylisting
      description: This function disables Greylisting.
      operationId: disable_cpgreylist
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_106"
  /disable_cphulk:
    get:
      tags:
      - cPHulk
      - Settings
      summary: Disable login security
      description: This function disables the cPHulk service.
      operationId: disable_cphulk
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_107"
  /disable_dkim:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Disable domain's DKIM records
      description: This function removes the DomainKeys Identified Mail (DKIM) records
        on the DNS server for one or more domains.
      operationId: disable_dkim
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to remove DKIM records on the DNS server.

          **Note:**

           To remove multiple domain DKIM records, duplicate the parameter name. For example, use the `domain=example-1.com`, `domain=example-2.com`, and `domain=example-3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: To remove multiple domain DKIM records
            value: domain=example-1.com domain=example-2.com domain=example-3.com
          single:
            summary: To remove a single domain DKIM record
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_108"
  /disable_dnssec_for_domains:
    get:
      tags:
      - DNS
      - DNS Security
      summary: Disable DNSSEC on domain
      description: |-
        This function disables DNSSEC on the domain.

        **Note:**

          Only servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.

        **Warning:**

         - This action is **irreversible**. If you disable DNSSEC on the domain, you will lose the associated keys. You can only retrieve the keys by restoring them from a full back up of the account.
         - If you disable DNSSEC, you **must** remove the Delegation of Signing (DS) records on your DNS server and with your registrar.
      operationId: disable_dnssec_for_domains
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to disable DNSSEC.

          **Note:**

          To disable DNSSEC for multiple domains, duplicate or increment the parameter name. For example, to check three domains, you could:

          * Use the `domain` parameter multiple times.
          * Use the `domain`, `domain-1`, `domain-2` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Multiple domains
            value: domain=example.com&domain-1=example1.com&domain-2=example2.com
          multiple-alternative:
            summary: Multiple domains
            value: domain=example.com&domain=example1.com&domain=example2.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_109"
  /disable_failing_authentication_providers:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Disable identity provider modules that fail to load
      description: This function disables any enabled identity provider modules that
        fail to load.
      operationId: disable_failing_authentication_providers
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_110"
  /disable_market_provider:
    get:
      tags:
      - Market
      - Provider Management
      summary: Disable Market provider
      description: This function disables a cPanel Market provider.
      operationId: disable_market_provider
      parameters:
      - name: name
        in: query
        description: The cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_111"
  /domainuserdata:
    get:
      tags:
      - Domain Information
      summary: Return domain user information
      description: This function retrieves domain data.
      operationId: domainuserdata
      parameters:
      - name: domain
        in: query
        description: The account's main domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_112"
  /dumpzone:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Return domain's DNS zone configuration
      description: "This function returns a domain's DNS zone configuration.\n\n**Important:**\n\
        \n* This function is **deprecated**. Use WHM's `parse_dns_zone` function.\n\
        * You **must** include either the `domain` or the `zone` parameters.  \n*\
        \ When you disable the [DNS role](https://go.cpanel.net/serverroles), the\n\
        system **disables** this function.\n\n**Note:**\n\nOn servers that run CentOS\
        \ 7, you may see a `named` warning about the absence of\nSPF resource records\
        \ on DNS.\n  * This warning is **not** relevant on CentOS 7 servers, because\n\
        \  [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208).\
        \ CentOS 7\n  servers use TXT records instead of SPF records.\n  * Red Hat\
        \ 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an\n  updated\
        \ version of BIND that complies with RFC 7208. To resolve this issue,\n  update\
        \ your operating system to a version that contains the updated version of\n\
        \  BIND. For more information, read the\n  [Red Hat Bugzilla case about SPF\
        \ record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164)."
      operationId: dumpzone
      parameters:
      - name: domain
        in: query
        description: The zone record's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: zone
        in: query
        description: The zone file's name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example.com.db
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_113"
      deprecated: true
  /ea4_get_additional_pkg_prefixes:
    get:
      tags:
      - EasyApache
      - EasyApache Settings
      summary: "Return any additional package prefixes, beyond `ea`."
      description: This function returns any additional package prefixes set up in
        the `/etc/cpanel/ea4/additional-pkg-prefixes/` file.
      operationId: ea4_get_additional_pkg_prefixes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_114"
  /ea4_get_currently_installed_packages:
    get:
      tags:
      - EasyApache
      - EasyApache Settings
      summary: Return installed Easyapache 4 packages
      description: |-
        This function returns a list of the currently-installed EasyApache 4 packages.

        **Important:**

        When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: ea4_get_currently_installed_packages
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_115"
  /ea4_list_profiles:
    get:
      tags:
      - EasyApache
      - EasyApache Settings
      summary: Return EasyApache 4 profiles
      description: |-
        This function returns a list of all [EasyApache 4](https://docs.cpanel.net/ea4/) profiles and the packages that each profile provides.

         **Important:**

         When you disable the [Web Server](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles) role, the system **disables** this function.
      operationId: ea4_list_profiles
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_116"
  /ea4_metainfo:
    get:
      tags:
      - EasyApache
      - EasyApache Settings
      summary: Return ea4-metainfo.json file contents
      description: This function returns the contents of the `/etc/cpanel/ea4/ea4-metainfo.json`
        file.
      operationId: ea4_metainfo
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_117"
  /ea4_recommendations:
    get:
      tags:
      - EasyApache
      - EasyApache Settings
      summary: Return EasyApache 4 recommendations
      description: |-
        This function returns any recommendations attached to your installed
        EasyApache 4 packages. For more information about the recommendation system,
        read our [EasyApache 4 Recommendations](https://go.cpanel.net/EasyApache4Recommendations) documentation.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ea4_recommendations
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_118"
  /ea4_save_profile:
    get:
      tags:
      - EasyApache
      - EasyApache Settings
      summary: Create EasyApache 4 profile
      description: |-
        This function creates an EasyApache 4 profile. This function only writes files to the `/etc/cpanel/ea4/profiles/custom/` directory.

        **Important**:

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: ea4_save_profile
      parameters:
      - name: filename
        in: query
        description: The profile's file name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: new_profile.json
      - name: name
        in: query
        description: The profile's display name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: New Profile
      - name: pkg
        in: query
        description: The packages that the profile contains.
        required: true
        style: form
        explode: true
        schema:
          type: array
          example:
          - ea-apache24
          - ea-apache24-foo
          items:
            type: string
      - name: desc
        in: query
        description: The description of the profile.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: This is my new profile.
          default: ""
      - name: overwrite
        in: query
        description: |-
          Whether to overwrite the file, if it exists.

          * `1` — Overwrite the file.
          * `0` — Do **not** overwrite the file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: tag
        in: query
        description: Tags that are appropriate for the profile.
        required: false
        style: form
        explode: true
        schema:
          type: array
          example:
          - Apache 2.4
          - Optimized for static content
          items:
            type: string
          default: []
      - name: version
        in: query
        description: The profile's version number.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "1.3"
          default: "0"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_119"
  /edit_hook:
    get:
      tags:
      - Script Hooks
      - Scripts Hooks
      summary: Update script hook
      description: This function edits a script hook.
      operationId: edit_hook
      parameters:
      - name: id
        in: query
        description: |-
          The script hook's ID.

          **Note:**

          To retrieve a hook's ID, use the WHM API 1 `list_hooks` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: HzEpGvT6QGUYwxuX3hWB8AUq
      - name: check
        in: query
        description: The absolute file path to the script that runs after the hook
          script to check the results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /scripts/postcourier-authlibup
      - name: description
        in: query
        description: The hook script's description.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestHook
      - name: enabled
        in: query
        description: |-
          Whether the hook script is enabled.

          * `1` — Enabled.
          * `0` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: exectype
        in: query
        description: |-
          The type of function that the script hook launches.

          * `script` — Runs a script.
          * `module` — Calls a function in a module.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: script
          enum:
          - script
          - module
      - name: hook
        in: query
        description: The hook script's absolute file path or its `module::subroutine`
          invocation.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /scripts/postcourier-authlibup
      - name: notes
        in: query
        description: The script hook's notes.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Note.
      - name: rollback
        in: query
        description: The absolute file path to the script that rolls back the hook
          script.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /scripts/postcourier-authlibup
      - name: stage
        in: query
        description: |-
          The condition when the hook script executes.

          * `pre` — The script runs before the function.
          * `post` — The script runs after the function.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: post
          enum:
          - pre
          - post
      - name: weight
        in: query
        description: "The script hook's priority in the hook's stage, where a lower\
          \ value runs before a higher value."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 100
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_120"
  /edit_rpm_version:
    get:
      tags:
      - RPM
      - Package Manager Settings
      summary: Update rpm.versions system configuration
      description: |-
        This function edits RPM data. When you call this function, it performs the same actions
        as the following command:

        `/usr/local/cpanel/scripts/update_local_rpm_versions --edit section.key value`

        For more information, read our
        [rpm.versions system](https://docs.cpanel.net/knowledge-base/rpm-versions/introduction-to-the-rpm-versions-system/)
        documentation.

        **Note:**

        After you call this function, we **strongly** recommend that you run the
        `/usr/local/cpanel/scripts/check_cpanel_pkgs` script.
      operationId: edit_rpm_version
      parameters:
      - name: key
        in: query
        description: The RPM's key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 3rdparty
      - name: section
        in: query
        description: The RPM's section.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: rpm_groups
      - name: value
        in: query
        description: The RPM's value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel-pcre
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_121"
  /editpkg:
    get:
      tags:
      - Packages
      - Hosting Plans
      summary: Update hosting plan
      description: |-
        This function edits a hosting plan (package).

        **Note:**

        * The
        [Access Control List (ACL)](https://go.cpanel.net/GuidetoWHMPluginsAccessControlLists)
        restricts some of the function's parameters, which limit the features that WHM
        users can access.
        * This function applies any changes you make to **all** accounts that exist on
        the hosting plan.
        * This function **cannot** modify hosting plan names.
      operationId: editpkg
      parameters:
      - name: name
        in: query
        description: "The hosting plan's name. If the hosting plan does not exist,\
          \ the system will create it."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: package1
      - name: _PACKAGE_EXTENSIONS
        in: query
        description: |-
          The hosting plan's [package extensions](https://go.cpanel.net/GuidetoPackageExtensions).

          If you do **not** provide a value, the hosting plan will **not** include package
          extensions.

          **Note:**

          * We **strongly** recommend that you manage package extensions through WHM API
          1's `addpkgext` and `delpkgext` functions.
          * You can include the extension's variables in your function call, in `key=value` format.
          Consult the extension's documentation for a list of possible variables.
          * Extension names and variables are case-sensitive.
          * Use space-delimited format to add multiple package extensions.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Add multiple package extensions.
            value: extension1 extension2 extension3
          single:
            summary: Add a single package.
            value: extension1
      - name: bwlimit
        in: query
        description: |-
          The hosting plan's maximum bandwidth use, in megabytes (MB).

          * `0`, `unlimited`, or `null` — The hosting plan allows unlimited
          bandwidth.

          **Note:**

          The `0`, `unlimited`, or `null` values are **only** available to
          users that possess the corresponding `unlimited` ACL permission.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/bwlimit_2"
      - name: cgi
        in: query
        description: |-
          Whether CGI access is enabled for the hosting plan.

          * `1` — Enabled.
          * `0` — Disabled.

          **Note:**

          When a [server profile](https://go.cpanel.net/whmdocsServerProfile) disables
          the [Web Server role](https://go.cpanel.net/serverroles#roles), this parameter
          defaults to `0`. On these servers, you **cannot** enable CGI access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 1
          - 0
      - name: cpmod
        in: query
        description: |-
          The hosting plan's cPanel theme.

          This parameter defaults to the server's
          [default cPanel theme](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      - name: digestauth
        in: query
        description: |-
          Whether to enable Digest Authentication for accounts on the hosting plan.

          * `1` — Enable.
          * `0` — Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: featurelist
        in: query
        description: |-
          The hosting plan's feature list.

          If you do **not** use this parameter, the function assigns the `default`
          feature list to the hosting plan's accounts.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: default
          default: default
      - name: frontpage
        in: query
        description: |-
          Whether Microsoft® FrontPage Extensions are enabled for the account.

          **Note:**

          cPanel & WHM ignores all FrontPage settings and parameters.
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 1
          - 0
      - name: hasshell
        in: query
        description: |-
          Whether the hosting plan allows shell access.

          * `1` — The hosting plan allows shell access.
          * `0` — The hosting plan does **not** allow shell access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: ip
        in: query
        description: |-
          Whether the hosting plan uses a dedicated IP address.

          * `y` — The hosting plan uses a dedicated IP address.
          * `n` — The hosting plan does **not** use a dedicated IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "n"
          default: "n"
          enum:
          - "y"
          - "n"
      - name: language
        in: query
        description: |-
          The hosting plan's default locale.

          This parameter defaults to the server's default locale.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166-1 (alpha-2)
          example: en
      - name: max_defer_fail_percentage
        in: query
        description: |-
          The percentage of failed or deferred email messages that an account on the
          hosting plan can send per hour before outgoing mail is rate-limited.

          * `0` or `unlimited` — The hosting plan allows unlimited email messages per hour.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/max_defer_fail_percentage_1"
      - name: max_email_per_hour
        in: query
        description: |-
          The maximum number of emails that the hosting plan allows accounts to send
          in one hour.

          * `0` or `unlimited` — The hosting plan allows unlimited emails per hour.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/max_email_per_hour_1"
      - name: max_emailacct_quota
        in: query
        description: |-
          The hosting plan's maximum email account quota size, in megabytes (MB).

          * `0`, `null, or `unlimited` — The hosting plan allows unlimited quota.

          **Note:**

          * This parameter does **not** affect any existing email accounts.
          * The `unlimited` value is **only** available to users that possess
          the corresponding `unlimited` ACL permission.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/max_emailacct_quota_2"
      - name: max_team_users
        in: query
        description: The hosting plan's maximum number of Team users.
        required: false
        style: form
        explode: true
        schema:
          maximum: 7
          minimum: 0
          type: integer
          nullable: true
          example: 7
      - name: maxaddon
        in: query
        description: |-
          The hosting plan's maximum number of addon domains.

          * `unlimited` or `null` — The hosting plan allows unlimited
          addon domains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxaddon_2"
      - name: maxftp
        in: query
        description: |-
          The hosting plan's maximum number of FTP accounts.

          * `unlimited`, or `null` — The hosting plan allows unlimited databases.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxftp_2"
      - name: maxlst
        in: query
        description: |-
          The hosting plan's maximum number of mailing lists.

          * `unlimited`, or `null` — The hosting plan allows unlimited
          mailing lists.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxlst_2"
      - name: maxpark
        in: query
        description: |-
          The hosting plan's maximum number of parked domains (aliases).

          * `unlimited` or `null` — The hosting plan allows unlimited parked
          domains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxpark_2"
      - name: maxpop
        in: query
        description: |-
          The hosting plan's maximum number of email accounts.

          * `unlimited`, or `null` — The hosting plan allows unlimited
          email accounts.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxpop_2"
      - name: maxsql
        in: query
        description: |-
          The hosting plan's maximum number of each available type of SQL
          database.

          For example, if you set this value to `5` and the system administrator
          allows MySQL® and PostgreSQL® databases, users with this hosting plan
          can create up to five MySQL databases and up to five PostgreSQL databases.

          * `unlimited`, or `null` — The hosting plan allows unlimited
          databases.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxsql_2"
      - name: maxsub
        in: query
        description: |-
          The hosting plan's maximum number of subdomains.

          * `unlimited`, or `null` — The hosting plan allows unlimited
          subdomains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/maxsub_2"
      - name: quota
        in: query
        description: |-
          The hosting plan's disk space quota, in megabytes (MB).

          * `0`, `unlimited`, or `null` — The hosting plan allows unlimited
          disk space quota.

          **Note:**

          The `0`, `unlimited`, or `null` values are **only** available to
          users that possess the corresponding `unlimited` ACL permission.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/quota_1"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_122"
  /editquota:
    get:
      tags:
      - Bandwidth and Disk Quotas
      summary: Update cPanel account disk quota
      description: This function modifies a user's disk quota.
      operationId: editquota
      parameters:
      - name: quota
        in: query
        description: |-
          The account's new quota.
          * A positive integer that represents the maximum amount of disk space, in megabytes (MB).
          * 0 or unlimited grants the account unlimited disk space.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/quota_2"
      - name: user
        in: query
        description: The cPanel account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_123"
  /editzonerecord:
    post:
      tags:
      - DNS
      - DNS Zones
      summary: Update DNS zone record
      description: |-
        This function edits a DNS zone record. To effectively use this function, use the following workflow:
         1. Run the `dumpzone` function on the DNS zone record to edit.
         1. Locate the `Line` value that corresponds to the data to edit.
         1. Use the values from that zone record to formulate the appropriate `editzonerecord` parameters.

        **Important:**

        * When you call this function, you **must** include the additional parameters for the selected zone record type.
        * To change the zone record's IP address, we recommend that you use the [`swapip` script](https://go.cpanel.net/TheswapipScript) or the `setsiteip` function instead.
        * You **cannot** edit other DNS zones that reside on *Write-only* servers in a DNS cluster.

        **Note:**

        On servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.
          * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.
          * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: editzonerecord
      requestBody:
        description: The updated DNS Zone Record.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DnsEditZoneParameterType"
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_124"
  /emailtrack_search:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return email delivery records by search criteria
      description: |-
        This function retrieves email delivery records.

        **Warning:**

        * On most servers, this function returns a large amount of output. We **strongly**
        recommend that you [filter](https://go.cpanel.net/WHMAPI1FilterOutput) and
        [sort](https://go.cpanel.net/WHMAPI1SortOutput) the output.
        * The following example uses the filter and sort options:

          `https://hostname.example.com:2087/cpsess##########/json-api/emailtrack_search?api.version=1&api.filter.enable=1&api.filter.a.field=sendunixtime&api.filter.a.arg0=1628889719&api.filter.a.type=gt&api.filter.b.field=sendunixtime&api.filter.b.arg0=1629847321&api.filter.b.type=lt&api.sort.enable=1&api.sort.a.field=sendunixtime&api.sort.a.reverse=0&api.chunk.enable=1&api.chunk.size=25&api.chunk.start=1&success=1`
      operationId: emailtrack_search
      parameters:
      - name: defer
        in: query
        description: |-
          Whether to return delivery deferral events.
          * `1` — Return delivery deferral events.
          * `0` — Do not return delivery deferral events.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: deliverytype
        in: query
        description: |-
          The type of delivery records to retrieve.
          * `all` — Retrieve all delivery records.
          * `remote` — Retrieve remote delivery records.
          * `local` — Retrieve local delivery records.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: all
          default: all
          enum:
          - all
          - remote
          - local
      - name: failure
        in: query
        description: |-
          Whether to return delivery failure events.
          * `1` — Return delivery failure events.
          * `0` — Do not return delivery failure events.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: inprogress
        in: query
        description: |-
          Whether to return delivery attempts in progress.
          * `1` — Return delivery attempts in progress.
          * `0` — Do not return delivery attempts in progress.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: max_results_by_type
        in: query
        description: |-
          The number of results to return for each type.

          **Note**

          If you set this parameter to `0`, the function returns unlimited results.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 3
          default: 0
      - name: success
        in: query
        description: |-
          Whether to return successful delivery attempts.
          * `1` — Return successful delivery attempts.
          * `0` — Do not return successful delivery attempts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_125"
  /emailtrack_stats:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return cPanel account email tracking statistics
      description: This function retrieves email tracking statistics.
      operationId: emailtrack_stats
      parameters:
      - name: deliverytype
        in: query
        description: |-
          The type of delivery to query. If you do not specify a value,
          this function returns all types.
          * `remote`
          * `remote-or-faildefer`
          * `local`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: remote
          enum:
          - remote
          - remote-or-faildefer
          - local
      - name: endtime
        in: query
        description: |-
          The end time of the search window. This parameter defaults to the current time.

          **Note**

          You can also call this the `enddate` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1471552781
      - name: nosize
        in: query
        description: |-
          Whether to return the `TOTALSIZE` parameter.
          * 1 — Do **not** return.
          * 0 — Return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: nosuccess
        in: query
        description: |-
          Whether to return the `SUCCESSCOUNT` parameter.
          * 1 — Do **not** return.
          * 0 — Return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: starttime
        in: query
        description: |-
          The start time of the search window.

          **Note**

          You can also call this the `startdate` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1371552781
          default: 0
      - name: user
        in: query
        description: "The cPanel username to query. If you do not specify a value,\
          \ the function retrieves statistics for all of the server's accounts."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_126"
  /emailtrack_user_stats:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return all cPanel accounts email tracking statistics
      description: This function retrieves email tracking statistics for each user.
      operationId: emailtrack_user_stats
      parameters:
      - name: deliverytype
        in: query
        description: |-
          The type of delivery to query. If you do not specify a value,
          this function returns all types.
          * `remote`
          * `remote-or-faildefer`
          * `local`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: remote
          enum:
          - remote
          - remote-or-faildefer
          - local
      - name: endtime
        in: query
        description: The end time of the search window.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1471552781
      - name: sender
        in: query
        description: "The sender's email address. If you do not specify a value, this\
          \ function returns entries for mail from all senders."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: starttime
        in: query
        description: The start time of the search window.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1371552781
          default: 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_127"
  /enable_authentication_provider:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Enable identity provider
      description: This function enables an external authentication identity provider
        for a specified service.
      operationId: enable_authentication_provider
      parameters:
      - name: provider_id
        in: query
        description: A valid identity provider's identification key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanelid
      - name: service_name
        in: query
        description: |-
          The cPanel & WHM service's name:

          * `cpaneld`
          * `webmaild`
          * `whostmgrd`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpaneld
          enum:
          - cpaneld
          - webmaild
          - whostmgrd
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_128"
  /enable_cpgreylist:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Enable Greylisting
      description: This function enables Greylisting.
      operationId: enable_cpgreylist
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_129"
  /enable_cphulk:
    get:
      tags:
      - cPHulk
      - Settings
      summary: Enable login security
      description: This function enables the cPHulk service.
      operationId: enable_cphulk
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_130"
  /enable_dkim:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Enable domain's DKIM records
      description: This function enables DomainKeys Identified Mail (DKIM) records
        on the DNS server for one or more domains.
      operationId: enable_dkim
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to enable DKIM records on the DNS server.

          **Note:**

           To enable multiple domain DKIM records, duplicate the parameter name. For example, use the `domain=example-1.com`, `domain=example-2.com`, and `domain=example-3.com parameters`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: To enable multiple domain DKIM records
            value: domain=example-1.com domain=example-2.com domain=example-3.com
          single:
            summary: To enable a single domain DKIM record
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_131"
  /enable_dnssec_for_domains:
    get:
      tags:
      - DNS
      - DNS Security
      summary: Enable DNSSEC on domain
      description: |-
        This function enables DNSSEC on the domain.

        **Note:**

        * Only servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.
        * After you enable DNSSEC on the domain, you **must** add the Delegation of Signing (DS) records on your DNS server and with your registrar.
        * You **cannot** modify the DNSSEC security key. To make any changes, you **must** disable, delete, and re-create the DNSSEC security key.
      operationId: enable_dnssec_for_domains
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to enable DNSSEC.

          **Note:**

          To enable DNSSEC on multiple domains, duplicate or increment the parameter name. For example, to check three domains, you could:
          * Use the `domain` parameter multiple times.
          * Use the `domain`, `domain-1`, and `domain-2` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
        examples:
          multiple:
            summary: Multiple domains
            value: domain=example.com&domain-1=example1.com&domain-2=example2.com
          multiple-alternative:
            summary: Multiple domains
            value: domain=example.com&domain=example1.com&domain=example2.com
          single:
            summary: A single domain.
            value: example.com
      - name: active
        in: query
        description: |-
          Whether to activate the newly-created key.
          * `1` - Activate the key.
          * `0` - Do **not** activate the key.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: algo_num
        in: query
        description: |-
          The algorithm that the system uses to generate the security key.
          * `5` - RSA/SHA-1
          * `6` - DSA-NSEC3-SHA1
          * `7` - RSASHA1-NSEC3-SHA1
          * `8` - RSA/SHA-256
          * `10` - RSA/SHA-512
          * `13` - ECDSA Curve P-256 with SHA-256
          * `14` - ECDSA Curve P-384 with SHA-384

          **Note:**

          We recommend that you use an ECDSA Curve P-256 with SHA-256 (13) value if your registrar supports it.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 8
          default: 8
          enum:
          - 5
          - 6
          - 7
          - 8
          - 10
          - 13
          - 14
      - name: key_setup
        in: query
        description: |-
          The manner in which the system creates the security key.
          * `classic` - Use separate keys for KSK and ZSK. Use this value when the `algo_num` parameter is equal to or less than 8.
          * `simple` - Use a single key for both KSK and ZSK. Use this value when the `algo_num` parameter is greater than 8.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: classic
          default: classic
          enum:
          - classic
          - simple
      - name: nsec3_iterations
        in: query
        description: The number of times that the system rehashes the first resource
          record hash operation.
        required: false
        style: form
        explode: true
        schema:
          maximum: 500
          minimum: 1
          type: integer
          example: 7
          default: 7
      - name: nsec3_narrow
        in: query
        description: |-
          Whether NSEC3 operates in Narrow or Inclusive mode.

          **Note:**

          For information about these modes, read [PowerDNS's DNSSEC documentation](https://doc.powerdns.com/authoritative/dnssec/intro.html).

          * `1` - Narrow mode.
          * `0` - Inclusive mode.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: nsec3_opt_out
        in: query
        description: |-
          Whether the system will create records for all delegations.
          * `1` - Create records for all delegations.
          * `0` - Create records only for secure delegations.

          **Note:**

          Only use the `1` value if you **must** create records for all delegations.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: nsec3_salt
        in: query
        description: |-
          A hexadecimal string that the system appends to the domain name before it applies the hash function to the name.

          **Note:**

          For information about salt values, read [RFC 5155](https://tools.ietf.org/html/rfc5155#section-3.1.5).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 1a2b3c4d5e6f
      - name: use_nsec3
        in: query
        description: |-
          Whether the domain will use [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) or NSEC3 semantics.
          * `1` - Use NSEC3 semantics.
          * `0` - Use NSEC semantics.

          **Note:**

          If you use this value, the system ignores the other NSEC3 options.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_132"
  /enable_market_provider:
    get:
      tags:
      - Market
      - Provider Management
      summary: Enable Market provider
      description: This function enables a cPanel Market provider.
      operationId: enable_market_provider
      parameters:
      - name: name
        in: query
        description: The cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_133"
  /enable_monitor_all_enabled_services:
    get:
      tags:
      - Server Administration
      - Services
      summary: Enable monitoring for all services
      description: This function enables monitoring for all enabled services.
      operationId: enable_monitor_all_enabled_services
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_134"
  /enqueue_deferred_ssl_installations:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Add SSL certificate to installation queue
      description: |-
        This function adds SSL certificates to the installation queue. This allows you to
        defer and batch SSL certificate installation.

        **Important:**

        You **must** enter the same quantity of `username`, `cab`, `crt`, `key`, and `vhost_name`
        parameters. For example, to add three certificates to the installation queue, enter the
        `username` parameter three times, then enter three `cab`, `crt`, `key`, and `vhost_name`
        parameters.
      operationId: enqueue_deferred_ssl_installations
      parameters:
      - name: cab
        in: query
        description: |-
          The Certificate Authority (CA) bundle's contents.

          **Note:**

          * We recommend that you enter an empty string. An empty string tells the server to
          download the CA bundle automatically.
          * To add multiple certificates to the installation queue, duplicate or increment the
          parameter name. For example, `cab-1`, `cab-2`, and `cab-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Enqueue multiple CA bundles.
            value: cab-1=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ8V8e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----
              cab-2=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ7V7e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----
              cab-3=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----
          multiple-alternative:
            summary: Enqueue multiple CA bundles.
            value: cab=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ8V8e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----
              cab=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ7V7e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----
              cab=-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----
          single:
            summary: Enqueue a single CA bundle.
            value: '-----BEGIN%20CERTIFICATE-----%0AMIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD%0AVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv%0Ab3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV%0AUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU%0AcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv%0ARLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M%0AypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5%0A1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz%0AdcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl%0AIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy%0AbW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY%0A-----END%20CERTIFICATE-----'
      - name: crt
        in: query
        description: |-
          The certificate's contents.

          **Note:**

           To add multiple certificates to the installation queue, duplicate or increment the
           parameter name. For example, `crt-1`, `crt-2`, and `crt-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Enqueue the contents of multiple certificates.
            value: crt-1=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2CFCrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----
              crt-2=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2AZArc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----
              crt-3=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----
          multiple-alternative:
            summary: Enqueue the contents of multiple certificates.
            value: crt=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2CFCrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----
              crt=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2AZArc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----
              crt=-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----
          single:
            summary: Enqueue a single certificate's contents.
            value: '-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----'
      - name: key
        in: query
        description: |-
          The private key's text.

          **Note:**

          To add multiple certificates to the installation queue, duplicate or increment the
          parameter name. For example, `key-1`, `key-2`, and `key-2`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Enqueue the private key text of multiple certificates.
            value: key-1=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3LMNmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----
              key-2=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3TUVmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----
              key-3=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3RSHmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----
          multiple-alternative:
            summary: Enqueue the private key text of multiple certificates.
            value: key=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3LMNmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----
              key=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3TUVmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----
              key=-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3RSHmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----
          single:
            summary: Enqueue a single certificate's private key text.
            value: '-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEowIBAAKCAQEAt6vq%2FPAW347qigdxemr6L85VVARjehbGuofqYH8%2ByxVLHBx%2F%0ApsuOg7iyj%2Bd2vKaFv2ap%2BQ6phUfCdD%2BHa4z4jDU0ooN%2FA6WNZyAJLbg3KRt9BSVb%0A9I0NOi90MaVPUCd6vT3RCx77X21rwpL%2FcCTPftuSCoyQ87%2BIQ4eUX8tsu%2BN%2BKCGS%0AgZyjnXBzp3scJDA9ZH5R6dtBbNTBHj%2Fg%2BrD9ivEMC%2Fw78Sc184bCcKeWcWrhrf3R%0AUauKowCeDMiVExUO7iokZbd0U1K1VSbvX7Xptr94hUFAY3atuCJ7pFvpW4d2ypKt%0A55rS1ItHF10V3sDRAxBG%2B2eqhS%2FpFkGF5%2Bva3QIDAQABAoIBAAONBE79iUOrLKec%0AezolpU6VS5sDNrUeiZsDk6ln7Fvavof9mQ4tc0TipjkX%2FXiqM32%2By1xwRyC3gW%2Fj%0A5odSw19ai%2Fj0V9lHMxOiT%2BsdW5uk12bpEP0KWQ4d6r4m9wCSstHDxy3S3IM8x0%2BM%0ArfmKDKTkM8%2BWZhsAQe8kSN8NPL3pIJnG%2Ftuc8lwFoZOEot6%2BAeGYdxxEdFbvVyEm%0Aa8%2FAhOQ5Z07T36bxuPtyRjwdnFH7hnmzpcWF5Iz8Jp8SrQ2XX2rKSQpa1Ic%2B6TMA%0AF7kJsOFiw%2B8aX6zTTVLsvQTHWEsnNWHKtbuNBoQcq2HyifrUxr550kZVMnyNC3ic%0A6EH%2FCxUCgYEA5qSo6zf6yJ5tdwm%2FNnrKwvFksapd%2Bi9%2BnAqQHHTFPtlzKHkZ7d5x%0AdklyzAMaoHVoeggtQynUcxcYKjy3i9Nj29P8wN6DhcxJY4Ohdk%2FsAILTcu8QyPzN%0A%2FcYVHWykmFuS55uEa2Mlv6j%2FTBraRJUYfiEl2ZvR77L5gke4GAsCKxcCgYEAy91D%0AlmTy4ka991Ungy%2BVcNTSw9z50l%2Fzu4GxmAlj1fsuX%2F27nbfpsOFjbvlm4xLfW3qM%0A%2BWkrvKXUuxeIbGcBnVlHFWgc6%2BKt5vNoOzUVsm5i90R%2Fg3vhB5cdvuVoTKf2EU4n%0ANVTSaM%2F6zpzBEHSKtTsbx0FiPjS04bk%2Bsi0REisCgYAwy3s1MEWtNd9AxN4gP4Aw%0AF%2FPOppV1PaESkCWG76lfL4%2FuaxhyO5JTjRxtTubONaih0KMKx4m7w5IINYo7WcCR%0AnFqnzyuSHfMUy59YMXZjcUoc0bkCXIGUA9kpvXdhCFafC0bLlVFCKBXC2xd8VPK2%0AlHq2fAHBLWMeDeBDreiKhwKBgHrcweP8uOioK8rI9kQ4xD649MD4B1PDYjfqRObV%0AGecXN27Ak3bNJTjlzTBPfLNzZ0tRg2649JP%2F%2BUI8P4rdVXrIGHANTAjZl2bt4S51%0Aorrjjh9pl9PdL9SMPXAUABTa0RDC4hxhH2HtnkEw9aX%2BJq5sjiQ7AoNs7mpvYxqs%0A0HH7AoGBALhKD8FxNGYLK8oCO27NBdL%2F%2BypxgH5EnwVr%2B3fF49tfC5xpV9Odfu1Z%0ANGNFbjK47PVCLaGKzQUvU7jSAbKt3pDR0IcfiF%2BM6rc86CmZf%2BvAPTN3%2BJwG%2BcIE%0AcKuYkroIzFWDu9NYiioUI7%2Fa9XdmTvfrT3RSHmup0FoRmlRHD%2FM8%0A-----END%20RSA%20PRIVATE%20KEY-----'
      - name: username
        in: query
        description: |-
          The cPanel account username for which to enqueue the SSL certificate installations.

          **Note:**

          To add multiple certificates to the installation queue, duplicate or increment the
          parameter name. For example, `username-1`, `username-2`, and `username-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Enqueue multiple SSL certificate installations.
            value: username-1=username1 username-2=username2 username-3=username3
          multiple-alternative:
            summary: Enqueue multiple SSL certificate installations.
            value: username=username1 username=username2 username=username3
          single:
            summary: Enqueue a single SSL certificate installation.
            value: username
      - name: vhost_name
        in: query
        description: |-
          The name of the web virtual host (vhost) for which to install the certificate.

          **Note:**

           To add multiple certificates to the installation queue, duplicate or increment the
           parameter name. For example, `vhost_name-1`, `vhost_name-2`, and `vhost_name-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Install the certificate for multiple vhosts.
            value: vhost_name-1=host1.example.com vhost_name-2=host2.example.com vhost_name-3=host3.example.com
          multiple-alternative:
            summary: Install the certificate for multiple vhosts.
            value: vhost_name=host1.example.com vhost_name=host2.example.com vhost_name=host3.example.com
          single:
            summary: Install the certificate for a single vhost.
            value: host.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_135"
  /enqueue_transfer_item:
    get:
      tags:
      - Transfers
      - cPanel Account Transfer
      summary: Add module to transfer session
      description: |-
        This function adds a transfer session to a queue. For more information about how this function works with other
        functions in the transfer and restore process, read our
        [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.

        **Important:**

        The `module` parameter determines which additional parameters to use with the function.
      operationId: enqueue_transfer_item
      requestBody:
        description: An enqueue transfer item.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/schemas-Transfers_EnqueueTransferItem_Type"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_136"
  /ensure_dkim_keys_exist:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Validate domain's DKIM keys
      description: |-
        This function confirms the validity of a DomainKeys Identified Mail (DKIM) key for one or more domains.

        **Note:**

        * If an existing DKIM key does **not** meet the server's security requirements, the system replaces the existing DKIM key.
        * If no DKIM key exists, the system creates a new key for the domain.
      operationId: ensure_dkim_keys_exist
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to confirm a valid DKIM key exists.

          **Note:**

          To check the DKIM key validity for multiple domain, duplicate the parameter name. For example, use the `domain-1=example.com`, `domain-2=example2.com`, and `domain-3=example3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Check the DKIM key validity for multiple domains.
            value: domain=example1.com&domain=example2.com&domain=example3.com
          single:
            summary: Check the DKIM key validity for a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_137"
  /execute_remote_whmapi1_with_password:
    get:
      tags:
      - API Execution
      summary: Run remote WHM API 1 function
      description: This function executes WHM API 1 functions on a remote server.
      operationId: execute_remote_whmapi1_with_password
      parameters:
      - name: function
        in: query
        description: The name of the function to call on the remote server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: passwd
      - name: host
        in: query
        description: The remote server's hostname or IP address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: host.example.com
      - name: parameter_name
        in: query
        description: |-
          The name of the parameter for the function.

          **Note:**

           You must enter the same number of parameter_name and parameter_value parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: parameter_value
        in: query
        description: |-
          The value of the parameter for the function.

          **Note:**

           You must enter the same number of parameter_name and parameter_value parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username2
      - name: password
        in: query
        description: The password to log in to the remote server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: luggage12345
      - name: username
        in: query
        description: The username to log in to the remote server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: tls_verification
        in: query
        description: |-
          Whether to use TLS verification. This parameter defaults to On.

          **Important:**

           We strongly recommend that you use TLS verification. Only connect to a server if you can verify its identity.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "on"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_138"
  /exim_configuration_check:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Repair Exim configuration file
      description: "This function scans the Exim configuration file for errors, and\
        \ if it finds errors attempts to repair them."
      operationId: exim_configuration_check
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_139"
  /export_zone_dnskey:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Export domain's DNSKEY record value
      description: This function exports a domain's DNSKEY record value.
      operationId: export_zone_dnskey
      parameters:
      - name: domain
        in: query
        description: The domain from which to fetch the DNSKEY record value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key_id
        in: query
        description: The DNSSEC record's ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 12345
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_140"
  /export_zone_files:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Export DNS zones in zone file format
      description: |-
        This function returns one or more DNS zones, in
        [RFC-1035](https://tools.ietf.org/html/rfc1035) format.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: export_zone_files
      parameters:
      - name: zone
        in: query
        description: The DNS zones to display.
        required: true
        style: form
        explode: true
        schema:
          type: array
          example:
          - example.com
          - example.net
          items:
            type: string
            format: domain
            example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_141"
  /export_zone_key:
    get:
      tags:
      - DNS
      - DNS Security
      summary: Export domain's DNSSEC key
      description: |-
        This function exports a DNSSEC security key to a domain.

        **Note:**

        Only servers that run PowerDNS can use DNSSEC. If you call this function on a server
        that doesn't use PowerDNS, you will receive an error.
      operationId: export_zone_key
      parameters:
      - name: domain
        in: query
        description: The domain to export the security key to.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: key_id
        in: query
        description: |-
          The security key's ID.

          **Note:**

          You can locate the ID with the WHM AP1 `fetch_ds_records_for_domains` function.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_142"
  /expunge_mailbox_messages:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Remove email account messages by Dovecot query
      description: |-
        This function removes mail messages from a cPanel account that you select with a query.

        **Important:**

          When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: expunge_mailbox_messages
      parameters:
      - name: account
        in: query
        description: An email account that exists on the server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: user@example.com
      - name: mailbox
        in: query
        description: |-
          A mailbox name on the account.

          **Note:**

            Because you cannot escape wildcard characters such as (`*`), we recommend that you use functions that use the `mailbox_guid` parameter instead. For example, the WHM API 1 `expunge_messages_for_mailbox_guid` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: INBOX
      - name: query
        in: query
        description: "A [Dovecot search query](http://wiki2.dovecot.org/Tools/Doveadm/SearchQuery)\
          \ to select which messages you wish to remove from the mailbox."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: savedbefore 52w
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_143"
  /expunge_messages_for_mailbox_guid:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Remove email account messages by mailbox GUID
      description: |-
        This function removes mail messages from a cPanel account.

        **Important:**

          When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: expunge_messages_for_mailbox_guid
      parameters:
      - name: account
        in: query
        description: The email account's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      - name: mailbox_guid
        in: query
        description: |-
          The mailbox's globally unique identifier (GUID).

          **Note:**

          To find the mailbox GUID, use the WHM API 1 - `get_mailbox_status` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 2550860f0c58d158c92a000044f0d230
      - name: query
        in: query
        description: "The Dovecot search query to select which messages you wish to\
          \ remove from the mailbox. For more information, read [Dovecot's Search\
          \ Query](http://wiki2.dovecot.org/Tools/Doveadm/SearchQuery) documentation."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: savedbefore 52w
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_144"
  /fetch_connected_application:
    post:
      tags:
      - Server Administration
      - Connected Applications
      summary: Fetch application connection information
      description: |-
        Retrieve the connection information related to a application that has been granted
        access to this server. This data may include any number of properties, but its
        primary purpose is to associate API tokens and public/private key pairs and similar
        resources with a specific connected application.
      operationId: fetch_connected_application
      parameters:
      - name: name
        in: query
        description: The name of the connected application.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: application-1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_145"
  /fetch_dkim_private_keys:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Return domain's DKIM private key
      description: |-
        This function returns a domain's installed DKIM private key in [Privacy-Enhanced Mail](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) (PEM) format.

        **Warning:**

          We **strongly** recommend that you protect your private key. If others obtain your private DKIM key, they could sign emails and impersonate you as a sender.
      operationId: fetch_dkim_private_keys
      parameters:
      - name: domain
        in: query
        description: |-
          The queried domain.

          **Note:**

           To retrieve multiple domain DKIM keys, increment the parameter name. For example, use the `domain-1=example-1.com`, `domain-2=example-2.com`, and `domain-3=example-3.com`                      parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Query multiple domains.
            value: domain=example-1.com&domain=example-2.com&domain=example-3.com
          single:
            summary: Query a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_146"
  /fetch_ds_records_for_domains:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Return domain's DS record
      description: |-
        This function fetches a domain's Delegation of Signing (DS) record.

        **Note:**

        Only servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.
      operationId: fetch_ds_records_for_domains
      parameters:
      - name: domain
        in: query
        description: |-
          The domain to fetch a DS record from.

          **Note:**

          To fetch records from multiple domains, duplicate or increment the parameter name. For example, to check three domains, you could:
          * Use the `domain` parameter multiple times.
          * Use the `domain`, `domain-1`, and `domain-2` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
        examples:
          multiple:
            summary: Multiple domains
            value: domain=example.com&domain-1=example1.com&domain-2=example2.com
          multiple-alternative:
            summary: Multiple domains
            value: domain=example.com&domain=example1.com&domain=example2.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_147"
  /fetch_mail_queue:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Return server mail queue contents
      description: This function retrieves the contents of the server's mail queue.
      operationId: fetch_mail_queue
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_148"
  /fetch_pkgacct_master_log:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return start_background_pkgacct session log file
      description: This function returns the contents of a `start_background_pkgacct`
        session's master log file.
      operationId: fetch_pkgacct_master_log
      parameters:
      - name: session_id
        in: query
        description: The `start_background_pkgacct` session ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username20200323154328kDJ2Kx4xua2KtG
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_149"
  /fetch_security_advice:
    get:
      tags:
      - Security
      summary: Return Security Advisor results
      description: |-
        This function returns the cPanel Security Advisor's security scan data. It advises you of how to resolve any security issues that it finds.

        **Note:**

          For more information, read the [cPanel Security Advisor](https://go.cpanel.net/githubsecurityadvisor) documentation at the WebPros International, LLC GitHub® repository.
      operationId: fetch_security_advice
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_150"
              examples:
                advice_with_module_error:
                  value:
                    data:
                      payload:
                      - advice:
                          key: SSH_direct_root_login_permitted
                          suggestion: "Manually edit /etc/ssh/sshd_config and change\
                            \ PermitRootLogin to “without-password” or “no”, then\
                            \ restart SSH …"
                          summary: SSH direct root logins are permitted.
                          type: ADVISE_BAD
                        module: Cpanel::Security::Advisor::Assessors::SSH
                        type: mod_advice
                      - advice:
                          key: SSH_is_current
                          summary: "Current SSH version is up to date: 11.22p33-44"
                          type: ADVISE_GOOD
                        module: Cpanel::Security::Advisor::Assessors::SSH
                        type: mod_advice
                      - message: Anvil not found at /usr/local/cpanel/Cpanel/Security/Advisor/Assessors/ACME.pm
                          line 6.
                        module: Cpanel::Security::Advisor::Assessors::ACME
                        type: mod_load
                    metadata:
                      command: fetch_security_advice
                      reason: OK
                      result: 1
                      version: 1
  /fetch_service_ssl_components:
    get:
      tags:
      - SSL
      - SSL Server Settings
      summary: Return system services and associated certificates
      description: This function lists the system's services and their associated
        certificates.
      operationId: fetch_service_ssl_components
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_151"
  /fetch_ssl_certificates_for_fqdns:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Return cPanel account FQDN certificate information
      description: This function retrieves the certificate information for all fully
        qualified domain names (FQDNs) that the account owns.
      operationId: fetch_ssl_certificates_for_fqdns
      parameters:
      - name: domains
        in: query
        description: |-
          A comma-separated list of domains for which to retrieve information.

          **Note:**

          For browser-based calls, you **must** URI-encode each comma (`%2C`).
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Fetch information for multiple domains.
            value: "domains=example-1.com,example-2.com,example-3.com"
          single:
            summary: Fetch information for a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_152"
  /fetch_ssl_vhosts:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Return server vhosts and SSL certificates
      description: This function lists the server's virtual hosts (vhosts) and their
        installed SSL certificates.
      operationId: fetch_ssl_vhosts
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_153"
  /fetch_transfer_session_log:
    get:
      tags:
      - Transfers
      - Transfer Monitoring
      summary: Return transfer session's log file
      description: |-
        This function returns a transfer session's log file.

        **Note:**

         For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.
      operationId: fetch_transfer_session_log
      parameters:
      - name: logfile
        in: query
        description: The log file's name.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/logfile"
      - name: transfer_session_id
        in: query
        description: The transfer session's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: vm5docscpanelcopya20140224163412sylG
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_154"
  /fetch_vhost_ssl_components:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Return all SSL certificate components on vhost
      description: |-
        This function lists the components of each SSL certificate on the server's virtual hosts.

        **Warning:**

        * On most servers, this function returns a large amount of output. We **strongly**
        recommend that you [filter](https://go.cpanel.net/WHMAPI1FilterOutput) and
        [sort](https://go.cpanel.net/WHMAPI1SortOutput) the output.
        * The following example uses the filter and sort options:

          `https://hostname.example.com:2087/cpsess##########/json-api/fetch_vhost_ssl_components?api.version=1&api.filter.a.field=servername&api.filter.a.arg0=servername.com&api.filter.a.type=eq&api.filter.enable=1&api.sort.enable=1&api.sort.a.field=servername`
      operationId: fetch_vhost_ssl_components
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_155"
  /fetchcrtinfo:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Return SSL certificate information
      description: This function retrieves information about a certificate.
      operationId: fetchcrtinfo
      parameters:
      - name: id
        in: query
        description: The certificate's internal system ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example_com_bf638_f81af_1500191700_79e34f42c83f748bd49474ab9d66f7cd
      - name: user
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_156"
  /fetchsslinfo:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Return cPanel account SSL certificate information
      description: This function retrieves information about SSL certificates that
        you could install for a user. This function does **not** provide information
        about the currently installed certificates.
      operationId: fetchsslinfo
      parameters:
      - name: crtdata
        in: query
        description: The certificate's text.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: '-----BEGIN CERTIFICATE-----\nMIIDdzCCAl+gAwIBAgIFAhQDowAwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL\nZXhhbXBsZS5jb20wHhcNMTkxMTExMjAzNzUzWhcNMjAxMTEwMjAzNzUzWjAWMRQw\nEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAK31N5qqd4BhMRm318tt7CP3thvJ9nXv5j3Hks8bfNggAgBmWwh/iGEoyB0e\nmKmFkomXYQejSCkFmwI5/I+H53LA1UrnWURAHaY8UCJMMeCe22E9fbmASNMhcnov\n/AOYBl3kEWEkKVBN3dQZFsWzj+PTTui1zHl8nrr1POPLZMS+t8D3HppNoUBwBkKR\nQ/MetqCaQ3HlgbknMi0/5DbuaV0GJNbXNX9uhnGqQFUI21sEVU4xcvtEDN88dT1d\nx5EhLXobDV/brXgFm85QK/lZt3aWlIJLs/WJJSK+152PO3HhfoHpkx+JflMYoev5\nLauXhZGYXCEG8sBLa2PPH9WlpgcCAwEAAaOByzCByDAdBgNVHQ4EFgQU/Vx4Cer1\nmY3SaijxdCsA2Jo7q84wCQYDVR0TBAIwADBCBgNVHSMEOzA5gBT9XHgJ6vWZjdJq\nKPF0KwDYmjurzqEapBgwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb22CBQIUA6MAMB0G\nA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA5BgNVHREEMjAwggtleGFtcGxl\nLmNvbYIQbWFpbC5leGFtcGxlLmNvbYIPd3d3LmV4YW1wbGUuY29tMA0GCSqGSIb3\nDQEBCwUAA4IBAQCneJA732g7srfydkgG0XJ8b1RS3ffVlnG1ahCDfIpBTx2M7Oco\n0oa4QK4fEJnyh5Zc861aNrRHecLk4KV4QmDmLJVxTKNv3QXqgPJu+zN49x9ESwRs\nbqiaD+K6MYmlyRukxY+v8jyOhTKvZTOjuuGKhDRcNNgn/kPIjZw3v37vY4o1pUPL\nP1YBw2Caa01HstzouaVZlw05Viwo2AHJE5u7zW+VcA4VR8WAD/2SqdyWZIo+chwd\nr3hWlRyHephLCBhOLb1wPk3E+mOIyryXjLpGdVnWewMSEY8AGvv7IORkO5ufCz/c\n5UlG1r1+l5AhnFQPGoREI49hXVAETVInW9Uk\n-----END
            CERTIFICATE-----'
      - name: domain
        in: query
        description: The domain's name.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_157"
  /flush_cphulk_login_history:
    get:
      tags:
      - cPHulk
      - Management
      summary: Remove all login security records
      description: |-
        This function removes the login history entries from the cPHulk
        database.
      operationId: flush_cphulk_login_history
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_158"
  /flush_cphulk_login_history_for_ips:
    get:
      tags:
      - cPHulk
      - Management
      summary: Remove login security IP address block
      description: This function removes specific login history entries from the cPHulk
        database. Use this function to unblock one or more IP addresses.
      operationId: flush_cphulk_login_history_for_ips
      parameters:
      - name: ip
        in: query
        description: |-
          The record's IP address.

          **Note:**

           To unblock multiple IP addresses, increment the parameter name (for example, to unblock three IP addresses, use the `ip-1`, `ip-2`, and `ip-3` parameters).
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            anyOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6
        examples:
          multiple:
            description: Multiple IPv4 addresses.
            value:
            - 192.168.0.1
            - 192.168.0.2
            - 192.168.0.3
          multiple-ipv6:
            summary: Multiple IPv6 addresses.
            value:
            - 2001:db8::1
            - 2002:db8::1
            - 2003:db8::1
          single:
            description: A single IPv4 address.
            value:
            - 192.168.0.1
          single-ipv6:
            summary: Single IPv6 Address
            value:
            - 2001:db8::1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_159"
  /force_dedistribution_from_node:
    get:
      tags:
      - Server Administration
      - Server Nodes
      summary: Repair distributed accounts with data loss
      description: |-
        This function converts cPanel accounts that use a given
        [child node](https://go.cpanel.net/cPanelGlossary#child-node)
        to use the local server instead.

        Unlike the WHM API 1 `modifyacct` API call, this API does **not**
        transfer users’ data from the child node as part of the conversion.
        This API is useful for emergency repairs if, for example, a child
        node goes permanently offline while accounts still use it.

        **Warning:**

        Because this API does not transfer users’ data from the child node,
        all converted users will lose data. You should **only** call this API
        as a last resort.
      operationId: force_dedistribution_from_node
      parameters:
      - name: node_alias
        in: query
        description: |-
          The child node’s alias (friendly name). This is the value passed in the
          WHM API 1 `link_server_node_with_api_token` function’s `alias` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mailalias
      - name: user
        in: query
        description: |-
          The usernames of the
          [distributed cPanel accounts](https://go.cpanel.net/cPanelGlossary#distributed-cpanel-account)
          to convert.
        required: true
        style: form
        explode: true
        schema:
          type: array
          example:
          - username
          - username1
          items:
            type: string
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_160"
  /forcepasswordchange:
    get:
      tags:
      - Passwords
      summary: Enable forced password update
      description: This function forces a user to change the account password after
        the next login attempt.
      operationId: forcepasswordchange
      parameters:
      - name: users_json
        in: query
        description: The list of users. The system will force each user that you specify
          to change their account's password the next time that they log in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: json
          example: "{\"user1\":1,\"user2\":1,\"user3\":1}"
      - name: stop_on_failure
        in: query
        description: |-
          Whether to halt the function if it experiences an error.
          * `1` - Halt on error.
          * `0` - Continue on error.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_161"
  /generate_mobileconfig:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Create email account mobile profile configuration
      description: |-
        This function generates a mobile configuration profile for an email account.

        **Important:**

        When you disable the [*Receive Mail* role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: generate_mobileconfig
      parameters:
      - name: account
        in: query
        description: The email account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: use_ssl
        in: query
        description: |-
          Whether to use an SSL-encrypted connection.
          * `1` — Use an SSL-encrypted connnection.
          * `0` — Do **not** use an SSL-encrypted connection.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: selected_account_services
        in: query
        description: |-
          A comma-separated list of the email account service's `.mobileconfig` file names.
          * `caldav` — The `.mobileconfig` file for calendar setup.
          * `carddav` — The `.mobileconfig` file for contacts setup.
          * `email` — The `.mobileconfig` file for email setup.

          **Note:**

           * If you don't specify a value, this parameter uses the default values.
           * You can request one, two, or all possible values.
           * The function ignores unsupported values.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: email
          default: "email,caldav,carddav"
          enum:
          - caldav
          - carddav
          - email
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_162"
  /generatesshkeypair:
    get:
      tags:
      - SSH Keys and Connections
      summary: Create SSH key pair
      description: This function generates an SSH key pair.
      operationId: generatesshkeypair
      parameters:
      - name: abort_on_existing_key
        in: query
        description: |-
          Whether to abort the function if the user already has a key with the same name.

          * `1` — Abort.
          * `0` — Continue.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: algorithm
        in: query
        description: The key's encryption algorithm. The parameter defaults to the
          system's default algorithm.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: dsa
          enum:
          - rsa2
          - dsa
      - name: bits
        in: query
        description: |-
          The key's bits:

          * `1024` — The DSA algorithm's default value.
          * `2048`
          * `4096` — The RSA algorithm's default value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 2048
          enum:
          - 1024
          - 2048
          - 4096
      - name: comment
        in: query
        description: A comment.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: NoComment
          default: ""
      - name: name
        in: query
        description: |-
          The key's filename.

          This parameter defaults to `id_rsa` if the algorithm is RSA, and `id_dsa`
          if the algorithm is DSA.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: KeyFile
          default: id_rsa
      - name: passphrase
        in: query
        description: The key's secure passphrase.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
          default: ""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_163"
  /generatessl:
    get:
      tags:
      - SSL
      - SSL Server Settings
      summary: Create self-signed SSL certificate
      description: "This function generates a private key file, a certificate signing\
        \ request (CSR), and a self-signed SSL certificate."
      operationId: generatessl
      parameters:
      - name: domains
        in: query
        description: A comma-separated list of the certificate's domains.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Generate an SSL certificate for multiple domains.
            value: "domain=example1.com,example2.com,example3.com"
          single:
            summary: Generate an SSL certificate for a single domain.
            value: example.com
      - name: countryName
        in: query
        description: |-
          The certificate's country code.

          If you do not use this parameter, your CSR will **not** include this field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166-1 (alpha-2)
          example: US
      - name: emailAddress
        in: query
        description: |-
          The certificate's contact email address.

          If you do not use this parameter, your CSR will **not** include this field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: keysize
        in: query
        description: |-
          The size of the certificate's key, in bits.

          If you do not use this parameter, your CSR will **not** include this field.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 2048
      - name: localityName
        in: query
        description: |-
          The certificate's city or locality.

          If you do not use this parameter, your CSR will **not** include this field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Houston
      - name: organizationalUnitName
        in: query
        description: The department of the organization that owns the certificate.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: Development
      - name: organizationName
        in: query
        description: |-
          The certificate's organization.

          If you do not use this parameter, your CSR will **not** include this field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "Example, L.L.C."
      - name: pass
        in: query
        description: The certificate's passphrase.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: 123456luggage
      - name: skip_certificate
        in: query
        description: |-
          Whether the function will skip certificate generation.

          * `1` — Skip certificate generate (do **not** generate a certificate).
          * `0` — Do **not** skip certificate generation (generate a certificate).

          **Note:**

          The function will still generate a CSR and key and save both to the user's `SSLStorage`
          data store.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 1
          - 0
      - name: stateOrProvinceName
        in: query
        description: |-
          The certificate's state or province name.

          If you do not use this parameter, your CSR will **not** include this field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Texas
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_164"
  /get_adjusted_market_providers_products:
    get:
      tags:
      - Market
      - Product Management
      summary: Return Market providers' products adjusted prices
      description: |-
        This function lists all available cPanel Market products from enabled providers,
        with the prices that the adjustments database modifies.
      operationId: get_adjusted_market_providers_products
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_165"
              examples:
                group_ssl_certificate:
                  summary: product_group=ssl_certificate
                  value:
                    data:
                      products:
                      - base_name: ""
                        billing_type: one-time
                        description: An extended-validated (EV) SSL certificate signed
                          by cPanel.
                        display_name: cPanel EV SSL Certificate
                        enabled: 1
                        icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
                        icon_mime_type: image/svg+xml
                        license_term: 0
                        price_unit: USD
                        product: cPanel EV Certificate
                        product_category: N/A
                        product_group: ssl_certificate
                        product_id: 209
                        provider_display_name: cPanel Store
                        provider_name: cPStore
                        recommended: 0
                        requires_ip: 0
                        x_certificate_term:
                        - 1
                        - year
                        x_identity_verification:
                        - label: Organization Name
                          name: organizationName
                        - is_optional: 1
                          label: Department Name
                          name: organizationalUnitName
                        - description: 9 consecutive digits or “##-###-####” (More
                            information (https://go.cpanel.net/get_duns))
                          is_optional: 1
                          label: Dun & Bradstreet D-U-N-S (Data Universal Numbering
                            System) Number
                          name: duns_number
                          pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
                        - label: Street Address
                          name: streetAddress
                        - label: City
                          name: localityName
                        - label: State or Province
                          name: stateOrProvinceName
                        - label: Postal Code
                          name: postalCode
                        - label: Country Code
                          name: countryName
                          type: country_code
                        - label: Representative’s Given (First) Name
                          name: rep_forename
                        - label: Representative’s Surname (Last Name)
                          name: rep_surname
                        - label: Representative’s Email Address
                          name: rep_email_address
                          type: email
                        - description: This should be one of the organization’s publicly-listed
                            telephone numbers.
                          is_optional: 1
                          label: Representative’s Telephone Number
                          name: rep_telephone
                          type: tel
                        - description: Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/)
                            for more information about this field’s options.
                          label: Business Category
                          name: business_category
                          options:
                          - - b
                            - Incorporated Business (“Private Organization”)
                          - - d
                            - Non-incorporated Business (“Business Entity”)
                          - - c
                            - Government Entity (“Government Entity”)
                          type: choose_one
                        - is_optional: 1
                          label: City Where Incorporated (JOI (Jurisdiction of Incorporation))
                          name: joi_locality_name
                        - is_optional: 1
                          label: State or Province Where Incorporated (JOI (Jurisdiction
                            of Incorporation))
                          name: joi_state_or_province_name
                        - label: Country Code Where Incorporated (JOI (Jurisdiction
                            of Incorporation))
                          name: joi_country_name
                          type: country_code
                        - is_optional: 1
                          label: Date of Incorporation
                          name: date_of_incorporation
                          type: date
                        - is_optional: 1
                          label: Assumed Name (DBA (Doing Business As))
                          name: assumed_name
                        x_max_http_redirects: 0
                        x_payment_trigger: checkout
                        x_price_per_domain: 60
                        x_price_per_domain_maximum: 600
                        x_price_per_domain_minimum: 60
                        x_ssl_per_domain_pricing: 1
                        x_supports_dns_dcv: 1
                        x_validation_type: ev
                        x_warn_after: 604800
                    metadata:
                      command: get_adjusted_market_providers_products
                      reason: OK
                      result: 1
                      version: 1
  /get_all_contact_importances:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Return Contact Manager event importance settings
      description: |-
        This function lists the importance of all application events in
        WHM's
        [*Contact Manager*](https://docs.cpanel.net/whm/server-contacts/contact-manager/)
        interface (*WHM >> Home >> Server Contacts >> Contact Manager*).
      operationId: get_all_contact_importances
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_166"
  /get_api_calls:
    get:
      tags:
      - Server Administration
      - API Statistics
      summary: Return deprecated cPanel API 1 functions by date
      description: |-
        This function returns the cPanel API 1 functions that the system called on specific dates.
        This is useful, for example, to check whether your system calls any cPanel API 1 functions.

        **Important:**

        The function **only** returns cPanel API 1 functions. We deprecated cPanel API 1 and plan
        to remove those functions at a later date. For more information, read our
        [Guide to Replacing cPanel API 1 Functions with UAPI Equivalents](https://go.cpanel.net/replacecpapi1)
        documentation.
      operationId: get_api_calls
      parameters:
      - name: type
        in: query
        description: |-
          The cPanel API 1 function to query.

          **Note:**

          `cpapi1` is the **only** possible value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: cpapi1
          default: cpapi1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_167"
  /get_api_pages:
    get:
      tags:
      - Server Administration
      - API Statistics
      summary: 'Return deprecated cPanel API 1 functions '
      description: |-
        This function returns the daily interface use of cPanel API 1 functions. Use this function to find out which API calls your custom interfaces or third-party plugins use.

        **Important:**

          The function *only* returns cPanel API 1 functions. We *deprecated* cPanel API 1 and plan to remove those functions at a later date. For more information, read our [Guide to Replacing cPanel API 1 Functions with UAPI Equivalents](https://go.cpanel.net/replacecpapi1) documentation.
      operationId: get_api_pages
      parameters:
      - name: type
        in: query
        description: The cPanel API type to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: cpapi1
          default: cpapi1
          enum:
          - cpapi1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_168"
  /get_appconfig_application_list:
    get:
      tags:
      - Server Administration
      - Applications
      summary: Return registered applications
      description: "This function lists registered [AppConfig](https://go.cpanel.net/appconfig)\
        \ applications."
      operationId: get_appconfig_application_list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_169"
  /get_application_contact_event_importance:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Return app's event contact importance setting
      description: |-
        This function retrieves the importance level of an application event for WHM's Contact Manager interface (Home >> Server Contacts >> Contact Manager).

        **Note:**

          The system will create a notification setting for the application's events if one does not already exist.
      operationId: get_application_contact_event_importance
      parameters:
      - name: app
        in: query
        description: The application module's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Check
      - name: event
        in: query
        description: The event's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SecurityAdvisorStateChange
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_170"
  /get_application_contact_importance:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Return app contact importance setting
      description: |-
        This function retrieves the importance level of an application's events for WHM's
        [*Contact Manager*](https://docs.cpanel.net/whm/server-contacts/contact-manager/)
        interface (*WHM >> Home >> Server Contacts >> Contact Manager*).

        **Note:**

        The system creates a notification setting for the application's events if one does
        not already exist.
      operationId: get_application_contact_importance
      parameters:
      - name: app
        in: query
        description: The cPanel & WHM application module's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Check
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_171"
  /get_autossl_check_schedule:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Return AutoSSL check script cron entry
      description: This function returns the cron entry for the `autossl_check.pl`
        AutoSSL certificate check script.
      operationId: get_autossl_check_schedule
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_172"
  /get_autossl_log:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Return AutoSSL log file's contents
      description: This function returns the contents of an AutoSSL log file.
      operationId: get_autossl_log
      parameters:
      - name: start_time
        in: query
        description: When the system created the log file.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ISO-8601 Date Time
          example: 2016-06-09T14:25:37.000Z
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_173"
  /get_autossl_logs_catalog:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Return AutoSSL log files
      description: This function lists the AutoSSL feature's log files.
      operationId: get_autossl_logs_catalog
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_174"
  /get_autossl_metadata:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Return current user's AutoSSL metadata
      description: This function retrieves values for the currently authenticated
        user's AutoSSL's metadata keys.
      operationId: get_autossl_metadata
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_175"
  /get_autossl_problems_for_domain:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Return domain DCV issues
      description: This function returns a list of objects that contains the latest
        Domain Control Validation (DCV) problems for a specific domain.
      operationId: get_autossl_problems_for_domain
      parameters:
      - name: domain
        in: query
        description: The domain for which to poll the DCV status.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_176"
  /get_autossl_problems_for_user:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Return account DCV issues
      description: This function returns the list of the latest Domain Control Validation
        (DCV) problems for a cPanel user.
      operationId: get_autossl_problems_for_user
      parameters:
      - name: username
        in: query
        description: The user for whom to poll the DCV status.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_177"
  /get_autossl_providers:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Return available AutoSSL providers
      description: This function lists available AutoSSL providers on the server.
      operationId: get_autossl_providers
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_178"
  /get_autossl_user_excluded_domains:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Return all AutoSSL-excluded domains
      description: This function lists an account's domains the system excludes from
        AutoSSL.
      operationId: get_autossl_user_excluded_domains
      parameters:
      - name: username
        in: query
        description: The cPanel user's account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_179"
  /get_available_applications:
    get:
      tags:
      - Packages
      - Feature Lists
      summary: Return dynamicui file
      description: |-
        This function returns the contents of a `dynamicui` file. For more
        information, read our
        [Guide to WHM dynamicui Files](https://go.cpanel.net/GuidetoWHMdynamicuiFiles)
        documentation.
      operationId: get_available_applications
      parameters:
      - name: applications_list
        in: query
        description: |-
          A comma-separated list of the application entries to return.

          To determine the application's name, find its
          [`file` value in the `dynamicui.conf` file](https://go.cpanel.net/GuidetoWHMdynamicuiFiles),
          and then remove the file extension.

          If you do not specify this value, the function returns the entire `dynamicui.conf`
          file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: create_support_ticket
      - name: file
        in: query
        description: "The `dynamicui` configuration file to retrieve, relative to\
          \ the `/usr/local/cpanel/whostmgr/docroot/themes/x/` directory."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: dynamicui.conf
          default: dynamicui.conf
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_180"
  /get_available_authentication_providers:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Return available identity providers
      description: This function lists available external authentication identity
        providers for all services.
      operationId: get_available_authentication_providers
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_181"
  /get_available_profiles:
    get:
      tags:
      - Server Administration
      - Server Profiles
      summary: Return available server profiles
      description: This function returns a list of available server profiles.
      operationId: get_available_profiles
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_182"
  /get_available_tiers:
    get:
      tags:
      - Updates
      summary: Return cPanel & WHM available versions
      description: |-
        This function lists of each available version of cPanel & WHM, and each
        version's latest maintenance release. This function also lists the cPanel & WHM
        version for each
        [release tier](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/).
      operationId: get_available_tiers
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_183"
  /get_best_ssldomain_for_service:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Return SSL-encrypted domain for service access
      description: This function retrieves the most appropriate SSL-encrypted domain
        to use to access a service.
      operationId: get_best_ssldomain_for_service
      parameters:
      - name: service
        in: query
        description: The service's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: whostmgr
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_184"
  /get_commerce:
    get:
      tags:
      - Sitejet
      summary: Get Commerce Data
      description: This function returns Sitejet Commerce data.
      operationId: get_commerce
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_185"
  /get_countries_with_known_ip_ranges:
    get:
      tags:
      - cPHulk
      - Reporting
      summary: Return login security country codes
      description: This function lists the country codes available for whitelist and
        blacklist functions.
      operationId: get_countries_with_known_ip_ranges
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_186"
  /get_cphulk_brutes:
    get:
      tags:
      - cPHulk
      - Reporting
      summary: Return login security brute force attacks
      description: This function lists brute force attack entries from the cPHulk
        database.
      operationId: get_cphulk_brutes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_187"
  /get_cphulk_excessive_brutes:
    get:
      tags:
      - cPHulk
      - Reporting
      summary: Return login security excessive brute force attacks
      description: This function retrieves excessive brute force attack entries from
        the cPHulk database.
      operationId: get_cphulk_excessive_brutes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_188"
  /get_cphulk_failed_logins:
    get:
      tags:
      - cPHulk
      - Reporting
      summary: Return login security failed logins
      description: This function lists failed login attempt entries from the cPHulk
        database.
      operationId: get_cphulk_failed_logins
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_189"
  /get_cphulk_user_brutes:
    get:
      tags:
      - cPHulk
      - Reporting
      summary: Return login security brute force attacks by user
      description: "This function lists brute force attack entries from the cPHulk\
        \ database, ordered by user accounts."
      operationId: get_cphulk_user_brutes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_190"
  /get_current_lts_expiration_status:
    get:
      tags:
      - Updates
      summary: Return Long Term Support expiration status
      description: "This function determines whether a branch's Long-Term Support\
        \ (LTS) version expires within three months. For more information about LTS,\
        \ read our\_[cPanel Long-Term Support\_documentation](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/#more-about-lts)."
      operationId: get_current_lts_expiration_status
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_191"
  /get_current_profile:
    get:
      tags:
      - Server Administration
      - Server Profiles
      summary: Return server's node profile
      description: |-
        This function returns details about the server's current
        [cPanel & WHM server profile](https://docs.cpanel.net/whm/server-configuration/server-profile/).
      operationId: get_current_profile
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_192"
  /get_current_users_count:
    get:
      tags:
      - Account Creation
      summary: Return cPanel accounts total number
      description: This function returns the number of cPanel accounts on the server.
      operationId: get_current_users_count
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_193"
  /get_database_optimizations:
    get:
      tags:
      - Databases
      - MySQL Databases
      summary: Return MySQL database optimizations
      description: |-
        This function retrieves available database optimizations.

        **Warning:**

        On some servers, this function may return a large amount of output. We strongly suggest that you [filter](https://go.cpanel.net/WHMAPI1FilterOutput) and [sort](https://go.cpanel.net/WHMAPI1SortOutput) the output.

        **Important:**

        The system **disables** this function when you have **not** configured remote MySQL, and you've disabled the MySQL/MariaDB and PostgreSQL [roles](https://go.cpanel.net/serverroles).
      operationId: get_database_optimizations
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_194"
  /get_disk_usage:
    get:
      tags:
      - Bandwidth and Disk Quotas
      summary: Return all cPanel accounts disk usage
      description: This function lists the disk usage status of the system's user
        accounts. This also lists information about file system object (inode) usage.
      operationId: get_disk_usage
      parameters:
      - name: cache_mode
        in: query
        description: |-
          Each cPanel & WHM server maintains a cache of users’ disk quota
          usage. This parameter controls the way this function will use
          that cache.

          * `on` - Use the quota cache. This is fast, but it may be inaccurate.
          * `off` - Ignore the quota cache. This is slower, but it will be more accurate.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "on"
          default: "on"
          enum:
          - "on"
          - "off"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_195"
  /get_domain_info:
    get:
      tags:
      - Domain Information
      summary: Return all domains information
      description: This function returns information about each domain on the server.
      operationId: get_domain_info
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_196"
  /get_ecommerce:
    get:
      tags:
      - Sitejet
      summary: Get Ecommerce Data
      description: This function returns Sitejet Commerce data.
      operationId: get_ecommerce
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_197"
      deprecated: true
  /get_feature_metadata:
    get:
      tags:
      - Packages
      - Feature Lists
      summary: Return current user's available feature lists info
      description: This function lists the details of the authenticated user's available
        feature lists.
      operationId: get_feature_metadata
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_198"
  /get_feature_names:
    get:
      tags:
      - Packages
      - Feature Lists
      summary: Return all features
      description: This function lists all available features.
      operationId: get_feature_names
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_199"
  /get_featurelist_data:
    get:
      tags:
      - Packages
      - Feature Lists
      summary: Return feature list configuration
      description: This function lists features in a specific feature list.
      operationId: get_featurelist_data
      parameters:
      - name: featurelist
        in: query
        description: The feature list for which to list information.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '"Mail Only"'
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_200"
  /get_featurelists:
    get:
      tags:
      - Packages
      - Feature Lists
      summary: Return current user's available feature lists
      description: |-
        This function lists the authenticated user's available feature lists.

        **Notes:**

        * When you call this function with the `root` account, it returns **all** feature lists on the server.
        * When you call this function with a reseller account, it **only** returns feature lists that the account owns.
      operationId: get_featurelists
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_201"
  /get_fpm_count_and_utilization:
    get:
      tags:
      - PHP-FPM
      summary: Return workload data for PHP-FPM on all domains
      description: |-
        This function provides information that will help you to determine
        whether your server can handle the workload if you enable PHP-FPM for all domains.

        **Important:**

        When you disable the
        [Web Server role](https://go.cpanel.net/howtouseserverprofiles),
        the system **disables** this function.

        **Warning:**

        We **strongly** recommend that you only activate Apache PHP-FPM if your server
        has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable
        PHP-FPM on a server with less than the required RAM, your server may experience severe
        performance issues.
      operationId: get_fpm_count_and_utilization
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_202"
  /get_homedir_roots:
    get:
      tags:
      - Account Management
      summary: Return home directories list
      description: |-
        This function returns all the directories where the system stores
        users' home directories. It returns them in descending order, based on the
        current amount of available free disk space for each directory. For example,
        the first directory the function lists has the most available free disk space.

        **Note:**

        Use WHM's Basic WebHost Manager Setup (WHM >> Home >> Server Configuration >> Basic WebHost Manager Setup) to configure where the system will create a new user's home directory.
      operationId: get_homedir_roots
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_203"
  /get_integration_link_user_config:
    get:
      tags:
      - Integration
      - Links
      summary: Return integration link configuration
      description: This function retrieves configuration information about a specified
        integration link in a specified user's cPanel interface.
      operationId: get_integration_link_user_config
      parameters:
      - name: app
        in: query
        description: |-
          The integration link's app name.

          **Warning:**

          If you create a link with an app value that already exists, the function will replace the existing link with the newly-created link.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WHMCS_billing
      - name: user
        in: query
        description: The cPanel account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_204"
  /get_linked_server_node:
    get:
      tags:
      - Server Administration
      - Server Nodes
      summary: Return linked remote server node settings
      description: This function returns details about a linked remote server node.
      operationId: get_linked_server_node
      parameters:
      - name: alias
        in: query
        description: The name of a linked remote server node.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_205"
  /get_login_url:
    get:
      tags:
      - Authentication
      - Login URL
      summary: Return cPanel Store or cPanel Market login URL
      description: |-
        This function retrieves the login URL for the cPanel Store or a
        cPanel Market provider.
      operationId: get_login_url
      parameters:
      - name: provider
        in: query
        description: The cPanel Store or cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: url_after_login
        in: query
        description: |-
          The location to which the cPanel Store or cPanel Market provider
          redirects the user's browser after they log in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://hostname.example.com/redirectionlocation.cgi?state
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_206"
  /get_lts_wexpire:
    get:
      tags:
      - Updates
      summary: Return Long Term Support status for all versions
      description: "This function parses the `/etc/cpanel/TIERS.json` file and returns\
        \ whether a branch qualifies for Long-Term Support (LTS). For more information\
        \ about LTS, read our\_[cPanel Long-Term Support](https://go.cpanel.net/cpanel-lts)\
        \ documentation."
      operationId: get_lts_wexpire
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_207"
  /get_mailbox_status:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return cPanel account mailboxes status by name
      description: |-
        This function lists the status of a cPanel's mail account's mailboxes.

        **Important:**

          When you disable the [*Receive Mail* role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: get_mailbox_status
      parameters:
      - name: account
        in: query
        description: |-
          An email account or cPanel account's username.

          **Note:**

          `_mainaccount` is an alias representing the cPanel user's mailbox (for example, `_mainaccount@example.com represents the example mailbox.)
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/account"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_208"
  /get_mailbox_status_list:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return cPanel account mailboxes status list
      description: |-
        This function lists the status of a cPanel's mail account's mailboxes.

        **Important:**

          When you disable the [Receive Mail role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: get_mailbox_status_list
      parameters:
      - name: account
        in: query
        description: The email account's name.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/account_1"
        example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_209"
  /get_market_providers_commission_config:
    get:
      tags:
      - Market
      - Provider Management
      summary: Return Market providers' commission configuration
      description: This function returns the commission configuration of all available
        cPanel Market providers.
      operationId: get_market_providers_commission_config
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_210"
  /get_market_providers_list:
    get:
      tags:
      - Market
      - Provider Management
      summary: Return Market providers
      description: This function lists the available cPanel Market providers.
      operationId: get_market_providers_list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_211"
  /get_market_providers_product_metadata:
    get:
      tags:
      - Market
      - Product Management
      summary: Return Market providers' products metadata
      description: |-
        This function lists all available cPanel Market providers' products and the attributes of
        each product that can be managed by an administrator.

        The return list includes different `attribute` data depending the `product_group` for each product.

        <table>
          <tr>
            <th>Product Group</th>
            <th>Attributes Returned</th>
            <th>Description</th>
          </tr>
          <tr>
            <td>ssl_certificate</td>
            <td>SSLMarketProviderMetaData</td>
            <td>Contains additional attributes only applicable to SSL Certificates</td>
          </tr>
          <tr>
            <td>*</td>
            <td>MarketProviderMetaData</td>
            <td>Any products not in a <code>product_group</code> listed above will include only these attributes.</td>
          </tr>
        </table>

        **Note:**

        The function does **not** return the `product_group` name.

        To get the `product_group` name for a `product_id`, run WHM API 1's [`get_market_providers_products`](https://go.cpanel.net/Market-get-market-providers-products) function.
      operationId: get_market_providers_product_metadata
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_212"
  /get_market_providers_products:
    get:
      tags:
      - Market
      - Product Management
      summary: Return Market providers products
      description: This function lists products available in the server's cPanel Market.
      operationId: Market-get_market_providers_products
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_213"
  /get_maximum_users:
    get:
      tags:
      - Account Creation
      summary: Return maximum accounts for license
      description: This function returns the maximum number of cPanel accounts that
        the server's license allows.
      operationId: get_maximum_users
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_214"
  /get_nameserver_config:
    get:
      tags:
      - DNS
      - Resolvers
      summary: Return current user's nameservers
      description: This function retrieves the default nameservers for the currently-authenticated
        user.
      operationId: get_nameserver_config
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_215"
  /get_password_strength:
    get:
      tags:
      - Passwords
      summary: Return password strength
      description: This function measures the strength of a password.
      operationId: get_password_strength
      parameters:
      - name: password
        in: query
        description: The password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_216"
  /get_pkgacct_session_state:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return start_background_pkgacct session state
      description: This function returns the state of a `start_background_pkgacct` session.
      operationId: get_pkgacct_session_state
      parameters:
      - name: session_id
        in: query
        description: The `start_background_pkgacct` session ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username20200323154328kDJ2Kx4xua2KtG
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_217"
  /get_provider_client_configurations:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Return identity provider client configuration
      description: This function retrieves the configuration details for the client
        of an external authentication identity provider.
      operationId: get_provider_client_configurations
      parameters:
      - name: provider_id
        in: query
        description: The identity provider's key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanelid
      - name: service_name
        in: query
        description: |-
          The cPanel & WHM service's name.
          * `cpaneld` — The cPanel daemon.
          * `whostmgrd` — The WHM daemon.
          * `webmaild` — The Webmail daemon.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpaneld
          enum:
          - cpaneld
          - whostmgrd
          - webmaild
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_218"
  /get_provider_configuration_fields:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Return identity provider configuration fields
      description: This function retrieves the configuration fields for a external
        authentication identity provider.
      operationId: get_provider_configuration_fields
      parameters:
      - name: provider_id
        in: query
        description: The identity provider's key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanelid
      - name: service_name
        in: query
        description: |-
          The cPanel & WHM service's name.

          * `cpaneld`
          * `whostmgrd`
          * `webmaild`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpaneld
          enum:
          - cpaneld
          - whostmgrd
          - webmaild
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_219"
  /get_provider_display_configurations:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Return identity provider login interface appearance
      description: This function retrieves the display configuration for the login
        button of an external authentication identity provider.
      operationId: get_provider_display_configurations
      parameters:
      - name: provider_id
        in: query
        description: The identity provider's key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: google
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_220"
  /get_public_contact:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Return current user's public contact information
      description: "This function retrieves an account's [public contact information](https://docs.cpanel.net/whm/cpanel/customization/#public-contact)."
      operationId: get_public_contact
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_221"
  /get_public_ip:
    get:
      tags:
      - IP Addresses
      - Network Address Translation
      summary: Return public IP address of private IP address
      description: |-
        This function returns the public IP address for a specified public or private IP address. You can use this function to determine the system's main public IP address, especially for [systems that use a 1:1 NAT configuration](https://go.cpanel.net/11NAT).
        * cPanel & WHM uses the main public IP address to perform many different functions. For example, the system uses this IP address to verify the server's license status with WebPros International, LLC.
        * System administrators can configure the main public IP address in WHM's [Basic WebHost Manager Setup](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (_Home >> Server Configuration >> Basic WebHost Manager Setup_).
      operationId: get_public_ip
      parameters:
      - name: ip
        in: query
        description: A valid public or private IP address to query.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.0.2.0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_222"
  /get_remote_access_hash:
    get:
      tags:
      - Server Administration
      - API Authentication
      summary: Return remote access file's hash
      description: |-
        This function retrieves a hash from a remote access file.

        **Warning:**

        We deprecated this function. We **strongly** suggest that you use the WHM API 1 `api_token_list` function.
      operationId: get_remote_access_hash
      parameters:
      - name: host
        in: query
        description: The server's hostname.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: hostname.example.com
      - name: password
        in: query
        description: The user's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: username
        in: query
        description: The user's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: generate
        in: query
        description: |-
          Whether to generate a new hash for the user, if one does not exist.

          * `1` — Generate a new hash.
          * `0` — Do **not** generate a new hash.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_223"
      deprecated: true
  /get_rpm_version_data:
    get:
      tags:
      - RPM
      - List Package Information
      summary: Return available RPM packages
      description: |-
        This function lists a key's available RPMs. For more information, read our
        [rpm.versions system](https://go.cpanel.net/rpm-versions)
        documentation.
      operationId: get_rpm_version_data
      parameters:
      - name: section
        in: query
        description: The RPM's section.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: rpm_groups
      - name: key
        in: query
        description: "The RPM's key. If you do **not** specify a value, the function\
          \ returns all RPM categories."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 3rdparty
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_224"
  /get_server_node_status:
    get:
      tags:
      - Server Administration
      - Server Nodes
      summary: Return linked server node status
      description: "This function returns the status of a linked remote server node.\
        \ It returns \nthe linked remote server's status with the WHM API 1 `version`\
        \ and `get_current_profile` functions."
      operationId: get_server_node_status
      parameters:
      - name: api_token
        in: query
        description: |-
          The required API token to make API calls to the remote server node.

          **Note:**

           The API token **must** have `root`-level access on the remote server node.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H
      - name: hostname
        in: query
        description: |-
          The remote server node's hostname or IP address.

          **Note:**

          If you use an IP address, you **must** use the `skip_tls_verification=1` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: username
        in: query
        description: |-
          The username required to make API calls to the remote server node.

          **Note:**

          The username **must** have `root`-level access on the remote server node.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: root
      - name: skip_tls_verification
        in: query
        description: |-
          Whether to skip [SSL/TLS verification](https://go.cpanel.net/guidetoSSL). The system performs this action when it queries the remote server node.

          * `1` - Skip SSL/TLS verification.
          * `0` - Do **not** skip SSL/TLS verification.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_225"
  /get_service_config:
    get:
      tags:
      - Server Administration
      - Services
      summary: Return service configuration settings
      description: This function returns a service's configuration settings.
      operationId: get_service_config
      parameters:
      - name: service
        in: query
        description: |-
          The service's name.

          * `dovecot` — The Dovecot service.

          **Note:**

          For a fresh install, the data returned for the Dovecot
          service will only contain the list of protocols. It will
          not be until the mailserver configuration is saved that
          the return data for Dovecot will look like what is shown
          in the example.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dovecot
          enum:
          - dovecot
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_226"
  /get_service_config_key:
    get:
      tags:
      - Server Administration
      - Services
      summary: Return service configuration key
      description: This function returns a specific configuration key for a service.
      operationId: get_service_config_key
      parameters:
      - name: key
        in: query
        description: The configuration key's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mail_process_size
      - name: service
        in: query
        description: The service's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dovecot
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_227"
  /get_service_proxy_backends:
    get:
      tags:
      - Services
      summary: Return a cPanel account’s service proxying setup
      description: |-
        This function reports a cPanel account's
        [service proxying](https://go.cpanel.net/ServiceProxying)
        configuration.
      operationId: get_service_proxy_backends
      parameters:
      - name: username
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_228"
  /get_shared_ip:
    get:
      tags:
      - IP Addresses
      - IPv4 Address Settings
      summary: Return shared IP address
      description: This function retrieves the IP address that an account shares with
        the accounts that it owns.
      operationId: get_shared_ip
      parameters:
      - name: user
        in: query
        description: |-
          The WHM user's username.

          **Note:**

          This parameter defaults to the currently-authenticated user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_229"
  /get_tcp4_sockets:
    get:
      tags:
      - Server Administration
      - Connections
      summary: Return TCP IPv4 sockets data
      description: This function returns data about the system's transmission control
        protocol (TCP) IPv4 sockets.
      operationId: get_tcp4_sockets
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_230"
  /get_tcp6_sockets:
    get:
      tags:
      - Server Administration
      - Connections
      summary: Return TCP IPv6 sockets data
      description: This function returns data about the system's transmission control
        protocol (TCP) IPv6 sockets.
      operationId: get_tcp6_sockets
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_231"
  /get_transfer_session_state:
    get:
      tags:
      - Transfers
      - Transfer Monitoring
      summary: Return transfer session's status
      description: |-
        This function retrieves the state of a transfer session.

        **Note:**

        For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.
      operationId: get_transfer_session_state
      parameters:
      - name: transfer_session_id
        in: query
        description: The transfer session's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: exampleservercopya20140206192428NtyW
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_232"
  /get_tweaksetting:
    get:
      tags:
      - Configurations
      summary: Return Tweak Settings option's value
      description: |-
        This function retrieves values from the
        [`/var/cpanel/cpanel.config`](https://go.cpanel.net/ThecpanelconfigFile)
        file and the server's [Exim configuration](https://go.cpanel.net/whmdocsEximConfigurationManager).
      operationId: get_tweaksetting
      parameters:
      - name: key
        in: query
        description: "The [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings)\
          \ option."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: defaultmailaction
      - name: module
        in: query
        description: |-
          One of the following *Tweak Settings* module names:
          * `Apache`
          * `Basic`
          * `Mail`
          * `Main`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Main
          default: Main
          enum:
          - Apache
          - Basic
          - Mail
          - Main
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_233"
  /get_udp4_sockets:
    get:
      tags:
      - Server Administration
      - Connections
      summary: Return UDP IPv4 sockets data
      description: This function returns data about the system's user datagram protocol
        (UDP) IPv4 sockets.
      operationId: get_udp4_sockets
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_234"
  /get_udp6_sockets:
    get:
      tags:
      - Server Administration
      - Connections
      summary: Return UDP IPv6 sockets data
      description: |-
        This function returns data about the system's user datagram protocol (UDP) IPv6 sockets.

        **Important:**

          This function may perform slower on a CentOS 6 system with a large number of UDP sockets.
      operationId: get_udp6_sockets
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_235"
  /get_unique_recipient_count_per_sender_for_user:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return cPanel account unique email recipients
      description: This function gets the number of unique recipients that a system
        user sent mail to within a period of time. It groups this data by each of
        the user's email accounts.
      operationId: get_unique_recipient_count_per_sender_for_user
      parameters:
      - name: end_time
        in: query
        description: An end time to query.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1550923200
      - name: start_time
        in: query
        description: A start time to query.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1550872800
      - name: user
        in: query
        description: The system user's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_236"
  /get_unique_sender_recipient_count_per_user:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return all cPanel account unique email recipients
      description: This function gets a count of the email addresses that each system
        account sent mail to within a specific period of time. It groups the data
        by each system user for all the system's users.
      operationId: get_unique_sender_recipient_count_per_user
      parameters:
      - name: end_time
        in: query
        description: An end time to query.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1551192100
      - name: start_time
        in: query
        description: A start time to query.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1550702383
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_237"
  /get_update_availability:
    get:
      tags:
      - Server Administration
      - Updates
      summary: Return if server uses the default update version
      description: |-
        This function checks whether your server uses the
        [latest version of cPanel & WHM for your release tier](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/).
      operationId: get_update_availability
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_238"
  /get_upgrade_opportunities:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Get upgrade opportunities
      description: |-
        This function lists accounts that could benefit from upgrading to a different package.
        The listed accounts may be nearing (or exceeding) resource usage thresholds.
      operationId: get_upgrade_opportunities
      parameters:
      - name: disk_threshold_blocks
        in: query
        description: A fixed number of blocks to use as an alternative disk usage
          threshold.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 8388608
          default: 2097152
      - name: nearness_fraction
        in: query
        description: The fraction of 1 at which to consider usage "near".
        required: false
        style: form
        explode: true
        schema:
          maximum: 1
          exclusiveMaximum: true
          minimum: 0
          exclusiveMinimum: true
          type: number
          example: 0.6
          default: 0.8
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_239"
  /get_user_email_forward_destination:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return cPanel account forward destination
      description: |-
        This function retrieves the destination to which the system forwards a system account's email.

        **Note:**

        * Usually, the system sends notices about the server's problems and activity to the `root` account.
        * If you do **not** use the `suexec` module, the `nobody` user receives bounce messages from email that CGI scripts send.

        **Important:**

        When you disable the [Receive Mail](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles) role, the system **disables** this function.
      operationId: get_user_email_forward_destination
      parameters:
      - name: user
        in: query
        description: The system account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: root
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_240"
  /get_users_and_domains_with_backup_metadata:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return users and domains with backup metadata
      description: This function lists all users and their domains that have backup
        metadata.
      operationId: get_users_and_domains_with_backup_metadata
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_241"
  /get_users_authn_linked_accounts:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Return accounts linked to identity providers
      description: This function lists all accounts that link to available external
        authentication identity providers.
      operationId: get_users_authn_linked_accounts
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_242"
  /get_users_features_settings:
    get:
      tags:
      - Packages
      - Feature Access
      summary: Return cPanel accounts' feature settings
      description: This function lists the features settings of cPanel accounts.
      operationId: get_users_features_settings
      parameters:
      - name: user
        in: query
        description: |-
          The user's username.

          **Note:**

          To check multiple users, increment the parameter name. For example, `user-1`, `user-2`, and `user-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            description: Multiple users.
            value: user-1=example1 user-2=example2 user-3=example3
          single:
            description: A single user.
            value: example
      - name: feature
        in: query
        description: |-
          The feature's name.

          **Note:**

          * To check multiple features, increment the parameter name. For example, `feature-1`, `feature-2`, and `feature-3`.
          * If you use this parameter, you **must** enter a feature name, or the function returns an error. If you do **not** use this parameter, the function returns data for all features on the server.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            description: Multiple feature.
            value: feature-1=autossl feature-2=addoncgi feature-3=addondomains
          single:
            description: A single feature.
            value: autossl
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_243"
  /get_users_links:
    get:
      tags:
      - Styles
      summary: Return cPanel account theme's app keys and URLs
      description: |-
        This function returns a list of
        [application keys](https://go.cpanel.net/jupiter-appkeys)
        (appkeys) and the URLs that correspond to applications for the cPanel user's theme.
        Use the appkey values for the `app` parameter's value in the WHM API 1 `create_user_session`
        function.
      operationId: get_users_links
      parameters:
      - name: user
        in: query
        description: The requested user's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: service
        in: query
        description: |-
          The interface for which to filter results:

          * `cpanel` — cPanel
          * `webmail` — Webmail
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: cpaneld
          default: cpaneld
          enum:
          - cpaneld
          - webmail
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_244"
  /get_users_with_backup_metadata:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return users with backup metadata
      description: This function lists users with backup metadata.
      operationId: get_users_with_backup_metadata
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_245"
  /getdiskusage:
    get:
      tags:
      - Server Administration
      - System Information
      summary: Return server's drive partition information
      description: This function retrieves the server's drive partition information.
      operationId: getdiskusage
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_246"
  /getdomainowner:
    get:
      tags:
      - Domain Information
      summary: Return domain owner
      description: This function lists the owner of a domain.
      operationId: getdomainowner
      parameters:
      - name: domain
        in: query
        description: A domain on the system that is owned by the user calling this
          function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_247"
  /gethostname:
    get:
      tags:
      - Server Administration
      - System Information
      summary: Return server's hostname
      description: This function retrieves the server's hostname.
      operationId: gethostname
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_248"
  /getminimumpasswordstrengths:
    get:
      tags:
      - Passwords
      summary: Return minimum password strength
      description: This function retrieves the minimum password strength for cPanel
        & WHM accounts.
      operationId: getminimumpasswordstrengths
      parameters:
      - name: name
        in: query
        description: |-
          The service for which to display the minimum password value.
          If you do not use this parameter, this function returns the minimum password
          setting for all values.
          * `default` - All services
          * `cpaddons` - cPAddons
          * `createacct` - New cPanel accounts
          * `list` - Mailing lists
          * `mysql` - MySQL® database users
          * `passwd` - WHM user or system accounts
          * `postgres` -  PostgreSQL database users
          * `sshkey` - SSH keys
          * `virtual` - Mail, FTP, Web Disk, and WebDAV accounts
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: default
          enum:
          - default
          - cpaddons
          - createacct
          - list
          - mysql
          - passwd
          - postgres
          - sshkey
          - virtual
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_249"
  /getpkginfo:
    get:
      tags:
      - Packages
      - Hosting Plans
      summary: Return hosting plan configuration
      description: This function lists a hosting plan's (package's) settings.
      operationId: getpkginfo
      parameters:
      - name: pkg
        in: query
        description: The hosting plan's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: package1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_250"
  /getresellerips:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Return reseller's available IP addresses
      description: This function lists a reseller's available IP addresses.
      operationId: getresellerips
      parameters:
      - name: user
        in: query
        description: |-
          A reseller's username, to query only that reseller.

          **Note:**

          If you do **not** specify a value, the function lists available IP addresses for the `root`
          user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_251"
  /getzonerecord:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Return specific line from domain's DNS configuration
      description: |-
        This function returns a line from a domain's DNS zone configuration.

        **Note:**

        On servers that run CentOS 7, you may see a named warning about the absence of SPF resource records on DNS.
         * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.
         * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).

        **Important:**

          When you disable the [DNS Role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: getzonerecord
      parameters:
      - name: domain
        in: query
        description: The zone record's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: line
        in: query
        description: The zone record's line number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 2
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_252"
  /has_digest_auth:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Validate cPanel account Digest Authentication
      description: |-
        This function checks whether Digest Authentication is enabled for
        a cPanel user. Windows® Vista, Windows® 7, and Windows® 8 require Digest Authentication
        support in order to access [Web Disk](https://docs.cpanel.net/cpanel/files/web-disk/) over an unencrypted connection.
      operationId: has_digest_auth
      parameters:
      - name: user
        in: query
        description: The cPanel account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_253"
  /has_local_authority:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Validate local server is authoritative
      description: |-
        This function checks whether the local server has the authority to publish changes for the domain's DNS records.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: has_local_authority
      parameters:
      - name: domain
        in: query
        description: |-
          The domain to check whether the local server is authoritative for the domain's DNS records.

          **Note:**

          To check multiple domains, duplicate or increment the parameter name. For example, to check three domains, use the `domain` parameter multiple times. Or the `domain`, `domain-1`, and `domain-2` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains
            value: domain=example.com domain-1=example1.com domain-2=example2.com
          single:
            summary: A single domain
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_254"
  /has_mycnf_for_cpuser:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Validate MySQL Configuration file
      description: |-
        This function checks whether a cPanel user's home directory contains
        a valid .my.cnf file.
      operationId: has_mycnf_for_cpuser
      parameters:
      - name: user
        in: query
        description: The cPanel account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_255"
  /hold_outgoing_email:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Add cPanel account to outbound email hold queue
      description: |-
        This function sets Exim's queue to hold email that a user sends to an external address.

        **Note:**

          If mail for a cPanel user's account is suspended, the system will reject their email before the mail server puts it in the queue.
      operationId: hold_outgoing_email
      parameters:
      - name: user
        in: query
        description: |-
          The cPanel account.

          **Note**

          You **cannot** suspend the root user's outgoing email with this function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_256"
  /import_zone_key:
    get:
      tags:
      - DNS
      - DNS Security
      summary: Import DNSSEC key
      description: |-
        This function imports a DNSSEC security key.

        **Note:**

        Only servers that run PowerDNS can use DNSSEC. If you call this function on a server
        that doesn't use PowerDNS, you will receive an error.
      operationId: import_zone_key
      parameters:
      - name: domain
        in: query
        description: The domain for which to import the security key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: key_data
        in: query
        description: |-
          The security key's data that the
          [pdnsuti](https://doc.powerdns.com/authoritative/manpages/pdnsutil.1.html)
          utility's `export-zone-key` call returns.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Private-key-format:%20v1.2%0AAlgorithm:%2013%20\(ECDSAP256SHA256\)%0APrivateKey:%20xCM281KtWE9oCsUX8fP1hDZ02/X7JCjp4QZA/DZjfX0=%0A%0A
      - name: key_type
        in: query
        description: |-
          The security key's type.

          * `ksk` — Key-Signing Key
          * `zsk` — Zone Signing Key

          **Note:**

          You **must** call these values in lowercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ksk
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_257"
  /importsshkey:
    get:
      tags:
      - SSH Keys and Connections
      summary: Import SSH key
      description: This function imports an SSH key.
      operationId: importsshkey
      parameters:
      - name: key
        in: query
        description: The key's contents.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '-----BEGIN RSA PRIVATE KEY----- hPH+o4NgZrky7iGBb5iUg8R4aQzLPexpYfet25bLESvHOtutsBkbN7UWAaoM0pgM
            hytunlM8UU4BArJWlJyY6AD59aluZowBbuowKeU+f+TRaeJNJvkxTCOAipzp6LyG nrSVJ5hxSN/RPfntho1MEsdWYewVI4eLayuiZJyD+VONCYJh/vPLaZ9AVUJuMerl
            s/ZJ24AwCW8cILG+C3TWJRCjl4Ji+sJ9A5P29p/ad18cyJc1F+wmAzMULWitCaB7 mmE0i1nkiZRygQzzKjqdBYWCjujxfoE2+nPufAJg8ZdIEI1xSVBe5jKnj8DRX67w
            NAnNjXANMRePo39/RbDOSEXsD62h1qH93SnPsAhYT1JE6xHKV85AVIVOe8ktTA8t jMBBioCudBFngqPHknUrIJZ2QfUm0fkKBZaoKW4yr3JjGk+5y6kg02gSDIA7/jGc
            8rs3iKN+QJ/ug2x/v7Xe0OozVqpl5QTltEMGJzJ1jFh9WnqgsgLTiJWlE7x5VSv8 fV8A5WTafOhBHnKuOpmpjAel1GD5DT1jNx3LhWXMHOayawC0WY04lT5kkLLWhuN2
            pNqY6UBk6Z3m1ifPINq85RdnHriJiD3H/+6P+cUyGSOznni8yqU764LId4nNClWd Xc+VvM1Udw0Sm7xF7err9CKHYUg3HfFYQPBQOfI0ib9wqOi7zWq2vhH21B5OgcTg
            Bsw/HJUQ/IVnTbsqgZSn0sckaRguv/ifmwbISO1aQ4Yxcohe/4miOw05r6ihbYGW LO5kP0I8SBMCibkGFh5AxVnNgoGAW0l33hOPPSIVUTkE+8d3zYXLzupTFXCvmohl
            jq0it7uIGOxSglf7XH3eXlNKaZjK7pBJgS5HeXM80JI8FCfifqnkaik8XTE66Ll0 s1ySaGevGkPpX5Rhbgsm4IqddAeFvlmKIND8Zvh/wfT++bbD7bbFwFlrWCU3chce
            8KaNVUP+whCAlaS7oGcs38ygaRFXIE3vug4Ra8Xiy/qfyp4YR67sMg46avHyoVky uFbVv2n7HphZb7g3WS3ns3/gCQQv9TYcdBoRnKW2yEqbzOQb9Fdt7EjgMohT/bdS
            pM6nRWFNdmWoihLzLbSi3bnc9iDwXZA8KyE3mpVi4QFfijR4dfrVWxEz5Ln2l9HC SZA6VPGzEOwOVVND98/HTu3oViJUV1gyDIWlyggSUDTyhfo/Z+c3tTHa+cv0f7xY
            oL63hWLgZQD2m/g6rKpsN3NhC77tCyCNZavdKy7usvZyCsoH/mPR2129LcwAwbJ3 u2Ec7qLncztSePHOmfmCTTED00a0YzFhKIQoJf7GrgLCMapYN/YPu0vgTDMPSi11
            RH0rdyzd6MuPVDZwLnWO+SltjX85yz1ba/Q199HZwQOw6ZyejDaPSWJHOndD3k+r Q0T38gci9k4D87EwmfpK7zOaCoaiGiRQ6+DdYOv6hlzQ6Fdb2FOtlGQZharQ9WTC
            jOJBEj2oGUruc6P3fqhfUVllWi4cck0GgWZwcsmG1dDr8W6K9lrGA1dPbXoOns1B l58ghMGtHG7D0VlHs6SIqFmHr5kUgSQ4jJ2KZkVU8CrPBZ2HRtHQJJyjZWW2AbrE
            -----END RSA PRIVATE KEY-----'
      - name: name
        in: query
        description: The key's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      - name: extract_private
        in: query
        description: |-
          Whether to extract and save only the private key.
          * `1` — Private key only.
          * `0` — All data.

          **Note:**

          This parameter defaults to `1` for
          PPK [(PuTTY Key Generator)](https://www.puttygen.com/)
          files and `0` for all other imports.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: extract_public
        in: query
        description: |-
          Whether to extract and save only the public key.
          * `1` — Public key only.
          * `0` — All data.

          **Note:**

          This parameter defaults to `1` for
          PPK [(PuTTY Key Generator)](https://www.puttygen.com/)
          files and `0` for all other imports.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: passphrase
        in: query
        description: |-
          The key's passphrase.

          **Note:**

          This parameter is **required** whenever you import a PPK file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: 123456luggage
      - name: user
        in: query
        description: |-
          The key's owner.

          **Note:**

          You can specify this parameter, but the system does **not** use it.
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_258"
  /install_dkim_private_keys:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Install existing private key to DKIM record
      description: |-
        This function installs existing keys for use in a DomainKeys Identified Mail (DKIM) record. This is useful if you do not want the system to generate keys for DKIM records.

        **Notes:**

        * This function does **not** update the local DNS server's records.
        * If the local DNS server is authoritative for the domain's DNS records, use the WHM API 1 `enable_dkim` function to update the local DNS server's DNS records.
        * We recommend that you use the WHM API 1 `install_dkim_private_keys` and `enable_dkim` functions in a batch WHM API 1 call.
      operationId: install_dkim_private_keys
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to install an RSA private key to the local server's DKIM record.

          **Note:**

          To install RSA private keys for multiple domains, increment the parameter name. For example, use the `domain-1=example-1.com`, `domain-2=example-2.com`, and `domain-3=example-3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: The domains for which to install an RSA private key to the local
              server's DKIM record.
            value: domain-1=example-1.com&domain-2=example-2.com&domain-3=example-3.com
          single:
            summary: The domain for which to install an RSA private key to the local
              server's DKIM record.
            value: example.com
      - name: key
        in: query
        description: |-
          An RSA key in [Privacy-Enhanced Mail (PEM)](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.

          **Note:**

           * You **must** provide this parameter for each `domain` parameter.
           * To install multiple RSA keys for a domain, increment the parameter name. For example, use the `key-1`, `key-2` parameters.
          examples:
            single:
              summary: An RSA key in [Privacy-Enhanced Mail (PEM)](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.
              value: key
            multiple:
              summary: RSA keys in [Privacy-Enhanced Mail (PEM)](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.
              value: key-1=KEYKEYKEY&key-2=KEYKEYKEY
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: AAAAB3NzaC1yc2EAAAABIwAAAQEA5kSivOqhs0U9ZMN20nxFe27QZ3t0lT2zbH7OSXylKd1rjAjYXGnSXC9j2uaZlemHlptBKVziMJC86ha7Hcj6dVOVrDQ6vF4q34bOCjtKLphQ0IjBzVIvqILH9eLJdRaOrS34CmgmPaisrCk5wKVlakygvUfcj3HzaTKS6THyZDGx5shdTpa9lby8tpOD3JceV7ay4w8r0DipoKPC0OLpvS4EABEeMo9sx8zQEaKv03XygjNCCYtFvxlQQIRGlVoL7mPaHSaL3anI05RpNbm/PS+9BhZg+BqNjU4ofHBbfkXk5MiN6M7ieR4Sk5BquccboGF13U5slNgmCEekdt0amw
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_259"
  /install_rpm_plugin:
    get:
      tags:
      - RPM
      - Install or Uninstall Package
      summary: Install WHM plugin RPM package
      description: This function starts a plugin installation. The installation runs
        as a background process.
      operationId: install_rpm_plugin
      parameters:
      - name: name
        in: query
        description: The name of a plugin RPM to install.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: plugin name
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_260"
  /install_service_ssl_certificate:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Install SSL certificate for service
      description: |-
        This function installs a new SSL certificate on a service.

        **Important:**

        You **must** restart the selected service after you install a new SSL certificate.
      operationId: install_service_ssl_certificate
      parameters:
      - name: crt
        in: query
        description: |-
          The certificate to install.

          **Note:**

          You **must** URI-encode this value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIE3f4g5h7j73f235gy54hvcNAQELBQAwgYYxEDAOBgNVBAcMB2hvd097342boi0w389w0BCQEWEmMubGFycnl8293rhqurpg9qfgm5ldDEOMAwGA1UECAwFdGV4YXMxCzAJBgNVBAYTAlVTMSEwHwYDVQQDDBhiaW5hcnlhZ2Fpbi5jcGFuZWwubmluamExDzANBgNVBAoMBmNwYW5lbDAeFw0yMDA1MTgxODQ3NTFaFw0yMTA1MTgxODQ3NTFaMIGGMRAwDgYDVQQHDAdob3VzdG9uMSEwHwYJKoZIhvcNAQkBFhJjLmxhcnJ5QGNwYW5lbC5uZXQxDjAMBgNVBAgMBXRleGFzMQswCQYDVQQGEwJVUzEhMB8GA1UEAwwYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMQ8wDQYDVQQKDAZjcGFuZWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3i1fOlIUoURJf4BkMgoVvCeq5GZjzuCl6WXzz5WsADYUl84UzgXJIWtwBoTc2l32zyeWkIAkM/eNR12YMb0kXbgihbZtEsH0XimqcXmtiicoM3tjBi6u0cDEFr8TMdI396oArnnTc0CASfdXUGGtReZ6vOwxXOPPK5nYCvyFqBl1n0pQ2AV/Co9/WwhOCvV/Bm9aTzueZrbYB/9uW31LOpjs+0s1QNGHv6PTvH8HZFW/7Z9M3gSwUxfOOOQHEiiHRWfb/UqcTZZxjZhfY/IN6/SOsc3Z2t2KmQ5XI6ijCrjjJeaZSQYsge8LpHskr8G3WeTV9M9+1YnI7GRqs3+GdAgMBAAGjggEsMIIBKDAdBgNVHQ4EFgQUYWWThQj2tRL5PNkdPhUJdqEIcrswCQYDVR0TBAIwADCBtwYDVR0jBIGvMIGsgBRhZZOFCPa1Evk82R0+FQl2oQhyu6GBjKSBiTCBhjEQMA4GA1UEBwwHaG91c3RvbjEhMB8GCSqGSIb3DQEJARYSYy5sYXJyeUBjcGFuZWwubmV0MQ4wDAYDVQQIDAV0ZXhhczELMAkGA1UEBhMCVVMxITAfBgNVBAMMGGJpbmFyeWFnYWluLmNwYW5lbC5uaW5qYTEPMA0GA1UECgwGY3BhbmVsggUCGG94JTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwIwYDVR0RBBwwGoIYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMA0GCSqGSIb3DQEBCwUAA4IBAQBhKmds+XDTycHc2bsSH+zDkWIw58+J26Re9Q9VnUcrSKtV3mmtW88r8FuEHEZdAOzFPTJ3Tdd1fha15wuS5dzOV+bCRrDTvJmD4vRPkQ5TSdyJgpIjpjwiOP1+ZwaF7xZ+FLMTcEl8SXM+lkoKEUQpHFKyQ0zGIaLCVt0QyXx16lesPMgPeb/KRXJPy7ZrUtyF0z0LgvOSDGNsGt4rD8FVgtdHRlMJf/XIoFeV5Zk+rHNoCXIQXh4nBzM8X2r3IrQ1Qh0Z3njN2Ld8ZUlxsWctlLzvzmjARzIzvbglO3wod5XoRLS+fU6oVyQ9yuQLGG6r6Y7iBYSHfAO8e0pLkp7G
            -----END CERTIFICATE-----
      - name: key
        in: query
        description: |-
          The certificate's key.

          **Note:**

          You **must** URI-encode this value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: pem-private-key
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpQIBAAKCAQEA4FIdZcIKVK5+PtdzVm4CN45BXG5wX7KZ1/dP84MGIwtwxkkX
            hBqw7BawbHlexYXuarSnrHA8hm6RRxv/fRy+zOeg7y8v5CWG52m91GK7qSLxpruY
            gCJGJEK8fj6spbbLjxNd5XAmDwT80uMsq/3E9rGmg/ELY9X9vn5WlErRfi2Qjsiq
            x7AYUvcIkBHPOlRWzZgx2KjMjBU2U0w2RCUjgKgww/6xx2ccnTvn7HGvVjQMkh+1
            UYCdGvT8fR2qJBKHZ5Cjdfc9N304qZCqYMhcrHX2gJqc+9zLtLk7PoEYXu17l6nU
            O3C/IdzBXYWu+UoMzpZ5tc5jKRA3+I7ggKjJlwIDAQABAoIBAQDR4GI648qQolXh
            6+iws+qFGibTGU0wbET+SBjYx/0E6t5P1vEWm3Zu3WehhgkCm6WO1omOj9BBIs/w
            DSUEZNGrmwf64VZYijfm6gs+3EWiINyhWCF9uRORN5NuNquHvDhGHCOc2EnzgYIe
            uYgBP0R6X4phJjS26u8mvMO6qSnKd4wRrOf9ZU73L1VTmhMItshVxH2tuhKurkMV
            jWDAjWeJfycWe4JVgYxM4GA6g5kKi5nrkhpVEsklh1FJZn65U0aWXUpHAm2ihhKf
            Fq9FgC+8Xz8UAtf8JYbAW3D1E/0lRZuLt+5cosK8b2+9CIUNRjYMtyXlbI0RGwl9
            FO/9sv05AoGBAP0jfp8qUqf4u4pkE1W2SzzbQ6oYKYHTMiORVHi2qysgrxAZFKGj
            fW7c7UTpxlCaqqDBRQA+lZH16xVD3idwYvmw/9AKxSozxe3wKbQFRM+XYHc7la+2
            TiQiJgjflEadSa57FNgBB7SpeEzaIfmGBYWJXkM+6wuaGUz5qZs/SFJNAoGBAOLb
            Ouh7CWTk5oISVBfqxnwFEpaMHT5vpzNBwUWUVMhrxNZP3OVSN++qKxpJhCF/M2no
            OdxX7CYkrGvHFTvV9WKpa0kYQGms+ybyoMOYxJax8rV+Zq9gg2QKwaakoJljaAlX
            5yUuy32YhLxWodQhE7mlhAUyXIuNLVuYee0Y2ZVzAoGAaV6tBnQHlAPljOW7ZqJL
            Dzn2IIeOP4w6ArQsBVOETJ9+P6UxAVecjtlHqrfk5Qh8ng3VOxTSDb/f6yok/yW5
            DVawJVlWWQrUCQc/VMActIy+iuMym8G3JTNRwb/PaNVwJkD1nDRRkNI6UUM7gTJY
            eg2EP1mhXWL3xSLnhsgAwsECgYEAqnm2xfeXsqM0+bAOU77RE2e4dTuryjybeDBE
            riXupIIf9DElvYrQkCDfrSxrx8RP/ZlOyd+kjXFnxMJhmYqKkW7hOZeo6ADe54DT
            AMmvidMFog/v2ID9m9NdfP4f1cTW7JaLE+0bbDGOJf4wNDn7GbphAIq88v3PhRKL
            JXpUIDMCgYEA2P7D/oZu+dEPW8JhUsDDXY238ZDbQzWBi6n1uUnMJCnUABd/mvuV
            ILR/iSBHmt9UdH2YECwry58xFjhXwfTvPc155PiJddjENGFUqohjl0wh0VzLEyfF
            Vb6iVMIdrycD/O4U26I3Qco2lQYPoPgrBkAGJ5/GCjkTiL0JssoMXa4=
            -----END RSA PRIVATE KEY-----
      - name: service
        in: query
        description: |-
          The service on which to install the SSL certificate.

          * `ftp`
          * `exim`
          * `dovecot`
          * `cpanel`

          **Important:**

          You **must** restart the selected service after you install a new SSL certificate.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel
          enum:
          - ftp
          - exim
          - dovecot
          - cpanel
      - name: cabundle
        in: query
        description: |-
          The certificate's Certificate Authority (CA) bundle.

          **Note:**

          You **must** URI-encode this value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIE3f4g5h7j73f235gy54hvcNAQELBQAwgYYxEDAOBgNVBAcMB2hvd097342boi0w389w0BCQEWEmMubGFycnl8293rhqurpg9qfgm5ldDEOMAwGA1UECAwFdGV4YXMxCzAJBgNVBAYTAlVTMSEwHwYDVQQDDBhiaW5hcnlhZ2Fpbi5jcGFuZWwubmluamExDzANBgNVBAoMBmNwYW5lbDAeFw0yMDA1MTgxODQ3NTFaFw0yMTA1MTgxODQ3NTFaMIGGMRAwDgYDVQQHDAdob3VzdG9uMSEwHwYJKoZIhvcNAQkBFhJjLmxhcnJ5QGNwYW5lbC5uZXQxDjAMBgNVBAgMBXRleGFzMQswCQYDVQQGEwJVUzEhMB8GA1UEAwwYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMQ8wDQYDVQQKDAZjcGFuZWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3i1fOlIUoURJf4BkMgoVvCeq5GZjzuCl6WXzz5WsADYUl84UzgXJIWtwBoTc2l32zyeWkIAkM/eNR12YMb0kXbgihbZtEsH0XimqcXmtiicoM3tjBi6u0cDEFr8TMdI396oArnnTc0CASfdXUGGtReZ6vOwxXOPPK5nYCvyFqBl1n0pQ2AV/Co9/WwhOCvV/Bm9aTzueZrbYB/9uW31LOpjs+0s1QNGHv6PTvH8HZFW/7Z9M3gSwUxfOOOQHEiiHRWfb/UqcTZZxjZhfY/IN6/SOsc3Z2t2KmQ5XI6ijCrjjJeaZSQYsge8LpHskr8G3WeTV9M9+1YnI7GRqs3+GdAgMBAAGjggEsMIIBKDAdBgNVHQ4EFgQUYWWThQj2tRL5PNkdPhUJdqEIcrswCQYDVR0TBAIwADCBtwYDVR0jBIGvMIGsgBRhZZOFCPa1Evk82R0+FQl2oQhyu6GBjKSBiTCBhjEQMA4GA1UEBwwHaG91c3RvbjEhMB8GCSqGSIb3DQEJARYSYy5sYXJyeUBjcGFuZWwubmV0MQ4wDAYDVQQIDAV0ZXhhczELMAkGA1UEBhMCVVMxITAfBgNVBAMMGGJpbmFyeWFnYWluLmNwYW5lbC5uaW5qYTEPMA0GA1UECgwGY3BhbmVsggUCGG94JTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwIwYDVR0RBBwwGoIYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMA0GCSqGSIb3DQEBCwUAA4IBAQBhKmds+XDTycHc2bsSH+zDkWIw58+J26Re9Q9VnUcrSKtV3mmtW88r8FuEHEZdAOzFPTJ3Tdd1fha15wuS5dzOV+bCRrDTvJmD4vRPkQ5TSdyJgpIjpjwiOP1+ZwaF7xZ+FLMTcEl8SXM+lkoKEUQpHFKyQ0zGIaLCVt0QyXx16lesPMgPeb/KRXJPy7ZrUtyF0z0LgvOSDGNsGt4rD8FVgtdHRlMJf/XIoFeV5Zk+rHNoCXIQXh4nBzM8X2r3IrQ1Qh0Z3njN2Ld8ZUlxsWctlLzvzmjARzIzvbglO3wod5XoRLS+fU6oVyQ9yuQLGG6r6Y7iBYSHfAO8e0pLkp7G
            -----END CERTIFICATE-----
          default: ""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_261"
  /install_spf_records:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Install domain SPF record
      description: This function installs a Sender Policy Framework (SPF) record for
        a domain on the DNS server.
      operationId: install_spf_records
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to install an SPF record on the DNS server.

          **Note:**

          To install multiple SPF records, increment the parameter name. For example, use the `domain-1=example-1.com`, `domain-2=example-2.com`, and `domain-3=example3.com` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
        examples:
          multiple:
            summary: Multiple domains
            value: domain-1=example-1.com&domain-2=example-2.com&domain-3=example-3.com
          single:
            summary: Single domain
            value: example.com
      - name: record
        in: query
        description: |-
          An SPF record.

          You **must** provide this parameter for every `domain` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: v%3Dspf1%20%2Bip4%3A1192.0.2.0%20-all
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_262"
  /installable_mysql_versions:
    get:
      tags:
      - Databases
      - Manage MySQL Server
      summary: Return available MySQL versions
      description: |-
        This function lists all available versions of MySQL® and MariaDB.

        **Important:**

        When you disable the [MySQL/MariaDB](https://go.cpanel.net/howtouseserverprofiles#roles) role **and** remote MySQL is **not** already configured, the system disables this function.
      operationId: installable_mysql_versions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_263"
  /installed_versions:
    get:
      tags:
      - Updates
      summary: Return third-party software versions
      description: This function lists the versions of third-party software that ship
        with cPanel & WHM.
      operationId: installed_versions
      parameters:
      - name: packages
        in: query
        description: |-
          Whether to list the server's installed RPMs in the function's
          `cpanel_packages`, `ea_4_packages`, and `os_packages` arrays.

          * `1` - List.
          * `0` - Do **not** list.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_264"
  /installssl:
    get:
      tags:
      - SSL
      - cPanel Account Settings
      summary: Install SSL certificate
      description: This function installs an SSL certificate.
      operationId: installssl
      parameters:
      - name: crt
        in: query
        description: |-
          The certificate's text.

          **Note:**

          You **must** URI-encode this value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----'
      - name: domain
        in: query
        description: The domain's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: key
        in: query
        description: |-
          The certificate's key.

          **Note:**

          You **must** URI-encode this value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '-----BEGIN%20RSA%20PRIVATE%20KEY-----%0AMIIEpAIBAAKCAQEA4AVM6J4Qg3DIFWr/eJ5GRmIATYsJIepKbrDy70sq+udcO8R8xxak0oMZ/9mUdpjSNK/fLVTuCO0kxTfQ9VUWJllX7ThD6Zh9ZvlC/nf/OEZLm3ZbnBgu8rbC8E9wuDOkKbJLnINgdhtowIydLK2MJ++q62bFV89jkHWTMcKyyqHENo3hc+lkpd9vnp8rZTinaVb7nX26uQqAFZYRo+WU0G/NPsq40QVSMoqPxyEz4qXo0hvuIlCXmzFZq/6fCVPEKPLhQgMmpdBkMz4dVOazREfqXdjMD2+QXSNiA1AwWr8l0r4rtzlxEYDJIR41yXp0xMl3KoolxMyvLBqZy32niQIDAQABAoIBAQCmbGmhWmPsMeoCt1WJFxQgD4goE0U6k+Kt7vjbOt14Pk6v/B2yjaju1wSGpO59WLS4/XrwI2se6IXrmba7u3VUEgWXLriNHoLy7/SMNTs+ZEKhAMG36eNe3tVdT7busTag31r6sEMGGwCsIwpU+azosk0oylWLEX/m/uHWEs1eaIEWWWtgHB+KZrrP7Rr9RYfVQ144DxmOxS3Ca9+mST62WqAVPR6POWGEfZqnZl/ePWZPcQYbFrhwnnefNoYBl/bnLZBo8rbNWxAqOEOuKfkrBzglKG/39WKPw8rj4JIVzY0yOuFCW6xCDWRkOrhU8Ol/3FvwDa3uJpkpmgPr4TgxAoGBAPGPLmxSuOYR97mDAXxrs037F2GCbqWvI6m7/ezWe9yn+bMpjSIWfsgtq4FsyqzPueEkDdQWi3xh6nu2WI/1Tl875opGAqEIJMqss/u11tnva5wzu1cCL6H85A5+HMOBvP3sm6CObKcVw92h7kxynVIUJJWhjfeZMN8gBFFpKIVFAoGBAO1ptXBmXLC/YKKvtHI3M16/ZopvM8ZqU2HcAHaw214Refw9JJ/e3/xTNfSerVTyCAQO1AdWTzJKBN8jmSYv1Mk1D3RpQPNR7wVzi46KR081AU41uMpqIGVOwHtyVnW/ZfLrc1DLIK8Cx8aHfoxffwzoMO5SEQSooeZfOLhsfDN1AoGBAKQTUEINsj+75psgbAr6ELGgItJ9yPBLVRr+cUzEpx9LDWVvjMihpP4NX1gq8EOPWT+ewLHVmmsjCyV6xw8JXXF8e2xif3in0m3D/wCzE7u2T06rKM3B017hKnrZmGoHnrqPU2osM4sOUpshWX6dv1Q4EF1+fbK3YCW+VpCBsB9NAoGAQo+uhNLODee56iKkzpjXWCsFTq6ar3hD5F3P63buKdNwhd2GlSPhXFbf+7M5GWW6BZk6rMvv7EOAVice2uvyFm8/4/1WbmF8R+T7LX1rPLO5p/m701QpvP11TabiwqRkqtSEQhSRF0AKTojSW/yyHCZFAawUhV/Z9EKiHmKb97kCgYAyzmFc2it0HqnsOnRybop603nqMtWGTQO4cxa93HUDpYajuK2K3DfrxUj6lG3z/oKJGGE2JqgZ6LBAhNJtJWJu2ox3pKGE63QjLJnVwb8y1NFYpe/crbLePuBwIR0L7drXxfv7O5btY7h6QI2d1/UIAQPAWbxLoTM+ndQ/uPEdfA%3D%3D-----END%20RSA%20PRIVATE%20KEY-----'
      - name: cab
        in: query
        description: |-
          The certificate's certificate authority (CA) bundle.

          If you do not use this parameter, the system automatically determines the
          appropriate CA bundle file to use.

          **Note:**

          You **must** URI-encode this value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: '-----BEGIN%20CERTIFICATE-----%0AMIIDNTCCAh2gAwIBAgIFAY0o0kwwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL%0AZG9tYWluLnRlc3QwHhcNMTcxMDMxMTUyMjU1WhcNMTgxMDMxMTUyMjU1WjAWMRQw%0AEgYDVQQDDAtkb21haW4udGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALer6vzwFt%2BO6ooHcXpq%2Bi%2FOVVQEY3oWxrqH6mB%2FPssVSxwcf6bLjoO4so%2Fn%0Adrymhb9mqfkOqYVHwnQ%2Fh2uM%2BIw1NKKDfwOljWcgCS24NykbfQUlW%2FSNDTovdDGl%0AT1Aner090Qse%2B19ta8KS%2F3Akz37bkgqMkPO%2FiEOHlF%2FLbLvjfighkoGco51wc6d7%0AHCQwPWR%2BUenbQWzUwR4%2F4Pqw%2FYrxDAv8O%2FEnNfOGwnCnlnFq4a390VGriqMAngzI%0AlRMVDu4qJGW3dFNStVUm71%2B16ba%2FeIVBQGN2rbgie6Rb6VuHdsqSreea0tSLRxdd%0AFd7A0QMQRvtnqoUv6RZBhefr2t0CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUeitnD4U4%0AMXtmLX53dTAZPENjovwwHwYDVR0jBBgwFoAUeitnD4U4MXtmLX53dTAZPENjovww%0ACQYDVR0TBAIwADA5BgNVHREEMjAwggtkb21haW4udGVzdIIQbWFpbC5kb21haW4u%0AdGVzdIIPd3d3LmRvbWFpbi50ZXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAeD4Fc%2FBwM%0AfJEvlPO30%2FOp2JJxG92tbgsoY9CKTYoZy0IMHhwOrt%2FB36joYDrOhtiO6XsRw4Zm%0AAPT8ey9p61kUc6XWs5oU9aifKeAKzWCZV9wQphbY%2F0rQp1YPsVN9tBgiag754HPo%0AbNDhWOZSZDKnh82DikTD6iciTxeblrvcbFC4Z76JH31dvqmNMEAgZvPCpq86Ued5%0A52gKM0u2%2BrK%2FzIYjh%2FhooqN%2BTY%2BJQ667JzLzPNenzAYFsoIQgVj6%2FZoFqJA4nbxC%0Azv%2Fspqc0OQ2W9m5egRPDhngKt%2Bi9804N7FeilBL%2FcpEgUHhgzMBi1T9n%2BYBrc6bO%0AjNjvnEQRbqZY%0A-----END%20CERTIFICATE-----'
      - name: ip
        in: query
        description: |-
          The IP address of the certificate's domain.

          This parameter defaults to the domain's local IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.0.20
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_265"
  /ipv6_disable_account:
    get:
      tags:
      - IP Addresses
      - IPv6 Address Settings
      summary: Remove IPv6 address range from account
      description: |-
        This function removes the IPv6 address from an account.

        **Notes:**

        - When you disable IPv6 on an account, the system unbinds that IPv6 address from your server and the account loses the address. If you enable IPv6 on that account again, the system assigns it a different IPv6 address.
        - For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select On for the *Listen on IPv6 Addresses* setting in the *System* section of WHM's [Tweak Settings](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ipv6_disable_account
      parameters:
      - name: user
        in: query
        description: A comma delimited list of account names.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "user1,user2,user3"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_266"
  /ipv6_enable_account:
    get:
      tags:
      - IP Addresses
      - IPv6 Address Settings
      summary: Add IPv6 address range to accounts
      description: |-
        This function assigns an IPv6 address to one or more accounts.

        **Note:**

        You **must** perform at least one of the following actions before you call this function:
          * Use WHM's [*IPv6 Ranges*](https://go.cpanel.net/whmdocsIPv6Ranges) interface (*WHM >> Home >> IP Functions >> IPv6 Ranges*) or WHM API 1's `ipv6_range_add` function to add one or more IPv6 address ranges for use as dedicated IPv6 addresses.
          * Use WHM's [*Basic WebHost Manager Setup*](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (*WHM >> Home >> Server Configuration >> Basic WebHost Manager Setup*) or modify the [`/etc/wwwacct.conf`](https://go.cpanel.net/advancedinstall) file to add a shared IPv6 address to the server.
          * For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the *System* section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings#system) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ipv6_enable_account
      parameters:
      - name: range
        in: query
        description: |-
          The IPv6 address range's name.

          **Note:**

          The range name `SHARED` will assign the server's shared IPv6 address to the account(s).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Hosting_IPv6_Block
      - name: user
        in: query
        description: A comma-delimited list of account names.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: "user1,user2,user3"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_267"
  /ipv6_range_add:
    get:
      tags:
      - IP Addresses
      - IPv6 Address Settings
      summary: Add IPv6 address range
      description: |-
        This function adds a range of IPv6 addresses to the server.

        **Notes:**

        - This function **cannot** modify the server's shared IPv6 address. To update that address, modify the [/etc/wwwacct.conf](https://go.cpanel.net/advancedinstall) file, or use WHM's [*Basic WebHost Manager Setup*](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (*Home >> Server Configuration >> Basic WebHost Manager Setup*).
        - For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the [*System*](https://go.cpanel.net/whmdocsTweakSettings#system) section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ipv6_range_add
      parameters:
      - name: name
        in: query
        description: |-
          The IPv6 address range's name.

          **Note:**

          You **cannot** use SHARED as a range's name.
          It is reserved for the server's shared IPv6 address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ExampleRange
      - name: range
        in: query
        description: |-
          The IPv6 address range and network portion
          in [CIDR format](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 2001:db8:66ac:cafe::/64
      - name: enabled
        in: query
        description: |-
          Whether the IPv6 address range is available.

          **Note**

          * `1` - Available.
          * `0` - Reserved.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: note
        in: query
        description: A note for the IPv6 address range.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: Initial IPv6 address pool
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_268"
  /ipv6_range_edit:
    get:
      tags:
      - IP Addresses
      - IPv6 Address Settings
      summary: Update IPv6 address range name or note
      description: |-
        This function changes an IPv6 address range's name and/or note.

        **Notes:**

        - This function **cannot** modify the server's shared IPv6 address. To update that address, modify the [/etc/wwwacct.conf](https://go.cpanel.net/advancedinstall) file, or use WHM's [*Basic WebHost Manager Setup*](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (*Home >> Server Configuration >> Basic WebHost Manager Setup*).
        - For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the [*System*](https://go.cpanel.net/whmdocsTweakSettings#system) section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ipv6_range_edit
      parameters:
      - name: name
        in: query
        description: |-
          The IPv6 address range's current name.

          **Note:**

          You **cannot** edit the range named SHARED.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ExampleRange
      - name: new_name
        in: query
        description: |-
          The IPv6 address range's new name.

          **Note:**

          * If not supplied the range keeps its old name.
          * You **cannot** change range name to SHARED.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: AnotherRange
      - name: note
        in: query
        description: |-
          The IPv6 address range's new note.

          **Note:**

          If you don't specify this parameter, the function will not change the range's note.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: This is an update to the note.
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_269"
  /ipv6_range_list:
    get:
      tags:
      - IP Addresses
      - IPv6 Address Settings
      summary: Return available IPv6 address ranges
      description: |-
        This function lists available IPv6 address ranges.

        **Note:**

        For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the [*System*](https://go.cpanel.net/whmdocsTweakSettings#system) section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ipv6_range_list
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_270"
  /ipv6_range_remove:
    get:
      tags:
      - IP Addresses
      - IPv6 Address Settings
      summary: Remove IPv6 address range
      description: |-
        This function removes an IPv6 address range from the server.

        **Note:**

        * This function **cannot** modify the server's shared IPv6 address. To update that address, modify [the `/etc/wwwacct.conf` file](https://go.cpanel.net/advancedinstall), or use WHM's [_Basic WebHost Manager Setup_](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) interface (_Home >> Server Configuration >> Basic WebHost Manager Setup_).
        * For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select _On_ for the _Listen on IPv6 Addresses_ setting in the _System_ section of WHM's [_Tweak Settings_](https://go.cpanel.net/whmdocsTweakSettings) interface (_WHM >> Home >> Server Configuration >> Tweak Settings_).

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ipv6_range_remove
      parameters:
      - name: name
        in: query
        description: The IPv6 address range's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Range1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_271"
  /ipv6_range_usage:
    get:
      tags:
      - IP Addresses
      - IPv6 Address Settings
      summary: Return IPv6 address usage
      description: |-
        This function retrieves usage information for IPv6 addresses in an IPv6 range.

        **Note:**

        For all of cPanel & WHM's features to function properly on IPv6, the `cpsrvd` daemon **must** listen on IPv6 addresses. To enable this functionality, select *On* for the *Listen on IPv6 Addresses* setting in the [*System*](https://go.cpanel.net/whmdocsTweakSettings#system) section of WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: ipv6_range_usage
      parameters:
      - name: name
        in: query
        description: The IPv6 address range's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TestRange
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_272"
  /is_alias_available:
    get:
      tags:
      - DNS
      - Domain Management
      - Resolvers
      summary: Return `ALIAS` DNS record availability & resolver
      description: |-
        This function returns whether `ALIAS` and `ANAME` records are available and the value of the running PowerDNS (PDNS) `resolver` setting, if any exists.
        For more information, read our [`ALIAS` documentation](https://go.cpanel.net/dns-alias-record).
      operationId: DNS::is_alias_available
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_273"
  /is_conversion_in_progress:
    get:
      tags:
      - PHP-FPM
      summary: Return PHP-FPM conversion status
      description: |-
        This function indicates whether the system's process to convert all of WHM's accounts to use PHP-FPM is in progress.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.

        **Warning:**

        We **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM on a server with less than the required RAM, your server may experience severe performance issues.
      operationId: is_conversion_in_progress
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_274"
  /is_role_enabled:
    get:
      tags:
      - Server Administration
      - Server Profiles
      summary: Return whether server role is enabled
      description: |-
        This function checks whether a specific server role is currently enabled
        for the server.

        For more information about server roles, read our [How to Use Server Profiles](https://go.cpanel.net/serverroles) documentation.
      operationId: is_role_enabled
      parameters:
      - name: role
        in: query
        description: |-
          The role to check. The role must be one of the following case-sensitive values:

          * `CalendarContact` - Allows users to access CalDAV and CardDAV services and features.
          * `DNS` - Allows users to create and edit Domain Name System (DNS) zone files. This role doesn’t convert your server to a cPanel DNSOnly™ server.
          * `FileStorage` - Allows users to access cPanel’s [File Manager](https://go.cpanel.net/cpaneldocsFileManager) and [Git™ Version Control](https://go.cpanel.net/cpaneldocsasisGitVersionControl) features. When a profile disables this role, you can’t enable the Shell Access setting when you create a new cPanel account.

          * `FTP` - Allows users to manage their account’s files with an FTP client.
          * `MailLocal` - Allows the control of local mail delivery and related features.
          * `MailReceive` - Allows users to receive mail from external sources.
          * `MailRelay` - Allows the server’s Message Transfer Agent (MTA) to forward mail from one remote host to another.
          * `MailSend` - Allows users to send mail and control the features necessary for sending mail.
          * `MySQL` - Allows users to create and manage MySQL® or MariaDB databases.
          * `MySQLClient` - This role checks whether the MySQL/MariaDB client access exists locally or remotely. You cannot directly enable or disable this role. The system enables or disables this role depending on the MySQL configuration.

          * `Postgres` - Allows users to create and manage [PostgreSQL](https://go.cpanel.net/whmdocsConfigurePostgreSQL) databases if cPanel & WHM manages the server’s PostgreSQL.
          * `PostgresClient` - This role checks whether the PostgreSQL client access exists locally.
          * `SpamFilter` - Allows users to use Apache SpamAssassin™ to identify, sort, and delete unsolicited mail.
          * `WebDisk` - Allows users to manage their account’s files with a WebDAV client.
          * `Webmail` - Allows users to access webmail services and features.
          * `WebServer` - Allows users to create and manage websites for their domains.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: FTP
          enum:
          - CalendarContact
          - DNS
          - FileStorage
          - FTP
          - MailLocal
          - MailReceive
          - MailRelay
          - MailSend
          - MySQL
          - MySQLClient
          - Postgres
          - PostgresClient
          - SpamFilter
          - WebDisk
          - Webmail
          - WebServer
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_275"
  /is_sni_supported:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Return server SNI support status
      description: |-
        This function checks whether the server supports SNI (Server Name Indication).

        **Note:**

          * Functions that enable Mail SNI succeed with a warning that Mail SNI is always enabled.
          * Functions that disable Mail SNI fail and make no changes.
      operationId: is_sni_supported
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_276"
  /killdns:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Delete DNS zone
      description: |-
        This function deletes a DNS zone.

        **Important:**

        - The WHM API 1 adddns function adds an XDNS entry for a domain in the following locations:
         - The `/var/cpanel/users/USER` file, where `USER` represents the domain's owner.
         - The `/etc/vdomainaliases/DOMAIN` directory, where `DOMAIN` represents the new zone's domain.
         - The `/etc/vfilters/DOMAIN` directory, where `DOMAIN` represents the new zone's domain.
        - This function does **not** automatically delete these entries. You **must** manually delete these entries, or you **cannot** use this domain as a value in other API functions.
        - You cannot delete other DNS zones that reside on *Write-only* servers in a DNS cluster.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: killdns
      parameters:
      - name: domain
        in: query
        description: The zone record's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_277"
  /killpkg:
    get:
      tags:
      - Packages
      - Hosting Plans
      summary: Delete hosting plan
      description: This function deletes a hosting plan (package).
      operationId: killpkg
      parameters:
      - name: pkgname
        in: query
        description: |-
          The hosting plan's name.

          **Note:**

           You **cannot** delete a hosting plan that a cPanel account currently uses.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: package1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_278"
  /latest_available_mysql_version:
    get:
      tags:
      - Databases
      - Manage MySQL Server
      summary: Return latest MySQL version
      description: |-
        This function retrieves the latest available version of MySQL® or MariaDB®.

        **Important:**

        When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) and remote MySQL is **not** already configured, the system **disables** this function.
      operationId: latest_available_mysql_version
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_279"
  /limitbw:
    get:
      tags:
      - Bandwidth and Disk Quotas
      summary: Update cPanel account bandwidth quota
      description: This function modifies a cPanel account's bandwidth quota.
      operationId: limitbw
      parameters:
      - name: user
        in: query
        description: The username of a cPanel account on the server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: bwlimit
        in: query
        description: |-
          The account's new bandwidth quota, in megabytes (MB).
          * `0` and `unlimited` - Grant the user unlimited bandwidth
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/bwlimit_3"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_280"
  /link_server_node_with_api_token:
    get:
      tags:
      - Server Administration
      - Server Nodes
      summary: Add linked server node
      description: |-
        This function links your server to a remote server node. The server uses an API token
        to communicate with the remote server node.

        **Important:**

        * This function **only** runs on a
        [Standard Node profile](https://go.cpanel.net/whmlinkednodes)
        server.
        * The remote server node **must** use a version that is the same as or greater than your
        server version.
        * This function **requires** the use of an API token. For more information, read our
        [Guide to API Authentication - API Tokens in WHM](https://go.cpanel.net/APITokensinWHM)
        documentation.
      operationId: link_server_node_with_api_token
      parameters:
      - name: alias
        in: query
        description: |-
          A unique name that refers to the remote server node.

          **Note:**

          The alias may **only** contain alphanumeric characters, dashes (`-`), and underscores (`_`).
          It also has a maximum length of 50 characters.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 50
          minLength: 1
          type: string
          example: example
      - name: api_token
        in: query
        description: |-
          The API token required to make API calls to the remote server node.

          **Note:**

          The API token **must** have `root`-level access on the remote server node.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H
      - name: hostname
        in: query
        description: |-
          The remote server node's hostname.

          **Note:**

          This parameter does **not** accept an IP address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: hostname
          example: host.example.com
      - name: username
        in: query
        description: |-
          The username required to make API calls to the remote server node.

          **Note:**

          The username **must** have `root`-level access on the remote server node.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: root
      - name: skip_tls_verification
        in: query
        description: |-
          Whether to skip
          [SSL/TLS verification](https://docs.cpanel.net/knowledge-base/security/guide-to-ssl/).
          The system performs this action when it queries the remote server node.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_281"
  /link_user_authn_provider:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Add identity provider to cPanel account
      description: This function adds an External Authentication authorization link
        to an account.
      operationId: link_user_authn_provider
      parameters:
      - name: preferred_username
        in: query
        description: The preferred username of the account on the identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Example
      - name: provider_id
        in: query
        description: The name of the identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: google
      - name: subject_unique_identifier
        in: query
        description: The unique identifier for the user at the identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "123456789012345678901"
      - name: username
        in: query
        description: The account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_282"
  /list_account_enhancements:
    get:
      tags:
      - Account Enhancements
      summary: Return Account Enhancements
      description: This function retrieves all existing account enhancements on the
        system.
      operationId: list_account_enhancements
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_283"
  /list_blocked_incoming_email_countries:
    get:
      tags:
      - Mail
      - Spam Management
      summary: Return blocked email countries list
      description: This function lists which countries cannot send email to the server.
      operationId: list_blocked_incoming_email_countries
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_284"
  /list_blocked_incoming_email_domains:
    get:
      tags:
      - Mail
      - Spam Management
      summary: Return blocked email domains list
      description: This function lists which domains cannot send email to the server.
      operationId: list_blocked_incoming_email_domains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_285"
  /list_configclusterservers:
    get:
      tags:
      - Server Administration
      - Configuration Clusters
      summary: Return all configuration cluster servers
      description: |-
        This function lists the servers in the server's configuration cluster.

        **Warning**:

        * WHM's Remote Access Key feature is deprecated. We **strongly** recommend that you use API tokens instead.

        * If you log in to a configuration cluster server that is **not** the parent server, **nothing** will indicate that the server is part of a configuration cluster. You can only view and modify this information from the parent server.
      operationId: list_configclusterservers
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_286"
  /list_connected_applications:
    post:
      tags:
      - Server Administration
      - Connected Applications
      summary: List application connection information
      description: |-
        Retrieve the connection information for all the connected applications that have been
        granted access to this server. This data may include any number of properties, but its
        primary purpose is to associate API tokens and public/private key pairs and similar
        resources with a specific connected application.
      operationId: list_connected_applications
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_287"
  /list_cparchive_files:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Return cparchive files list
      description: |-
        This function lists all available cparchive files.

        **Note:**

        * `MM.DD.YYYY` represents the file's date in month, date, and year format.
        * `HH-MM-SS` represents the file's timestamp in hour, minute, and second format.

        The function checks the following filenames, where `USER` represents the cPanel account's filusername::
        * `cpmove-USER`
        * `cpmove-USER.tar`
        * `cpmove-USER.tar.gz`
        * `USER.tar`
        * `USER.tar.gz`
        * `backup-{MM.DD.YYYY}{HH-MM-SS}{USER}.tar`
        * `backup-{MM.DD.YYYY}{HH-MM-SS}{USER}.tar.gz`

        The function checks for these filenames in the following locations:
        * `/home`
        * `/home2`
        * `/home3`
        * `/root`
        * `/usr`
        * `/usr/home`
        * `/web`
      operationId: list_cparchive_files
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_288"
  /list_database_users:
    get:
      tags:
      - Databases
      - MySQL Databases
      summary: Return MySQL users
      description: |-
        This function lists the server's database users.

        **Warning:**

        On most servers, this function returns a large amount of output. We **strongly** suggest that you filter and sort the output.

        **Important:**

          When you disable the [MySQL/MariaDB and PostgreSQL roles](https://go.cpanel.net/serverroles) and remote MySQL is not already configured, the system **disables** this function.
      operationId: list_database_users
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_289"
  /list_databases:
    get:
      tags:
      - Databases
      - MySQL Databases
      summary: Return MySQL databases
      description: |-
        This function lists the server's databases.

        **Warning:**

        On most servers, this function returns a large amount of output. We strongly suggest that you [filter](https://go.cpanel.net/WHMAPI1FilterOutput) and [sort](https://go.cpanel.net/WHMAPI1SortOutput) the output.

        **Important:**

        When you disable the MySQL/MariaDB and PostgreSQL [roles](https://go.cpanel.net/serverroles) and remote MySQL is **not** already configured, the system **disables** this function.
      operationId: list_databases
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_290"
  /list_enhancement_limits:
    get:
      tags:
      - Resellers
      - Account Enhancement Limit
      - Account Enhancement
      - Account Limit
      summary: Return account enhancement limits
      description: This function returns a reseller's account enhancement limits.
      operationId: list_enhancement_limits
      parameters:
      - name: account
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_291"
  /list_hooks:
    get:
      tags:
      - Script Hooks
      - Scripts Hooks
      summary: Return script hooks list
      description: This function lists the server's script hooks.
      operationId: list_hooks
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_292"
  /list_integration_groups:
    get:
      tags:
      - Integration
      - Links
      summary: Return integration link groups
      description: This function lists the groups of integration links in the cPanel
        interface.
      operationId: list_integration_groups
      parameters:
      - name: user
        in: query
        description: The cPanel account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_293"
  /list_integration_links:
    get:
      tags:
      - Integration
      - Links
      summary: Return integration links
      description: This function lists integration links in the cPanel interface.
      operationId: list_integration_links
      parameters:
      - name: user
        in: query
        description: The cPanel account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_294"
  /list_linked_server_nodes:
    get:
      tags:
      - Server Administration
      - Server Nodes
      summary: Return all linked server nodes
      description: This function returns a list of all remote server nodes linked
        to the server. It also provides details about each remote server node.
      operationId: list_linked_server_nodes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_295"
  /list_mysql_databases_and_users:
    get:
      tags:
      - Databases
      - MySQL Databases
      summary: Return MySQL databases and users for account
      description: |-
        This function retrieves the MySQL® database and user data for the specified account.

        **Important:**

        When you disable the [MySQL/MariaDB](https://go.cpanel.net/howtouseserverprofiles#roles) role **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: list_mysql_databases_and_users
      parameters:
      - name: user
        in: query
        description: The username for a specified account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_296"
  /list_pops_for:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Return cPanel account's email accounts
      description: |-
        This function lists a cPanel account’s email accounts. To prevent falsified data or symlink exploitation, the function uses the specified cPanel account user, rather than `root` user, to read data from the user’s home directory. The system compares the collected data from the user’s home directory to a server-wide domains list. The comparison of the data validates whether you can trust the data.

        **Important:**

          When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: list_pops_for
      parameters:
      - name: user
        in: query
        description: The cPanel account user for which to list all owned email accounts.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_297"
  /list_rpms:
    get:
      tags:
      - RPM
      - List Package Information
      summary: Return required but uninstalled server RPM package
      description: |-
        This function lists RPMs that the server needs, but the server owner has not yet installed.
        When you call this function, it performs the same actions as the following command:

        `/usr/local/cpanel/scripts/check_cpanel_pkgs --list-only --targets[target]`

        For more information, read our
        [rpm.versions system](https://docs.cpanel.net/knowledge-base/rpm-versions/introduction-to-the-rpm-versions-system/)
        documentation.
      operationId: list_rpms
      parameters:
      - name: target
        in: query
        description: "The target that depends on the uninstalled RPMs. If you do not\
          \ specify a value, the function lists all of the required but uninstalled\
          \ RPMs for all RPM targets."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 3rdparty
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_298"
  /list_user_child_nodes:
    get:
      tags:
      - Server Administration
      - Server Nodes
      summary: Return cPanel accounts with server name and type
      description: "This function returns the system's cPanel accounts and the [linked\
        \ cPanel & WHM server](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles)\
        \ on which they exist."
      operationId: list_user_child_nodes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_299"
  /list_users:
    get:
      tags:
      - Account Management
      summary: Return root and cPanel accounts
      description: This function lists the cPanel user accounts and the `root` user
        on the server.
      operationId: list_users
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_300"
  /listaccts:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Return cPanel accounts
      description: This function lists the accounts on the server.
      operationId: listaccts
      parameters:
      - name: search
        in: query
        description: |-
          A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions) that filters the results.

          **Note:**
           * The system matches the PCRE against the `searchtype` parameter's specified type.
           * If you do not specify a value for both the `searchtype` and `search` parameters,
             the function returns all of the server's accounts.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: searchmethod
        in: query
        description: |-
          The function's search method.
          * `exact` - The matched value and the `search` value **must** be identical.
          * `regex` - The matched value must contain the `search` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: exact
          enum:
          - exact
          - regex
      - name: searchtype
        in: query
        description: |-
          The account information to query. If you do not specify a value
          for both the `searchtype` and `search` parameters, the function returns all
          of the server's accounts.
          * `domain` - Match domains against the `search` regular expression.
          * `owner` - Match the WHM user who owns the account against the `search` regular expression.
          * `user` - Match usernames against the `search` regular expression.
          * `ip` - Match IP addresses against the `search` regular expression.
          * `package` - Match hosting plans (packages) against the `search` regular expression.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: domain
          enum:
          - domain
          - owner
          - user
          - ip
          - package
      - name: want
        in: query
        description: |-
          The returns to include in the output for each account.

          If you do not specify a value, the function's output includes all of its returns.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "domain,diskused"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_301"
  /listacls:
    get:
      tags:
      - Resellers
      - Account Permissions
      summary: Return all privilege lists and settings
      description: |-
        This function lists the server's
        [Access Control Lists (ACLs)](https://go.cpanel.net/GuidetoWHMPluginsAccessControlLists)
        and each list's privileges.
      operationId: listacls
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_302"
  /listcrts:
    get:
      tags:
      - SSL
      - SSL Server Settings
      summary: Return domains with installed SSL certificates
      description: This function lists the server's domains with installed SSL certificates.
      operationId: listcrts
      parameters:
      - name: registered
        in: query
        description: |-
          Whether to limit the results to certificates registered with
          a certificate authority (CA).

          * `1` — Registered certificates **only**.
          * `0` — All certificates.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: user
        in: query
        description: |-
          The cPanel username.

          If you do **not** use this parameter, the function returns certificates
          for **all** accounts on the server.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_303"
  /listips:
    get:
      tags:
      - IP Addresses
      - IPv4 Address Settings
      summary: Return server's IP addresses
      description: This function lists a server's IP addresses.
      operationId: listips
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_304"
  /listipv6s:
    get:
      tags:
      - IP Addresses
      - IPv6 Address Settings
      summary: Return server's IPv6 addresses
      description: This function lists the IPv6 addresses bound to a server’s network
        interfaces.
      operationId: listipv6s
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_305"
  /listlockedaccounts:
    get:
      tags:
      - Suspensions
      summary: Return suspended cPanel accounts
      description: |-
        This function lists locked accounts on the server. **Only** WHM users with
        `root`-level privileges can unsuspend locked accounts.
      operationId: listlockedaccounts
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_306"
  /listmxs:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Return domain's mail exchanger records
      description: |-
        This function lists a domain's MX records.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: listmxs
      parameters:
      - name: domain
        in: query
        description: The zone record's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_307"
  /listpkgs:
    get:
      tags:
      - Packages
      - Hosting Plans
      summary: Return current user's available hosting plans
      description: |-
        This function lists the authenticated user's available hosting plans (packages).

        **Important:**

        This function **only** returns packages that the authenticated user can access and
        use during account creation.
      operationId: listpkgs
      parameters:
      - name: want
        in: query
        description: |-
          The permissions of packages that you wish to list.

          * `all` — All packages on the system.
          * `creatable` — Packages that the authenticated user can use for accounts.
          * `editable` — Packages that the authenticated user can edit.
          * `viewable` — Packages that the authenticated user can view.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: all
          default: all
          enum:
          - all
          - creatable
          - editable
          - viewable
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_308"
  /listresellers:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Return all resellers
      description: This function lists the reseller accounts on the server.
      operationId: listresellers
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_309"
  /listsshkeys:
    get:
      tags:
      - SSH Keys and Connections
      summary: Return SSH keys list
      description: |-
        This function lists the server's SSH keys.

        **Warning:**

        Only the `root` account can use this function, and it only affects the `root`
        keys. To perform this function on a regular user account, call the cPanel API
        2 `SSH::listkeys` function through the WHM API.
      operationId: listsshkeys
      parameters:
      - name: files
        in: query
        description: "A filename, to limit the results to keys that have that filename."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TestKey
      - name: private
        in: query
        description: |-
          Whether to display only private keys.

          * `1` — Display only private keys.
          * `0` — Display all keys.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: private_texts
        in: query
        description: |-
          Whether to include private key text.

          * `1` — Include private key text.
          * `0` — Do **not** include private key text.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: public
        in: query
        description: |-
          Whether to display only public keys.

          * `1` — Display only public keys.
          * `0` — Display all keys.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: public_texts
        in: query
        description: |-
          Whether to include public key text.

          * `1` — Include public key text.
          * `0` — Do **not** include public key text.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: sync_authorized
        in: query
        description: |-
          Whether to synchronize the keys that can access the server.

          * `1` — Synchronize the keys.
          * `0` — Do **not** synchronize the keys.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_310"
  /listsuspended:
    get:
      tags:
      - Suspensions
      summary: Return suspended cPanel accounts and information
      description: This function lists suspended accounts on the server.
      operationId: listsuspended
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_311"
  /listzones:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Return server's DNS zones
      description: |-
        This function lists the server's DNS zones.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: listzones
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_312"
  /load_cpgreylist_config:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Return Greylisting settings
      description: This function returns Greylisting's current settings.
      operationId: load_cpgreylist_config
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_313"
  /load_cphulk_config:
    get:
      tags:
      - cPHulk
      - Settings
      summary: Return login security configuration settings
      description: This function returns cPHulk's current settings.
      operationId: load_cphulk_config
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_314"
  /local_disable:
    get:
      tags:
      - Plugin-Based Features
      summary: Disable feature locally
      description: |-
        This function allows you to locally disable a plugin-based feature,
        even if cPanel & WHM has enabled it for your hosting provider by
        default.  **Only** WHM users with `root`-level permissions can
        locally disable plugin-based features this way.
      operationId: local_disable
      parameters:
      - name: plugin
        in: query
        description: "The plugin name from the local `plugins` folder. \n\n**Important:**\n\
          Right now, you can **only** use this function to disable <a href=\"https://docs.cpanel.net/whm/plugins/server-monitoring/\"\
          \ target=\"_blank\">Server Monitoring (Powered by 360 Monitoring)</a>."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel-monitoring-plugin
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_315"
  /local_enable:
    get:
      tags:
      - Plugin-Based Features
      summary: Enable feature locally
      description: |-
        This function allows you to locally enable a plugin-based feature,
        even if cPanel & WHM has disabled it for your hosting provider by
        default.  **Only** WHM users with `root`-level permissions can
        locally enable plugin-based features this way.
      operationId: local_enable
      parameters:
      - name: plugin
        in: query
        description: "The plugin name from the local `plugins` folder. \n\n**Important:**\n\
          Right now, you can **only** use this function to enable <a href=\"https://docs.cpanel.net/whm/plugins/server-monitoring/\"\
          \ target=\"_blank\">Server Monitoring (Powered by 360 Monitoring)</a>."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel-monitoring-plugin
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_316"
  /lookupnsip:
    get:
      tags:
      - DNS
      - Resolvers
      summary: Return nameserver's IP address
      description: This function retrieves a nameserver's IP address.
      operationId: lookupnsip
      parameters:
      - name: host
        in: query
        description: The nameserver's hostname.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: ns1.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_317"
  /lookupnsips:
    get:
      tags:
      - DNS
      - Resolvers
      summary: Return nameserver's IPv4 and IPv6 addresses
      description: This function retrieves a nameserver's IPv4 and IPv6 addresses.
      operationId: lookupnsips
      parameters:
      - name: host
        in: query
        description: The nameserver's hostname.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ns1.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_318"
  /mail_sni_status:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Return domain's SNI mail services status
      description: |-
        This function retrieves the status of the domain's SNI mail services.

        **Note:**

        Functions that disable Mail SNI fail and make no changes.
      operationId: mail_sni_status
      parameters:
      - name: domain
        in: query
        description: The account's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_319"
  /manage_features:
    get:
      tags:
      - Packages
      - Updates
      summary: Update Feature Showcase
      description: |-
        This function lists and manages items in the
        [Feature Showcase](https://go.cpanel.net/GuidetotheFeatureShowcase).

        **Note:**

        * This function's output changes, depending on which value you pass to the `action` parameter.
        * The example in this document displays the function's return when the `action`
        parameter value is `info`.
      operationId: manage_features
      parameters:
      - name: action
        in: query
        description: |-
          The function's action.

          * `info` — List full details for all available features.
          * `list` — List the feature IDs for all available features.
          * `enable` — Enable the feature or features called in the `features` parameter.
          * `disable` — Disable the feature or features called in the `features` parameter.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: info
          enum:
          - info
          - list
          - enable
          - disable
      - name: features
        in: query
        description: |-
          The feature's ID.

          **Note:**

          You **must** use this parameter if you pass the `enable` or `disable` value for
          the `action` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: features_example1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_320"
  /mass_edit_dns_zone:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Update a DNS zone
      description: |-
        This function updates a given DNS zone. It can add, edit,
        and remove many records in a single call. It also ensures
        that each record not removed will occupy the same
        number of lines after the edit as it did before the edit.
      operationId: mass_edit_dns_zone
      parameters:
      - name: serial
        in: query
        description: |-
          The current serial number in the DNS zone’s SOA (Start of Authority)
          record. If this value does not match the zone’s current state, the
          request fails.
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 202001010100
      - name: zone
        in: query
        description: The name of one of the user’s DNS zones.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: add
        in: query
        description: |-
          The records to add to the zone. Each item must be a serialized
          JSON object that contains:

          * `dname` — The record’s name.
          * `ttl` — The record’s TTL (Time-To-Live) value.
          * `record_type` — The record’s type. For example, `A` or `TXT`.
          * `data` — An array of strings. The format and number of the
            strings depend on the `record_type` value.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: json
        examples:
          a:
            description: An A record.
            value: "'{\"dname\":\"example\", \"ttl\":14400, \"record_type\":\"A\"\
              , \"data\":[\"11.22.33.44\"]}'"
          aaaa:
            description: A TXT record.
            value: "'{\"dname\":\"example\", \"ttl\":14400, \"record_type\":\"TXT\"\
              , \"data\":[\"string1\", \"string2\"]}'"
      - name: edit
        in: query
        description: |-
          The records to edit in the zone. Each item must be a serialized
          JSON object that contains:

          * `line_index` — The line number in the DNS zone where the record starts.
            This is a 0-based index, so to edit the first line in the file
            use the `0` value. To edit the second line, give `1`, and so forth.
          * `dname` — The record’s name.
          * `ttl` — The record’s TTL (Time-To-Live) value.
          * `record_type` — The record’s new type. For example, `A` or `TXT`.
          * `data` — An array of strings. The format and number of the
            strings depend on the `record_type` value.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: json
            example: "'{\"line_index\": 9, \"dname\":\"example\", \"ttl\":14400, \"\
              record_type\": \"TXT\", \"data\":[\"string1\", \"string2\"]}'"
      - name: remove
        in: query
        description: The line indexes of records to remove from the zone.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            minimum: 0
            type: integer
            example: 22
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_321"
  /massmodifyacct:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Update multiple cPanel accounts
      description: |-
        This function modifies multiple cPanel accounts.

        **Warning:**

        * We **strongly** recommend that you do not modify a cPanel account's settings
        if that account uses a hosting plan (package). If the package values change, the
        system will overwrite any of your custom values with the package's new values.
        * This function uses case-sensitive parameters. You **must** enter parameters in
        the correct case format. If you do not, the function will ignore that parameter.

        **Note:**

        On servers that run CentOS 7, you may see a `named` warning about the absence of
        SPF resource records on DNS.
          * This warning is **not** relevant on CentOS 7 servers, because
          [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7
          servers use TXT records instead of SPF records.
          * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated
          version of BIND that complies with RFC 7208. To resolve this issue, update your
          operating system to a version that contains the updated version of BIND. For more
          information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).
      operationId: massmodifyacct
      parameters:
      - name: user
        in: query
        description: |-
          The account's current username.

          **Note:**

          To modify multiple users, duplicate or increment the parameter name. For example,
          the `user-1`, `user-2`, and `user-3` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
        examples:
          multiple:
            summary: Modify multiple users.
            value: user-0=username user-1=username1 user-2=username2 user-3=username3
          multiple-alternative:
            summary: Modify multiple users.
            value: user=username user=username1 user=username2 user=username3
          single:
            summary: Modify a single user.
            value: username
      - name: BACKUP
        in: query
        description: |-
          Whether backups are enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.

          **Note:**

          This parameter **requires** `root` privileges.
        required: false
        style: form
        explode: true
        schema:
          type: number
          enum:
          - 1
          - 0
        example: 1
      - name: BWLIMIT
        in: query
        description: |-
          The account's maximum bandwidth use, in bytes.

          * `0`, `null` or `unlimited` — The account can use unlimited bandwidth.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/IntPosNullOrUnlimited"
      - name: CONTACTEMAIL
        in: query
        description: |-
          The account's contact email address.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: DBOWNER
        in: query
        description: |-
          The owner of the account's MySQL® databases.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      - name: DISK_BLOCK_LIMIT
        in: query
        description: |-
          The number of disk blocks for the account, in kilobytes (KB).

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 100000000
      - name: HASCGI
        in: query
        description: |-
          Whether CGI access is enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.

          **Note:**

          When a [server profile](https://go.cpanel.net/whmdocsServerProfile) disables the
          [Web Server](https://go.cpanel.net/serverroles#roles) role, you **cannot** enable
          CGI access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: HASDKIM
        in: query
        description: |-
          Whether DomainKeys Identified Mail (DKIM) is enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          enum:
          - 1
          - 0
      - name: HASDMARC
        in: query
        description: |-
          Whether Domain-based Message Authentication, Reporting, and Conformance (DMARC) is enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          enum:
          - 1
          - 0
      - name: HASSHELL
        in: query
        description: |-
          Whether shell (SSH) access is enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.

          **Note:**

          We **strongly** recommend that you use the `shell` parameter to specify a shell for
          SSH access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: HASSPF
        in: query
        description: |-
          Whether Sender Policy Framework (SPF) is enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: LANG
        in: query
        description: |-
          The account's display language.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: english-utf8
      - name: LOCALE
        in: query
        description: |-
          The account's default locale.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166-1 (alpha-2)
          example: en
      - name: MAILBOX_FORMAT
        in: query
        description: |-
          The storage format that the account's mailboxes use.

          * `maildir`
          * `mbox`

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - maildir
          - mbox
      - name: MAX_DEFER_FAIL_PERCENTAGE
        in: query
        description: |-
          The percentage of failed or deferred email messages that the account can send per hour
          before outgoing mail is rate-limited.

          * `0` or `unlimited` — The account can send an unlimited number of failed or deferred
          messages.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/IntPosOrUnlimited"
      - name: MAX_EMAIL_PER_HOUR
        in: query
        description: |-
          The maximum number of emails that the account can send in one hour.

          * `0` or `unlimited` — The account can send an unlimited number of emails.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/IntPosOrUnlimited"
      - name: MAX_EMAILACCT_QUOTA
        in: query
        description: |-
          The maximum size, in megabytes (MB), that the account can define when it creates an
          email account.

          * `unlimited` — The account possesses an unlimited quota.

          **Important:**

          * This value applies to each email account, **not** each cPanel account.
          * If you specify a `MAX_EMAILACCT_QUOTA` value, the function will **overwrite** the
          plan's defined value for that cPanel account.
          * This parameter does **not** affect any existing email accounts
          * We recommend that you allow the account's plan to determine this value.
          * `MAX_EMAIL_PER_HOUR` will define to unlimited if you do **not** define either the plan
          or `MAX_EMAILACCT_QUOTA` parameters.

          This parameter defaults to the defined system value. It will default to `unlimited` if
          you do **not** define either the `plan` or `MAX_EMAILACCT_QUOTA` parameters.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAX_EMAILACCT_QUOTA"
      - name: MAXADDON
        in: query
        description: |-
          The account's maximum number of addon domains.

          * `0`, `null`, or `unlimited` — The account possesses unlimited addon domains.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int0-999999NullOrUnlimited"
      - name: MAXFTP
        in: query
        description: |-
          The account's maximum number of FTP accounts.

          * `null` or `unlimited` — The account possesses unlimited FTP accounts.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int0-999999NullOrUnlimited"
      - name: MAXLST
        in: query
        description: |-
          The account's maximum number of mailing lists.

          * `0`, `null`, or `unlimited` — The account possesses unlimited mailing lists.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int0-999999NullOrUnlimited"
      - name: MAXPARK
        in: query
        description: |-
          The account's maximum number of parked domains (aliases).

          * `null` or `unlimited` — The account possesses unlimited mailing lists.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int0-999999NullOrUnlimited"
      - name: MAXPASSENGERAPPS
        in: query
        description: |-
          The account's maximum number of Ruby applications.

          * `null` or `unlimited` — The account possesses unlimited Ruby applications.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int0-999999NullOrUnlimited"
      - name: MAXPOP
        in: query
        description: |-
          The maximum number of email accounts for the account.

          * `null` or `unlimited` — The account possesses unlimited email accounts.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int0-999999NullOrUnlimited"
      - name: MAXSQL
        in: query
        description: |-
          The maximum number of each available type of SQL database for the account.

          For example, if you set this value to `5` and the system administrator allows MySQL®
          and PostgreSQL® databases, users can create up to five MySQL databases and up to five
          PostgreSQL databases.

          * `null` or `unlimited` — The account possesses unlimited databases.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int0Max999999NullOrUnlimited"
      - name: MAXSUB
        in: query
        description: |-
          The maximum number of subdomains for the account.

          * `null` or `unlimited` — The account possesses unlimited subdomains.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int0-999999NullOrUnlimited"
      - name: modify_firewall
        in: query
        description: |-
          Whether to modify the firewall rules as part of the account modification.

          * `1` – Modify the firewall rules.
          * `0` – Do **not** modify the firewall rules.

          **NOTE:**

          If you do not set this parameter, the system will modify the firewall based on the *Do not make changes to the firewall during account modification.* setting in WHM's [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: MXCHECK-*
        in: query
        description: |-
          The priority of the account's primary mail exchanger.

          **Note:**

          The parameter name consists of `MXCHECK`, a hyphen, and the primary domain of the
          account.

          Example key and value:
          * `MXCHECK-example.com=10`

          This parameter defaults to the define system value.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 1
      - name: notify_account_authn_link
        in: query
        description: |-
          Whether to send a notification when someone links the account to an external
          authentication account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_account_authn_link_notification_disabled
        in: query
        description: |-
          Whether to send a notification when someone disables notifications for external
          authentication account links.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_autossl_expiry
        in: query
        description: |-
          Whether to send a notification when an AutoSSL certificate expires.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_autossl_expiry_coverage
        in: query
        description: |-
          Whether to send a notification AutoSSL cannot renew a certificate because domains
          that fail Domain Control Validation (DCV) exist on the current certificate.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_autossl_renewal
        in: query
        description: |-
          Whether to send a notification when AutoSSL renews a certificate.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_autossl_renewal_coverage
        in: query
        description: |-
          Whether to send a notification when AutoSSL renews a certificate but the new
          certificate lacks at least one domain that the previous certificate secured.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_contact_address_change
        in: query
        description: |-
          Whether to send a notification when someone changes the contact address for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_contact_address_change_notification_disabled
        in: query
        description: |-
          Whether to send a notification when disables the notification for contact address
           changes.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_disk_limit
        in: query
        description: |-
          Whether to send a notification when the account reaches its disk usage limit.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_password_change
        in: query
        description: |-
          Whether to send a notification when someone changes the account's password.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_password_change_notification_disabled
        in: query
        description: |-
          Whether to send a notification when someone disables notifications for password changes.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: notify_ssl_expiry
        in: query
        description: |-
          Whether to send a notification when an SSL certificate on the account expires.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: OUTGOING_EMAIL_SUSPENDED
        in: query
        description: |-
          Whether to suspend outgoing email on the account.

          * `1` — Suspend outgoing email.
          * `0` — Do **not** suspend outgoing email.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: OWNER
        in: query
        description: |-
          A new owner's username or the `root` user, to change the account's owner.

          This parameter defaults to the defined system value.

          **Note:**

          The authenticated user **must** have `root` privileges in order to assign the account
          to a reseller other than that account.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: reseller
      - name: PUSHBULLET_ACCESS_TOKEN
        in: query
        description: |-
          An access token for the account's [Pushbullet](https://www.pushbullet.com/)™
          notifications.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "1234567890"
      - name: QUOTA
        in: query
        description: |-
          The account's disk space quota, in multiples of 1,048,576 bytes.

          * `0`, `null`, or `unlimited` — The account's disk space is unlimited.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/IntPosNullOrUnlimited"
      - name: remove_missing_extensions
        in: query
        description: |-
          A space-separated list of removed, missing, or uninstalled extensions.

          This parameter defaults to the defined system value.

          **Warning:**

          This parameter removes all of the extensions that you list from
          the `_PACKAGE_EXTENSIONS` variable in the user file. It will **not** remove the
          extensions' variables. For more information, read our
          [Guide to Package Extensions](https://go.cpanel.net/GuidetoPackageExtensions).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: packageext1 packageext2
      - name: rename_database_objects
        in: query
        description: |-
          Whether to rename the cPanel account's database objects to use a new username's
          database prefix. This parameter **only** applies to servers that use database prefixing.

          * `1` — Rename the cPanel account's database objects.
          * `0` — Do **not** rename the cPanel account's database objects.

          **Warning:**

          * The account owner **must** update any applications to use the new database object names.
          * **Use this parameter carefully**. It can cause confusion for system administrators.

          MySQL does **not** allow you to rename a database. When cPanel & WHM "renames" a database,
          the system performs the following steps:

          1. The system creates a new database.
          1. The system moves data from the old database to the new database.
          1. The system recreates grants and stored code in the new database.
          1. The system deletes the old database and its grants.

          **Warning:**

          * If **any** of the first three steps fail, the system returns an error and attempts to
          restore the database's original state. If the restoration process fails, the API function's
          error response describes these additional failures.
          * In rare cases, the system creates the second database successfully, but fails to delete
          the old database or grants. The system treats the rename action as a success; however, the
          API function returns warnings that describe the failure to delete the old database or grants.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: reseller
        in: query
        description: |-
          Whether to grant reseller privileges to the account.

          * `1` — Grant reseller privileges.
          * `0` — Do **not** grant reseller privileges.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: RS
        in: query
        description: |-
          The account's cPanel interface theme.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      - name: shell
        in: query
        description: |-
          The absolute file path to the shell's location.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /bin/bash
      - name: spamassassin
        in: query
        description: |-
          Whether Apache SpamAssassin™ is enabled for the account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: STARTDATE
        in: query
        description: |-
          A timestamp for which to use as the account's creation date.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1549471343
      - name: STYLE
        in: query
        description: |-
          The account's cPanel interface style.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Glass
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_322"
  /matchpkgs:
    get:
      tags:
      - Packages
      - Hosting Plans
      summary: Return filtered hosting plans
      description: |-
        This function matches the server's hosting plans (packages) against
        your criteria.

        **Note:**

        If you do not include **any** input parameters, the function lists **all** of
        the server's packages.
      operationId: matchpkgs
      parameters:
      - name: _PACKAGE_EXTENSIONS
        in: query
        description: A space-separated list of one or more of the hosting plan's package
          extensions.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: '''ext1 ext2 ext3'''
      - name: BWLIMIT
        in: query
        description: |-
          The hosting plan's bandwidth limit.

          * `unlimited` — The hosting plan allows unlimited bandwidth.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/BWLIMIT"
      - name: CGI
        in: query
        description: |-
          Whether CGI is enabled for the hosting plan.

          * `1` — Enabled.
          * `0` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: CPMOD
        in: query
        description: The hosting plan's cPanel interface theme.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      - name: DIGESTAUTH
        in: query
        description: |-
          Whether the hosting plan enables Digest Authentication.

          * `y` — Enabled.
          * `n` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "n"
          enum:
          - "y"
          - "n"
      - name: FEATURELIST
        in: query
        description: "The hosting plan's [feature list](https://go.cpanel.net/whmdocsFeatureManager)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: myfeaturelist
      - name: HASSHELL
        in: query
        description: |-
          Whether shell access is enabled for the hosting plan.

          * `1` — Enabled
          * `0` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: IP
        in: query
        description: |-
          Whether the hosting plan grants accounts a dedicated IP address.

          * `y` — Dedicated IP address.
          * `n` — Shared IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "n"
          enum:
          - "y"
          - "n"
      - name: LANG
        in: query
        description: The hosting plan's locale.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166-1 (alpha-2)
          example: en
      - name: MAX_DEFER_FAIL_PERCENTAGE
        in: query
        description: |-
          The
          [percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam)
          that the hosting plan can send per hour before the system rate-limits
          outgoing mail.

          * `unlimited` — The hosting plan allows unlimited email messages.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAX_DEFER_FAIL_PERCENTAGE_1"
      - name: MAX_EMAIL_PER_HOUR
        in: query
        description: |-
          The [maximum number of emails](https://go.cpanel.net/howtopreventspam)
          that the hosting plan can send in one hour.

          * `unlimited` — The hosting plan allows unlimited emails per hour.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAX_EMAIL_PER_HOUR_1"
      - name: MAX_EMAILACCT_QUOTA
        in: query
        description: |-
          The hosting plan's maximum email account quota size, in megabytes (MB).

          * `unlimited` — The hosting plan allows an unlimited email account quota size.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAX_EMAILACCT_QUOTA_1"
      - name: MAX_TEAM_USERS
        in: query
        description: The hosting plan's maximum number of Team users.
        required: false
        style: form
        explode: true
        schema:
          maximum: 7
          minimum: 0
          type: integer
          nullable: true
          example: 7
      - name: MAXADDON
        in: query
        description: |-
          The hosting plan's maximum number of addon domains.

          * `unlimited` — The hosting plan allows unlimited addon domains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAXADDON"
      - name: MAXFTP
        in: query
        description: |-
          The hosting plan's maximum number of FTP accounts.

          * `unlimited` — The hosting plan allows for unlimited FTP accounts.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAXFTP"
      - name: MAXLST
        in: query
        description: |-
          The hosting plan's maximum number of mailing lists.

          * `unlimited` — The hosting plan allows an unlimited number of mailing lists.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAXLST"
      - name: MAXPARK
        in: query
        description: |-
          The hosting plan's maximum number of parked domains (aliases).

          * `unlimited` — The hosting plan allows unlimited parked domains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAXPARK"
      - name: MAXPOP
        in: query
        description: |-
          The hosing plan's maximum number of email accounts.

          * `unlimited` — The hosting plan's can create unlimited email accounts.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAXPOP"
      - name: MAXSQL
        in: query
        description: |-
          The hosting plan's maximum number of SQL databases.

          * `unlimited` — The hosting plan allows unlimited SQL databases.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAXSQL"
      - name: MAXSUB
        in: query
        description: |-
          The hosting plan's maximum number of subdomains.

          * `unlimited` — The hosting plan allows unlimited subdomains.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAXSUB"
      - name: QUOTA
        in: query
        description: |-
          The hosting plan's disk space limit.

          * `unlimited` — The hosting plan has unlimited disk space.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/QUOTA"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_323"
  /modify_account_enhancement:
    get:
      tags:
      - Account Enhancements
      summary: Update Account Enhancement
      description: |-
        This function modifies an account enhancement.

        **Important:**

        * When you call this function, you **must** include at least one of
        the `id` or `name` parameters. Lack of a second parameter will result
        in no change.
      operationId: modify_account_enhancement
      parameters:
      - name: name
        in: query
        description: The name of the account enhancement.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: enhancement 5000
      - name: id
        in: query
        description: |-
          The account enhancement's new identifier.

          **Note:**
          * You must use an [account enhancements](https://go.cpanel.net/account-enhancements) ID that a 3rd-party plugin defines.
          * To return a list of valid account enhancement IDs, run the WHM API 1 `list_account_enhancements` function.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: sample-enhancement-id
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_324"
  /modifyacct:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Update cPanel account
      description: |-
        This function modifies a cPanel account.

        **Warning:**

        We **strongly** recommend that you **do not** modify a single cPanel account's settings if that cPanel account uses a hosting plan (package). If the package values change, **the system will overwrite any of your custom values with the package's new values**.

        **Note:**

        On servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.
          * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208). CentOS 7 servers use TXT records instead of SPF records.
          * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).
      operationId: modifyacct
      parameters:
      - name: user
        in: query
        description: The cPanel account's current username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      - name: account_enhancements
        in: query
        description: |-
          A list of names for [Account Enhancements](https://go.cpanel.net/account-enhancements) to assign to the cPanel account.
           To view your server's Account Enhancements, run WHM API 1's `list_account_enhancements` function.

          **Warning:**

          You must provide a complete list of Account Enhancements for the cPanel account. The parameter will add or remove Account Enhancements
          based on the names that you provide.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Assign multiple enhancements
            value:
            - My Custom Enhancement
            - Sample Enhancement
          single:
            summary: Assign one enhancement
            value: My Custom Enhancement
      - name: BACKUP
        in: query
        description: |-
          Whether backups are enabled for the cPanel account.

          * `1` — Enable backups.
          * `0` — Disable backups.

          This parameter defaults to the defined system value.

          **Note:**

          You **must** have `root`-level privileges to set this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: BWLIMIT
        in: query
        description: |-
          The cPanel account's maximum bandwidth use, in bytes.

          * `0` or `unlimited` — The cPanel account can use unlimited bandwidth.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/BWLIMIT_1"
      - name: contactemail
        in: query
        description: |-
          The cPanel account's contact email address.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: username@example.com
      - name: DBOWNER
        in: query
        description: |-
          The owner of the cPanel account's MySQL databases.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example
      - name: DISK_BLOCK_LIMIT
        in: query
        description: |-
          The number of disk blocks for the cPanel account, in kilobytes (KB).

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 100000000
      - name: DNS
        in: query
        description: |-
          The cPanel account's main domain.

          This parameter is an alias of `domain`. If you set both
          the `DNS` and `domain` parameters, the `DNS` parameter will
          override the `domain` parameter.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: domain
        in: query
        description: |-
          The cPanel account's main domain.

          This parameter is an alias of `DNS`. If you set both
          the `DNS` and `domain` parameters, the `DNS` parameter will
          override the `domain` parameter.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: HASCGI
        in: query
        description: |-
          Whether CGI access is enabled for the cPanel account.

          * `1` — Enable CGI access.
          * `0` — Disable CGI access.

          This parameter defaults to the defined system value.

          **Note:**

          When a [server profile](https://go.cpanel.net/howtouseserverprofiles) disables the Web Server role, you **cannot** enable CGI access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: HASDKIM
        in: query
        description: |-
          Whether DKIM is enabled for the cPanel account.

          * `1` — Enable DKIM.
          * `0` — Disable DKIM.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: HASDMARC
        in: query
        description: |-
          Whether DMARC is enabled for the cPanel account.

          * `1` — Enable DMARC.
          * `0` — Disable DMARC.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: HASSHELL
        in: query
        description: |-
          Whether shell (SSH) access is enabled for the cPanel account.

          * `1` — Enable shell access.
          * `0` — Disable shell access.

          This parameter defaults to the defined system value.

          **Note:**

          We **strongly** recommend that you use the `shell` parameter to specify a shell for SSH access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: HASSPF
        in: query
        description: |-
          Whether SPF is enabled for the cPanel account.

          * `1` — Enable SPF.
          * `0` — Disable SPF.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: LANG
        in: query
        description: |-
          The cPanel account's display language.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: english-utf8
      - name: LOCALE
        in: query
        description: |-
          The cPanel account's default locale, in two-letter [ISO-3166 code](https://www.iso.org/iso-3166-country-codes.html) format.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ISO-3166-1 (alpha-2)
          example: en
      - name: mail_node_alias
        in: query
        description: |-
          The server that will manage the cPanel account's mail.

          * `.local` — Make the local server manage the cPanel account’s mail. If the account currently uses a [child node](https://go.cpanel.net/cPanelGlossary#child-node) for its mail, this will transfer the account’s mail to the local server.
          * The alias (friendly name) of a child node that should manage the cPanel account’s mail.

            When you distribute an account’s mail, the function adds a `LINK` entry to the
            [`/var/cpanel/accounting.log`](https://go.cpanel.net/ThecPanelLogFiles) file.

          This parameter defaults to the account’s current mail node, or `.local` if the account’s mail is on the local server.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/mail_node_alias"
      - name: MAILBOX_FORMAT
        in: query
        description: |-
          The storage format that the cPanel account's mailboxes use.

          * `maildir`
          * `mbox`

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: maildir
          enum:
          - maildir
          - mbox
      - name: MAX_DEFER_FAIL_PERCENTAGE
        in: query
        description: |-
          The percentage of failed or deferred email messages that the
          cPanel account can send per hour before outgoing mail is rate-limited.

          * `0` or `unlimited` — The cPanel account can send an unlimited number of failed or deferred messages.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/IntPosOrUnlimited"
      - name: MAX_EMAIL_PER_HOUR
        in: query
        description: |-
          The maximum number of emails that the cPanel account can send in one hour.

          * `0` or `unlimited` — The cPanel account can send an unlimited number of emails.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/IntPosOrUnlimited"
      - name: MAX_EMAILACCT_QUOTA
        in: query
        description: |-
          The maximum quota, in megabytes (MB), that the cPanel account can define
          when it creates an email account.

          * `unlimited` — The cPanel account can set unlimited quotas.

          This parameter defaults to the defined system value, or to `unlimited` if you do not define either the `plan` or `MAX_EMAILACCT_QUOTA` parameters.

          **Important:**

          * This value applies to each email account, **not** each cPanel account.
          * If you specify a `MAX_EMAILACCT_QUOTA` value, the function will overwrite the plan's defined value for that cPanel
          account.
          * We recommend that you allow the cPanel account's plan to determine this value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/MAX_EMAILACCT_QUOTA_2"
      - name: max_team_users
        in: query
        description: |-
          The maximum number of Team users for this account.
          This parameter should be a number between 0 and the server's default value, inclusively.
          This parameter can not be a number greater than the server's default value.
        required: false
        style: form
        explode: true
        schema:
          maximum: 7
          minimum: 0
          type: integer
          example: 7
      - name: MAXADDON
        in: query
        description: |-
          The cPanel account's maximum number of addon domains.

          * `0` or `unlimited` — The cPanel account can use unlimited addon domains.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int999999OrUnlimited"
      - name: MAXFTP
        in: query
        description: |-
          The cPanel account's maximum number of FTP accounts.

          * `unlimited` — The cPanel account can create unlimited FTP accounts.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int999999OrUnlimited"
      - name: MAXLST
        in: query
        description: |-
          The cPanel account's maximum number of mailing lists.

          * `0` or `unlimited` — The cPanel account can create unlimited mailing lists.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int999999OrUnlimited"
      - name: MAXPARK
        in: query
        description: |-
          The cPanel account's maximum number of parked domains (aliases).

          * `unlimited` — The cPanel account can use unlimited parked domains.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int999999OrUnlimited"
      - name: MAXPASSENGERAPPS
        in: query
        description: |-
          The cPanel account's maximum number of Ruby applications.

          * `unlimited` — The cPanel account can use unlimited Ruby applications.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int999999OrUnlimited"
      - name: MAXPOP
        in: query
        description: |-
          The maximum number of email accounts for the cPanel account.

          * `unlimited` — The cPanel account can create unlimited email accounts.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int999999OrUnlimited"
      - name: MAXSQL
        in: query
        description: |-
          The maximum number of each available type of SQL database for
          the cPanel account. For example, if you set this value to `5`
          and the system administrator allows MySQL® and PostgreSQL®
          databases, users can create up to five MySQL databases and up
          to five PostgreSQL databases.

          * `unlimited` — The cPanel account can create unlimited databases.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int999999OrUnlimited"
      - name: MAXSUB
        in: query
        description: |-
          The maximum number of subdomains for the cPanel account.

          * `unlimited` — The cPanel account can create unlimited subdomains.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Int999999OrUnlimited"
      - name: modify_firewall
        in: query
        description: |-
          Whether to modify the firewall rules as part of the cPanel account modification.

          * `1` — Modify the firewall rules.
          * `0` — Do **not** modify the firewall rules.

          **Note:**

          If you do not set this parameter, the system will modify the firewall based on the *Do not make changes to the firewall during cPanel account modification.* setting in WHM's [*Tweak Settings*](https://go.cpanel.net/whmdocsTweakSettings) interface (*WHM >> Home >> Server Configuration >> Tweak Settings*).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: MXCHECK-*
        in: query
        description: |-
          The priority of the cPanel account's primary mail exchanger.

          This parameter defaults to the defined system value.

          **Note:**

          The parameter name consists of `MXCHECK`, a hyphen, and the primary domain name of
          the cPanel account. For example, `MXCHECK-example.com=10`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: newuser
        in: query
        description: |-
          The cPanel account's new username.

          This parameter defaults to the defined system value.

          **Note:**

          * Usernames **cannot** begin with a number or the string `test`.
          * Usernames can contain 16 characters or fewer if database prefixes are enabled.
          * The first eight characters of usernames **must** be unique. MySQL requires this due to potential conflicts with cPanel account transfers. However, this limit requirement does **not** exist on servers that use MariaDB.
          * If you rename the cPanel account and database prefixing is enabled, you can also use the `rename_database_objects` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example1
      - name: notify_account_authn_link
        in: query
        description: |-
          Whether to send a notification when someone links the cPanel
          account to an external authentication account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_account_authn_link_notification_disabled
        in: query
        description: |-
          Whether to send a notification when someone disables notifications
          for external authentication account links.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_autossl_expiry
        in: query
        description: |-
          Whether to send a notification when an AutoSSL certificate expires.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_autossl_expiry_coverage
        in: query
        description: |-
          Whether to send a notification AutoSSL cannot renew a certificate
          because domains that fail Domain Control Validation (DCV) exist on the current
          certificate.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_autossl_renewal
        in: query
        description: |-
          Whether to send a notification when AutoSSL renews a certificate.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_autossl_renewal_coverage
        in: query
        description: |-
          Whether to send a notification when AutoSSL renews a certificate
          but the new certificate lacks at least one domain that the previous certificate
          secured.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_contact_address_change
        in: query
        description: |-
          Whether to send a notification when someone changes the contact
          address for the cPanel account.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_contact_address_change_notification_disabled
        in: query
        description: |-
          Whether to send a notification when disables the notification
          for contact address changes.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_disk_limit
        in: query
        description: |-
          Whether to send a notification when the cPanel account reaches its disk usage limit.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_password_change
        in: query
        description: |-
          Whether to send a notification when someone changes the cPanel account's
          password.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_password_change_notification_disabled
        in: query
        description: |-
          Whether to send a notification when someone disables notifications
          for password changes.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: notify_ssl_expiry
        in: query
        description: |-
          Whether to send a notification when an SSL certificate on the
          cPanel account expires.

          * `1` — Enabled.
          * `0` — Disabled.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: OUTGOING_EMAIL_SUSPENDED
        in: query
        description: |-
          Whether to suspend outgoing email on the cPanel account.

          * `1` — Suspend outgoing email.
          * `0` — Do **not** suspend outgoing email.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: owner
        in: query
        description: |-
          A new owner's username or the `root` user, to change the cPanel account's owner.

          This parameter defaults to the defined system value.

          **Note:**

          The authenticated user must have `root` privileges in order to assign the cPanel account to a reseller other than that cPanel account.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: reseller_name
      - name: PUSHBULLET_ACCESS_TOKEN
        in: query
        description: |-
          An access token for the cPanel account's Pushbullet™ notifications.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: QUOTA
        in: query
        description: |-
          The cPanel account's disk space quota.

          * An integer in multiples of 1,048,576 bytes.
          * `0` or `unlimited` — The cPanel account's disk space is unlimited.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/IntPosOrUnlimited"
      - name: remove_missing_extensions
        in: query
        description: |-
          A space-separated list of removed, missing, or uninstalled package extensions.

          **Warning:**

          This parameter removes all of the extensions that you list from the `_PACKAGE_EXTENSIONS` variable in the user file. It will **not** remove the extensions' variables. For more information, read our [Guide to Package Extensions](https://go.cpanel.net/GuidetoPackageExtensions).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: packageext1 packageext2
          default: ""
      - name: rename_database_objects
        in: query
        description: |-
          Whether to rename the cPanel account's database objects to use a new username's database prefix.

          * `1` — Rename the cPanel account's database objects.
          * `0` — Do **not** rename the cPanel account's database objects.

          **Warning:**

          * The cPanel account owner must update any applications to use the new database object names.
          * **Use this parameter carefully**, as it may cause confusion for system administrators.

          MySQL does not allow you to rename a database. When cPanel & WHM "renames" a database, the system performs the following steps:

          1. The system creates a new database.
          1. The system moves data from the old database to the new database.
          1. The system recreates grants and stored code in the new database.
          1. The system deletes the old database and its grants.

          **Warning:**

          * If any of the first three steps fail, the system returns an error and attempts to restore the database's original state. If the restoration process fails, the API function's error response describes these additional failures.
          * In rare cases, the system creates the second database successfully, but fails to delete the old database or grants. The system treats the rename action as a success; however, the API function returns warnings that describe the failure to delete the old database or grants.

          **Note:**

          This parameter **only** applies to servers that use database prefixing.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: reseller
        in: query
        description: |-
          Whether to grant reseller privileges to the cPanel account.

          * `1` — Grant reseller privileges.
          * `0` — Do **not** grant reseller privileges.

          **Note:**

          You **must** have `root`-level privileges to use this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: RS
        in: query
        description: |-
          The cPanel account's cPanel theme.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      - name: shell
        in: query
        description: |-
          The absolute filepath to the shell's location.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: path
          example: /bin/bash
      - name: spamassassin
        in: query
        description: |-
          Whether Apache SpamAssassin™ is enabled for the cPanel account.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: STARTDATE
        in: query
        description: |-
          A timestamp to use as the cPanel account's creation date.

          This parameter defaults to the defined system value.

          **Note:**

          This parameter does **not** provide user access controls. For example, you cannot modify a
          cPanel account's date to prevent a user from logging in to the server.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1549471343
      - name: STYLE
        in: query
        description: |-
          The cPanel account's cPanel interface theme style.

          This parameter defaults to the defined system value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Glass
      - name: update_existing_email_account_quotas
        in: query
        description: |-
          Whether to update the quota for existing email accounts to match the value of `MAX_EMAILACCT_QUOTA` setting.

          * `1` — Update quota for existing email accounts.
          * `0` — Do not update quota for existing email accounts.

          **Important:**

          To use this parameter, you **must** also use the `MAX_EMAILACCT_QUOTA` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_325"
  /modsec_add_rule:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Add staged ModSecurity rule
      description: |-
        This function adds a new rule to a ModSecurity™ configuration staging file. For example, if you choose to add a rule for the example.conf file, the function stages the rule in the example.conf. STAGE file.

        **Important:**

          This function does not actually deploy the rule. To deploy the rule, use the WHM API 1 Functions - modsec_deploy_all_rule_changes function.

        **Important:**

          When you disable the Web Server role, the system disables this function.
      operationId: modsec_add_rule
      parameters:
      - name: config
        in: query
        description: The ModSecurity configuration file.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec2.user.conf
      - name: rule
        in: query
        description: The rule's text.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "SecAction \"phase:1,id:168,nolog,pass,setvar:tx.REMOTE_ADDR=/%{REMOTE_ADDR}/\""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_326"
  /modsec_add_vendor:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Add ModSecurity vendor rules
      description: |-
        This function adds a new ModSecurity™ vendor rule set to the server.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system disables this function.
      operationId: modsec_add_vendor
      parameters:
      - name: url
        in: query
        description: The YAML metadata that describes the vendor and how to obtain
          its rules.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: https://example.com/update/meta_MyVendor.yaml
      - name: enabled
        in: query
        description: |-
          Whether to enable the vendor.

          * `1` — Enabled.
          * `0` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_327"
  /modsec_assemble_config_text:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Add ModSecurity configuration file text
      description: |-
        This function adds text to a ModSecurity™ configuration file.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_assemble_config_text
      parameters:
      - name: config
        in: query
        description: "The ModSecurity™ configuration filename and file path, relative\
          \ to the `/etc/apache2/conf/` directory."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec_vendor_configs/example.conf
      - name: deploy
        in: query
        description: |-
          Whether to deploy the new text to the system.

          * `1` — Deploy.
          * `0` — Do **not** deploy.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: final
        in: query
        description: |-
          Whether to add the text as the final upload to the configuration file.

          * `1` — Final upload.
          * `0` — **Not** the final upload.

          **Note:**

          * You **must** use this parameter if you wish to add the text as the final
          change to the configuration file.
          * You **must** use the `init` parameter with this parameter if you wish to
          only make one change to the configuration file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: init
        in: query
        description: |-
          Whether to add the text as the initial upload to the configuration file.

          * `1` — Initial upload.
          * `0` — **Not** the initial upload.

          **Note:**

          * You **must** use this parameter if you wish to add the text as the initial
          change to the configuration file.
          * You **must** use the `final` parameter with this parameter if you wish to
          only make one change to the configuration file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: text
        in: query
        description: The text to add to the configuration file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: newtext
          default: ""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_328"
  /modsec_batch_settings:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Run ModSecurity batch settings
      description: |-
        This function adds, updates, and removes global ModSecurity™ configuration directives.
        The function modifies these directives in the `/usr/local/apache/conf/modsec2.cpanel.conf`
        file.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles/#roles),
        the system **disables** this function.

        This function **only** supports the following ModSecurity™ configuration directives:

        <table>
          <tr><th>setting_id</th><th>Documentation</th></tr>
          <tr><td>0</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secauditengine">SecAuditEngine</a></td></tr>
          <tr><td>1</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secconnengine">SecConnEngine</a></td></tr>
          <tr><td>2</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secruleengine">SecRuleEngine</a></td></tr>
          <tr><td>3</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secdisablebackendcompression">SecDisableBackendCompression</a></td></tr>
          <tr><td>4</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secgeolookupdb">SecGeoLookupDb</a></td></tr>
          <tr><td>5</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secgsblookupdb">SecGsbLookupDb</a></td></tr>
          <tr><td>6</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secguardianlog">SecGuardianLog</a></td></tr>
          <tr><td>7</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#sechttpblkey">SecHttpBlKey</a></td></tr>
          <tr><td>8</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secpcrematchlimit">SecPcreMatchLimit</a></td></tr>
          <tr><td>9</td><td><a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#secpcrematchlimitrecursion">SecPcreMatchLimitRecursion</a></td></tr>
        </table>
      operationId: modsec_batch_settings
      parameters:
      - name: setting_id
        in: query
        description: |-
          The configuration setting's ID.

          **Note:**

          To configure multiple IDs, increment the parameter name. For example, `setting_id1`,
          `setting_id2`, and `setting_id3`.
        required: true
        style: form
        explode: true
        schema:
          maximum: 9
          minimum: 0
          type: integer
        examples:
          multiple:
            summary: "Set or update multiple configuration settings, in this case:\
              \ SecConnEngine,  SecRuleEngine, and SecDisableBackendCompression."
            value: setting_id1=1 setting_id2=2 setting_id3=3
          single:
            summary: "Set or update a single configuration setting, in this case for\
              \ SecConnEngine."
            value: 1
      - name: state
        in: query
        description: |-
          The configuration setting's current state.

          * `On`
          * `Off`

          Some settings accept additional values for this parameter. See the references above for more inforamation.

          **Note:**

          * To configure multiple settings, increment the parameter name. For example, `state1`,
          `state2`, and `state3`.
          * `state` is ignored if `remove` is set to `1` for the setting.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/state"
        examples:
          multiple:
            summary: Set the state of multiple configuration settings.
            value: state1=On state2=On state3=Off
          single:
            summary: Set the state of a single configuration setting.
            value: "On"
      - name: remove
        in: query
        description: |-
          Whether to add or remove the configuration setting in the
          `/usr/local/apache/conf/modsec2.cpanel.conf` file.

          * `1` — Remove the configuration setting.
          * `0` — Add or update the configuration setting.

          * To remove multiple settings, increment the parameter name. For example, `remove1`,
          `remove2`, and `remove3`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 1
          - 0
        examples:
          multiple:
            summary: Remove some settings when updating or setting multiple configuration
              settings. This example removes the second setting indicated in `setting_id2`
              and updates the other two settings.
            value: remove1=0 remove2=1 remove3=0
          single:
            summary: Remove a single configuration setting requested in the `setting_id`
            value: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_329"
  /modsec_check_rule:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Validate ModSecurity rule
      description: |-
        This function checks a ModSecurity™ rule's validity.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_check_rule
      parameters:
      - name: rule
        in: query
        description: The ModSecurity rule to check.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "SecAction \"pass,id:1234567\""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_330"
  /modsec_clone_rule:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Save ModSecurity rule copy
      description: |-
        This function copies a ModSecurity™ rule with a new rule ID.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_clone_rule
      parameters:
      - name: config
        in: query
        description: The rule's ModSecurity configuration file.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec2.user.conf
      - name: id
        in: query
        description: The existing rule's ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 123456789
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_331"
  /modsec_deploy_all_rule_changes:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Enable all staged ModSecurity rule changes
      description: |-
        This function deploys the staged changes for all of the ModSecurity™ configuration files
        into the live configuration files. After the function deploys the configuration files, it
        restarts Apache. If the new configuration is invalid, the system restores the original
        configuration and preserves the staged changes.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_deploy_all_rule_changes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_332"
  /modsec_deploy_rule_changes:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Enable staged ModSecurity rule changes
      description: |-
        This function deploys staged changes to the ModSecurity™ configuration file and restarts
        Apache.

        **Note:**

        If the new configuration is invalid, the system will restore the original configuration
        and maintain the staged changes.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_deploy_rule_changes
      parameters:
      - name: config
        in: query
        description: "The ModSecurity configuration file's path and name, relative\
          \ to the `/usr/local/apache/conf/` directory."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec_vendor_configs/example.conf
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_333"
  /modsec_deploy_settings_changes:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Enable staged ModSecurity configuration files
      description: |-
        This function deploys the staged changes to your `modsec2.cpanel.conf` file and
        attempts to restart Apache. If the new settings fail validation, the system restores
        the `/etc/apache2/conf.d/modsec/modsec2.cpanel.conf` file.

        **Note:**

        Call the WHM API 1 `modsec_set_setting` function to prepare your changes for
        the `modsec2.cpanel.conf` file.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_deploy_settings_changes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_334"
  /modsec_disable_rule:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Disable ModSecurity rule
      description: |-
        This function disables a ModSecurity™ rule.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_disable_rule
      parameters:
      - name: config
        in: query
        description: "The ModSecurity configuration file, relative to the `/etc/apache2/conf.d`\
          \ directory."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec_vendor_configs/example.conf
      - name: id
        in: query
        description: The ModSecurity rule's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "1234567890"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_335"
  /modsec_disable_vendor:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Disable ModSecurity vendor rules
      description: |-
        This function disables a ModSecurity™ vendor rule set.

        **Note:**

        This function will **not** disable vendor configuration files that you have individually enabled.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_disable_vendor
      parameters:
      - name: vendor_id
        in: query
        description: The vendor's unique short name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SomeVendor
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_336"
  /modsec_disable_vendor_configs:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Disable ModSecurity vendor configuration files
      description: |-
        This function disables a ModSecurity™ vendor's configuration files.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_disable_vendor_configs
      parameters:
      - name: vendor_id
        in: query
        description: The vendor's unique short name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SomeVendor
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_337"
  /modsec_disable_vendor_updates:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Disable ModSecurity vendor updates
      description: |-
        This function disables automatic updates for a ModSecurity™ vendor.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_disable_vendor_updates
      parameters:
      - name: vendor_id
        in: query
        description: The vendor's unique short name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_338"
  /modsec_discard_all_rule_changes:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Remove all staged ModSecurity rule changes
      description: |-
        This function discards the staged ModSecurity™ rule changes, if present, for all of
        the configuration files.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_discard_all_rule_changes
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_339"
  /modsec_discard_rule_changes:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Remove staged ModSecurity rule changes
      description: |-
        This function discards staged rule changes for a ModSecurity™ configuration file.
        Staged rule changes reside in a `.STAGE` file (for example, the staged changes for
        the `example.conf` file exist in the `example.conf.STAGE` file).
        This function deletes the `.STAGE` file that corresponds to the configuration file that
        you specify.

        **Note:**

        To stage rule changes, call WHM API 1's `modsec_add_rule` function.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_discard_rule_changes
      parameters:
      - name: config
        in: query
        description: The ModSecurity configuration file in the `/usr/local/cpanel/apache/conf/`
          directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec2.example.conf
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_340"
  /modsec_edit_rule:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Update staged ModSecurity rule
      description: |-
        This function stages edits to a ModSecurity™ rule. The system does **not** save changes
        directly to the configuration file. Instead, it stages the changes to the configuration
        file's `.STAGE` file (for example, for the `example.conf` file, the system stages changes
        in the `example.conf.STAGE` file).

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_edit_rule
      parameters:
      - name: config
        in: query
        description: "The ModSecurity configuration file, relative to the `/usr/local/apache/conf/`\
          \ directory."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec_vendor_configs/example.conf
      - name: id
        in: query
        description: The ModSecurity rule's ID.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1234567
      - name: rule
        in: query
        description: The new ModSecurity rule.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "SecAction \"pass,id:1234567\""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_341"
  /modsec_enable_vendor:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Enable ModSecurity vendor rules
      description: |-
        This function enables a ModSecurity™ vendor rule set.

        **Note:**

        This function will **not** enable vendor configuration files that you individually
        disable.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_enable_vendor
      parameters:
      - name: vendor_id
        in: query
        description: The vendor's unique short name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SomeVendor
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_342"
  /modsec_enable_vendor_configs:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Enable ModSecurity vendor configuration files
      description: |-
        This function enables a ModSecurity™ vendor's configuration files.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_enable_vendor_configs
      parameters:
      - name: vendor_id
        in: query
        description: The vendor's unique short name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SomeVendor
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_343"
  /modsec_enable_vendor_updates:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Enable ModSecurity vendor updates
      description: |-
        This function enables automatic updates for a ModSecurity™ vendor.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_enable_vendor_updates
      parameters:
      - name: vendor_id
        in: query
        description: The vendor's unique short name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_344"
  /modsec_get_config_text:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Return ModSecurity configuration file
      description: |-
        This function retrieves a ModSecurity™ configuration file's contents.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_get_config_text
      parameters:
      - name: config
        in: query
        description: The ModSecurity configuration file's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec2.example.conf
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_345"
  /modsec_get_configs:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Return all ModSecurity configuration files
      description: |-
        This function lists ModSecurity™ configuration files. The system stores the configuration
        files in the `/usr/local/apache/conf/modsec_vendor_configs` directory.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_get_configs
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_346"
  /modsec_get_configs_with_changes_pending:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Return staged ModSecurity configuration files
      description: |-
        This function lists the ModSecurity™ configuration files that have staged changes.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_get_configs_with_changes_pending
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_347"
  /modsec_get_log:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Return ModSecurity logs
      description: |-
        This function retrieves ModSecurity™ log entries from the modsec MySQL® database.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system disables this function.
      operationId: modsec_get_log
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_348"
  /modsec_get_rules:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Return ModSecurity rules
      description: |-
        This function retrieves the ModSecurity™ rules from one or more ModSecurity configuration files.

        **Important:**

        * When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system disables this function.
        * You **must** include either the `vendor_id` **or** the `config` parameters.
      operationId: modsec_get_rules
      parameters:
      - name: config
        in: query
        description: |-
          The file path to the configuration file, relative to the `/usr/local/apache/conf` directory.

          **Note:**

          You can use a comma-delimited list for multiple configuration files.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Call multiple configuration files.
            value: "modsec_vendor_configs/SomeVendor/config.conf,modsec_vendor_configs/AnotherVendor/config.conf"
          single:
            summary: Call a single configuration file.
            value: modsec_vendor_configs/SomeVendor/config.conf
      - name: exclude_bare_comments
        in: query
        description: |-
          Whether to exclude comments that are not associated with any directives.

          * `1` — Exclude.
          * `0` — Do **not** exclude.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 1
          - 0
      - name: exclude_other_directives
        in: query
        description: |-
          Whether the function only returns the `SecRule` and `SecAction` directives
          from the configuration file, and comments that are not associated with a
          rule.

          * `1` — Only return the `SecRule` and `SecAction` directives and comments **not**
          associated with a rule.
          * `0` — Return **all** directives and comments.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 1
          - 0
      - name: vendor_id
        in: query
        description: |-
          The vendor's unique short name.

          **Note:**

          You can use a comma-delimited list for multiple vendors.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Call multiple vendors.
            value: "vendor=SomeVendor,AnotherVendor"
          single:
            summary: Call a single vendor.
            value: SomeVendor
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_349"
  /modsec_get_settings:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Return ModSecurity configuration
      description: |-
        This function retrieves the server's ModSecurity™ configuration settings. The system
        stores these settings in the `/usr/local/apache/conf/modsec2.conf` file.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles#roles),
        the system **disables** this function.
      operationId: modsec_get_settings
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_350"
  /modsec_get_vendors:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Return ModSecurity vendors
      description: |-
        The function returns a list of configured ModSecurity™ vendors.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_get_vendors
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_351"
  /modsec_is_installed:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Return ModSecurity module status
      description: |-
        This function checks whether the ModSecurity™ module is installed.

        **Important:**

        When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: modsec_is_installed
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_352"
  /modsec_make_config_active:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Add ModSecurity configuration file include
      description: |-
        This function adds an include for a ModSecurity™ configuration file to
        the `modsec2.cpanel.conf` file. This makes the ModSecurity configuration file
        active.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_make_config_active
      parameters:
      - name: config
        in: query
        description: "The ModSecurity configuration file's path and filename, relative\
          \ to the `/usr/local/apache/conf/` diretory."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec_vendor_configs/example.conf
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_353"
  /modsec_make_config_inactive:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Remove ModSecurity configuration file include
      description: |-
        This function removes an include for a ModSecurity™ configuration file from
        the `modsec2.cpanel.conf` file. This makes the ModSecurity configuration file
        inactive.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_make_config_inactive
      parameters:
      - name: config
        in: query
        description: "The ModSecurity configuration file's path and filename, relative\
          \ to the `/etc/apache2/conf.d/` directory."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec_vendor_configs/example.conf
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_354"
  /modsec_preview_vendor:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Return ModSecurity vendor rule metadata
      description: |-
        This function returns the metadata for a ModSecurity™ vendor rule set.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_preview_vendor
      parameters:
      - name: url
        in: query
        description: |-
          The YAML metadata's URL, which describes the vendor and how to obtain its rules.

          **Note:**

          * The file uses YAML format.
          * The filename **must** use the `meta_` prefix.
          * The filename **must** match the `vendor_id` value for your vendor.
          * The filename **must** end with the `.yaml` extension.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: https://www.example.com/vendor1rules/meta_vendor1.yaml
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_355"
  /modsec_remove_rule:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Remove ModSecurity rule
      description: |-
        This function removes a rule from a ModSecurity™ configuration file.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system disables this function.
      operationId: modsec_remove_rule
      parameters:
      - name: config
        in: query
        description: "The ModSecurity configuration file's path and filename, relative\
          \ to the `/usr/local/apache/conf/` directory."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec_vendor_configs/example.conf
      - name: id
        in: query
        description: The rule's ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1234567890
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_356"
  /modsec_remove_setting:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Remove ModSecurity configuration
      description: |-
        This function removes a global ModSecurity™ configuration directive.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system disables this function.
      operationId: modsec_remove_setting
      parameters:
      - name: setting_id
        in: query
        description: "The setting's ID. For a list of available settings and their\
          \ IDs, call the `modsec_get_settings` function."
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 3
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_357"
  /modsec_remove_vendor:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Remove ModSecurity vendor
      description: |-
        This function removes a ModSecurity™ vendor. When you call this function, the system
        removes the vendor's includes, disablement directives, configuration files, and
        metadata file.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_remove_vendor
      parameters:
      - name: vendor_id
        in: query
        description: The ModSecurity vendor's unique short name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SomeVendor
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_358"
  /modsec_report_rule:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Export ModSecurity rule error report
      description: |-
        This function submits ModSecurity™ rule error reports to a remote receiver. The third
        party rule vendors use these error reports to identify problems with their rule sets.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: modsec_report_rule
      parameters:
      - name: email
        in: query
        description: The contact email address to send with the error report. This
          allows the rule's vendor to reply to the user directly.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: email
          example: john.doe@example.com
      - name: message
        in: query
        description: A short message that explains the reason for the report.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: |-
            Hi. We're having some trouble with this rule. It seems to be
            blocking all requests.
      - name: row_ids
        in: query
        description: |-
          The MySQL® row IDs from the `hits` table in the `modsec` database
          for the audit log event to report.

          **Note:**

          If you specify more than one row ID:

          * You **must** comma-separate the rule IDs.
          * The rule IDs **must** all correspond to the same ModSecurity rule.
        required: true
        style: form
        explode: false
        schema:
          type: integer
        examples:
          multiple:
            summary: Report multiple row IDs.
            value: "794828, 794829, 794820"
          single:
            summary: Report a single row ID.
            value: 794828
      - name: send
        in: query
        description: |-
          Whether the function sends the report to the rule's vendor.

          * `1` — Send the report.
          * `0` — Do **not** send the report.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: type
        in: query
        description: |-
          The report's type.

          **Note:**

          This value does **not** use a specified format. Treat the value as freeform text.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: false positive
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_359"
  /modsec_set_config_text:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Update ModSecurity configuration file
      description: |-
        This function sets the contents of a specified ModSecurity™ configuration file. The system
        stages any changes to the configuration file. To deploy the changes, call WHM API 1's
        `modsec_deploy_rule_changes` function.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system disables this function.
      operationId: modsec_set_config_text
      parameters:
      - name: config
        in: query
        description: The configuration file name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec2.example.conf
      - name: text
        in: query
        description: The configuration text.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "SecRule REQUEST_URI \"example\" \"deny,id:123456789\" SecAction\
            \ \"pass,auditlog,id\""
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_360"
  /modsec_set_setting:
    get:
      tags:
      - ModSecurity
      - Server Settings
      summary: Update ModSecurity configuration
      description: |-
        This function sets a global ModSecurity™ configuration directive.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: modsec_set_setting
      parameters:
      - name: setting_id
        in: query
        description: |-
          The setting's ID.

          **Note:**

           The WHM API 1 `modsec_get_settings` function returns this value.
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 8
      - name: state
        in: query
        description: |-
          The setting's new state. The function uses this as a valid argument
          for the directive.

          **Note:**

           For more information, read SpiderLabs' [ModSecurity documentation](https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "2000"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_361"
  /modsec_undisable_rule:
    get:
      tags:
      - ModSecurity
      - Rule Settings
      summary: Enable ModSecurity rule
      description: |-
        This function enables a ModSecurity™ rule.

        **Important:**

          When you disable the Web Server role, the system disables this function.
      operationId: modsec_undisable_rule
      parameters:
      - name: config
        in: query
        description: The ModSecurity configuration file.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: modsec_vendor_configs/example.conf
      - name: id
        in: query
        description: The ModSecurity rule's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "1234567890"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_362"
  /modsec_update_vendor:
    get:
      tags:
      - ModSecurity
      - Rule Vendor Settings
      summary: Update ModSecurity vendor ruleset
      description: |-
        This function updates a vendor with the current version of the rule set.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system disables this function.
      operationId: modsec_update_vendor
      parameters:
      - name: url
        in: query
        description: The vendor metadata file's URL.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://example.com/update/meta_MyVendor.yaml
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_363"
  /myprivs:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Return cPanel account system privileges
      description: "This function retrieves the current user's [Access Control List\
        \ (ACL)](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges)\_\
        privileges."
      operationId: myprivs
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_364"
  /nat_checkip:
    get:
      tags:
      - IP Addresses
      - Network Address Translation
      summary: Validate public IP address for NAT
      description: This function validates a public IP address on a NAT-configured
        server.
      operationId: nat_checkip
      parameters:
      - name: ip
        in: query
        description: The local IPv4 address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.4.10
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_365"
  /nat_set_public_ip:
    get:
      tags:
      - IP Addresses
      - Network Address Translation
      summary: Register NAT IP address to public IP address
      description: This function pairs a local IP address with a public IP address
        on NAT-configured servers.
      operationId: nat_set_public_ip
      parameters:
      - name: local_ip
        in: query
        description: The local IPv4 address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.4.10
      - name: public_ip
        in: query
        description: The public IPv4 address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 10.5.3.33
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_366"
  /nginxmanager_clear_cache:
    get:
      tags:
      - NGINX Manager
      summary: Delete the user's NGINX cache.
      description: This function clears a user's NGINX cache
      operationId: nginxmanager_clear_cache
      parameters:
      - name: user
        in: query
        description: |-
          A list of users whose cache you want to clear.

          **Note:**

          If you do not pass this parameter, this function clears the cache for all users.
        required: false
        style: form
        explode: true
        schema:
          type: array
          format: username
          example:
          - unclebob
          - auntsue
          items:
            type: string
            format: username
          default: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_367"
  /nginxmanager_get_cache_config_system:
    get:
      tags:
      - NGINX Manager
      summary: Return NGINX caching configurations.
      description: This function returns the system NGINX cache configuration.
      operationId: nginxmanager_get_cache_config_system
      parameters:
      - name: merge
        in: query
        description: |-
          Whether to combine the default and system NGINX configurations when returning configuration data.

          **Note:**

          * `1` - Return the configuration with default and system values combined.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_368"
  /nginxmanager_get_cache_config_users:
    get:
      tags:
      - NGINX Manager
      summary: Return user NGINX caching configurations.
      description: This function returns a user's NGINX cache configuration.
      operationId: nginxmanager_get_cache_config_users
      parameters:
      - name: merge
        in: query
        description: |-
          Combine default, system, and user NGINX configurations when returning configuration data.

          **Note:**

          * `1` - Return the configuration with default, system, and user values combined.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: user
        in: query
        description: |-
          A list of users whose cache configuration you want to retrieve.

          **Note:**

          If you do not pass this parameter, this function retrieves the cache configuration for all users.
        required: false
        style: form
        explode: true
        schema:
          type: array
          format: username
          example:
          - unclebob
          - auntsue
          items:
            type: string
            format: username
          default: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_369"
  /nginxmanager_rebuild_cache_config:
    get:
      tags:
      - NGINX Manager
      summary: Update NGINX configuration.
      description: This function rebuilds the NGINX user configuration.
      operationId: nginxmanager_rebuild_cache_config
      parameters:
      - name: user
        in: query
        description: |-
          A list of users whose configuration you want to rebuild.

          **Note:**

          If you do not pass this parameter, this function rebuilds the configuration for all users on the system.
        required: false
        style: form
        explode: true
        schema:
          type: array
          format: username
          example:
          - unclebob
          - auntsue
          items:
            type: string
            format: username
          default: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_370"
  /nginxmanager_reset_users_cache_config:
    get:
      tags:
      - NGINX Manager
      summary: Restore NGINX configuration to default values.
      description: This function resets a user to the NGINX system default.
      operationId: nginxmanager_reset_users_cache_config
      parameters:
      - name: user
        in: query
        description: |-
          A list of users to reset to the NGINX system default.

          **Note:**

          If you do not pass this parameter, this function resets the configuration to the default for all users on the system.
        required: false
        style: form
        explode: true
        schema:
          type: array
          format: username
          example:
          - unclebob
          - auntsue
          items:
            type: string
            format: username
          default: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_371"
  /nginxmanager_set_cache_config:
    get:
      tags:
      - NGINX Manager
      summary: Update NGINX caching status.
      description: This function enables or disables NGINX caching.
      operationId: nginxmanager_set_cache_config
      parameters:
      - name: enabled
        in: query
        description: |-
          Whether to enable to disable caching.

          **Note:**

          * `1` - Enables caching.
          * `0` - Disables caching.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: user
        in: query
        description: |-
          A list of users whose caching you want to enable or disable.

          **Note:**

          If you do not pass this parameter, this function sets the caching status for all users on the system.
        required: false
        style: form
        explode: true
        schema:
          type: array
          format: username
          example:
          - unclebob
          - auntsue
          items:
            type: string
            format: username
          default: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_372"
  /normalize_user_email_configuration:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Repair misconfigured email settings
      description: This function fixes a user's misconfigured email settings. This
        includes any misconfigured email file and directory ownership and permissions.
      operationId: normalize_user_email_configuration
      parameters:
      - name: username
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_373"
  /package_manager_fixcache:
    get:
      tags:
      - RPM
      - Package Manager Settings
      summary: Repair RPM management yum cache issues
      description: This function attempts to repair yum cache issues.
      operationId: package_manager_fixcache
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_374"
  /package_manager_get_build_log:
    get:
      tags:
      - RPM
      - Package Manager Settings
      summary: Return RPM management build log
      description: This function returns build log content.
      operationId: package_manager_get_build_log
      parameters:
      - name: build
        in: query
        description: The build process ID returned by the `package_manager_submit_actions`
          function.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1234
      - name: offset
        in: query
        description: The position in the build log from which you wish to display
          entries.
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: bytes
          example: 4567
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_375"
  /package_manager_get_package_info:
    get:
      tags:
      - RPM
      - List Package Information
      summary: Return available RPM packages information
      description: |-
        This function retrieves information about the system's available
        RPM packages.

        **Note:**

        You must use **either** the `ns` or the `package` parameters.
      operationId: package_manager_get_package_info
      parameters:
      - name: ns
        in: query
        description: |-
          An available RPM package namespace.

          **Note:**

          * `ea` and any from `ea4_get_additional_pkg_prefixes` API call are the **only** possible values.
          * If you use this parameter, you cannot use the `package` parameter.
          * To view more than one namespace, pass the parameter multiple times. For example,
          `ns=ea` and `ns=altea`.
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ea
        examples:
          multiple:
            summary: View multiple namespaces.
            value: ns=ea ns=altea
          single:
            summary: View one namespace.
            value: ea
      - name: package
        in: query
        description: |-
          An RPM package name on the system.

          **Note:**

          * If you use this parameter, you cannot use the `ns` parameter.
          * To view more than one package, pass the parameter multiple times. For example,
          `package=ea-php55` and `package=ea-apr-util`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: View multiple packages.
            value: package=ea-php55 package=ea-apr-util
          single:
            summary: View one package.
            value: ea-php55
      - name: disable-excludes
        in: query
        description: |-
          Whether the system will disable [yum](https://en.wikipedia.org/wiki/Yum_(software))'s
          exclude behavior.

          * `1` — Disable yum's exclude behavior.
          * `0` — Do **not** disable yum's exclude behavior.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_376"
  /package_manager_is_performing_actions:
    get:
      tags:
      - RPM
      - List Package Information
      summary: Return RPM package update status
      description: This function checks the activity of the process that you executed
        in the WHM API 1 `package_manager_submit_actions` function.
      operationId: package_manager_is_performing_actions
      parameters:
      - name: build
        in: query
        description: The process's build number returned by the WHM API 1 `package_manager_submit_actions`
          function.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 10053
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_377"
  /package_manager_list_packages:
    get:
      tags:
      - RPM
      - List Package Information
      summary: Return available RPM packages
      description: This function lists information about the system's available RPM
        packages.
      operationId: package_manager_list_packages
      parameters:
      - name: state
        in: query
        description: |-
          Return RPM packages that exist in a specified state.

          * `any` — All RPMs available on the system.
          * `installed` — The RPMs installed on the system.
          * `not_installed` — The available RPMs not yet installed on the system.
          * `updatable` — The RPMs with updates available.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: installed
          default: any
          enum:
          - any
          - installed
          - not_installed
          - updatable
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_378"
  /package_manager_resolve_actions:
    get:
      tags:
      - RPM
      - List Package Information
      summary: Return possible RPM package changes
      description: This function determines the actions that would result from the
        provisioning of a specified RPM package or packages.
      operationId: package_manager_resolve_actions
      parameters:
      - name: package
        in: query
        description: |-
          The name of an RPM package.

          **Note:**

          * To submit more than one package, pass the parameter multiple times. For example,
          `package=ea-php55` and `package=ea-apr-util`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Submit multiple RPM packages.
            value: package=ea-apache24-mod_headers package=ea-apache24-mod_cgid package=ea-apache24-mod_mpm_event
          single:
            summary: Submit a single RPM package.
            value: ea-apache24-mod_headers
      - name: ns
        in: query
        description: |-
          The RPM namespace that represents a set of packages.
          **Note:**
          * `ea` and any from `ea4_get_additional_pkg_prefixes` API call are the **only** possible values. * When more than one namespace is involved, pass the parameter multiple times. For example, `ns=ea` and `ns=altea`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ea
        examples:
          multiple:
            summary: Operate under multiple namespaces.
            value: ns=ea ns=altea
          single:
            summary: Operate under one namespace.
            value: ea
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_379"
  /package_manager_submit_actions:
    get:
      tags:
      - RPM
      - Install or Uninstall Package
      summary: "Start RPM package installation, update, or removal"
      description: |-
        This function installs, upgrades, or uninstalls RPM packages.

        **Note:**

        The system queues this function's actions to run as background tasks. The actions may
        require additional time to finish.
      operationId: package_manager_submit_actions
      parameters:
      - name: install
        in: query
        description: |-
          The RPM package that you want to install. If you do not use this parameter, the function
          does not install a package.

          **Note:**

          You can pass this parameter multiple times to install more than one RPM package
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Install multiple RPM packages.
            value: install=package1 install=package2
          single:
            summary: Install a single RPM package.
            value: package1
      - name: uninstall
        in: query
        description: |-
          The RPM package that you want to uninstall. If you do not use this parameter, the function
          does not uninstall a package.

          **Note:**

          You can pass this parameter multiple times to uninstall more than one RPM package.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Uninstall multiple RPM packages.
            value: uninstall=package3 uninstall=package4 uninstall=package5
          single:
            summary: Uninstall a single RPM package.
            value: package3
      - name: upgrade
        in: query
        description: |-
          The RPM package that you want to upgrade. If you do not use this parameter, the function
          does not upgrade a package.

          **Note:**

          You can pass this parameter multiple times to upgrade more than one RPM package.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Upgrade multiple RPM packages.
            value: upgrade=package6 upgrade=package7 upgrade=package8
          single:
            summary: Upgrade a single RPM package.
            value: package6
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_380"
  /package_manager_upgrade:
    get:
      tags:
      - RPM
      - Install or Uninstall Package
      summary: Start RPM package upgrade
      description: This function downloads and installs package updates on the server.
      operationId: package_manager_upgrade
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_381"
  /parse_dns_zone:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Return a parsed DNS zone
      description: |-
        This function parses a given DNS zone.

        **Important:**

        Most DNS zones contain only 7-bit ASCII. However, it is possible for
        DNS zones to contain any binary sequence. An application that decodes
        this function's base64 output **must** be able to handle cases
        where the decoded octets do not match any specific character
        encoding.
      operationId: parse_dns_zone
      parameters:
      - name: zone
        in: query
        description: The name of one of the user’s DNS zones.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_382"
  /participate_in_analytics:
    get:
      tags:
      - cPanel Analytics
      summary: Enable analytics data gathering
      description: |-
        This function enables or disables
        [Interface Analytics](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-analytics-the-data-we-use/#interface-analytics).
      operationId: participate_in_analytics
      parameters:
      - name: enabled
        in: query
        description: |-
          Whether to enable Interface Analytics.

          * `1` — Enable.
          * `0` — Disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_383"
  /passwd:
    get:
      tags:
      - Passwords
      summary: Update cPanel account password
      description: |-
        This function modifies a cPanel or reseller account's password.

        **Note**

        * When modifying the root password, this will only update the password for the root system user, but not for the root MySQL user.
        * To update the MySQL root user's password, use set_local_mysql_root_password.
      operationId: passwd
      parameters:
      - name: password
        in: query
        description: The account's new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: user
        in: query
        description: The account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: db_pass_update
        in: query
        description: |-
          Whether to also change the account's MySQL® password.

          * `1` — Also update the account's MySQL password to match the `password` value.
          * `0` — Do **not** update.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: enabledigest or digestauth
        in: query
        description: |-
          Whether to enable Digest Authentication for the account. If you
          do **not** specify a value, the account retains its current Digest
          Authentication setting.

          * `1` — Enable.
          * `0` — Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_384"
  /pause_transfer_session:
    get:
      tags:
      - Transfers
      - cPanel Account Transfer
      summary: Suspend active transfer session
      description: |-
        This function pauses an active transfer session.

        **Note:**

        For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.
      operationId: pause_transfer_session
      parameters:
      - name: transfer_session_id
        in: query
        description: The transfer session's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: exampleservercopya20140206192428NtyW
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_385"
  /personalization_get:
    post:
      tags:
      - Server Administration
      - Account Management
      summary: Return data from NVData file
      description: |-
        This function retrieves the data from an NVData file on disk. cPanel
        NVData is a per-account configuration storage mechanism that you can use to
        maintain persistent cPanel & WHM settings across multiple sessions. This includes
        custom settings for your own themes.

        **Note:**

        You can **only** call this function as a JSON request. For more information about
        additional output options, run the `whmapi1 --help` command.
      operationId: personalization_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/personalization_get_body"
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_386"
  /personalization_set:
    post:
      tags:
      - Server Administration
      - Account Management
      summary: Save data to NVData file
      description: |-
        This function is used to save personalization data for a WHM user to a
        datastore on disk.

        We call this system cPanel NVData. 

        cPanel NVData is a per-login configuration storage mechanism that you can use to
        maintain persistent user interface settings across multiple sessions.

        This includes custom settings for your own themes and plugins.

        This function is used to save personalzation data for WHM users **only**. If you want to save personalization data for cPanel users, use the
        UAPI function `personalization_set`.
      operationId: personalization_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/personalization_set_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_387"
  /php_fpm_config_get:
    post:
      tags:
      - PHP-FPM
      summary: Return PHP-FPM directives and pool options
      description: |-
        This function retrieves the PHP INI directives and pool options for a system's or domain's PHP-FPM configuration.

         **Important:**

           When you disable the [WebServer role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.

         **Warning:**

           We **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM on a server with less than the required RAM, your server may experience severe performance issues.
      operationId: php_fpm_config_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/php_fpm_config_get_body"
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_388"
  /php_fpm_config_set:
    post:
      tags:
      - PHP-FPM
      summary: Update PHP-FPM directives and pool options
      description: |-
        This function configures the PHP INI directives and pool options
        for a system's or domain's PHP-FPM configuration.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.

        **Warning:**

        We **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or
        at least 30 MB of RAM per domain.  If you enable PHP-FPM on a server with less than the required RAM, your server may
        experience severe performance issues.
      operationId: php_fpm_config_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/php_fpm_config_set_body"
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_389"
  /php_get_default_accounts_to_fpm:
    get:
      tags:
      - PHP-FPM
      summary: Return PHP-FPM status on new accounts
      description: |-
        This function determines whether the system enables PHP-FPM for new domains and accounts.

        **Important:**

        When you disable the
        [Web Server role](https://go.cpanel.net/serverroles),
        the system **disables** this function.

        **Warning:**

        We **strongly** recommend that you only activate Apache PHP-FPM if your server has at
        least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM
        on a server with less than the required RAM, your server may experience severe performance
        issues.
      operationId: php_get_default_accounts_to_fpm
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_390"
  /php_get_handlers:
    get:
      tags:
      - PHP
      summary: Return PHP handlers
      description: |-
        This function returns the PHP handlers on the system.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: php_get_handlers
      parameters:
      - name: version
        in: query
        description: |-
          An installed PHP version.

          * `ea-php54`
          * `ea-php55`
          * `ea-php56`
          * `ea-php70`
          * `ea-php71`
          * `ea-php72`
          * `inherit`
          * Any custom PHP package name.

          **Important:**

          We deprecated PHP 5.6 and PHP 7.0 and will remove them in a future version.
          For more information, read our
          [cPanel Deprecation Plan](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-deprecation-plan/)
          documentation.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ea-php72
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_391"
  /php_get_impacted_domains:
    get:
      tags:
      - PHP
      summary: Return PHP preconfigured domains
      description: |-
        This function lists domains that obtain their PHP version from a specified PHP configuration.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.
      operationId: php_get_impacted_domains
      parameters:
      - name: domain
        in: query
        description: |-
          A domain on the system.

          **Note:**

          * You **must** pass either the `system_default` or `domain` parameters, or both.
          * You can pass this parameter multiple times.
          * You **cannot** pass the name of a parked domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Pass multiple domains.
            value: domain=example.com domain=example2.com domain=example3.com
          single:
            summary: Pass a single domain.
            value: example.com
      - name: system_default
        in: query
        description: |-
          Whether to return domains that inherit the system's default PHP version.

          * `1` — Return domains that inherit the system's default PHP version.
          * `0` — Do **not** return domains that inherit the system's default PHP version.

          **Note:**

          * You **must** pass either the `system_default` or `domain` parameters, or both.
          * If you pass this parameter with a false value and do **not** also pass the `domain`
          parameter, the function returns an error.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_392"
  /php_get_installed_versions:
    get:
      tags:
      - PHP
      summary: Return installed PHP versions
      description: |-
        This function returns the installed PHP versions on a server.

        **Note:**

          This document **only** applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles) , the system **disables** this function.
      operationId: php_get_installed_versions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_393"
  /php_get_old_fpm_flag:
    get:
      tags:
      - PHP-FPM
      summary: Return PHP-FPM preconfigured status
      description: |-
        This function determines whether your system runs with a preconfigured PHP-FPM configuration.

        **Important:**

        When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: php_get_old_fpm_flag
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_394"
  /php_get_system_default_version:
    get:
      tags:
      - PHP
      summary: Return system default PHP version
      description: |-
        This function returns the system default PHP version.

        **Note:**

        This document **only** applies to systems that run EasyApache 4.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: php_get_system_default_version
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_395"
  /php_get_vhost_versions:
    get:
      tags:
      - PHP
      summary: Return PHP version of all virtual hosts
      description: |-
        This function returns the PHP version of every virtual host that a reseller controls.

        **Note:**

          This document **only** applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: php_get_vhost_versions
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_396"
  /php_get_vhosts_by_version:
    get:
      tags:
      - PHP
      summary: Return virtual hosts per PHP version
      description: |-
        This function lists the virtual hosts that use a specified version of PHP.

        **Note:**

        This document only applies to systems that run EasyApache 4.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: php_get_vhosts_by_version
      parameters:
      - name: version
        in: query
        description: |-
          The name of an installed PHP package.
          - `ea-php##`, where `##` represents the major and minor versions of PHP (for example, `ea-php72` represents PHP 7.2).
          - `inherit`
          - Any custom PHP package name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php56
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_397"
  /php_ini_get_content:
    get:
      tags:
      - PHP
      summary: Return PHP version's php.ini file
      description: |-
        This function returns the contents of a PHP version's `php.ini` file.

        **Note:**

          This document **only** applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: php_ini_get_content
      parameters:
      - name: version
        in: query
        description: "The name of an installed PHP version's package.\n   - `ea-php##`,\
          \ where `##` represents the major and minor versions of PHP (for example,\
          \ `ea-php74` represents PHP 7.4).\n   - `inherit`\n   - Any custom PHP package\
          \ name. "
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php74
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_398"
  /php_ini_get_directives:
    get:
      tags:
      - PHP
      summary: Return PHP version's directives
      description: |-
        This function returns the directives in the selected PHP version's php.ini file. WHM's [*MultiPHP INI Editor*](https://go.cpanel.net/WHMMultiPHPINI) interface (*Home >> Software >> MultiPHP INI Editor*) lists these directives in the *Basic Mode* section.

        **Important:**

          When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: php_ini_get_directives
      parameters:
      - name: version
        in: query
        description: |-
          The name of an installed version of PHP.

          * `ea-php72`
          * `ea-php73`
          * `ea-php74`
          * Any custom PHP package name
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php74
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_399"
  /php_ini_set_content:
    post:
      tags:
      - PHP
      summary: Update PHP version's php.ini file
      description: |-
        This function changes the contents of a PHP version's php.ini file.

        **Notes:**

         - This document **only** applies to systems that run EasyApache 4.
         - Due to the limited field length of HTTP GET method calls, we **strongly** recommend that you use the HTTP POST method.

        **Important:**
          When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: php_ini_set_content
      parameters:
      - name: content
        in: query
        description: The contents of the `php.ini` file that you wish to change.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: |
            [PHP]
            ; About php.ini
            ; php.ini is responsible for configuring many of the aspects of PHP's behavior.
            pcre.backtrack_limit=100000
      - name: version
        in: query
        description: |-
          The version of PHP for which you wish to change the `php.ini` file.

          * `ea-php72`
          * `ea-php73`
          * `ea-php74`
          * `Any custom PHP package name`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php74
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_400"
  /php_ini_set_directives:
    get:
      tags:
      - PHP
      summary: Update PHP version's directives
      description: |-
        This function sets the value of a PHP version's directives.

        **Note:**

          This document only applies to systems that run EasyApache 4.

        **Important:**

          When you disable the [Web Server](https://go.cpanel.net/serverroles) role , the system **disables** this function.
      operationId: php_ini_set_directives
      parameters:
      - name: directive
        in: query
        description: |-
          The name of a PHP directive and its value.

          **Note:**

           To change the directive's value for multiple PHP directives, duplicate or increment the parameter name. For example, to change three directives, use the directive parameter multiple times or use the `directive-1`, `directive-2` , and `directive-3` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Set the values for multiple directives.
            value: directive-1=allow_url_fopen:0&directive-2=max_input_vars=1000
          single:
            summary: Set the value for a single directive.
            value: allow_url_fopen:0
      - name: version
        in: query
        description: |-
          PHP version on the system.

          **Note**

          * `ea-php56`
          * `ea-php70`
          * `ea-php71`
          * `ea-php72`
          * Any custom PHP package name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php72
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_401"
  /php_set_default_accounts_to_fpm:
    get:
      tags:
      - PHP-FPM
      summary: Enable PHP-FPM on new cPanel accounts and domains
      description: |-
        This function determines whether to enable PHP-FPM on new accounts and domains on a server.

        **Important:**

        When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.

        **Warning:**

        We **strongly** recommend that you only activate Apache PHP-FPM if your server has at least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM on a server with less than the required RAM, your server may experience severe performance issues.
      operationId: php_set_default_accounts_to_fpm
      parameters:
      - name: default_accounts_to_fpm
        in: query
        description: |-
          Whether to enable PHP-FPM on all new accounts and domains on
          a server.
          * `1` — Enable PHP-FPM.
          * `0` — Disable PHP-FPM.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_402"
  /php_set_handler:
    get:
      tags:
      - PHP
      summary: Update PHP version's handler
      description: |-
        This function sets a PHP version's handler.

        **Important:**

        When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: php_set_handler
      parameters:
      - name: handler
        in: query
        description: |-
          An installed PHP handler.
          * `cgi`
          * `suphp`
          * `dso`
          * `none`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: suphp
          enum:
          - cgi
          - suphp
          - dso
          - none
      - name: version
        in: query
        description: |-
          An installed PHP version.
          * `ea-php54`
          * `ea-php55`
          * `ea-php56`
          * `ea-php70`
          * `ea-php71`
          * `ea-php72`
          * `inherit`
          * Any custom PHP package name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php70
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_403"
  /php_set_old_fpm_flag:
    get:
      tags:
      - PHP-FPM
      summary: Enable PHP-FPM preconfigured status
      description: |-
        This function creates the `/etc/cpanel/ea4/old_fpm_flag` touch file.

        **Note:**

        If this touch file exists, the system will **not** display a message that indicates whether your system runs on an outdated PHP-FPM configuration. If you wish to see the message again, delete this touch file.

        **Important:**

        When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: php_set_old_fpm_flag
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_404"
  /php_set_session_save_path:
    get:
      tags:
      - PHP
      summary: Update PHP default save path
      description: |-
        This function sets the location of PHP's default session save path.

        **Important:**

        When you disable the [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: php_set_session_save_path
      parameters:
      - name: overwrite
        in: query
        description: |-
          Whether to overwrite the existing session save path in the `php.ini`
          file.
          * `1` — Overwrite the existing value in the `php.ini` file.
          * `0` — Do **not** overwrite the existing value in the `php.ini` file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: path
        in: query
        description: |-
          The directory in which to save session information.

          **Warning:**

          For security reasons, do **not** set this value to `/tmp` or another insecure location.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /var/cpanel/php/sessions
          default: /var/cpanel/php/sessions
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_405"
  /php_set_system_default_version:
    get:
      tags:
      - PHP
      summary: Update default PHP version
      description: |-
        The version of PHP that you wish to set as the system's default.

        * `ea-php81`
        * `inherit`
        * Any custom PHP package name.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: php_set_system_default_version
      parameters:
      - name: version
        in: query
        description: The version of PHP that you wish to set as the system's default.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php81
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_406"
  /php_set_vhost_versions:
    get:
      tags:
      - PHP
      summary: Update domain's PHP values
      description: |-
        This function allows WHM's
        [*MultiPHP Manager*](https://docs.cpanel.net/whm/software/multiphp-manager-for-whm/)
        interface (*WHM >> Home >> Software >> MultiPHP Manager*) to change the values of a domain.

        **Important:**

        When you disable the
        [Web Server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles),
        the system **disables** this function.

        **Warning:**

        We **strongly** recommend that you only activate Apache PHP-FPM if your server has at
        least 2 GB of RAM available, or at least 30 MB of RAM per domain. If you enable PHP-FPM
        on a server with **less** than the required RAM, your server may experience severe
        performance issues.
      operationId: php_set_vhost_versions
      parameters:
      - name: version
        in: query
        description: |-
          The virtual host's (vhost) PHP version.

          **Note:**

          This parameter also accepts any custom PHP package names.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ea-php70
          enum:
          - ea-php54
          - ea-php55
          - ea-php56
          - ea-php70
          - ea-php71
          - ea-php72
          - inherit
      - name: vhost
        in: query
        description: |-
          The virtual host's name.

          **Note:**

          To set multiple vhosts, increment the parameter name. For example, `vhost-1`, `vhost-2`,
          and `vhost-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Set multiple vhosts.
            value: vhost-1=otherchars.rm3.tld vhost-2=morechars.rm3.tld vhost-3=lotschars.rm3.tld
          single:
            summary: Set a single vhost.
            value: otherchars.rm3.tld
      - name: php_fpm
        in: query
        description: |-
          Whether PHP-FPM is enabled.

          * `1` — Enabled.
          * `0` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      - name: php_fpm_pool_parms
        in: query
        description: A JSON-encoded string containing a hash of values.
        required: false
        content:
          application/json:
            schema:
              required:
              - pm_max_children
              - pm_max_requests
              - pm_process_idle_timeout
              type: object
              properties:
                pm_max_children:
                  type: integer
                  description: The maximum number of child pages per pool.
                  example: 5
                  default: 5
                pm_max_requests:
                  type: integer
                  description: The maximum number of requests per pool.
                  example: 20
                  default: 20
                pm_process_idle_timeout:
                  type: integer
                  description: A specified time of idleness before the system kills
                    an FPM child page.
                  example: 10
                  default: 10
              format: json
              example:
                pm_max_children: 5
                pm_max_requests: 20
                pm_process_idle_timeout: 10
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_407"
  /purchase_a_license:
    get:
      tags:
      - Server Administration
      - License Management
      summary: Return cPanel Store or Market checkout URL
      description: This function returns the checkout URL to use for a cPanel Store
        or cPanel Market provider purchase.
      operationId: purchase_a_license
      parameters:
      - name: login_token
        in: query
        description: The login token to access the cPanel Store.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 1a676e6f-99fc-11e6-9ab6-e60a769b73bc
      - name: provider
        in: query
        description: The cPanel Store or cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: url_after_checkout
        in: query
        description: The location to which the cPanel Store or cPanel Market provider
          directs the user after the checkout process finishes.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://hostname.example.com
      - name: upgrade
        in: query
        description: |-
          Whether the cPanel Store or cPanel Market provider should treat this request as an upgrade.
          * `1` — An upgrade.
          * `0` — **Not** an upgrade.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_408"
  /quota_enabled:
    get:
      tags:
      - Bandwidth and Disk Quotas
      summary: Validate cPanel account quotas
      description: This function checks if quotas are enabled on at least one of a
        user's /home directory mounts.
      operationId: quota_enabled
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_409"
  /read_cpgreylist_deferred_entries:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Return Greylisting deferred incoming email triplets
      description: |-
        This function lists Greylisting's deferred triplets.
        Greylisting identifies incoming email by triplets.

        A triplet is a collection of three pieces of data:
        * the IP address
        * the sender's address
        * the recipient's address
      operationId: cPGreyList-read_cpgreylist_deferred_entries
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_410"
  /read_cpgreylist_trusted_hosts:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Return Greylisting trusted hosts
      description: This function retrieves the entries on the Greylisting Trusted
        Hosts list.
      operationId: read_cpgreylist_trusted_hosts
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_411"
  /read_cphulk_records:
    get:
      tags:
      - cPHulk
      - Management
      summary: Return login security list records
      description: This function displays a cPHulk list's records.
      operationId: read_cphulk_records
      parameters:
      - name: list_name
        in: query
        description: |-
          The cPHulk list's name.

          * `black`
          * `white`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: white
          enum:
          - black
          - white
        example: white
      - name: skip_enabled_check
        in: query
        description: |-
          Whether to skip checking if cPHulk runs on the server.

          **Note:**

           If cPHulk is disabled, the function returns the following message:
          `cPHulk is disabled on the server.`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_412"
  /reboot:
    get:
      tags:
      - Server Administration
      - System Information
      summary: Restart server
      description: This function reboots the server.
      operationId: reboot
      parameters:
      - name: force
        in: query
        description: |-
          Whether to use a forceful reboot.
          * `1` - Use a forceful reboot.
          * `0` - Do **not** use a forceful reboot.

          **Warning:**

           A forceful reboot may result in data loss if active processes exist on the server.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_413"
  /rebuild_mail_sni_config:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Rebuild mail SNI configuration files
      description: This function rebuilds the mail SNI configuration files.
      operationId: rebuild_mail_sni_config
      parameters:
      - name: reload_dovecot
        in: query
        description: |-
          Whether to reload the Dovecot service after the system rebuilds the configuration files.
          * `1` - Reload Dovecot.
          * `0` - Do **not** reload Dovecot.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_414"
  /rebuilduserssldb:
    get:
      tags:
      - SSL
      - SSL Server Settings
      summary: Update SSL certificate users database
      description: This function rebuilds the database of SSL certificate users.
      operationId: rebuilduserssldb
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_415"
  /release_outgoing_email:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Release cPanel account queued outgoing emails
      description: |-
        This function releases outgoing email in the email queue for a single cPanel account user.

        **Note:**

        If mail for a cPanel user's account is suspended, the system will reject their email before the mail server puts it in queue.
      operationId: release_outgoing_email
      parameters:
      - name: user
        in: query
        description: The cPanel account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_416"
  /remote_basic_credential_check:
    get:
      tags:
      - Transfers
      - Transfer Configuration
      summary: Validate remote server's SSH credentials
      description: |-
        This function checks the SSH credentials on the remote server.

        ### Authentication
        There are several methods that you can use to authenticate a transfer session with the remote server.

        #### PermitRootLogin=Yes
        The simplest authentication method is to use the `root` user and password. To do this, the `sshd_config` file on the remote server **must** contain the following value: `PermitRootLogin=Yes`

        The following table displays the correct parameters and values for this authentication method:

        | Parameter | Value |
        |-|-|
        | `user` | `root` |
        | `password` | `root`'s password. |

        You can also use the SSH Public Key to authenticate the `root` user. If the SSH Public Key is encrypted, include the SSH Key's passphrase.

        The following table displays the correct parameters and values for this authentication method:

        | Parameter | Value if the SSH Key is not encrypted | Value if the SSH Key is encrypted |
        |-|-|-|
        | `user` | `root` | `root` |
        | `sshkey_name` | `root`'s SSH key name. | `root`'s SSH key name. |
        | `sshkey_passphrase` | (none) | `root`'s SSH key passphrase. |

        #### PermitRootLogin=No
        Many server administrators do not permit direct root logins on their servers.
        * If the remote server contains `PermitRootLogin=No` in the `sshd_config `file, then you **must** use another user and their password on the remote server, and then escalate to `root`.
        * If the system administrator used WHM's [*Manage Wheel Group Users*](https://go.cpanel.net/whmdocsManageWheelGroupUsers) interface (*WHM >> Home >> Security Center >> Manage Wheel Group Users*) to grant the user `su` access, then you will need to specify `su` and the `root` password.
        * If the user has `sudo` access, you do **not** need the `root` password.

        The following table displays the correct parameters and values for this authentication method:

        | Parameter | Value if the user has sudo access | Value if the user has su access |
        |-|-|-|
        | `user` | The user's username. | The user's username. |
        | `password` | The user's password. | The user's password. |
        | `root_escalation_method` | `sudo` | `su` |
        | `root_password` | (none) | `root`'s password. |

        You can also use an SSH Public Key instead of a password to authenticate that user. If the SSH Public Key is encrypted, include the SSH Key's passphrase.

        The following table displays the correct parameters and values for this authentication method:

        | Parameter | sudo | su |
        |-|-|-|
        | `user` | The user's username. | The user's username. |
        | `sshkey_name` | The user's SSH key name. | The user's SSH key name. |
        | `sshkey_passphrase` (If encrypted) | The user's SSH key passphrase. | The user's SSH key passphrase. |
        | `root_escalation_method` | `sudo` | `su` |
        | `root_password` | (none) | `root`'s password. |
      operationId: remote_basic_credential_check
      parameters:
      - name: host
        in: query
        description: The remote server's hostname or IP address.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_1"
        example: 192.168.0.0
      - name: user
        in: query
        description: The username to use to connect to the remote server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: root
      - name: password
        in: query
        description: The username's password.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: port
        in: query
        description: The remote server's SSH port number.
        required: false
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 22
          default: 22
      - name: root_escalation_method
        in: query
        description: |-
          The escalation method to use to connect to the remote server.
          * `su`
          * `sudo`

          **Note:**

           Use this parameter if `PermitRootLogin=No` in the remote server's `sshd_config` file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: sudo
          enum:
          - su
          - sudo
      - name: root_password
        in: query
        description: |-
          `root`'s password on the remote server.

          **Note:**

           Use this parameter if `PermitRootLogin=No` in the remote server's `sshd_config` file and the `root_escalation_method` value is set to `su`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: sshkey_name
        in: query
        description: |-
          The SSH key's name.

          **Note:**

           SSH keys are available in WHM's *Manage root's SSH Keys* interface (*WHM >> Home >> Security Center >> Manage root’s SSH Keys*).
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: FrancisScott
      - name: sshkey_passphrase
        in: query
        description: |-
          The SSH key's passphrase.

          **Note:**

           Use this parameter if the SSH Key is encrypted.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: kkwtoowoygidsa
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_417"
  /remote_mysql_create_profile:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Create remote MySQL profile
      description: This function creates a profile to access a remote MySQL® server.
      operationId: remote_mysql_create_profile
      parameters:
      - name: mysql_host
        in: query
        description: The MySQL server's IP address or hostname.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/mysql_host"
      - name: mysql_pass
        in: query
        description: The MySQL server's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: mysql_port
        in: query
        description: The MySQL server's port.
        required: true
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 3306
      - name: mysql_user
        in: query
        description: The MySQL server's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: name
        in: query
        description: The new profile's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MyProfile
      - name: cpcloud
        in: query
        description: |-
          Whether the remote database profile is a cPanel Cloud deployment.

          * `1` — Is cPanel Cloud.
          * `0` — **Not** cPanel Cloud.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
      - name: setup_via
        in: query
        description: |-
          A description of the profile data.

          **Note:**

          This parameter defaults to `User provided
          MySQL credentials`.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
          example: Main terminal
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_418"
  /remote_mysql_create_profile_via_ssh:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Create remote MySQL profile via SSH
      description: This function uses SSH to create a profile to access a remote MySQL®
        server.
      operationId: remote_mysql_create_profile_via_ssh
      parameters:
      - name: host
        in: query
        description: The MySQL server's IP address or hostname.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/host_2"
      - name: name
        in: query
        description: The new profile's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MyProfileSSH
      - name: port
        in: query
        description: The SSH server's port.
        required: true
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 22
      - name: user
        in: query
        description: The SSH username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SSHuser
      - name: cpcloud
        in: query
        description: |-
          Whether the remote database profile is a cPanel Cloud deployment.

          * `1` — Is cPanel Cloud.
          * `0` — **Not** cPanel Cloud.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
      - name: password
        in: query
        description: |-
          The SSH username's password.

          **Warning:**

           You **must** specify either the `password` or the `sshkey_name` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: root_escalation_method
        in: query
        description: |-
          The escalation method to use to authenticate the account.

          **Warning:**

           This parameter is **required** if the user parameter's value is not `root`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: su
          enum:
          - sudo
          - su
      - name: root_password
        in: query
        description: |-
          The MySQL server's root user's password.

          **Warning:**

           This parameter is **required** if the `root_escalation_method` parameter's value is `su`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: sshkey_name
        in: query
        description: |-
          The name of the SSH key.

          **Warning:**

           You **must** specify either the `password` or the `sshkey_name` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: VinzClortho
      - name: sshkey_passphrase
        in: query
        description: |-
          The SSH key's passphrase.

          **Warning:**

           This parameter is **required** if the `sshkey_name` value is password-protected.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Gozer
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_419"
  /remote_mysql_delete_profile:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Delete remote MySQL profile
      description: This function deletes a specified remote MySQL® profile.
      operationId: remote_mysql_delete_profile
      parameters:
      - name: name
        in: query
        description: The profile's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MyProfile
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_420"
  /remote_mysql_initiate_profile_activation:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Start remote MySQL profile activation
      description: This function initiates the activation process for a remote MySQL®
        profile.
      operationId: remote_mysql_initiate_profile_activation
      parameters:
      - name: name
        in: query
        description: The profile's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MyProfile
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_421"
  /remote_mysql_monitor_profile_activation:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Return remote MySQL profile activation
      description: "This function reports the current status of the remote MySQL®\
        \ profile activation process. The activation process contains several steps\
        \ that take some time to complete, so so you may need to call this function\
        \ multiple times multiple times to monitor the progress."
      operationId: remote_mysql_monitor_profile_activation
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_422"
  /remote_mysql_read_profile:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Return remote MySQL profile
      description: This function displays the details of a specified remote MySQL®
        profile.
      operationId: remote_mysql_read_profile
      parameters:
      - name: name
        in: query
        description: The MySQL profile's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MyProfile
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_423"
  /remote_mysql_read_profiles:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Return remote MySQL profiles
      description: This function displays the details of all remote MySQL® profiles
        available in WHM.
      operationId: remote_mysql_read_profiles
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_424"
  /remote_mysql_update_profile:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Update remote MySQL profile
      description: |-
        This function updates one or more parameters for a remote MySQL®
        profile.

        **Note:**
        This function requires the `name` parameter **and** one of more of the `mysql_host` , `mysql_user`, `mysql_pass`, `mysql_port`, or `setup_via` parameters.
      operationId: remote_mysql_update_profile
      parameters:
      - name: name
        in: query
        description: The profile's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MyProfile
      - name: mysql_host
        in: query
        description: The MySQL server's IP address or hostname.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/mysql_host_1"
      - name: mysql_pass
        in: query
        description: The MySQL server's password.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: mysql_port
        in: query
        description: The MySQL server's port.
        required: false
        style: form
        explode: true
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          example: 3306
      - name: mysql_user
        in: query
        description: The MySQL server's username.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: setup_via
        in: query
        description: A description of the profile data.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
          example: Main terminal
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_425"
  /remote_mysql_validate_profile:
    get:
      tags:
      - Databases
      - Remote MySQL Databases
      summary: Validate remote MySQL profile connection
      description: This function validates a specified remote MySQL® profile's connection
        details.
      operationId: remote_mysql_validate_profile
      parameters:
      - name: name
        in: query
        description: The profile's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MyProfile
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_426"
  /remove_autossl_user_excluded_domains:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Remove AutoSSL for domain
      description: This function enables AutoSSL for an account's specified domains.
      operationId: remove_autossl_user_excluded_domains
      parameters:
      - name: domain
        in: query
        description: |-
          Enable AutoSSL for this domain.

          **Note:**

          For multiple domains, increment the parameter name. For example, domain-1, domain-2, and domain-3.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: cpcalendars.example.com
        examples:
          multiple:
            summary: Enable AutoSSL for multiple domains.
            value: domain-1=cpcalendars.example.com&domain-2=cpcontacts.example.com
          single:
            summary: Enable AutoSSL for a single domain.
            value: cpcalendars.example.com
      - name: username
        in: query
        description: The cPanel user's account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_427"
  /remove_connected_application:
    post:
      tags:
      - Server Administration
      - Connected Applications
      summary: Remove application connection information
      description: |-
        Remove the connected application from the server. This only removes the connection
        information from the configuration file. It does not clean up any allocated
        resources, such as API tokens and public/private keys. Any tokens or keys need to be
        removed from the system separately.
      operationId: remove_connected_application
      parameters:
      - name: name
        in: query
        description: The name of the connected application.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: application-1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_428"
  /remove_dmarc:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Remove domains' DMARC records.
      description: This function removes the DMARC DNS record from a domain.
      operationId: EmailAuth::remove_dmarc
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to remove the DMARC record.

          **Note:**

          If you do not include this argument, the system will remove **all** DMARC records from **all** domains.

          To remove multiple domain DMARC records, duplicate the parameter name. For example, use the `domain=example-1.com`, `domain=example-2.com`, and `domain=example-3.com` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: To remove multiple domain DMARC records
            value: domain=example-1.com domain=example-2.com domain=example-3.com
          single:
            summary: To remove a single domain DMARC record
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_429"
  /remove_in_progress_exim_config_edit:
    get:
      tags:
      - Server Administration
      - Mail Server Settings
      summary: Remove Exim configuration files after failed update
      description: |-
        This function removes in-progress Exim configuration files after
        a failed update to Exim. When cPanel & WHM attempts to update an Exim configuration,
        the system creates dry run files to replace of the ordinary configuration
        files.

        **Note:**

        * If the update fails, the system leaves these dry run files in place.
        * When the user accesses the *Advanced Editor* section of WHM's [*Exim Configuration Manager*](https://docs.cpanel.net/whm/service-configuration/exim-configuration-manager/)
        interface (_Home >> Service Configuration >> Exim Configuration Manager_),
        they access these dry run files instead of the actual configuration files.
      operationId: remove_in_progress_exim_config_edit
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_430"
  /remove_integration_group:
    get:
      tags:
      - Integration
      - Links
      summary: Remove integration link group
      description: This removes a group of integration links from the cPanel interface.
      operationId: remove_integration_group
      parameters:
      - name: group_id
        in: query
        description: The group's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WHMCS
      - name: user
        in: query
        description: The cPanel account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_431"
  /remove_integration_link:
    get:
      tags:
      - Integration
      - Links
      summary: Remove integration link
      description: This function removes an integration link from the cPanel interface.
      operationId: remove_integration_link
      parameters:
      - name: app
        in: query
        description: The name of the integration link to remove.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WHMCS_billing
      - name: user
        in: query
        description: The cPanel account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_432"
  /remove_override_features_for_user:
    get:
      tags:
      - Packages
      - Feature Access
      summary: Remove cPanel account feature list overrides
      description: This function removes feature overrides from a cPanel account.
      operationId: remove_override_features_for_user
      parameters:
      - name: features
        in: query
        description: |-
          An array that contains the features' names.

          **Note:**

          * Call WHM API 1's `get_feature_names` function to view available features.
        required: true
        content:
          application/json:
            schema:
              type: array
              example:
              - sslinstall
              - videotut
              items:
                type: string
      - name: user
        in: query
        description: The user's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_433"
  /remove_zone_key:
    get:
      tags:
      - DNS
      - DNS Security
      summary: Remove DNSSEC key
      description: |-
        This function removes a DNSSEC security key.

        **Note:**

        Only servers that run PowerDNS can use DNSSEC. If you call this function on a server
        that doesn't use PowerDNS, you will receive an error.
      operationId: remove_zone_key
      parameters:
      - name: domain
        in: query
        description: The domain for which to remove a security key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: key_id
        in: query
        description: |-
          The security key's ID.

          **Note:**

          Use the WHM AP1 `fetch_ds_records_for_domains` function to locate the domain's
          security key ID.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_434"
  /removeacct:
    get:
      tags:
      - Account Management
      summary: Delete cPanel account
      description: This function deletes a cPanel or WHM account.
      operationId: removeacct
      parameters:
      - name: username
        in: query
        description: The account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: keepdns
        in: query
        description: |-
          Whether to retain the account's DNS entries.
          - `1` — Retain DNS entries.
          - `0` — Delete DNS entries.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: user
        in: query
        description: The account's username.
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_435"
  /removezonerecord:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Delete DNS zone record
      description: |-
        This function deletes a DNS zone record.

        **Warning:**

        Incorrect use of this function could cause domains to resolve incorrectly. Exercise **extreme caution** when you remove DNS zone records.

        To effectively use this function, use the following workflow:
        1. Run the `dumpzone` function.
        2. Locate the `Line` value that corresponds to the zone record to delete.
        3. Use the values from that zone record to formulate the appropriate `removezonerecord` parameters.

        **Important:**

         When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.
      operationId: removezonerecord
      parameters:
      - name: line
        in: query
        description: The DNS zone record file's line number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 4
      - name: zone
        in: query
        description: The zone record's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: serialnum
        in: query
        description: |-
          The zone file's serial number.

          This parameter defaults to the zone file's current serial number.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "2013122501"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_436"
  /rename_mysql_database:
    get:
      tags:
      - Databases
      - MySQL Databases
      summary: Update MySQL database name
      description: |-
        This function changes a MySQL® database's name. MySQL does **not** allow you to rename a database. When cPanel & WHM "renames" a database, the system performs the following steps:
        1. The system creates a new database.
        2. The system moves data from the old database to the new database.
        3. The system recreates grants and stored code in the new database.
        4. The system deletes the old database and its grants.

        **Warning:**

        * If **any** of the first three steps fail, the system returns an error and attempts to restore the database's original state. If the restoration process fails, the API function's error response describes these additional failures.
        * In rare cases, the system creates the second database successfully but fails to delete the old database or grants. The system treats the rename action as a success; however, the API function returns warnings that describe the failure to delete the old database or grants.

        **Important:**

          When you disable the [*MySQL/MariaDB role*](https://go.cpanel.net/howtouseserverprofiles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: rename_mysql_database
      parameters:
      - name: newname
        in: query
        description: |-
          The database's new name.

          **Warning:**

          * If database prefixing is enabled, this parameter **must** include the database prefix for the account.
          * The maximum length of the database name is 64 characters. However, due to the method that cPanel & WHM uses to store MySQL database names, each underscore character (_) requires **two** characters of that limit. Therefore, if you enable database prefixing, the maximum length of the database name is **63 characters**, which includes both the database prefix and the underscore character. Each additional underscore **requires** another **two** characters of that limit.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 64
          type: string
          example: database2
      - name: oldname
        in: query
        description: The database's current name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database
      - name: cpuser
        in: query
        description: The database's owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_437"
  /rename_mysql_user:
    get:
      tags:
      - Databases
      - MySQL Databases
      summary: Update MySQL username
      description: |-
        This function changes a MySQL® database user's name.

        **Important:**

          When you disable the [*MySQL/MariaDB role*](https://go.cpanel.net/howtouseserverprofiles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: rename_mysql_user
      parameters:
      - name: newname
        in: query
        description: |-
          The database user's new name.

          **Warning:**

          If database prefix is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username2
      - name: oldname
        in: query
        description: The database user's current name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: cpuser
        in: query
        description: The database user's owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_438"
  /rename_postgresql_database:
    get:
      tags:
      - Databases
      - PostgreSQL Databases
      summary: Update PostgreSQL database name
      description: |-
        This function changes a PostgreSQL® database's name.

        **Warning:**

          The system requires more time to rename larger and more complex databases.

        **Important:**

          When you disable the [*PostgreSQL role*](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: rename_postgresql_database
      parameters:
      - name: newname
        in: query
        description: |-
          The database's new name.

          **Warning:**
          If database prefixing is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database2
      - name: oldname
        in: query
        description: The database's current name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database
      - name: cpuser
        in: query
        description: The database's owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_439"
  /rename_postgresql_user:
    get:
      tags:
      - Databases
      - PostgreSQL Databases
      summary: Update PostgreSQL username
      description: |-
        This function changes a PostgreSQL® database user's name.

        **Important:**

          When you disable the [*PostgreSQL role*](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: rename_postgresql_user
      parameters:
      - name: newname
        in: query
        description: |-
          The database user's new name.

          **Warning:**
          If database prefix is enabled, this parameter **must** include the database prefix for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username2
      - name: oldname
        in: query
        description: The database user's current name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: password
        in: query
        description: The database user's new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: cpuser
        in: query
        description: The database user's owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_440"
  /reorder_hooks:
    get:
      tags:
      - Script Hooks
      - Scripts Hooks
      summary: Update script hooks order
      description: This function changes the order of script hooks.
      operationId: reorder_hooks
      parameters:
      - name: ids
        in: query
        description: |-
          A comma-seprated list of script hook IDs, in order of priority.

          **Note:**

          To retrieve a hook's ID, use the WHM API 1 `list_hooks` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "HzEpGvT6QGUYwxuX3hWB8AUq,UNs8a8IbbAVf5oi_hXbcEw5a"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_441"
  /resellerstats:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Return reseller's information
      description: This function lists data about a reseller's accounts.
      operationId: resellerstats
      parameters:
      - name: user
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: filter_deleted
        in: query
        description: |-
          Do not display the reseller's deleted cPanel accounts in the function's `acct` return. This parameter modifies the data output in the `acct` return.

          * `1` — Do **not** display.
          * `0` — Display.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: filter_suspended
        in: query
        description: |-
          Do not display the reseller's suspended cPanel accounts in the function's `acct` return. This parameter modifies the data output in the `acct` return.

          * `1` — Do **not** display.
          * `0` — Display.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: month
        in: query
        description: |-
          The month to query, in numeric format.

          This parameter defaults to the current month.
        required: false
        style: form
        explode: true
        schema:
          maximum: 12
          minimum: 1
          type: integer
          example: 2
      - name: year
        in: query
        description: |-
          The year to query, in numeric format.

          This parameter defaults to the current year.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 2019
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_442"
  /reset_autossl_provider:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Restore AutoSSL registration
      description: This function resets the AutoSSL registration with a remote AutoSSL
        provider.
      operationId: reset_autossl_provider
      parameters:
      - name: provider
        in: query
        description: The AutoSSL provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPanel
      - name: x_*
        in: query
        description: |-
          Additional parameters which you wish to pass to the AutoSSL provider.

          **Note:**

           These additional parameters begin with the `x_` prefix.
           For example, the Let's Encrypt provider accepts the `x_terms_of_service_accepted` parameter,
           to which you would pass the URL of the terms of service that you accept.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: (varies)
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_443"
  /reset_service_ssl_certificate:
    get:
      tags:
      - SSL
      - SSL Server Settings
      summary: Create self-signed SSL certificate for service
      description: This function regenerates a self-signed SSL certificate and assigns
        it to a service.
      operationId: reset_service_ssl_certificate
      parameters:
      - name: service
        in: query
        description: |-
          The service.

          * `ftp` - The `ftp` service.
          * `exim` - The `exim` service.
          * `dovecot` - The `dovecot` service.
          * `cpanel` - The `cpanel` service.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel
          enum:
          - ftp
          - exim
          - dovecot
          - cpanel
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_444"
  /resetzone:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Restore DNS zone to default values
      description: |-
        This function resets a DNS zone to its default values. This also resets the domain's subdomain DNS records, and restores zone file subdomains in the server's `httpd.conf` file. For example, use this function to restore DNS zones that are corrupt.

        **Note:**

        Zone resets preserve valid TXT records, but **all** other records will return to their default values.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/serverroles), the system **disables** this function.

        **Note**

        You **must** include either the `domain` or the `zone` parameters.
      operationId: resetzone
      parameters:
      - name: domain
        in: query
        description: The domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: user
        in: query
        description: The domain's owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: user
      - name: zone
        in: query
        description: The zone file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example.com.db
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_445"
  /resolvedomainname:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Return domain's IP address
      description: This function resolves a domain's IPv4 address.
      operationId: resolvedomainname
      parameters:
      - name: domain
        in: query
        description: The domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_446"
  /restartservice:
    get:
      tags:
      - Server Administration
      - Services
      summary: Restart service
      description: |-
        This function restarts a service, or daemon, on a server.

        **Note:**

        If the user **only** possesses the `clustering`
        [Access Control List (ACL)](https://go.cpanel.net/ACLReferenceChart)
        then this function can **only** act on the `named` service.
      operationId: restartservice
      parameters:
      - name: service
        in: query
        description: |-
          The service to restart. For a list of possible values, read our
          [Access Control List (ACL)](https://go.cpanel.net/ACLReferenceChart)
          documentation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: exim
      - name: queue_task
        in: query
        description: |-
          Whether to queue this task.

          * `1` — Queue.
          * `0` — Do **not** queue.

          **Note:**

          This parameter affects the `output` return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_447"
  /restore_config_from_file:
    get:
      tags:
      - Server Administration
      - Configuration Clusters
      summary: Update configuration file from backup
      description: "This function restores a configuration backup from a file. If\
        \ the\_backup file does\_**not**\_contain any changes, the system does\_**not**\_\
        write to the configuration file."
      operationId: restore_config_from_file
      parameters:
      - name: module
        in: query
        description: |-
          The configuration module's name.

          **Important:**

          This parameter is case-sensitive. You **must** enter the parameter in the correct case format; otherwise, the function will fail.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Main
      - name: path
        in: query
        description: |-
          The absolute path to configuration file.

          **Note:**
          If this parameter contains JSON or equals-sign key and value pairs, they **must** appear in new lines.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /var/cpanel/cpanel.config
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_448"
  /restore_config_from_upload:
    post:
      tags:
      - Server Administration
      - Configuration Clusters
      summary: Update configuration file from backup via POST
      description: |-
        This function restores a configuration backup file via HTTP POST
        method. If the backup file does **not** contain any changes, the system does **not** write to the configuration file.

        **Note:**

        The format for this command line example differs from our standard format because the function **only** accepts an HTTP POST request. For more information about how to call this request method, read [Mozilla's POST documentation](https://go.cpanel.net/Mozilla-POST-documentation).
      operationId: restore_config_from_upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/restore_config_from_upload_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_449"
  /restore_modules_summary:
    get:
      tags:
      - Account Restoration
      - Restore Queue Reporting
      summary: Return backup modules list
      description: This function lists backup modules and their descriptions.
      operationId: restore_modules_summary
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_450"
  /restore_queue_activate:
    get:
      tags:
      - Account Restoration
      - Restore Queue Management
      summary: Start restoration
      description: This function activates the restore queue. This triggers a process
        that restores all queued accounts.
      operationId: restore_queue_activate
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_451"
  /restore_queue_add_task:
    get:
      tags:
      - Account Restoration
      - Restore Account
      summary: Restore user account from backup
      description: This function restores a user's cPanel account from a backup file.
      operationId: restore_queue_add_task
      parameters:
      - name: restore_point
        in: query
        description: "The date of the backup to use, in `YYYY-MM-DD` format."
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 2019-10-21T00:00:00.000Z
      - name: user
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: destid
        in: query
        description: |-
          The destination's identification string.

          * `local` — The local directory.
          * The destination ID string's value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: LmTZCUpqqLSPH8AO7pVtIeNK
          default: local
      - name: give_ip
        in: query
        description: |-
          Whether to assign the account a dedicated IP address.

          * `1` — Assign a dedicated IP address.
          * `0` — Use the shared IP address.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: mail_config
        in: query
        description: |-
          Whether to restore the account's email configuration.

          * `1` — Restore.
          * `0` — Do **not** restore.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: mysql
        in: query
        description: |-
          Whether to restore the account's MySQL® databases.

          * `1` — Restore.
          * `0` — Do **not** restore.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: subdomains
        in: query
        description: |-
          Whether to restore the account's subdomains.

          * `1` — Restore.
          * `0` — Do **not** restore.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_452"
  /restore_queue_clear_all_completed_tasks:
    get:
      tags:
      - Account Restoration
      - Restore Queue Management
      summary: Remove all completed restoration tasks
      description: This function removes successfully completed tasks from the restoration
        queue.
      operationId: restore_queue_clear_all_completed_tasks
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_453"
  /restore_queue_clear_all_failed_tasks:
    get:
      tags:
      - Account Restoration
      - Restore Queue Management
      summary: Remove all failed restoration tasks
      description: This function removes any failed tasks from the restoration queue.
      operationId: restore_queue_clear_all_failed_tasks
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_454"
  /restore_queue_clear_all_pending_tasks:
    get:
      tags:
      - Account Restoration
      - Restore Queue Management
      summary: Remove all pending restoration tasks
      description: This function removes any pending tasks from the restoration queue.
      operationId: restore_queue_clear_all_pending_tasks
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_455"
  /restore_queue_clear_all_tasks:
    get:
      tags:
      - Account Restoration
      - Restore Queue Management
      summary: Remove all restoration tasks
      description: This function removes all tasks from the restoration queue.
      operationId: restore_queue_clear_all_tasks
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_456"
  /restore_queue_clear_completed_task:
    get:
      tags:
      - Account Restoration
      - Restore Queue Management
      summary: Remove completed restoration task
      description: This function removes a single completed task from the restoration
        queue.
      operationId: restore_queue_clear_completed_task
      parameters:
      - name: start_time
        in: query
        description: When the restoration queue started the restoration.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: unix_timestamp
          example: 1396065600
      - name: user
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_457"
  /restore_queue_clear_pending_task:
    get:
      tags:
      - Account Restoration
      - Restore Queue Management
      summary: Remove pending restoration task
      description: This function removes a single pending task from the restoration
        queue.
      operationId: restore_queue_clear_pending_task
      parameters:
      - name: user
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_458"
  /restore_queue_is_active:
    get:
      tags:
      - Account Restoration
      - Restore Queue Reporting
      summary: Validate restoration queue is active
      description: This function checks whether the system's restoration queue is
        actively processing tasks.
      operationId: restore_queue_is_active
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_459"
  /restore_queue_list_active:
    get:
      tags:
      - Account Restoration
      - Restore Queue Reporting
      summary: Return active restoration tasks list
      description: This function lists the tasks that the restoration queue is actively
        processing.
      operationId: restore_queue_list_active
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_460"
  /restore_queue_list_completed:
    get:
      tags:
      - Account Restoration
      - Restore Queue Reporting
      summary: Return completed restoration tasks list
      description: |-
        This function lists the restoration queue's completed tasks.

        **Important:**

        This function's output varies dramatically. The [`/usr/local/cpanel/bin/backup_restore_manager`](https://go.cpanel.net/backuprestoremanagerscript) script run with the `list_finished` option determines this output..

        **Note:**

        On servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource records on DNS.
          * This warning is **not** relevant on CentOS 7 servers, because [RFC 7208](https://tools.ietf.org/html/rfc7208) deprecated SPF records. CentOS 7 servers use TXT records instead of SPF records.
          * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of BIND that complies with RFC 7208. To resolve this issue, update your operating system to a version that contains the updated version of BIND. For more information, read the [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).
      operationId: restore_queue_list_completed
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_461"
              examples:
                restore_queue_add_task_function:
                  description: A task that the restore_queue_add_task function added.
                  value:
                    data:
                      restore_job:
                      - restore_job:
                          options:
                            destid: local
                            give_ip: 0
                            mail_config: 0
                            mysql: 0
                            subdomains: 0
                          restore_point: 2020-03-29T00:00:00.000Z
                          user: mrfrog
                        status_info:
                          finished: "1586188203"
                          log: warning
                          restore_logfile: item-RESTORE_AccountLocal_mrfrog
                          result: 2
                          started: "1586188078"
                          status: 2
                          statusmsg: warning
                          transfer_session_id: userbackup20200406154758JqBa
                    metadata:
                      command: restore_queue_list_completed
                      reason: OK
                      result: 1
                      version: 1
                restorepkg:
                  description: A task that the /scripts/restorepkg script added.
                  value:
                    data:
                      restore_job:
                      - restore_job:
                          options:
                            give_ip: 0
                            mail_config: 1
                            mysql: 1
                            subdomains: 1
                          restore_point: YYYY-MM-DD
                          user: example
                        status_info:
                          finished: "1355840823"
                          log: "Extracting Domain....Done\n Done\n\n Restoring cpanel\
                            \ user config file    Done\n\n Restoring reseller packages\
                            \ and features (if any)\n     Restoring reseller privs\
                            \ (if any)\n     Restoring Locale Setting\n     Restoring\
                            \ SSL keys and Certificates    Done\n\n     Restoring\
                            \ frontpage (if installed)    Done\n\n     Restoring access\
                            \ logs....     Done\n\n     Restoring domain keys....\
                            \     Done\n\n     Restoring MySQL databases....     Database\
                            \ \"cptmpdb_azri8qf8_0KuzT3yEH7JFeeSi\" dropped Done\n\
                            \ Successful creation of roundcube cp_schema_version table\n\
                            Initial run through schema migration: from '0.2b' to '0.8.4'\n\
                            Please ignore non-fatal warnings, such as duplicate keys,\
                            \ columns, indexes, or tables already existing. \nSuccessfully\
                            \ saved version 0.8.4 to cp_schema_version table\nDBD::mysql::st\
                            \ execute failed: Table 'cptmpdb_azri8qf8_7WIKvg175f2M02yn.users'\
                            \ doesn't exist at /usr/local/cpanel/Cpanel/Email/RoundCube/DBI.pm\
                            \ line 503,  line 1. DBD::mysql::st execute failed: Table\
                            \ 'cptmpdb_azri8qf8_7WIKvg175f2M02yn.users' doesn't exist\
                            \ at /usr/local/cpanel/Cpanel/Email/RoundCube/DBI.pm line\
                            \ 503,  line 1. Transfer failed from temp database to\
                            \ Roundcube database.\n Done\n Done\n     Restoring MySQL\
                            \ privs    Done\n\n    Reloading MySQL    Done\n\nRestoring\
                            \ PostgreSQL databases.... ERROR:  role \"azri8qf8\" already\
                            \ exists      Restoring PostgreSQL privs     Done\n\n\
                            \     Restoring Mailman lists    Done\n\n     Restoring\
                            \ Mailman Archives    Done\n\n      Restoring shell  \
                            \  Current shell /usr/local/cpanel/bin/noshell is up to\
                            \ date. Done\n\n     Restoring password    Password for\
                            \ azri8qf8 has been changed Done\n\n     Restoring proftpd\
                            \ file    Done\n\n     Resyncing FTP Passwords    Updating\
                            \ ftp passwords for azri8qf8Ftp password files updated.Ftp\
                            \ vhost passwords syncedDone\n\n     Linking old home\
                            \ directories\n     Parsing Domain Databases    ...Subdomains......ParkedDomains......AddonDomains...\
                            \ \\n     Restoring Domains\n\n     Restoring Bandwidth\
                            \ Data    Done\n     Restoring Counter Data \\n     Restoring\
                            \ Homedir....    Done\n\n     Doing fileprotect conversion\n\
                            \     Restoring nobody owned files    Done\n\n     Restoring\
                            \ Mail files    Done\n \\n     Restoring userdata....\
                            \     Done\n\n     Restoring custom virtualhost templates....\n\
                            \     Converting email to cPanel 5+ (if needed)    Done\n\
                            \n     Cleaning up filters (if needed)    vfilter converter\
                            \ v3.0Updating vfilter files to latest format.Running\
                            \ for azri8qf8 only (force=0) (has_spam_acl=0)Processing\
                            \ azri8qf8......DoneDone\n \\n     Fixing mail permissions\
                            \    Done\n\n     Restoring crontab    Done\n        \
                            \ Converting to maildir if needed    Done\n         Restoring\
                            \ Dns Zones    Restoring zone: 28-ps1n25d.test.db Zone\
                            \ updates: 28-ps1n25d.test\n     Adding missing subdomain\
                            \ DNS entries (if needed) \\n     Update Proxy subomains\
                            \    Adding proxy subdomains for domain 28-ps1n25d.test.28-ps1n25d.test\
                            \                    [28-ps1n25d.test, 10.215.215.229,\
                            \ no changes needed]Done\n\n     Updating SPF Records\
                            \    Done\n\n     Restoring quota    Done\n \\n\n    \
                            \ Update mail routing    LOCAL MAIL EXCHANGER: This server\
                            \ will serve as a primary mail exchanger for 28-ps1n25d.test's\
                            \ mail.: This configuration has been manually selected.\
                            \ Done\n\n     Rebuilding Apache Conf    Built /usr/local/apache/conf/httpd.conf\
                            \ OK\n     Restore Complete    Account Restore Complete\
                            \ Unlocking password for user azri8qf8.passwd: Success.\n"
                          result: 1
                          started: "1355840811"
                      - restore_job:
                          options:
                            give_ip: 1
                            mail_config: 0
                            mysql: 1
                            subdomains: 0
                          restore_point: YYYY-MM-DD
                          user: bcow
                        status_info:
                          finished: "1355840823"
                          log: ""
                          result: 0
                          started: "1355840823"
                    metadata:
                      command: restore_queue_list_completed
                      reason: OK
                      result: 1
                      version: 1
  /restore_queue_list_pending:
    get:
      tags:
      - Account Restoration
      - Restore Queue Reporting
      summary: Return pending restoration tasks list
      description: This function lists the tasks that the restoration queue has not
        yet processed.
      operationId: restore_queue_list_pending
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_462"
  /restore_queue_state:
    get:
      tags:
      - Account Restoration
      - Restore Queue Reporting
      summary: Return restoration tasks list
      description: This function lists the tasks in the restoration queue.
      operationId: restore_queue_state
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_463"
  /restoreaccount:
    get:
      tags:
      - Account Restoration
      - Restore Account
      summary: Restore account backup
      description: |-
        This function restores an account backup. You can use this function to restore daily,
        weekly, or monthly backups.

        **Important:**

        * When you call this function, you **must** include at least one of
        the `all`, `mail`, `subs`, or `mysql` parameters.

        * On servers with a custom `Whostmgr::Transfers` module, the function may not return XML
        output. To properly return XML output, the `Whostmgr::Transfers` module **must** allow
        the system to use the `Cpanel::Demultiplexer` module to capture output.

        **Note:**

        On servers that run CentOS 7, you may see a `named` warning about the absence of SPF
        resource records on DNS.

        * This warning is not relevant on CentOS 7 servers, because
        [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208).
        CentOS 7 servers use `TXT` records instead of `SPF` records.

        * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated
        version of BIND that complies with RFC 7208. To resolve this issue, update your
        operating system to a version that contains the updated version of BIND. For more
        information, read the
        [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).
      operationId: restoreaccount
      parameters:
      - name: type
        in: query
        description: |-
          The type of backup to restore. The function restores the most recent backup of
          the type that you specify:

          * `monthly`
          * `weekly`
          * `daily`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: monthly
          enum:
          - monthly
          - weekly
          - daily
      - name: user
        in: query
        description: The account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: all
        in: query
        description: |-
          Whether to create the account before restoration.

          * `1` — Create and then restore the account. If you select this value and the
          account already exists, the function will fail.
          * `0` — Restore **only**.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: ip
        in: query
        description: |-
          Whether to assign a dedicated IP address to the restored account.

          * `1` — Assign a dedicated IP address.
          * `0` — Use the shared IP address.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: mail
        in: query
        description: |-
          Whether to restore account-level filters (vfilters) and forwarders
          (valiases).

          * `1` — Restore.
          * `0` — Do **not** restore.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: mysql
        in: query
        description: |-
          Whether to restore the account's MySQL® databases.

          * `1` — Restore.
          * `0` — Do **not** restore.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: subs
        in: query
        description: |-
          Whether to restore the account's subdomains.

          * `1` — Restore.
          * `0` — Do **not** restore.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_464"
  /restrict_whm_root_access:
    get:
      tags:
      - WHM Access
      summary: Restrict Access to WHM by CIDR list.
      description: |-
        This function restricts root login to cPanel & WHM based on a list of CIDR addresses.

        **Note:**

        This API manipulates `/var/cpanel/authorized_whm_root_ips`. We HIGHLY recommend
        you not modify this file directly. Improper formatting of the file can lead to loss of all
        access to cPanel & WHM using the root password.

        Use of this API replaces any previous restrictions so be sure to include previous CIDR patterns
        when adding new ones.

        As this API only restricts logins, please be aware that existing root logins are not terminated
        when these restrictions are asserted.

        This API DOES NOT restrict root resellers.
      operationId: restrict_whm_root_access
      parameters:
      - name: cidr
        in: query
        description: |-
          The IPs you wish to restrict in CIDR format.

          **Note:**

          You can pass this parameter multiple times.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: cidr
        examples:
          multiple:
            summary: Multiple CIDR Addresses.
            value:
            - 10.2.0.0/16
            - 10.6.5.0/24
            - 10.1.6.7
          single:
            summary: A single CIDR Address
            value: 10.2.0.0/16
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_465"
  /retrieve_customizations:
    get:
      tags:
      - Customizations
      summary: Retrieve customization data
      description: |-
        This function retrieves customization data.

        Customization data includes brand logos and colors.

        This function is used to retrieve customization data for the Jupiter theme **only**.
      operationId: retrieve_customizations
      parameters:
      - name: application
        in: query
        description: The application name for the customization.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel
          enum:
          - cpanel
          - webmail
      - name: theme
        in: query
        description: The theme for the customization.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_466"
      x-cpanel-cli-support: true
  /retrieve_transfer_session_remote_analysis:
    get:
      tags:
      - Transfers
      - Transfer Monitoring
      summary: Return transfer session's information
      description: |-
        This function analyzes a transfer session.

        **Note:**

          For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.
      operationId: retrieve_transfer_session_remote_analysis
      parameters:
      - name: transfer_session_id
        in: query
        description: The transfer session's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: exampleservercopya20140206192428NtyW
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_467"
  /run_cpkeyclt:
    get:
      tags:
      - Server Administration
      - License Management
      summary: Return server's cPanel license status
      description: |-
        This function verifies the system's license status with WebPros International, LLC's
        licensing servers. To do this, the function runs the `/usr/local/cpanel/cpkeyclt`
        script.

        For more information about this script and potential license problems,
        read our
        [Installation Guide - Troubleshoot Your Installation](https://docs.cpanel.net/installation-guide/troubleshoot-your-installation/)
        documentation.
      operationId: run_cpkeyclt
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_468"
  /save_connected_application:
    post:
      tags:
      - Server Administration
      - Connected Applications
      summary: Save application connection information.
      description: Save or update connection data about a specific connected application.
      operationId: save_connected_application
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/save_connected_application_body"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_469"
  /save_cpgreylist_config:
    get:
      tags:
      - Greylisting
      - Spam Protection (Greylisting)
      summary: Update Greylisting settings
      description: |-
        This function modifies the server's Greylisting configuration settings.

        **Important:**

        When you call this function, you **must** include at least one of the
        following parameters:

        * `spf_bypass`
        * `child_timeout_secs`
        * `record_exp_time_mins`
        * `initial_block_time_mins`
        * `max_child_procs`
        * `purge_interval_mins`
        * `must_try_time_mins`
      operationId: save_cpgreylist_config
      parameters:
      - name: child_timeout_secs
        in: query
        description: |-
          The maximum of seconds that Greylisting waits for a child process to timeout.

          **Note:**

          This parameter affects the function of the `cPGreyList` daemon. Do **not** change this
          value unless it is absolutely necessary.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 5
      - name: initial_block_time_mins
        in: query
        description: The number of minutes during which Greylisting defers email from
          an unknown triplet. The maximum value for this parameter is four hours (`240`
          minutes).
        required: false
        style: form
        explode: true
        schema:
          maximum: 240
          minimum: 1
          type: integer
          example: 10
      - name: max_child_procs
        in: query
        description: |-
          The maximum number of child processes.

          **Notes:**

           This parameter affects the function of the `cPGreyList` daemon. Do **not** change this
           value unless it is absolutely necessary.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 5
      - name: must_try_time_mins
        in: query
        description: The number of minutes during which Greylisting accepts a re-sent
          email from an unknown triplet. The maximum value for this parameter is one
          day (`1440` minutes).
        required: false
        style: form
        explode: true
        schema:
          maximum: 1440
          minimum: 1
          type: integer
          example: 240
      - name: purge_interval_mins
        in: query
        description: |-
          The number of minutes before Greylisting deletes the records in the Greylisting database.

          **Note:**

          This parameter affects the function of the `cPGreyList` daemon. Do **not** change this
          value unless it is absolutely necessary.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 60
      - name: record_exp_time_mins
        in: query
        description: |-
          The number of minutes before Greylisting deletes the triplet record and treats a
          re-sent email as coming from a new, unknown triplet. The maximum value for this
          parameter is 30 days (`43200` minutes).
        required: false
        style: form
        explode: true
        schema:
          maximum: 43200
          minimum: 1
          type: integer
          example: 4320
      - name: spf_bypass
        in: query
        description: |-
          Whether emails with SPF bypass Greylisting.

          * `1` — Enabled.
          * `0` — Disabled.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_470"
  /save_cphulk_config:
    get:
      tags:
      - cPHulk
      - Settings
      summary: Save login security configuration settings
      description: This function modifies cPHulk's configuration settings.
      operationId: save_cphulk_config
      parameters:
      - name: block_brute_force_with_firewall
        in: query
        description: |-
          Whether to use the server firewall to block brute force attacks.
          * `1` — Use the firewall.
          * `0` — Do **not** use the firewall.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: block_excessive_brute_force_with_firewall
        in: query
        description: |-
          Whether to use the server firewall to block excessive brute force attacks.
          * `1` — Use the firewall.
          * `0` — Do **not** use the firewall.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: brute_force_period_mins
        in: query
        description: The number of minutes over which cPHulk measures all login attempts
          to a specific user's account.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 5
          default: 5
      - name: command_to_run_on_brute_force
        in: query
        description: |-
          The command to run when an IP address triggers brute force protection.

          **Note:**

           For a list of commands, read the *Command variables* section of our [cPHulk Brute Force Protection](https://go.cpanel.net/whmdocscPHulkBruteForceProtection) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ""
          default: ""
      - name: command_to_run_on_excessive_brute_force
        in: query
        description: |-
          The command to run when the system blocks an IP address for a one day period.

          **Note:**

           For a list of commands, read the *Command variables* section of our [cPHulk Brute Force Protection](https://go.cpanel.net/whmdocscPHulkBruteForceProtection) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ""
          default: ""
      - name: ip_based_protection
        in: query
        description: |-
          Whether to enable IP address-based protection on all requests.
          * `1` — Enable IP-based protection.
          * `0` — Disable IP-based protection.

          **Note:**

           If you set this parameter to `0`, you **cannot** use the following parameters:
           * `block_brute_force_with_firewall`
           * `block_excessive_brute_force_with_firewall`
           * `ip_brute_force_period_mins`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: ip_brute_force_period_mins
        in: query
        description: The number of minutes in which cPHulk measures an attacker's
          login attempts.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 15
          default: 15
      - name: lookback_period_min
        in: query
        description: The number of minutes over which cPHulk counts failed logins
          against a user.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 360
          default: 360
      - name: mark_as_brute
        in: query
        description: The maximum number of failures from a specific IP address before
          cPHulk blocks that address for a two-week period.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 30
          default: 30
      - name: max_failures
        in: query
        description: The maximum number of failures that cPHulk allows per account
          within the defined time range.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 30
          default: 30
      - name: max_failures_byip
        in: query
        description: The maximum number of failures from a specific IP address before
          cPHulk locks out that address.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 5
          default: 5
      - name: notify_on_brute
        in: query
        description: |-
          Whether cPHulk will send a notification when it detects a brute force attack.
          * `1` — Send the notification.
          * `0` — Do **not** send the notification.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: notify_on_root_login
        in: query
        description: |-
          Whether cPHulk will send a notification when the `root` user successfully logs in from an IP address that is not on the whitelist.
          * `1` — Send the notification.
          * `0` — Do **not** send the notification.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: notify_on_root_login_for_known_netblock
        in: query
        description: |-
          Whether cPHulk sends a notification upon successful `root` login when the IP address is not on the whitelist, but from a known netblock.
          * `1` — Send the notification.
          * `0` — Do **not** send the notification.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: skip_enabled_check
        in: query
        description: |-
          Whether to skip checking if cPHulk runs on the server.
          * `1` — Don't check cPHulk's status.
          * `0` — Check cPHulk's status.

          **Note:**

          If cPHulk is disabled, the function returns the following message:
          `cPHulk is disabled on the server.`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: username_based_protection
        in: query
        description: |-
          Whether to enable username-based protection on all requests.
          * `1` — Enable.
          * `0` — Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: username_based_protection_for_root
        in: query
        description: |-
          Whether to allow username-based protection to lock out the `root` user.
          * `1` — Allow.
          * `0` — Do **not** allow.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: username_based_protection_local_origin
        in: query
        description: |-
          Whether to enable username-based protection **only** on requests that originate from a local IP address.
          * `1` — Enable.
          * `0` — Disable.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_471"
  /save_spamd_config:
    get:
      tags:
      - Mail
      - Spam Management
      summary: Update Apache SpamAssassin™ configuration
      description: |-
        This function configures your Apache SpamAssassin™ options.

        **Important:**

        When you disable the [Spam Filter role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system disables this function.
      operationId: save_spamd_config
      parameters:
      - name: allowedips
        in: query
        description: |-
          A comma-separated list of IP addresses to authorize to access the spamd daemon.

          **Note:**

          * If you do **not** specify a value, the `spamd` daemon allows connections from any IP address.
          * If you set a value for this parameter, it **must** include `127.0.0.1` in the list of values so that the `chkservd` daemon can access the `spamd` daemon.
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: "127.0.0.1,192.168.0.1"
      - name: maxchildren
        in: query
        description: The maximum number of children per `spamd` process.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 5
      - name: maxconnperchild
        in: query
        description: The maximum number of connections that the `spamd` daemon allows
          per child process.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 200
      - name: pidfile
        in: query
        description: |-
          The process ID's file path.

          **Warning:**

          This parameter changes the `spamd` daemon's process ID filepath. On
          systems that use the `systemd` daemon, you must update the `PIDFile`
          parameter in the `spamd.service` definition. If you do not update the
          `PIDFile` parameter, the `spamd` daemon will fail to function because the
          PID path and the `PIDFile` parameter will not match.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /var/run/spamd.pid
      - name: timeoutchild
        in: query
        description: |-
          The maximum amount of time that a child process waits before it abandons a TCP connection.

          **Note:**

          If the value of this parameter is `0`, child processes will **not** abandon TCP connections.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 300
      - name: timeouttcp
        in: query
        description: |-
          The maximum amount of time that the `spamd` daemon waits before it abandons a TCP connection.

          **Note:**

          If the value of this parameter is `0`, `spamd` will **not** abandon TCP connections.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 30
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_472"
  /saveacllist:
    get:
      tags:
      - Resellers
      - Account Permissions
      summary: Create or update privilege list and settings
      description: |-
        This function creates or modifies an Access Control List (ACL).

        **Note:**

          For each `acl-*` parameter, a value of `1` adds that privilege to the ACL list and a value of `0` removes that privilege from the ACL list.

        **Warning:**

          We **strongly** recommend that WHM users create and edit ACLs and ACL privileges through WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface ( *WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges* ).
      operationId: saveacllist
      parameters:
      - name: acllist
        in: query
        description: |-
          The ACL to assign to the reseller.

          **Note:**

           To modify an existing ACL, set this value to that ACL's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: my_acl_list
      - name: acl-acct-summary
        in: query
        description: Whether to allow the reseller to view an account summary.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-add-pkg
        in: query
        description: Whether to allow the reseller to add and remove hosting plans
          (packages).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-add-pkg-ip
        in: query
        description: Whether to allow the reseller to create packages with a dedicated
          IP address.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-add-pkg-shell
        in: query
        description: Whether to allow the reseller to create packages with shell access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-all
        in: query
        description: |-
          Whether to grant the reseller all privileges.

          **Warning:**

           A value of `1` grants root-level privileges to the reseller.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-allow-addoncreate
        in: query
        description: Whether to allow the reseller to create packages with addon domains.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-allow-emaillimits-pkgs
        in: query
        description: Whether to allow the reseller to create packages with custom
          email quotas.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-allow-parkedcreate
        in: query
        description: Whether to allow the reseller to create packages with parked
          domains (aliases).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-allow-shell
        in: query
        description: Whether to allow the reseller to create accounts with shell access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-allow-unlimited-bw-pkgs
        in: query
        description: Whether to allow the reseller to create packages with unlimited
          bandwidth.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-allow-unlimited-disk-pkgs
        in: query
        description: Whether to allow the reseller to create packages with unlimited
          disk space.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-allow-unlimited-pkgs
        in: query
        description: Whether to allow the reseller to create packages with unlimited
          features.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-basic-system-info
        in: query
        description: Whether to allow the reseller to retrieve basic system information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-basic-whm-functions
        in: query
        description: Whether to allow the reseller to access basic cPanel & WHM options.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-clustering
        in: query
        description: Whether to allow the reseller to use DNS clusters.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-cors-proxy-get
        in: query
        description: Whether to allow the reseller to perform Cross-Origin Resource
          Sharing (CORS) HTTP requests.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-cpanel-api
        in: query
        description: "Whether to allow the reseller to execute cPanel API 1,\_cPanel\
          \ API 2\_and\_UAPI\_functions via WHM."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-cpanel-integration
        in: query
        description: Whether to allow the reseller to manage how their server and
          its services connect to other servers and services.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-create-acct
        in: query
        description: Whether to allow the reseller to create accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-create-dns
        in: query
        description: Whether to allow the reseller to add DNS zones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-create-user-session
        in: query
        description: |-
          Whether to allow the reseller to create a temporary user session for a specified service.

          **Notes:**

           This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-demo-setup
        in: query
        description: Whether to allow the reseller to enable demo mode for accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-digest-auth
        in: query
        description: Whether to allow the reseller to manage Digest Authentication
          support.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-edit-account
        in: query
        description: Whether to allow the reseller to edit accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-edit-dns
        in: query
        description: Whether to allow the reseller to edit DNS zones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-edit-mx
        in: query
        description: Whether to allow the reseller to edit MX entries.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-edit-pkg
        in: query
        description: Whether to allow the reseller to edit hosting plans (packages).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-generate-email-config
        in: query
        description: Whether to allow the reseller to generate a mobile configuration
          profile for an email account.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-kill-acct
        in: query
        description: Whether to allow the reseller to terminate accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-kill-dns
        in: query
        description: Whether to allow the reseller to remove DNS zones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-limit-bandwidth
        in: query
        description: |-
          Whether to allow the reseller to modify bandwidth limits (quotas).

          **Warning:**

           If you do not use resource limits, a value of `1` allows resellers to circumvent package limits for disk space.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-list-accts
        in: query
        description: Whether to allow the reseller to view the list of accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-list-pkgs
        in: query
        description: Whether to allow the reseller to view existing hosting plans
          (packages).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-locale-edit
        in: query
        description: Whether to allow the reseller to create and modify locales on
          the server.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-mailcheck
        in: query
        description: Whether to allow the reseller to troubleshoot mail delivery.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-manage-api-tokens
        in: query
        description: |-
          Whether to allow the reseller to manage API tokens.

          **Notes:**

           This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-manage-dns-records
        in: query
        description: Whether to allow the reseller to manage DNS records.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-manage-oidc
        in: query
        description: Whether to allow the reseller to manage external authentication
          for their accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-manage-styles
        in: query
        description: Whether to allow the reseller to manage their server's cPanel
          styles.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-mysql-info
        in: query
        description: Whether to allow the reseller to retrieve MySQL® database and
          user data.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-news
        in: query
        description: Whether to allow the reseller to modify the server's news.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-ns-config
        in: query
        description: Whether to allow the reseller to manage nameservers.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-park-dns
        in: query
        description: Whether to allow the reseller to park DNS zones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-passwd
        in: query
        description: |-
          Whether to allow the reseller to change passwords.

          **Note:**

           This privilege allows an API token user to change account passwords and log in with a new password. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-quota
        in: query
        description: |-
          Whether to allow the reseller to modify quotas.

          **Warning:**

           If you do not use resource limits, this privilege allows resellers to circumvent package limits for disk space.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-rearrange-accts
        in: query
        description: Whether to allow the reseller to rearrange accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-resftp
        in: query
        description: Whether to allow the reseller to resync FTP passwords.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-restart
        in: query
        description: Whether to allow the reseller to restart services.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-show-bandwidth
        in: query
        description: Whether to allow the reseller to view account bandwidth usage.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-ssl
        in: query
        description: Whether to allow the reseller to perform SSL site management.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-ssl-buy
        in: query
        description: Whether to allow the reseller to purchase SSL certificates.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-ssl-gencrt
        in: query
        description: Whether to allow the reseller to generate SSL certificates.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-ssl-info
        in: query
        description: Whether to allow the reseller to view their server's SSL information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-stats
        in: query
        description: Whether to allow the reseller to view server information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-status
        in: query
        description: Whether to allow the reseller to view the server's status.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-suspend-acct
        in: query
        description: Whether to allow the reseller to suspend or unsuspend accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-thirdparty
        in: query
        description: Whether to allow the reseller to manage third-party services.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-track-email
        in: query
        description: Whether to allow the reseller to view reports about email message
          delivery attempts from their account.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-upgrade-account
        in: query
        description: Whether to allow the reseller to upgrade or downgrade accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: acl-viewglobalpackages
        in: query
        description: "Whether to allow the reseller to use all global packages. For\
          \ more information, read our [reseller packages](https://go.cpanel.net/GuidetoResellerAccounts#which-packages-can-resellers-view-and-assign)\
          \ documentation."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_473"
  /savemxs:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Create mail exchanger record
      description: |-
        This function creates a new MX record.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: savemxs
      parameters:
      - name: domain
        in: query
        description: The zone record's domain.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: exchange
        in: query
        description: The domain's mail exchanger.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: mail.example.com
      - name: name
        in: query
        description: The record name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mail.example.com
      - name: preference
        in: query
        description: |-
          The MX record's priority order.

          **Note:**

          Lower numbers indicate a higher priority order.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 20
      - name: class
        in: query
        description: The record's class.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: IN
          default: IN
      - name: ttl
        in: query
        description: The record's Time To Live (TTL) in seconds.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 14400
          default: 14400
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_474"
  /send_test_posturl:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Send notification URL via POST
      description: This function uses the specified URL to send a test message through
        the POST method of HTTP as form data.
      operationId: send_test_posturl
      parameters:
      - name: url
        in: query
        description: The URL and query string to send.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Click to view...https%3A%2F%2Fwww.example.com%2Fevents.cgi%3Fapikey%3D12345%26user%3Dusername*password%3D12345luggage
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_475"
  /send_test_pushbullet_note:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Send Pushbullet™ test with access token
      description: |-
        This function uses the specified access token to send a test Pushbullet™ note. The function automatically generates a message title and body, and it includes a unique string in the test message. When the test message returns, the system searches for the ID string and returns it.

        If the function does not detect the correct ID string in the returned message, the function fails. You can also review the user's Pushbullet channel history to confirm that the server sent and received the message.

        The test's success or failure depends on various conditions. For example:
          * Valid access token.
          * Network configuration.
          * Service outages.
          * External server rate limit.
      operationId: send_test_pushbullet_note
      parameters:
      - name: access_token
        in: query
        description: |2-

          The Pushbullet token to use.

          **Note:**

          * To access your Pushbullet token, navigate to [Pushbullet's My Account](https://www.pushbullet.com/account) page. It will appear under the *Access Token* heading.
          * This is confidential information that your server sends via a secure channel.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: a1b2c3d4e5f6g7h8i9j0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_476"
  /servicestatus:
    get:
      tags:
      - Server Administration
      - Services
      summary: Return service status
      description: "This function reports which services (daemons) are enabled, installed,\
        \ and monitored on your server."
      operationId: servicestatus
      parameters:
      - name: service
        in: query
        description: |-
          The service for which to view the status.

          **Notes**

          If you do **not** specify this parameter, the function will return the status for all of your server's services.

          Available Services:

          * apache_php_fpm
          * clamd
          * cpanel-dovecot-solr
          * cpanel_php_fpm
          * cpanellogd
          * cpdavd
          * cpgreylistd
          * cphulkd
          * cpsrvd
          * crond
          * dnsadmin
          * exim
          * exim-altport
          * ftpd
          * httpd
          * imap
          * ipaliases
          * lmtp
          * mailman
          * mysql
          * named
          * nscd
          * p0f
          * pop
          * postgresql
          * queueprocd
          * rsyslogd
          * spamd
          * sshd
          * syslogd
          * tailwatchd

          For more information about these services, read our [Service Manager](https://go.cpanel.net/whmdocsServiceManager) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: crond
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_477"
  /set_application_contact_event_importance:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Update app's event contact importance setting
      description: |-
        This function sets the importance level of an application event for WHM's
        [*Contact Manager*](https://go.cpanel.net/whmdocsContactManager)
        interface (*WHM >> Home >> Server Contacts >> Contact Manager*).

        For a list of available modules, use the WHM API 1
        [`get_all_contact_importances`](/openapi/whm/operation/get_all_contact_importances/)
        function.

        **Note:**

        The system creates a notification setting for the application's events
        if one does not already exist.
      operationId: set_application_contact_event_importance
      parameters:
      - name: app
        in: query
        description: The cPanel & WHM application module's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Check
      - name: event
        in: query
        description: The event's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SecurityAdvisorStateChange
      - name: importance
        in: query
        description: |-
          The importance level at which to send the notification.

          * `High`
          * `Medium`
          * `Low`
          * `Disabled`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Disabled
          enum:
          - High
          - Medium
          - Low
          - Disabled
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_478"
  /set_application_contact_importance:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Update app contact importance setting
      description: |-
        This function sets the importance level of an application's events for WHM's
        [*Contact Manager*](https://go.cpanel.net/whmdocsContactManager)
        interface (*WHM >> Home >> Server Contacts >> Contact Manager*).

        For a list of available modules, use the WHM API 1
        [`get_all_contact_importances`](/openapi/whm/operation/get_all_contact_importances/)
        function.

        **Note:**

        The system creates a notification setting for the application's events if one
        does not already exist.
      operationId: set_application_contact_importance
      parameters:
      - name: app
        in: query
        description: The cPanel & WHM application module's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Check
      - name: importance
        in: query
        description: |-
          The importance level at which to send the notification.

          * `High`
          * `Medium`
          * `Low`
          * `Disabled`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Disabled
          enum:
          - High
          - Medium
          - Low
          - Disabled
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_479"
  /set_autossl_metadata:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Update AutoSSL metadata
      description: |-
        This function sets values for AutoSSL's metadata keys. This allows you to replace certificates that AutoSSL did not issue and toggle other AutoSSL notifications.

        **Note:**

        We recommend that you use the WHM API 1 `set_autossl_metadata_key` function instead.

        **Information:**

        * You can enter more than one key and value pair in the `metadata_json` JSON hash.
        * Any keys that you do not **explicitly** define will adopt the system's default value.
      operationId: set_autossl_metadata
      parameters:
      - name: metadata_json
        in: query
        description: JSON-encoded object of metadata keys and values that control
          AutoSSL's behavior.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clobber_externally_signed:
                  type: integer
                  description: |-
                    Whether to allow AutoSSL to replace certificates that none of
                    this system’s AutoSSL modules issued. When you enable this option, AutoSSL
                    will install certificates that replace users’ Certificate Authority (CA)
                    issued certificates if they are invalid or expire within three days.
                    * `1` - Replace certificates not issued by the AutoSSL system.
                    * `0` - Only replace certificates issued by the AutoSSL system.
                  example: 1
                  default: 0
                  enum:
                  - 0
                  - 1
                notify_autossl_expiry:
                  type: integer
                  description: |-
                    Whether to send a notification when an AutoSSL certificate expires. This occurs when AutoSSL cannot request a new certificate.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.

                    **Notes:**

                    This can happen if all of a website’s domains fail Domain Control Validation (DCV), or if the AutoSSL provider has not issued a certificate in response to a request.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_expiry_coverage:
                  type: integer
                  description: |-
                    Whether to send a notification if at least one currently-secured domain will lose coverage when the certificate renews.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_expiry_coverage_user:
                  type: integer
                  description: |-
                    Whether to send a notification if at least one of a user's currently-secured domains will lose coverage when the certificate renews.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_expiry_user:
                  type: integer
                  description: |-
                    Whether to send a notification when a user's AutoSSL certificate expires. This occurs when AutoSSL cannot request a new certificate for a user.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_renewal:
                  type: integer
                  description: |-
                    Whether to send a notification when AutoSSL successfully renews a certificate.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_renewal_coverage:
                  type: integer
                  description: |-
                    Whether to send a notification if a currently-secured domain fails DCV and the certificate has not reached its renewal period.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_renewal_coverage_reduced:
                  type: integer
                  description: |-
                    Whether to send a notification when AutoSSL has renewed a certificate and the new certificate lacks at least one domain that the previous certificate secured.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_renewal_coverage_reduced_user:
                  type: integer
                  description: |-
                    Whether to send a notification  when AutoSSL has renewed a certificate for a user and the new certificate lacks at least one domain that the previous certificate secured.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_renewal_coverage_user:
                  type: integer
                  description: |-
                    Whether to send a notification if a currently-secured domain fails DCV and the certificate has not reached its renewal period.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_renewal_uncovered_domains:
                  type: integer
                  description: |-
                    Whether to send a notification when AutoSSL has renewed a certificate and the new certificate lacks one or more of the website’s domains.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_renewal_uncovered_domains_user:
                  type: integer
                  description: |-
                    Whether to send a notification  when AutoSSL has renewed a certificate for a user and the new certificate lacks one or more of the website’s domains.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
                notify_autossl_renewal_user:
                  type: integer
                  description: |-
                    Whether to send a notification  when AutoSSL successfully renews a certificate for a user.
                    * `1` - Send a notification.
                    * `0` - Do **not** send a notification.
                  example: 1
                  default: 1
                  enum:
                  - 0
                  - 1
              example:
                clobber_externally_signed: 1
                notify_autossl_expiry: 1
                notify_autossl_expiry_coverage: 1
                notify_autossl_expiry_coverage_user: 1
                notify_autossl_expiry_user: 1
                notify_autossl_renewal: 1
                notify_autossl_renewal_coverage: 1
                notify_autossl_renewal_coverage_reduced: 1
                notify_autossl_renewal_coverage_reduced_user: 1
                notify_autossl_renewal_coverage_user: 1
                notify_autossl_renewal_uncovered_domains: 1
                notify_autossl_renewal_uncovered_domains_user: 1
                notify_autossl_renewal_user: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_480"
  /set_autossl_metadata_key:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Update AutoSSL metadata via JSON
      description: |-
        This function sets values for AutoSSL's metadata keys. This allows you to replace certificates that AutoSSL did not issue and toggle other AutoSSL notifications.

        **Note:**

          * This function performs the same actions as the WHM API 1 `set_autossl_metadata` function. However, this function accepts a single key and value pair as a parameter instead of JSON. Additionally, you can **only** enter one key and value pair per function call.
          * This function **only** accepts a single key and value pair. To set all values, use the WHM API 1 `set_autossl_metadata` function or make multiple calls to this function.
      operationId: set_autossl_metadata_key
      parameters:
      - name: key
        in: query
        description: |-
          The AutoSSL metadata key that you wish to modify.
          * `clobber_externally_signed` — Whether to allow AutoSSL to replace certificates that none of this system’s AutoSSL modules issued. When you enable this option, AutoSSL will install certificates that replace users’ Certificate Authority (CA) issued certificates if they are invalid or expire within three days.
          * `notify_autossl_expiry` — Whether to send a notification when an AutoSSL certificate expires. This occurs when AutoSSL cannot request a new certificate.
          * `notify_autossl_expiry_coverage` — Whether to send a notification if at least one currently-secured domain will lose coverage when the certificate renews.
          * `notify_autossl_expiry_coverage_user `— Whether to send a notification if at least one currently-secured domain for a user will lose coverage when the certificate renews.
          * `notify_autossl_renewal` — Whether to send a notification when AutoSSL successfully renews a certificate.
          * `notify_autossl_renewal_user` — Whether to send a notification when AutoSSL successfully renews a certificate for a user.
          * `notify_autossl_renewal_coverage` — Whether to send a notification when a currently-secured domain fails DCV and the certificate has not reached its renewal period.
          * `notify_autossl_renewal_coverage_user` — Whether to send a notification when a user's currently-secured domain fails DCV and the certificate has not reached its renewal period.
          * `notify_autossl_renewal_coverage_reduced` — Whether to send a notification when AutoSSL has renewed a certificate, but the new certificate lacks at least one domain that the previous certificate secured.
          * `notify_autossl_renewal_coverage_reduced_user` — Whether to send a notification when AutoSSL has renewed a certificate for a user, but the new certificate lacks at least one domain that the previous certificate secured.
          * `notify_autossl_renewal_uncovered_domains` — Whether to send a notification when AutoSSL has renewed a certificate, but the new certificate lacks one or more of the website’s domains.
          * `notify_autossl_renewal_uncovered_domains_user` — Whether to send a notification when AutoSSL has renewed a certificate, but the new certificate lacks one or more of the website’s domains.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: notify_autossl_expiry
          enum:
          - clobber_externally_signed
          - notify_autossl_expiry
          - notify_autossl_expiry_coverage
          - notify_autossl_expiry_coverage_user
          - notify_autossl_renewal
          - notify_autossl_renewal_user
          - notify_autossl_renewal_coverage
          - notify_autossl_renewal_coverage_user
          - notify_autossl_renewal_coverage_reduced
          - notify_autossl_renewal_coverage_reduced_user
          - notify_autossl_renewal_uncovered_domains
          - notify_autossl_renewal_uncovered_domains_user
      - name: value
        in: query
        description: |-
          Whether to allow AutoSSL to replace certificates that it did not issue for the `clobber_externally_signed` parameter.

          **or**

          Whether to send a notification for the `notify_autossl_expiry`, `notify_autossl_expiry_coverage`, `notify_autossl_expiry_coverage_user`, `notify_autossl_renewal`, `notify_autossl_renewal_user`, `notify_autossl_renewal_coverage`, `notify_autossl_renewal_coverage`, `notify_autossl_renewal_coverage_reduced`, `notify_autossl_renewal_coverage_reduced_user`, `notify_autossl_renewal_uncovered_domains`, and `notify_autossl_renewal_uncovered_domains_user` parameters.
          * `1` — Allow or notify.
          * `0` — Do **not** allow or notify.

          **Note:**

           For reference, the system preconfigures AutoSSL metadata keys to the following values:
           * The value for `clobber_externally_signed` defaults to `0`.
           * The value for `notify_autossl_expiry` defaults to `1`.
           * The value for `notify_autossl_expiry_coverage` defaults to `1`.
           * The value for `notify_autossl_expiry_coverage_user` defaults to `1`.
           * The value for `notify_autossl_renewal` defaults to `1`.
           * The value for `notify_autossl_renewal_user` defaults to `1`.
           * The value for `notify_autossl_renewal_coverage` defaults to `1`.
           * The value for `notify_autossl_renewal_coverage_user` defaults to `1`.
           * The value for `notify_autossl_renewal_coverage_reduced` defaults to `1`.
           * The value for `notify_autossl_renewal_coverage_reduced_user` defaults to `1`.
           * The value for `notify_autossl_renewal_uncovered_domains` defaults to `1`.
           * The value for `notify_autossl_renewal_uncovered_domains_user` defaults to `1`.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_481"
  /set_autossl_provider:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Update the AutoSSL provider
      description: |-
        This function sets the provider that the AutoSSL feature uses.

        **Note:**

          To disable AutoSSL, call WHM API 1's `disable_autossl` function.
      operationId: set_autossl_provider
      parameters:
      - name: provider
        in: query
        description: |-
          The AutoSSL provider's name. For example:
          * `cPanel`
          * `LetsEncrypt`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPanel
      - name: x_*
        in: query
        description: |-
          Additional parameters which you wish to pass to the AutoSSL provider.

            **Note:**

            These additional parameters begin with the  `x_`  prefix. For example, the Let's Encrypt provider accepts the `x_terms_of_service_accepted parameter`, to which you would pass the URL of the terms of service that you accept.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: (varies)
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_482"
  /set_autossl_user_excluded_domains:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Disable AutoSSL for domain
      description: |-
        This function disables AutoSSL for a specific domain on an account.

        **Warning:**

          This function **replaces** the list of any previously-excluded domains. To add a domain to the list of the user's excluded domains, use the `add_autossl_user_excluded_domains` function.
      operationId: set_autossl_user_excluded_domains
      parameters:
      - name: username
        in: query
        description: The cPanel user's account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      - name: domain
        in: query
        description: |-
          Disable AutoSSL for this domain. If you do **not** include this parameter, the system will **enable** AutoSSL for every domain on the account.

          **Note**

          To disable AutoSSL for multiple domains, duplicate or increment the parameter name. For example, to exclude three domains, you could:
          * Use the `domain` parameter multiple times.
          * Use the `domain`, `domain-1`, and `domain-2` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: cpcalendars.example.com
        examples:
          multiple:
            summary: Multiple domains
            value: domain=example.com&domain-1=example1.com&domain-2=example2.com
          multiple-alternative:
            summary: Multiple domains
            value: domain=example.com&domain=example1.com&domain=example2.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_483"
  /set_commerce:
    get:
      tags:
      - Sitejet
      summary: Set Commerce URL
      description: "This function enables Sitejet Commerce for all users and allows\
        \ the hosting provider to set a custom URL for their payment platform, which\
        \ customers can use to purchase the Sitejet Commerce upgrade."
      operationId: set_commerce
      parameters:
      - name: allowCommerce
        in: query
        description: |-
          * `1` - Sitejet Commerce is enabled.
          * `0` - Sitejet Commerce is disabled.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: storeurl
        in: query
        description: "The URL for the hosting provider's payment platform. If this\
          \ value is not set, the URL will default to the Sitejet Commerce store."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://www.example-store.com/purchase
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_484"
  /set_cpanel_updates:
    get:
      tags:
      - Updates
      summary: Update cPanel & WHM update frequency
      description: This function sets the frequency of cPanel & WHM updates.
      operationId: set_cpanel_updates
      parameters:
      - name: updates
        in: query
        description: |-
          The frequency with which to run cPanel & WHM updates on a server.
          - `daily` — Run updates daily.
          - `manual` — Run updates manually.
          - `never` — Never run updates.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: daily
          enum:
          - daily
          - manual
          - never
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_485"
  /set_cphulk_config_key:
    get:
      tags:
      - cPHulk
      - Settings
      summary: Update login security configuration settings
      description: This function modifies a single cPHulk configuration settings as
        specified.
      operationId: set_cphulk_config_key
      parameters:
      - name: key
        in: query
        description: |-
          The configuration key for the setting to set/modify.

          It should be one of the following:
          *  `block_brute_force_with_firewall` - Whether to use cPanel & WHM's firewall to block brute force attacks.
          *  `block_excessive_brute_force_with_firewall` - Whether to use cPanel & WHM's firewall to block excessive brute force attacks.
          *  `brute_force_period_mins` - The number of minutes over which cPHulk measures all login attempts to a specific user's account.
          *  `brute_force_period_sec` - The number of seconds over which cPHulk measures all login attempts to a specific user's account.
          *  `command_to_run_on_brute_force` - The command to run when an IP address triggers brute force protection.
          *  `command_to_run_on_excessive_brute_force` - The command to run when the system blocks an IP address blocked for a one day period.
          *  `country_blacklist` - The countries to blacklist.
          *  `country_whitelist` - The countries to whitelist.
          *  `ip_based_protection` - Whether to enable IP address-based protection on all requests.
          *  `ip_brute_force_period_mins` - The number of minutes in which cPHulk measures an attacker's login attempts.
          *  `ip_brute_force_period_sec` - The number of seconds in which cPHulk measures an attacker's login attempts.
          *  `is_enabled` - Whether to enable the cPHulk service.
          *  `lookback_period_min` - The number of minutes over which cPHulk counts failed logins against a user.
          *  `lookback_time` - The number of seconds over which cPHulk counts failed logins against a user.
          *  `mark_as_brute` - The maximum number of failures from a specific IP address before cPHulk blocks that address for a two-week period.
          *  `max_failures` - The maximum number of failures that cPHulk allows per account within the defined time range.
          *  `max_failures_byip` - The maximum number of failures from a specific IP address before cPHulk locks out that address.
          *  `notify_on_brute` - Whether cPHulk will send a notification when it detects a brute force attack.
          *  `notify_on_root_login` - Whether cPHulk will send a notification when the root user successfully logs in from an IP address that is **not** on the whitelist.
          *  `notify_on_root_login_for_known_netblock` - Whether cPHulk sends a notification upon successful root login when the IP address is **not** on the whitelist, but from a known netblock.
          *  `username_based_protection` - Whether to enable username-based protection on all requests.
          *  `username_based_protection_for_root` - Whether to allow username-based protection to lock out the root user.
          *  `username_based_protection_local_origin` - Whether to enable username-based protection only on requests that originate from a local IP address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: is_enabled
          enum:
          - block_brute_force_with_firewall
          - block_excessive_brute_force_with_firewall
          - brute_force_period_mins
          - brute_force_period_sec
          - command_to_run_on_brute_force
          - command_to_run_on_excessive_brute_force
          - country_blacklist
          - country_whitelist
          - ip_based_protection
          - ip_brute_force_period_mins
          - ip_brute_force_period_sec
          - is_enabled
          - lookback_period_min
          - lookback_time
          - mark_as_brute
          - max_failures
          - max_failures_byip
          - notify_on_brute
          - notify_on_root_login
          - notify_on_root_login_for_known_netblock
          - username_based_protection
          - username_based_protection_for_root
          - username_based_protection_local_origin
      - name: value
        in: query
        description: |-
          The new value for the specified key. The allowable value depends on which key is being set.

          For the following keys, the value must be 0 or 1:
          * `block_brute_force_with_firewall`
          * `block_excessive_brute_force_with_firewall`
          * `ip_based_protection`
          * `is_enabled`
          * `notify_on_brute`
          * `notify_on_root_login`
          * `notify_on_root_login_for_known_netblock`
          * `username_based_protection`
          * `username_based_protection_for_root`
          * `username_based_protection_local_origin`

          For the following keys, the value must be an integer which specifies a number of minutes or seconds:
          * `brute_force_period_mins`
          * `brute_force_period_sec`
          * `ip_brute_force_period_mins`
          * `ip_brute_force_period_sec`
          * `lookback_period_min`
          * `lookback_time` - This one is in seconds despite not having `sec` in the name

          These keys require the value to be a string containing a command to be run:
          (For a list of commands, read the _Command Variables_ section of our [cPHulk Brute Force Protection](https://go.cpanel.net/whmdocscPHulkBruteForceProtection) documentation.)
          * `command_to_run_on_brute_force`
          * `command_to_run_on_excessive_brute_force`

          These keys require the value to be a string containing a comma-separated list of country codes:
          (For a list of countries, run the WHM API 1 `get_countries_with_known_ip_ranges` function.)
          * `country_blacklist`
          * `country_whitelist`

          The following keys require an integer representing a maximum number of failures
          * `mark_as_brute`
          * `max_failures`
          * `max_failures_byip`
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/value"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_486"
  /set_digest_auth:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Enable or disable Digest Authentication
      description: |-
        This function enables or disables Digest Authentication for an account. Windows Vista®,
        Windows® 7, and Windows® 8 requires that you enable Digest Authentication support in order
        to access your [Web Disk](https://docs.cpanel.net/cpanel/files/web-disk/) over a clear text,
        unencrypted connection.

        **Note:**

        If the server has an SSL certificate that a recognized certificate authority signed and you
        can make an SSL connection over port `2078`, you do **not** need to enable Digest Authentication.
      operationId: set_digest_auth
      parameters:
      - name: enabledigest or digestauth
        in: query
        description: |-
          Whether to enable Digest Authentication for the account.

          * `1` — Enable.
          * `0` — Disable.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: password
        in: query
        description: The account's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: user
        in: query
        description: The account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_487"
  /set_ecommerce:
    get:
      tags:
      - Sitejet
      summary: Set Ecommerce URL
      description: "This function enables Sitejet Commerce for all users and allows\
        \ the hosting provider to set a custom URL for their payment platform, which\
        \ customers can use to purchase the Sitejet Commerce upgrade."
      operationId: set_ecommerce
      parameters:
      - name: allowEcommerce
        in: query
        description: |-
          * `1` - Sitejet Commerce is enabled.
          * `0` - Sitejet Commerce is disabled.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: storeurl
        in: query
        description: "The URL for the hosting provider's payment platform. If this\
          \ value is not set, the URL will default to the Sitejet Commerce store."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://www.example-store.com/purchase
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_488"
      deprecated: true
  /set_enhancement_limit:
    get:
      tags:
      - Resellers
      - Account Enhancement Limit
      - Account Enhancement
      - Account Limit
      summary: Update account enhancement limit
      description: This function sets account enhancement limits for a reseller account.
      operationId: set_enhancement_limit
      parameters:
      - name: account
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: id
        in: query
        description: |-
          The account enhancement's identifier.

          **Note:**
          * You must use an [account enhancement](https://go.cpanel.net/account-enhancements) ID that a 3rd-party plugin defines.
          * To return a list of valid account enhancement IDs, run the WHM API 1 `list_account_enhancements` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: sample-enhancement-id
      - name: limited
        in: query
        description: |-
          Whether the Account Enhancement assignment limit is unlimited.
          * `0` - The assignment is unlimited.
          * `1` - The assignment is limited.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: limit
        in: query
        description: |-
          The account enhancement limit amount. This parameter is only
          required if the `limited` parameter is `1`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 15
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_489"
  /set_local_mysql_root_password:
    get:
      tags:
      - Databases
      - Manage MySQL Server
      summary: Update MySQL root password
      description: |-
        This function resets the root user's password on the local MySQL® server.

        **Important:**

          When you disable the [*MySQL/MariaDB role*](https://go.cpanel.net/howtouseserverprofiles#roles) **and** remote MySQL is **not** already configured, the system **disables** this function.
      operationId: set_local_mysql_root_password
      parameters:
      - name: password
        in: query
        description: The new MySQL root user's password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: update_config
        in: query
        description: |-
          Whether to update the configuration files.

          * `1` — Update.
          * `0` — Do **not** update.

          **Note:**

          This value is always enabled when *localhost* is the active profile, and must be specified explicitly when a remote profile is active.

          **Warning:**

          This parameter updates the `/root/.my.cnf` file with the new password, which could cause problems with the MySQL configuration on the server. If you are unsure, do **not** specify this parameter.

           * If you set this parameter to `0` when *localhost* is the active profile, it will stop communication with the remote MySQL server until you update the profile's password.
           * If you set this parameter to `1` when a remote host is the active profile, it will stop communication with the remote MySQL server until you update the profile's password.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_490"
  /set_manual_mx_redirects:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Add manual mail exchanger redirect record
      description: |-
        This function lets you create a manual Exim mail exchanger (MX) redirect for a domain. An MX redirection lets you bypass the domain's MX lookup via the Domain Name System (DNS). This function adds the manual redirect entries to the /etc/manualmx file.

        **Note:**

          To remove a domain's manual MX redirection, use the WHM API 1 unset_manual_mx_redirect function.
      operationId: set_manual_mx_redirects
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to add a manual MX redirect entry.

          **Note:**

           To add multiple domain entries, increment the parameter. For example, use the domain, domain-1, and domain-2 parameters. For multiple domains, you must include its corresponding mx_host value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: mx_host
        in: query
        description: |-
          The domain or IP address (IPv4 or IPv6) to redirect the domain value's emails to.

          **Note:**

           To add multiple MX hosts, increment the parameter. For example, use the  mx_host,  mx_host-1, and  mx_host-2 parameters. For multiple MX hosts, you must include its corresponding domain value.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mailhostexample.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_491"
  /set_market_product_attribute:
    get:
      tags:
      - Market
      - Product Management
      summary: Update Market provider product
      description: This function sets an attribute for a cPanel Market provider's
        product.
      operationId: set_market_product_attribute
      parameters:
      - name: attribute
        in: query
        description: |-
          The attribute of the cPanel Market provider's product.

          **Note**

          Attributes vary between cPanel Market providers and products.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: price
      - name: product_id
        in: query
        description: The cPanel Market provider product's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "12345"
      - name: provider
        in: query
        description: The cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: value
        in: query
        description: The value to set for the attribute.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "6.00"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_492"
  /set_market_provider_commission_id:
    get:
      tags:
      - Market
      - Provider Management
      summary: Update Market provider commission contact ID
      description: This function sets the contact ID to which a cPanel Market provider
        will send commission.
      operationId: set_market_provider_commission_id
      parameters:
      - name: commission_id
        in: query
        description: The cPanel Store ID to which to send cPanel Market commissions.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      - name: provider
        in: query
        description: The cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_493"
  /set_mysql_password:
    get:
      tags:
      - Databases
      - MySQL Databases
      summary: Update MySQL user password
      description: |-
        This function changes a MySQL® database user's password.

        **Important:**

        When you disable the
        [MySQL/MariaDB role](https://go.cpanel.net/howtouseserverprofiles#roles) **and**
        remote MySQL is **not** already configured, the system **disables** this function.
      operationId: set_mysql_password
      parameters:
      - name: password
        in: query
        description: The database user's new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 123456luggage
      - name: user
        in: query
        description: |-
          The database username. For information about database username
          restrictions, read the
          [MySQL](https://dev.mysql.com/) and [MariaDB](https://mariadb.org/)
          documentation.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: cpuser
        in: query
        description: The cPanel user that controls the database user.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_494"
  /set_nameserver:
    get:
      tags:
      - DNS
      - DNS Cluster Settings
      summary: Update remote DNS server's nameserver software
      description: "This function sets the nameserver software that the remote servers\
        \ in a DNS cluster run. The system queues the nameserver software that you\
        \ select until the HTTP request finishes. Then, it sets the remote servers'\
        \ nameserver software."
      operationId: set_nameserver
      parameters:
      - name: nameserver
        in: query
        description: |-
          The nameserver software.
          * `BIND`
          * `PowerDNS`
          * `Disabled`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: BIND
          enum:
          - BIND
          - PowerDNS
          - Disabled
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_495"
  /set_nsec3_for_domains:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Enable NSEC3 semantics for domain
      description: |-
        This function configures the domain to use [Next Secure Record 3](https://tools.ietf.org/html/rfc4470) (NSEC3) semantics.

        **Note:**

        Only servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.
      operationId: set_nsec3_for_domains
      parameters:
      - name: domain
        in: query
        description: The domain for which to enable NSEC3 semantics.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: nsec3_iterations
        in: query
        description: The number of times that the system re-executes the first resource
          record hash operation.
        required: true
        style: form
        explode: true
        schema:
          maximum: 500
          minimum: 1
          type: integer
          example: 7
      - name: nsec3_narrow
        in: query
        description: |-
          Whether NSEC3 will operate in Narrow mode or Inclusive mode.

            **Note**

          For information about these modes, read  [PowerDNS's DNSSEC documentation](https://doc.powerdns.com/authoritative/dnssec/intro.html).

          * `1` - Narrow mode.
          * `0` - Inclusive mode.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: nsec3_opt_out
        in: query
        description: |-
          Whether the system will create records for **all** delegations.
          * `1` - Create records for **all** delegations.
          * `0` - Create records **only** for secure delegations.

          **Note**

          Only select `1` if you **must** create records for all delegations.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 0
          - 1
      - name: nsec3_salt
        in: query
        description: |-
          The salt value that PowerDNS uses in the hashes.

            **Note:**

           For information about salt values, read  [RFC 5155](https://tools.ietf.org/html/rfc5155#section-3.1.5).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 1a2b3c4d5e6f
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_496"
  /set_postgresql_password:
    get:
      tags:
      - Databases
      - PostgreSQL Databases
      summary: Update PostgreSQL user password
      description: |-
        This function changes a PostgreSQL® database user's password.

        **Important:**

        When you disable the [PostgreSQL role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: set_postgresql_password
      parameters:
      - name: password
        in: query
        description: The database user's new password.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: user
        in: query
        description: The account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: cpuser
        in: query
        description: The database user's owner.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_497"
  /set_primary_servername:
    get:
      tags:
      - Server Administration
      - System Information
      summary: Update server's primary virtual host
      description: |-
        This function sets the primary domain hosted on an IP address and web server port. The primary domain refers to the virtual host that the server returns when a visitor directly accesses the IP address.

        For example, if both `example1.com` and `example2.com` are name-based virtual hosts on IP address `192.168.0.1`, the primary virtual host appears when the visitor accesses the `http://192.168.0.1/` location.

        **Important:**

        When you disable the [Web Server role](https://go.cpanel.net/serverroles#roles), the system **disables** this function.
      operationId: set_primary_servername
      parameters:
      - name: servername
        in: query
        description: The `ServerName` value in Apache's `VirtualHost` section to set
          as primary for the IP address and port type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: hostname.example.com
      - name: type
        in: query
        description: |-
          The type of virtual host to set as primary.
          * `std` — Set the primary domain for the HTTP port. Typically, port `80`.
          * `ssl` — Set the primary domain for the HTTPS port. Typically, port `443`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: std
          default: std
          enum:
          - std
          - ssl
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_498"
  /set_provider_client_configurations:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Update identity provider client configuration
      description: This function sets the values of configuration fields for an external
        authentication identity provider.
      operationId: set_provider_client_configurations
      parameters:
      - name: configurations
        in: query
        description: "The configuration values to set for the\_identity provider.\n\
          \n**Note**\n \nThe items in this parameter depend on the fields that the\
          \ provider implements through OpenID."
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: json
          example: "{\"client_id\":\"victoria\",\"client_secret\":\"secret\"}"
      - name: provider_id
        in: query
        description: The identity provider's key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanelid
      - name: service_name
        in: query
        description: |-
          The cPanel & WHM service's name.
          * `cpaneld` — The cPanel daemon.
          * `whostmgrd` — The WHM daemon.
          * `webmaild` — The Webmail daemon.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpaneld
          enum:
          - cpaneld
          - whostmgrd
          - webmaild
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_499"
  /set_provider_display_configurations:
    get:
      tags:
      - Authentication
      - External Authentication
      summary: Update identity provider login interface appearance
      description: This function sets the display configuration for the login button
        of an external authentication identity provider.
      operationId: set_provider_display_configurations
      parameters:
      - name: configurations
        in: query
        description: The display configuration in JSON-encoded key-value format.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                color:
                  type: string
                  description: The background color of the button on the cPanel interface.
                  format: RGB
                  example: dd4b39
                display_name:
                  type: string
                  description: The display name of the identity provider.
                  example: cPanel
                icon:
                  type: string
                  description: The icon file to display in the button on the cPanel
                    login interface.
                  example: iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAV1JREFUeNrsVtGNwjAMJegGYIRucBmhtwEjdAMyQjYoG2SEG6HcBGUDugFskHOQg1zTlFaN\/\/KkqMh2yYvt53S3KygomIZaE+y9P8BDJ9xXpdSDxT9jwX7dxDJsDMvCuvl33GF1sBwS5O8GX7eVgCabGyRkGJF25v0sJHrcyDH7iMhWEl9zWSD1\/xs1klJn8J\/gZ4WxNdgu8KyiDXGIfmJ7LO6R8CI5rJnwO+Kv0Wb9Z7xlZr+wMt8f\/ANmyCoCMF3CUmP8rOmHip1AM\/8tdbLcjfnL5NigYmIp+ilp5iYRJNkmajtLIBuJiUZ1S+aDKGDjI8tGk+N\/9yuy0ODcGIjL8UEmcXKLDelRDQ5tHcuIkSLQE1WYhIRfMRIEmiV1Z7NES5Rh9nIisRGVWGOyyyflC5fSkDsTmk1KnVBMbForqQw+IVtUCP3KEpdojffHnRGKcq3LZ3pBgST+BRgANXt+WPKE7tYAAAAASUVORK5CYII=
                icon_type:
                  type: string
                  description: The icon file's MIME type.
                  format: mime
                  example: image/svg+xml
                  default: image/svg+xml
                label:
                  type: string
                  description: The text label that will appear on the cPanel login
                    interface.
                  example: Log in with a cPanelID Account
                textcolor:
                  type: string
                  description: The color of the text label on the cPanel login interface.
                  format: RGB
                  example: FFFFFF
            example:
              color: 6677aa
              display_name: Hosting Center Login
              textcolor: 44ffbb
      - name: provider_id
        in: query
        description: The identity provider's key.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanelid
      - name: service_name
        in: query
        description: |-
          The cPanel & WHM service's name.
          * `cpaneld` — The cPanel daemon.
          * `whostmgrd` — The WHM daemon.
          * `webmaild` — The Webmail daemon.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpaneld
          enum:
          - cpaneld
          - whostmgrd
          - webmaild
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_500"
  /set_public_contact:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Update current user's public contact information
      description: This function sets an account's public contact information.
      operationId: set_public_contact
      parameters:
      - name: name
        in: query
        description: |-
          The public contact name of the reseller. If you do not use this
          parameter, the system retains the current setting.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Bob's Hosting
      - name: url
        in: query
        description: |-
          The public contact URL. If you do not use this parameter, the
          system retains the current setting.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: https://bobshosting.net
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_501"
  /set_service_config_key:
    get:
      tags:
      - Server Administration
      - Services
      summary: Update service configuration key
      description: This function configures global properties for specific services
        listed in the `/var/cpanel/conf` directory.
      operationId: set_service_config_key
      parameters:
      - name: key
        in: query
        description: |-
          The configuration key's name.

          * This parameter uses the key names listed in the `/var/cpanel/conf/{service}/main` file, where {service} is the service's name from the service parameter.
          * This function does not support subkeys.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mail_process_size
      - name: service
        in: query
        description: |-
          The service's name.

          * A list of service names exists in the `/var/cpanel/conf` directory.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dovecot
      - name: value
        in: query
        description: The new value for the configuration key.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/value_1"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_502"
  /set_service_proxy_backends:
    get:
      tags:
      - Services
      summary: Update cPanel account service proxying
      description: |-
        This function lets you configure a cPanel account's
        [service proxying](https://go.cpanel.net/ServiceProxying).

        **Note:**

        * If the cPanel account is a [distributed account](https://go.cpanel.net/cPanelGlossary#distributed-cpanel-account),
        and you call this function on the account’s [parent node](https://go.cpanel.net/cPanelGlossary#parent-node),
        the system will propagate the new service proxying to the [child node](https://go.cpanel.net/cPanelGlossary#child-node).
        * If the [Web Server](https://go.cpanel.net/howtouseserverprofiles#roles) role is active
        on the server, this function rebuilds the user's web virtual hosts (vhosts) and restarts
        the web server.
        * If the system cannot rebuild the user's vhosts, the API call will still succeed. However,
        the function returns a failure warning in the metadata.
        * To remove an account's service proxying, use the WHM API 1 `unset_all_service_proxy_backends`
        function.
      operationId: set_service_proxy_backends
      parameters:
      - name: username
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      - name: general
        in: query
        description: |-
          The hostname or IP address to assign as the server that handles
          the account's service proxy requests.

          This parameter defaults to the existing service proxy configuration,
          if one exists.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/general"
      - name: service_group
        in: query
        description: |-
          The name of a service group for which to assign a proxy backend. The
          corresponding `service_group_backend` value will be the service group's
          new proxy backend.

          * `Mail` — The [Mail service group](https://go.cpanel.net/ServiceProxying#Mail).

          This parameter defaults to the existing setting, if one exists.

          **Note:**

           * When you call this parameter, you **must** include a corresponding
           `service_group_backend` value.
           * To add `multiple service_group` values, increment the parameter name. For example,
           `service_group-1`, `service_group-2`, and `service_group-3`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Mail
        examples:
          multiple:
            summary: Add multiple service backend groups.
            value: service-group-0=Mail&service-group-1=Mail&service-group-3=Mail
          single:
            summary: Add a single service backend group.
            value: Mail
      - name: service_group_backend
        in: query
        description: |-
          The hostname or IP address of the server to assign as the corresponding
          `service_group` value's proxy backend server.

          This parameter defaults to the existing setting, if one exists.

          **Note:**

           * When you call this parameter, you **must** include a corresponding `service_group`
           value.
           * To add multiple `service_group_backend` values, increment the parameter name.
           For example, `service_group_backend-1`, `service_group_backend-2`,
           and `service_group_backend-3`.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/service_group_backend"
        examples:
          multiple:
            summary: Add multiple service group backend servers.
            value: service_group_backend-1=mail.example1.com&service_group_backend-2=mail.example2.com&service_group_backend-3=mail.example3.com
          single:
            summary: Add a single service group backend server.
            value: mail.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_503"
  /set_tier:
    get:
      tags:
      - Updates
      summary: Update cPanel & WHM release tier
      description: "This function sets a cPanel & WHM server to a specified [support\
        \ tier](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/)."
      operationId: set_tier
      parameters:
      - name: tier
        in: query
        description: The support tier to use.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: current
          enum:
          - edge
          - current
          - release
          - stable
          - lts
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_504"
  /set_tweaksetting:
    get:
      tags:
      - Configurations
      summary: Update Tweak Settings option
      description: |-
        This function sets an option's value in WHM's
        [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/)
        interface (*WHM >> Home >> Server Configuration >> Tweak Settings*). The
        system stores the keys and values that this function updates in
        the
        [`/var/cpanel/cpanel.config`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-config-file/)
        file.
      operationId: set_tweaksetting
      parameters:
      - name: key
        in: query
        description: |-
          The `cpanel.config` setting name that corresponds to the desired
          setting in WHM's
          [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/)
          interface (*WHM >>Home >> Server Configuration >> Tweak Settings*).
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: proxysubdomains
      - name: module
        in: query
        description: |-
          The
          [*Tweak Settings*](https://docs.cpanel.net/whm/server-configuration/tweak-settings/)
          interface section.

          **Note:**

          The possible section names are:
          * `Apache`
          * `Basic`
          * `Mail`
          * `Main`
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Main
          default: Main
          enum:
          - Apache
          - Basic
          - Mail
          - Main
      - name: value
        in: query
        description: |-
          The value to assign to the setting. If you include this parameter in the call but
          do **not** set a value, the value defaults to an empty value.

          **Note:**

          For more information about the requirements for values in the `cpanel.config`
          file settings, read our
          [`cpanel.config` file](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-config-file/)
          documentation.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "0"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_505"
  /set_up_dns_resolver_workarounds:
    get:
      tags:
      - DNS
      - Resolvers
      summary: Create unbound DNS resolver
      description: |-
        This function creates an [Unbound](http://www.linuxfromscratch.org/blfs/view/svn/server/unbound.html) (`libunbound`) DNS resolver configuration.

        **Important:**

        When you disable the [DNS role](https://go.cpanel.net/howtouseserverprofiles#roles), the system **disables** this function.
      operationId: set_up_dns_resolver_workarounds
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_506"
  /set_user_email_forward_destination:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Update cPanel account email forward destination
      description: |-
        This function sets the destination to which the system forwards a system account's email.

        **Notes:**

        * Usually, the system sends notices about the server's problems and activity to the `root` account.
        * If you do **not** use the `suexec` module, the `nobody` user receives bounce messages from email that CGI scripts send.

        **Important:**

        When you disable the [Receive Mail role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles), the system **disables** this function.
      operationId: set_user_email_forward_destination
      parameters:
      - name: forward_to
        in: query
        description: |-
          The system account name or email address to which you wish to forward email.

          **Note:**

          To forward messages to multiple accounts or email addresses, use a comma-separated list.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user
      - name: user
        in: query
        description: The system account name to forward.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: root
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_507"
  /setacls:
    get:
      tags:
      - Resellers
      - Account Permissions
      summary: Create or update reseller privilege settings
      description: |-
        This function creates or modifies an Access Control List (ACL).

        **Note:**

          For each `acl-*` parameter, any value adds that privilege to the ACL list and no value removes that privilege from the ACL list.

        **Warning:**

          We **strongly** recommend that WHM users create and edit ACLs and ACL privileges through WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface ( *WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges* ).
      operationId: setacls
      parameters:
      - name: reseller
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: acl-acct-summary
        in: query
        description: Whether to allow the reseller to view an account summary.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-add-pkg
        in: query
        description: Whether to allow the reseller to add and remove hosting plans
          (packages).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-add-pkg-ip
        in: query
        description: Whether to allow the reseller to create packages with a dedicated
          IP address.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-add-pkg-shell
        in: query
        description: Whether to allow the reseller to create packages with shell access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-all
        in: query
        description: |-
          Whether to grant the reseller all ACL privileges.

          **Warning:**

           A value of `1` grants `root`-level privileges to the reseller.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-allow-addoncreate
        in: query
        description: Whether to allow the reseller to create packages with addon domains.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-allow-parkedcreate
        in: query
        description: Whether to allow the reseller to create packages with parked
          domains (aliases).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-allow-unlimited-bw-pkgs
        in: query
        description: Whether to allow the reseller to create packages with unlimited
          bandwidth.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-allow-unlimited-disk-pkgs
        in: query
        description: Whether to allow the reseller to create packages with unlimited
          disk space.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-allow-unlimited-pkgs
        in: query
        description: Whether to allow the reseller to create packages with unlimited
          features.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-basic-system-info
        in: query
        description: Whether to allow the reseller to retrieve basic system information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-basic-whm-functions
        in: query
        description: Whether to allow the reseller to access basic cPanel & WHM options.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-clustering
        in: query
        description: Whether to allow the reseller to use DNS clusters.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-cors-proxy-get
        in: query
        description: Whether to allow the reseller to perform Cross-Origin Resource
          Sharing (CORS) HTTP requests.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-cpanel-api
        in: query
        description: "Whether to allow the reseller to execute cPanel API 1, cPanel\
          \ API 2 and UAPI functions via WHM."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-cpanel-integration
        in: query
        description: Whether to allow the reseller to manage how their server and
          its services connect to other servers and services.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-create-acct
        in: query
        description: Whether to allow the reseller to create accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-create-dns
        in: query
        description: Whether to allow the reseller to add DNS zones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-create-user-session
        in: query
        description: |-
          Whether to allow the reseller to create a temporary session user for a specified service.

          **Note:**

           This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-demo-setup
        in: query
        description: Whether to allow the reseller to enable demo mode for accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-digest-auth
        in: query
        description: Whether to allow the reseller to manage Digest Authentication
          support.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-disallow-shell
        in: query
        description: Whether to allow the reseller to create accounts with shell access.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-edit-account
        in: query
        description: Whether to allow the reseller to edit accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-edit-dns
        in: query
        description: Whether to allow the reseller to edit DNS zones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-edit-mx
        in: query
        description: Whether to allow the reseller to edit MX entries.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-edit-pkg
        in: query
        description: Whether to allow the reseller to edit hosting plans (packages).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-generate-email-config
        in: query
        description: Whether to allow the reseller to generate a mobile configuration
          profile for an email account.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-kill-acct
        in: query
        description: Whether to allow the reseller to terminate accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-kill-dns
        in: query
        description: Whether to allow the reseller to remove DNS zones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-limit-bandwidth
        in: query
        description: |-
          Whether to allow the reseller to modify bandwidth limits (quotas).

          **Warning:**

           If you do **not** use resource limits, a value of `1` allows resellers to circumvent package limits for disk space.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-list-accts
        in: query
        description: Whether to allow the reseller to view the list of accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-list-pkgs
        in: query
        description: Whether to allow the reseller to view existing hosting plans
          (packages).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-locale-edit
        in: query
        description: Whether to allow the reseller to create and modify locales on
          the server.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-mailcheck
        in: query
        description: Whether to allow the reseller to troubleshoot mail delivery.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-manage-api-tokens
        in: query
        description: |-
          Whether to allow the reseller to manage API tokens.

          **Note:**

           This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-manage-dns-records
        in: query
        description: Whether to allow the reseller to manage DNS records.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-manage-oidc
        in: query
        description: Whether to allow the reseller to manage external authentication
          for their accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-manage-styles
        in: query
        description: Whether to allow the reseller to manage their server's cPanel
          styles.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-mysql-info
        in: query
        description: Whether to allow the reseller to retrieve MySQL® database and
          user data.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-nameserver-config
        in: query
        description: Whether to allow the reseller to manage nameservers.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-news
        in: query
        description: Whether to allow the reseller to modify the server's news.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-park-dns
        in: query
        description: Whether to allow the reseller to park DNS zones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-passwd
        in: query
        description: |-
          Whether to allow the reseller to change passwords.

          **Note:**

           This privilege allows an API token user to change account passwords and log in with a new password. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-quota
        in: query
        description: |-
          Whether to allow the reseller to modify quotas.

          **Warning:**

           If you do **not** use resource limits, a value of `1` allows resellers to circumvent package limits for disk space.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-rearrange-accts
        in: query
        description: Whether to allow the reseller to rearrange accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-resftp
        in: query
        description: Whether to allow the reseller to resync FTP passwords.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-restart
        in: query
        description: Whether to allow the reseller to restart services.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-show-bandwidth
        in: query
        description: Whether to allow the reseller to view account bandwidth usage.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-ssl
        in: query
        description: Whether to allow the reseller to perform SSL site management.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-ssl-buy
        in: query
        description: Whether to allow the reseller to purchase SSL certificates.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-ssl-gencrt
        in: query
        description: Whether to allow the reseller to generate SSL certificates.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-ssl-info
        in: query
        description: Whether to allow the reseller to view their server's SSL information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-stats
        in: query
        description: Whether to allow the reseller to view server information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-status
        in: query
        description: Whether to allow the reseller to view the server's status.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-suspend-acct
        in: query
        description: Whether to allow the reseller to suspend or unsuspend accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-thirdparty
        in: query
        description: Whether to allow the reseller to manage third-party services.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-track-email
        in: query
        description: Whether to allow the reseller to view reports about email message
          delivery attempts from their account.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-upgrade-account
        in: query
        description: Whether to allow the reseller to upgrade or downgrade accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acl-viewglobalpackages
        in: query
        description: "Whether to allow the reseller to use all global packages. For\
          \ more information, read our [reseller packages](https://go.cpanel.net/resellerpackages)\
          \ documentation."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
      - name: acllist
        in: query
        description: |-
          The ACL to assign to the reseller.

          **Warning:**

           Functions should **either** use this parameter, or a combination of the `acl-*` parameters below. **Do not** include both in a single function.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: my_acl_list
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_508"
  /sethostname:
    get:
      tags:
      - Server Administration
      - System Information
      summary: Update server's hostname
      description: |-
        This function changes the server's hostname.

        **Warning:**

        * Do **not** select a hostname that begins with `www` or a number, or a
        hostname that ends with a hyphen (`-`) character.
        * You **must** use a fully-qualified domain name (FQDN) that contains two periods
        (for example, `hostname.example.com`).
        * Do **not** choose a hostname that a cPanel account on your server will use.
        * Do **not** choose a potential service subdomain (proxy subdomain) as a hostname
        (for example, `cpanel.example.com` or `whm.example.com`).

        **Important:**

        If you update your hostname, the system blocks user access to cPanel's [*Calendars and Contacts*](https://go.cpanel.net/calendars) interface (*cPanel >> Home >> Email >> Calendars and Contacts*).

        The system restores access to this interface after the hostname update finishes.
        For more information, read our
        [Interface Lock Scripts](https://docs.cpanel.net/knowledge-base/cpanel-product/interface-lock-scripts/)
        documentation.

        **Note:**

        Whenever you change the server's hostname, you **must** use one of the following methods:
          * Use WHM's
          [*Change Hostname*](https://docs.cpanel.net/whm/networking-setup/change-hostname/)
          interface (*WHM >> Home >> Networking Setup >> Change Hostname*).
          * Call WHM API 1's `sethostname` function.
          * Run the
          [`/usr/local/cpanel/bin/set_hostname` utility](https://docs.cpanel.net/whm/scripts/the-set_hostname-utility/)
          as the `root` user.
        These methods ensure that all of the necessary system and service changes occur.
      operationId: sethostname
      parameters:
      - name: hostname
        in: query
        description: "The server's new hostname.\n\n**Important:**\n\nThe server's\
          \ hostname should **never** be identical to the domain name. For example,\n\
          if the domain is `example.com`, you could use a hostname such as `server1.example.com`,\n\
          but **not** `example.com`.  "
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: hostname
          example: hostname.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_509"
  /setminimumpasswordstrengths:
    get:
      tags:
      - Server Administration
      - Passwords
      summary: Update minimum password strength
      description: |-
        This function sets the minimum password strength for cPanel & WHM
        accounts.

        **Note**

        If you do **not** specify a value for a parameter, the system will retain the existing setting.
      operationId: setminimumpasswordstrengths
      parameters:
      - name: cpaddons
        in: query
        description: The minimum password strength for cPAddons.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      - name: createacct
        in: query
        description: The minimum password strength for new cPanel accounts.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      - name: default
        in: query
        description: The minimum password strength for all services.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      - name: list
        in: query
        description: The minimum password strength for mailing lists.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      - name: mysql
        in: query
        description: The minimum password strength for MySQL® database users.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      - name: passwd
        in: query
        description: The minimum password strength for WHM user or system accounts.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      - name: postgres
        in: query
        description: The minimum password strength for PostgreSQL® database users.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      - name: sshkey
        in: query
        description: The minimum password strength for SSH keys.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      - name: virtual
        in: query
        description: "The minimum password strength for mail, FTP, Web Disk, and WebDAV\
          \ accounts."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 50
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_510"
  /setresellerips:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Add IP addresses to reseller
      description: |-
        This function adds IP addresses to a reseller's account.

        **Note:**

        To assign a main IP address to a reseller's account, call the WHM API 1 `setresellermainip` function.

        For more information, read our [Manage Reseller's IP Delegation](https://go.cpanel.net/whmdocsManageResellersIPDelegation) documentation.
      operationId: setresellerips
      parameters:
      - name: user
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: delegate
        in: query
        description: |-
          Whether to allocate the reseller a dedicated IP address.

          * `1` — Restrict the reseller's account to its dedicated IP address.
          * `0` — Allow the user to dedicate any available IP address to an owned account.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
      - name: ips
        in: query
        description: |-
          The IP addresses to allocate to the reseller's account.

          **Note:**

          * If you do **not** use this parameter, the function clears the reseller's IP address list.
          * Use a comma-separated list to allocate multiple IP addresses.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.0.20
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_511"
  /setresellerlimits:
    get:
      tags:
      - Resellers
      - Account Limits
      summary: Update reseller's bandwidth and disk quotas
      description: This function sets a reseller's bandwidth and disk quotas.
      operationId: setresellerlimits
      parameters:
      - name: user
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: account_limit
        in: query
        description: |-
          The reseller's maximum total number of accounts.

          **Important:**

          The system **only** enforces this maximum if you set the `enable_account_limit`
          value to `1`.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 10
      - name: bandwidth_limit
        in: query
        description: |-
          The reseller's total bandwidth limit.

          **Important:**

          The system **only** enforces this limit if you set the `enable_resource_limits`
          value to `1`.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: megabytes
          example: 1073741824
      - name: diskspace_limit
        in: query
        description: |-
          The reseller's total disk space usage limit.

          **Important:**

          The system **only** enforces this limit if you set the `enable_resource_limits`
          value to `1`.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: megabytes
          example: 1073741824
      - name: enable_account_limit
        in: query
        description: |-
          Whether to limit the reseller's total number of accounts.

          * `1` — Limit.
          * `0` — Do **not** limit.

          **Note:**

          Use this parameter with the `account_limit` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 1
          - 0
      - name: enable_overselling
        in: query
        description: |-
          Whether the reseller can oversell accounts.

          * `1` — The reseller can oversell accounts.
          * `0` — The reseller **cannot** oversell accounts.

          **Important:**

          The system **only** enforces this limit if you set the `enable_resource_limits`
          value to `1`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: enable_overselling_bandwidth
        in: query
        description: |-
          Whether the reseller can oversell bandwidth.

          * `1` — The reseller can oversell bandwidth.
          * `0` — The reseller **cannot** oversell bandwidth.

          **Important:**

          The system **only** enforces this limit if you set the `enable_resource_limits` and
          the `enable_overselling` values to `1`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: enable_overselling_diskspace
        in: query
        description: |-
          Whether the reseller can oversell disk space.

          * `1` — The reseller can oversell disk space.
          * `0` — The reseller **cannot** oversell disk space.

          **Important:**

          The system **only** enforces this limit if you set the `enable_resource_limits`
          and the `enable_oversellng` values to `1`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: enable_package_limit_numbers
        in: query
        description: |-
          Whether to apply package limit numbers to the reseller.

          * `1` — Enable package limit numbers.
          * `0` — Disable package limit numbers.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: enable_package_limits
        in: query
        description: |-
          Whether to apply package limits to the reseller.

          * `1` — Enable package limits.
          * `0` — Disable package limits.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          enum:
          - 1
          - 0
      - name: enable_resource_limits
        in: query
        description: |-
          Whether to limit the reseller's resources.

          * `1` — Limit resources.
          * `0` — Do **not** limit resources.

          **Note:**

          Use this parameter with the `bandwidthlimit`, `diskspace_limit`,
          `enable_overselling`, `enable_overselling_bandwidth`, `enable_overselling_diskspace`,
          `enable_overselling`, `enable_package_limits`, and `enable_package_limit_numbers`
          parameters.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 1
          - 0
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_512"
  /setresellermainip:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Update reseller's main IP address
      description: |-
        This function assigns a main IP address to a reseller's account.

        **Note:**

          To assign additional IP addresses to a reseller's account, call the WHM API 1 `setresellerips` function.
      operationId: setresellermainip
      parameters:
      - name: ip
        in: query
        description: The IP address to assign to the reseller's account as the main
          shared IP address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.0.20
      - name: user
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_513"
  /setresellernameservers:
    get:
      tags:
      - Resellers
      - Account Settings
      summary: Update reseller's assigned nameservers
      description: This function assigns nameservers to a reseller's account.
      operationId: setresellernameservers
      parameters:
      - name: user
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: nameservers
        in: query
        description: |-
          A comma-separated list of the nameserver domains to assign to the reseller's account.

          **Note:**

          If you do **not** use this parameter, the function resets the reseller's nameservers
          to use the server default.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple nameservers
            value: "ns1.example.com,ns2.example.com"
          single:
            summary: A single nameserver
            value: ns1.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_514"
  /setresellerpackagelimit:
    get:
      tags:
      - Resellers
      - Account Limits
      summary: Update reseller's hosting plan limits
      description: This function limits the packages that a reseller assigns to cPanel
        accounts.
      operationId: setresellerpackagelimit
      parameters:
      - name: user
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: allowed
        in: query
        description: |-
          Whether the reseller can access the package hosting plan.
          * `1` — Enable access.
          * `0` — Disable access

          **Note:**

          If you use this parameter, you **must** also include the `package` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      - name: no_limit
        in: query
        description: |-
          Whether to grant the reseller unlimited package use.
          * `1` — Grant the reseller unlimited package use.
          * `0` — Use package limits.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: number
        in: query
        description: |-
          The maximum number of accounts to which the reseller can assign the package hosting plan.

          **Note:**

          * If you use this parameter, you **must** also include the `package` parameter.
          * If you set a value for this parameter **and** set the `allowed` parameter to `0`, the reseller **cannot** use the hosting plan.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 5
      - name: package
        in: query
        description: |-
          A hosting plan (package), to modify the reseller's access settings for it.

          **Note:**

           Use this parameter with the `number` or `allowed` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: package1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_515"
  /setresolvers:
    get:
      tags:
      - DNS
      - Resolvers
      summary: Update server's resolver nameservers
      description: |-
        This function configures the server's resolver nameservers.

        **Warning:**

        * The nameservers that the server uses as resolvers **must** function correctly. If they do not, the server will experience performance and stability issues.
        * **Never** set a resolver nameserver to `127.0.0.1` on a cPanel & WHM server.
      operationId: setresolvers
      parameters:
      - name: nameserver1
        in: query
        description: The server's primary resolver nameserver.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/nameserver1"
      - name: nameserver2
        in: query
        description: The server's secondary resolver nameserver.
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/nameserver2"
      - name: nameserver3
        in: query
        description: The server's tertiary resolver nameserver.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/nameserver3"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_516"
  /setsiteip:
    get:
      tags:
      - IP Addresses
      - IPv4 Address Settings
      summary: Update domain or cPanel account IP address
      description: This function changes a site's or account's IP address.
      operationId: setsiteip
      parameters:
      - name: ip
        in: query
        description: The site's or user's IPv4 address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: ipv4
          example: 192.168.4.10
      - name: domain
        in: query
        description: |-
          The domain's name.

          **Note:**

          You **must** use either the `user` parameter or `domain` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: example.com
      - name: user
        in: query
        description: |-
          The user's username.

          **Note:**

          You **must** use either the `user` parameter or `domain` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_517"
  /setupreseller:
    get:
      tags:
      - Resellers
      - Reseller Account Management
      summary: Enable cPanel account's reseller status
      description: |-
        This function grants reseller status to an account.

        **Note:**

        This function grants reseller status to an **existing** account. You **cannot** create a new account with this function.
      operationId: setupreseller
      parameters:
      - name: user
        in: query
        description: The account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: makeowner
        in: query
        description: |-
          Whether to set the account to own itself.
          * `1` — Make the account own itself.
          * `0` — Keep the account's current owner.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_518"
  /showbw:
    get:
      tags:
      - Bandwidth and Disk Quotas
      summary: Return cPanel account bandwidth information
      description: This function retrieves account bandwidth information.
      operationId: showbw
      parameters:
      - name: month
        in: query
        description: |-
          The month to query, in numeric format.

          This value defaults to the current month.
        required: false
        style: form
        explode: true
        schema:
          maximum: 12
          minimum: 1
          type: integer
          example: 12
      - name: search
        in: query
        description: |-
          A [Perl Compatible Regular Expression (PCRE)](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions)
          that filters the results. The system matches the PCRE against the `searchtype`
          parameter's specified type.

          If you do **not** specify a value for **both** the `searchtype` and `search`
          parameters, the function does **not** use the `search` criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ownername
      - name: searchtype
        in: query
        description: |-
          The account information to query.

          * `domain` — Match domains against the `search` regular expression.
          * `owner` — Match the WHM user who owns the account against the `search`
          regular expression.
          * `user` — Match usernames against the `search` regular expression.
          * `ip` — Match IP addresses against the `search` regular expression.
          * `package` — Match hosting plans (packages) against the `search` regular
          expression.

          If you do **not** specify a value for **both** the `searchtype` and `search`
          parameters, the function does **not** use the `searchtype` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: owner
          enum:
          - domain
          - owner
          - user
          - ip
          - package
      - name: showres
        in: query
        description: |-
          The reseller to query.

          If you do **not** specify a value, the function queries **all** users.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: reseller_user
      - name: year
        in: query
        description: |-
          The year to query.

          This value defaults to the current year.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 2019
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_519"
  /start_autossl_check_for_all_users:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Start AutoSSL check for all cPanel accounts
      description: This function performs an AutoSSL certificate check in the background
        for all cPanel users that have the feature enabled.
      operationId: start_autossl_check_for_all_users
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_520"
  /start_autossl_check_for_one_user:
    get:
      tags:
      - SSL
      - Auto-Generated Certificates
      summary: Start cPanel account AutoSSL check
      description: This function performs an AutoSSL certificate check in the background for
        a cPanel user.
      operationId: start_autossl_check_for_one_user
      parameters:
      - name: username
        in: query
        description: The cPanel username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_521"
  /start_background_mysql_upgrade:
    get:
      tags:
      - Databases
      - Manage MySQL Server
      summary: Start background MySQL upgrade
      description: |-
        This function upgrades MySQL® or MariaDB® in the background. This will reinstall MySQL® or MariaDB® if the version given is the installed version.

        **Important:**

        When you disable the [MySQL/MariaDB server role](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles/#roles) and remote MySQL® is **not** already configured, the system **disables** this function.
      operationId: start_background_mysql_upgrade
      parameters:
      - name: version
        in: query
        description: The desired MySQL® or MariaDB® version. Must contain one decimal.
        required: true
        style: form
        explode: true
        schema:
          type: number
          example: 5.7
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_522"
  /start_background_pkgacct:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Back up an account using the pkgacct script
      description: |-
        This function backs up an account with [the pkgacct script](https://go.cpanel.net/pkgacctscript).

        **Note:**

        - The `/usr/local/cpanel/scripts/pkgacct` script logs results to the `/var/cpanel/pkgacct_sessions/session_id/` directory, where `session_id` represents the backup session's ID.
        - The target system streams the output of this function with the `/usr/local/cpanel/whostmgr/docroot/cgi/live_tail_log.cgi` script on the source system. Users should **not** directly call this script.
      operationId: start_background_pkgacct
      parameters:
      - name: user
        in: query
        description: The cPanel account to back up.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: compressionsetting
        in: query
        description: |-
          Whether to compress the data in .gzip format.
          * `compress` - Compress the data.
          * `null` - Do **not** compress the data.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: compress
          enum:
          - compress
      - name: incremental
        in: query
        description: |-
          Whether to update the destination file with any new content since the previous backup.
          This parameter also removes any content that no longer exists on the account.
          If the destination file does **not** exist, the function creates a new file in that location.
          * `1` — Create an incremental archive file.
          * `0` — Do **not** create an incremental archive file.

          **Note:**

           When you use this parameter, the system creates the backup as an uncompressed archive.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: low_priority
        in: query
        description: |-
          Whether to run the background task with a reduced priority.
          * `1` — Run the backup as a low priority task.
          * `0` — Run the backup with normal priority.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: mysqlver
        in: query
        description: |-
          The minimum version of MySQL® that the system requires to restore the backed up database files.

          **Note:**

          - You can view the server's installed version of MySQL in the `/var/cpanel/cpanel.config` file.
          - This parameter defaults to the current installed version of MySQL.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "5.5"
      - name: serialized_output
        in: query
        description: |-
          Whether to encode each line of the script's output in JSON format in order to allow the `live_tail_log.cgi` script to stream it.
          * `1` — Serialize the output.
          * `0` — Do **not** serialize the output.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipacctdb
        in: query
        description: |-
          Whether to exclude the account's databases from the cpmove archive.
          * `1` — Do **not** back up the account's databases.
          * `0` — Back up the account's databases.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipapitokens
        in: query
        description: |-
          Whether to exclude the account's API tokens from the archive.
          * `1` — Do **not** back up the account's API tokens.
          * `0` — Back up the account's API tokens.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipauthnlinks
        in: query
        description: |-
          Whether to exclude the account's external authentication credentials from the archive.
          * `1` — Do **not** back up the account's external authentication credentials.
          * `0` — Back up the account's external authentication credentials.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipbwdata
        in: query
        description: |-
          Whether to exclude the account's bandwidth data from the archive.
          * `1` — Do **not** back up the account's bandwidth data.
          * `0` — Back up the account's data.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipdnssec
        in: query
        description: |-
          Whether to exclude the account's DNSSEC configuration from the archive.
          * `1` — Do **not** back up the account's DNSSEC configuration.
          * `0` — Back up the account's DNSSEC configuration.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipdnszones
        in: query
        description: |-
          Whether to exclude the account's DNS zone file information from the archive.
          * `1` — Do **not** back up the account's DNS zone file information.
          * `0` — Back up the account's DNS zone file information.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipftpusers
        in: query
        description: |-
          Whether to exclude the account's FTP user accounts from the archive.
          * `1` — Do **not** back up the account's FTP user accounts.
          * `0` — Back up the account's FTP user accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skiphomedir
        in: query
        description: |-
          Whether to skip the home directory's contents.
          * `1` — Do **not** back up the account's home directory.
          * `0` — Back up the account's home directory.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skiplinkednodes
        in: query
        description: |-
          Whether to exclude the account's cPanel & WHM linked server nodes configuration from the archive.
          * `1` — Do **not** back up the account's linked server nodes configuration.
          * `0` — Back up the account's linked server nodes configuration.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skiplogs
        in: query
        description: |-
          Whether to exclude the account's log files from the archive.
          * `1` — Do **not** back up the account's log files.
          * `0` — Back up the account's log files.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipresellerconfig
        in: query
        description: |-
          Whether to exclude the account's reseller privileges from the archive.
          * `1` — Do **not** back up the account's reseller privileges.
          * `0` — Back up the account's reseller privileges.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipshell
        in: query
        description: |-
          Whether to exclude the account's shell information and privileges from the archive.
          * `1` — Do **not** back up the account's shell information and privileges.
          * `0` — Back up the account's shell information and privileges.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: skipvhosttemplates
        in: query
        description: |-
          Whether to exclude the account's virtual host (vhost) templates from the archive.
          * `1` — Do **not** back up the account's vhost templates.
          * `0` — Back up the account's vhost templates.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: split
        in: query
        description: |-
          Whether to create the cpmove archive in chunks.
          * `1` — Create the archive in chunks.
          * `0` — Create a single archive file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: tarroot
        in: query
        description: |-
          The path to the directory in which you wish to store the cpmove archive.

          **Note:**

          This parameter defaults to `/home/user`, where `user` represents the username of the account.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /home/user
      - name: use_backups
        in: query
        description: |-
          Whether to use the account's last known successful backup as a template when the script creates the cpmove archive, if any exist.
          * `1` — Use the account's last known successful backup as a template, if any exist.
          * `0` — Do **not** use the account's last known successful backup.

          **Note:**

           This parameter may reduce the amount of time that the backup process requires.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_523"
  /start_cpanel_update:
    get:
      tags:
      - Server Administration
      - Updates
      summary: Start cPanel & WHM update
      description: This function starts an update of cPanel & WHM.
      operationId: start_cpanel_update
      parameters:
      - name: mode
        in: query
        description: |-
          The cPanel & WHM update’s mode of operation.

          * null — Only reinstall cPanel & WHM if a newer version is available.
          * `force`   — Force a reinstall of cPanel & WHM, even if the system is up to date.
          * `sync`    — Update the currently-installed version of cPanel & WHM instead of downloading
          a newer version. This ensures the current version installed has the correct files.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
          example: force
          enum:
          - force
          - sync
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_524"
  /start_local_cpmove_restore:
    get:
      tags:
      - Backups
      - Backup or Restore
      summary: Restore one cPanel account from a backup
      description: This function performs a full restoration of a single cPanel account
        from a `cpmove` tarball.
      operationId: start_local_cpmove_restore
      parameters:
      - name: cpmovepath
        in: query
        description: |-
          A filepath that contains the account's `cpmove` tarball or the directory path that contains the extracted `cpmove` tarball.

            **Note:**

          You can use the [pkgacct script](https://go.cpanel.net/ThepkgacctScript) to create a `cpmove` tarball.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: /home/cpmove-newacct.tar.gz
      - name: dedicated_ip
        in: query
        description: |-
          Whether to assign the account a dedicated IP address.
          * `1` - Assign a dedicated IP address.
          * `0` - Do **not** assign a dedicated IP address.

            **Note:**

          The system **must** have an available IP address.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: delete_archive
        in: query
        description: |-
          Whether to delete the `cpmove` tarball or extracted directory, given in the `cpmovepath` parameter, after the system completes the account restoration.
          * `1` - Delete the `cpmove` tarball or extracted directory.
          * `0` - Do **not** delete the `cpmove` tarball or extracted directory.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: mail_location
        in: query
        description: |-
          The server on which the account's email will reside after the system completes the transfer.
          * `.local` - Use the local server the account is being restored on.
          * `.existing` - Use the server location defined in the account's backup data. The system defaults to the `.local` parameter if this does **not** work.
          * `ALIAS` - Use a [cPanel & WHM linked node server's alias](https://go.cpanel.net/whmlinkednodes). For example, the `example-alias` for the `servernode.example.com` domain. The system defaults to the `.local` parameter if this does **not** work.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/mail_location"
      - name: overwrite
        in: query
        description: |-
          Whether to overwrite an existing account on the server, if one exists.
          * `1` - Overwrite an existing account.
          * `0` - Do **not** overwrite an existing account on the server.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: restricted
        in: query
        description: |-
          Whether to perform a restricted restore for the account. The system will perform security checks on the backup file. If you do not trust the source of the account backup with `root` access to your server, use this parameter to protect your server.

          * `1` - Perform a restricted restore.
          * `0` - Do **not** perform a restricted restore.

          **Important:**

          * This parameter is **experimental**. Do **not** consider it as an effective security control. For more information, read our [restricted restore](https://go.cpanel.net/whmdocsTransferorRestoreacPanelAccount#restricted-restore) documentation.
          * If the account owns PostgreSQL® databases, your server **must** use PostgreSQL version 8.4 or newer.
          * This parameter **only** allows restored accounts to use the `noshell` or [`jailshell`](https://go.cpanel.net/VirtFSJailedShell) environments. If the account uses a different shell, the system will set the account to use the `noshell` environment.
          * If there is an issue with the backup file, the system will **not** restore that part of the backup file. It will also adds a warning to the log file.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: update_a_records
        in: query
        description: |-
          Whether to perform one of the following actions to the account's A records:
          * `all` - Replace **all** instances of the original server's IP address with the new server's IP address.
          * `basic` - **Only** replace the cPanel provided A records.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: all
          default: all
          enum:
          - all
          - basic
      - name: username
        in: query
        description: The username to give to the restored cPanel account. This will
          default to the username provided in the backup files.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_525"
  /start_profile_activation:
    get:
      tags:
      - Server Administration
      - Server Profiles
      summary: Update server node profile
      description: |-
        This function activates a server profile.

        **Note:**

        * If a server profile enables a service, the system will **also** enable service monitoring. To disable a service's monitoring, use WHM's [*Service Manager*](https://docs.cpanel.net/whm/service-configuration/service-manager/) interface (*WHM >> Home >> Service Configuration >> Service Manager*).
        * For a list of the server's available profiles, use the `get_available_profiles` function.
      operationId: start_profile_activation
      parameters:
      - name: code
        in: query
        description: |-
          The code value of the server profile.

          * `STANDARD` — The Standard profile.
          * `DATABASENODE` — The Database profile.
          * `MAILNODE` — The Mail profile.
          * `DNSNODE` — The DNS profile.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: MAILNODE
          enum:
          - STANDARD
          - DATABASENODE
          - MAILNODE
          - DNSNODE
      - name: optional
        in: query
        description: |-
          The optional roles to enable or disable with the profile, in
          JSON format. You **must** URI-encode this value.

          **Note:**

          * As an example, if you wished to enable `SpamFilter` and disable `DNS`, the JSON object would be:

             `{ "SpamFilter": 1, "DNS": 0 }`.

          * This parameter does **not** enable optional roles for profiles that do **not** possess any optional roles.
          * If you do not pass this parameter, the system **disables** a profile's optional roles, if any exist.
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: integer
                description: |-
                  Each key is a role. Each key **must** have one of the following values:

                  * `1` — Enable the role.
                  * `0` — Disable the role.
                example: 0
                enum:
                - 1
                - 0
              example:
                DNS: 0
                SpamFilter: 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_526"
  /start_transfer_session:
    get:
      tags:
      - Transfers
      - cPanel Account Transfer
      summary: Start or restart transfer session
      description: |-
        This function starts or restarts a transfer session.

        **Note:**

          For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.
      operationId: start_transfer_session
      parameters:
      - name: transfer_session_id
        in: query
        description: The transfer session's ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: exampleservercopya20140206192428NtyW
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_527"
  /suspend_outgoing_email:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Suspend cPanel account outgoing email
      description: |-
        This function sets Exim's queue to suspend and force failure for email that a user sends to an external address.

        **Note:**

          If mail for a cPanel user's account is suspended, the system will reject their email before the mail server puts it in queue.
      operationId: suspend_outgoing_email
      parameters:
      - name: user
        in: query
        description: |-
          The cPanel account.

          **Note**

          You **cannot** suspend the `root` user's outgoing email with this function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_528"
  /suspendacct:
    get:
      tags:
      - Suspensions
      summary: Suspend cPanel account
      description: This function suspends an account.
      operationId: suspendacct
      parameters:
      - name: user
        in: query
        description: The account to suspend.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: disallowun
        in: query
        description: |-
          Whether to allow only the `root` user to unsuspend the account.
          * `1` - **Only** the `root` user can unsuspend the account.
          * `0` - The `root` user or the account's owner can unsuspend the account.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 0
          enum:
          - 0
          - 1
      - name: leave-ftp-accts-enabled
        in: query
        description: |-
          Whether to skip suspension of the account's FTP accounts.
          * `1` - Do **not** suspend the FTP accounts.
          * `0` - Suspend the FTP accounts.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: reason
        in: query
        description: |-
          The reason for suspension.

          **Important:**

           We strongly recommend that you provide a reason for suspension whenever you suspend an account.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Nonpayment
          default: Unknown
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_529"
  /suspendreseller:
    get:
      tags:
      - Resellers
      - Reseller Account Management
      summary: Suspend reseller
      description: This function suspends a reseller account.
      operationId: suspendreseller
      parameters:
      - name: user
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: disallow
        in: query
        description: |-
          Whether to allow only the `root` user to unsuspend the account.
          * `1` — **Only** the `root` user can unsuspend the account.
          * `0` — The `root` user or the account's owner can unsuspend the account.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      - name: reason
        in: query
        description: |-
          The reason for the reseller's suspension.

          **Note:**

           We **strongly** recommend that you **always** include a reason for suspension.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Nonpayment
      - name: reseller-only
        in: query
        description: |-
          Whether to suspend only the reseller account.
          * `1` — The function **only** suspends the reseller account. The function will **not** suspend the accounts that the reseller account owns.
          * `0` — The function suspends the reseller account **and** the accounts that it owns.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_530"
  /system_needs_reboot:
    get:
      tags:
      - Server Administration
      - System Information
      summary: Return whether system needs reboot
      description: |-
        This function determines if your system requires a reboot to apply quotas, software package updates, or kernel updates.

        **Important:**

        This function **cannot** detect whether your system needs a reboot if you use cPanel & WHM inside of a [Linux Container (LXC)](https://docs.cpanel.net/knowledge-base/general-systems-administration/linux-containers/).
      operationId: system_needs_reboot
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_531"
  /systemloadavg:
    get:
      tags:
      - Server Administration
      - System Information
      summary: Return system load average
      description: |-
        This function retrieves the system's load average.

        **Note:**

        The values the function returns represent a percentage of the CPU's processor capacity.
      operationId: systemloadavg
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_532"
  /terminate_cpuser_mailbox_sessions:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Stop cPanel account IMAP and POP3 connections
      description: |-
        This function terminates all IMAP and POP3 connections for a cPanel account.

        **Note:**

        This function ends connections for every email address, which includes the [default address](https://go.cpanel.net/cpaneldocsDefaultAddress).
      operationId: terminate_cpuser_mailbox_sessions
      parameters:
      - name: username
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_533"
  /terminatereseller:
    get:
      tags:
      - Resellers
      - Reseller Account Management
      summary: Delete reseller and reseller's cPanel accounts
      description: |-
        This function deletes a reseller and **all** of the reseller's cPanel accounts.

        **Warning:**

        * You **cannot** recover deleted accounts. **Use this function with extreme caution.**
        * This function deletes the reseller account and **all** of the accounts that the reseller
        owns.
        * To remove reseller privileges from an account but **not** delete the reseller's account
        or any accounts that the reseller owns, use the WHM API 1 `unsetupreseller` function.
      operationId: terminatereseller
      parameters:
      - name: terminatereseller
        in: query
        description: |-
          Whether to terminate the reseller's main account.

          * `1` — Terminate.
          * `0` — Do **not** terminate.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 1
          - 0
      - name: user
        in: query
        description: The reseller account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_534"
  /ticket_create_stub_ticket:
    get:
      tags:
      - Support Tickets
      - Ticket Management
      summary: Create initial Support ticket request
      description: |-
        This function creates a stub ticket. The system uses the stub ticket
        to create a cPanel support ticket.

        **Note:**

        This function is **not** available through the command line. You **must** call
        it as a request body.
      operationId: ticket_create_stub_ticket
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_535"
      x-cpanel-cli-support: false
  /ticket_get_support_agreement:
    get:
      tags:
      - Support Tickets
      - Ticket Management
      summary: Import Technical Support Agreement text
      description: |-
        This function retrieves the WebPros International, LLC Technical Support Agreement text
        and metadata about the user's agreement status from the
        [cPanel Customer Portal](https://tickets.cpanel.net/).

        **Note:**
        * This function is **not** available through the command line. You **must** call it
        as a request body.
        * To use this function, you **must** set up a cPanelID token in your current session.
        For more information, read our
        [cPanelID](https://docs.cpanel.net/knowledge-base/accounts/cpanelid/)
        documentation.
      operationId: ticket_get_support_agreement
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_536"
      x-cpanel-cli-support: false
  /ticket_get_support_info:
    get:
      tags:
      - Support Tickets
      - Ticket Management
      summary: Import customer information from Customer Portal
      description: |-
        This function retrieves the license holder's support-related information.

        **Note:**

        * This function is **not** available through the command line. You **must** call
        it as a request body.
        * To use this function, you **must** set up a cPanelID token in your current session.
        For more information, read our
        [cPanelID](https://docs.cpanel.net/knowledge-base/accounts/cpanelid/)
        documentation.
      operationId: ticket_get_support_info
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_537"
      x-cpanel-cli-support: false
  /ticket_grant:
    get:
      tags:
      - Support Tickets
      - Support Access
      summary: Create Support SSH key
      description: |-
        This function installs an SSH key from the
        [cPanel Customer Portal](https://tickets.cpanel.net/).

        **Note:**

        This function is **not** available through the command line. You **must** call
        it as a request body.
      operationId: ticket_grant
      parameters:
      - name: secure_id
        in: query
        description: The support ticket's secure ID token.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: rofh411bv8
      - name: server_num
        in: query
        description: The server's support ticket ID number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      - name: ticket_id
        in: query
        description: The support ticket's ID number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 999999999
      - name: ssh_username
        in: query
        description: "The username for incoming SSH connections before they escalate\
          \ to the `root` user. If you do **not** specify a value, the function retrieves\
          \ the user from the support ticket."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_538"
      x-cpanel-cli-support: false
  /ticket_list:
    get:
      tags:
      - Support Tickets
      - Ticket Management
      summary: Return Support ticket status
      description: |-
        This function lists all active and open support tickets from the
        [cPanel Customer Portal](https://tickets.cpanel.net/).

        **Note:**

        This function is **not** available through the command line. You **must** call
        it as a request body.
      operationId: ticket_list
      parameters:
      - name: server_num
        in: query
        description: The server's ID number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 2
      - name: ticket_id
        in: query
        description: The ticket's ID number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 999999999
      - name: ssh_username
        in: query
        description: "The username for incoming SSH connections before they escalate\
          \ to the `root` user. If you do not specify a value, the function will select\
          \ the user from the ticket."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_539"
      x-cpanel-cli-support: false
  /ticket_remove_closed:
    get:
      tags:
      - Support Tickets
      - Support Access
      summary: Delete Support SSH key and closed tickets
      description: |-
        This function removes cPanel Support's SSH keys and removes closed
        support tickets. You can view closed support tickets in WHM's
        [*Grant cPanel Support Access*](https://docs.cpanel.net/whm/support/grant-cpanel-support-access/)
        interface (*WHM >> Home >> Support >> Grant cPanel Support Access*).

        **Note:**

        This function is **not** available through the command line. You **must** call
        it as a request body.
      operationId: ticket_remove_closed
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_540"
      x-cpanel-cli-support: false
  /ticket_revoke:
    get:
      tags:
      - Support Tickets
      - Support Access
      summary: Delete Support SSH key
      description: |-
        This function removes a
        [cPanel Customer Portal](https://tickets.cpanel.net/)
        SSH key from the server.

        **Note:**

        This function is **not** available through the command line. You **must** call it
        as a request body.
      operationId: ticket_revoke
      parameters:
      - name: server_num
        in: query
        description: The server's ID number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      - name: ssh_username
        in: query
        description: The username for incoming SSH connections before they escalate
          to the `root` user.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: ticket_id
        in: query
        description: The support ticket's ID number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 999999999
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_541"
      x-cpanel-cli-support: false
  /ticket_ssh_test:
    get:
      tags:
      - Support Tickets
      - Support Access
      summary: Validate Customer Portal connection
      description: |-
        This function verifies the connection from the
        [cPanel Customer Portal](https://tickets.cpanel.net/)
        to the server.

        **Note:**

        This function is **not** available through the command line. You **must** call it as
        a request body.
      operationId: ticket_ssh_test
      parameters:
      - name: server_num
        in: query
        description: The server's ID number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 2
      - name: ticket_id
        in: query
        description: The ticket's ID number.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 999999999
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_542"
      x-cpanel-cli-support: false
  /ticket_ssh_test_start:
    get:
      tags:
      - Support Tickets
      - Support Access
      summary: Validate Support SSH connection
      description: |-
        This function initiates an SSH connection test.

        **Important:**

        This function is **not** available through the command line. You **must** call it
        as a request body.
      operationId: ticket_ssh_test_start
      parameters:
      - name: server_num
        in: query
        description: An integer that represents the ticket's actionable server. Increment
          the value by one for each server in the support ticket.
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          example: 1
      - name: ticket_id
        in: query
        description: The support ticket number that other functions can use to query
          or make additional changes to the support ticket.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 7648492
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_543"
      x-cpanel-cli-support: false
  /ticket_update_service_agreement_approval:
    get:
      tags:
      - Support Tickets
      - Ticket Management
      summary: Enable Technical Support Agreement acceptance
      description: |-
        This function records a user's acceptance of the Technical Support
        Agreement (TSA). The cPanel Customer Portal stores each record with the user's
        login, the date and time, and the TSA's version.

        **Note:**

        This function is **not** available through the command line.
        You **must** call it as a request body.
      operationId: ticket_update_service_agreement_approval
      parameters:
      - name: version
        in: query
        description: The version of the TSA that the user approved.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 2020-04.v01.TSUPPORT
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_544"
      x-cpanel-cli-support: false
  /ticket_validate_oauth2_code:
    get:
      tags:
      - Support Tickets
      - Ticket Management
      summary: Validate Customer Portal OAuth2 code
      description: |-
        This function validates the OAuth2 code from the
        [cPanel Customer Portal](https://tickets.cpanel.net/).
        After the function validates the token, the system stores it on the current session.

        **Note:**

        This function is **not** available through the command line. You **must** call it
        as a request body.
      operationId: ticket_validate_oauth2_code
      parameters:
      - name: code
        in: query
        description: The code from the OAuth2 redirect. The system validates this
          code and exchanges it for a token.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 84b1a729-63e3-11e6-a0fb-bfcf357fd76d
      - name: redirect_uri
        in: query
        description: The redirect URI query argument that the system sent to the initial
          OAuth2 authentication endpoint.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: https://hostname.example.com:2087/
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_545"
      x-cpanel-cli-support: false
  /ticket_whitelist_check:
    get:
      tags:
      - Support Tickets
      - Support Access
      summary: Validate Support IP addresses on firewall
      description: |-
        This function checks whether the server's firewall whitelist correlates
        with the granted support tickets. You can view granted support tickets in
        WHM's
        [*Grant cPanel Support Access*](https://docs.cpanel.net/whm/support/grant-cpanel-support-access/)
        interface (*WHM >> Home >> Support >> Grant cPanel Support Access*).

        **Note:**

        This function is **not** available through the command line. You **must** call it as
        a request body.
      operationId: ticket_whitelist_check
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_546"
      x-cpanel-cli-support: false
  /ticket_whitelist_setup:
    get:
      tags:
      - Support Tickets
      - Support Access
      summary: Add Support IP addresses to firewall
      description: |-
        This function adds cPanel Support's IP addresses to your server's firewall
        whitelist. This function is firewall-specific and does **not** change the
        [cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)
        whitelist.

        **Note:**

        * This function is **not** available through the command line. You **must** call it as
        a request body.
        * This function logs error messages to the
        [`/usr/local/cpanel/logs/error_log`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-log-files/#usr-local-cpanel-logs-error-log)
        file.
      operationId: ticket_whitelist_setup
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_547"
      x-cpanel-cli-support: false
  /ticket_whitelist_unsetup:
    get:
      tags:
      - Support Tickets
      - Support Access
      summary: Remove Support IP addresses from firewall
      description: |-
        This function removes cPanel Support's IP addresses from your server's firewall
        whitelist. This function is firewall-specific and does **not** change the
        [cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)
        whitelist.

        **Note:**

        * This function is **not** available through the command line. You **must** call it as
        a request body.
        * This function logs error messages to the
        [`/usr/local/cpanel/logs/error_log`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-log-files/#usr-local-cpanel-logs-error-log)
        file.
      operationId: ticket_whitelist_unsetup
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_548"
      x-cpanel-cli-support: false
  /toggle_user_backup_state:
    get:
      tags:
      - Backups
      - Backup Settings
      summary: Enable or disable legacy backups
      description: This function enables or disables legacy backups for a user.
      operationId: toggle_user_backup_state
      parameters:
      - name: user
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: legacy
        in: query
        description: |-
          Whether the account should use the legacy backup system.
          * `1` - Use the legacy backup system.
          * `0` - Use the standard backup system.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_549"
  /transfer_module_schema:
    get:
      tags:
      - Transfers
      - Transfer Configuration
      summary: Return a transfer module's schema
      description: |-
        This function retrieves a transfer module's key structure.

        **Note:**

        For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.
      operationId: transfer_module_schema
      parameters:
      - name: module
        in: query
        description: |-
          The transfer module's name.

          * `AccountLocal`
          * `AccountRemoteRoot`
          * `AccountRemoteUser`
          * `FeaturesListRemoteRoot`
          * `LegacyAccountBackup`
          * `PackageRemoteRoot`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: AccountRemoteRoot
          enum:
          - AccountLocal
          - AccountRemoteRoot
          - AccountRemoteUser
          - FeaturesListRemoteRoot
          - LegacyAccountBackup
          - PackageRemoteRoot
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_550"
  /twofactorauth_disable_policy:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Disable 2FA
      description: This function disables the Two-Factor Authentication (2FA) security
        policy on the server.
      operationId: twofactorauth_disable_policy
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_551"
  /twofactorauth_enable_policy:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Enable 2FA
      description: This function enables the Two-Factor Authentication (2FA) security
        policy on the server.
      operationId: twofactorauth_enable_policy
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_552"
  /twofactorauth_generate_tfa_config:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Create a one-time authentication secret and code
      description: This function generates a random secret and a one-time password
        authentication (OTP auth) URL for the user. Use the secret that this function
        returns and a valid verification token with WHM API 1's `twofactorauth_set_tfa_config` function
        to configure Two-Factor Authentication (2FA) on an account.
      operationId: twofactorauth_generate_tfa_config
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_553"
  /twofactorauth_get_issuer:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Return configured issuer for current user
      description: This function returns the currently configured issuer. The issuer
        appears within the authentication app.
      operationId: twofactorauth_get_issuer
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_554"
  /twofactorauth_get_tfa_config_for_user:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Return cPanel account 2FA data
      description: "This function returns the Two-Factor Authentication (2FA) configuration\
        \ for a cPanel account, its email accounts, and its team user accounts."
      operationId: twofactorauth_get_tfa_config_for_user
      parameters:
      - name: user
        in: query
        description: The username for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_555"
  /twofactorauth_get_user_configs:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Return cPanel accounts with 2FA enabled
      description: This function returns a list of user-controlled accounts and whether
        the accounts have Two-Factor Authentication (2FA) enabled.
      operationId: twofactorauth_get_user_configs
      parameters:
      - name: user
        in: query
        description: |-
          The username for a specified account.

          **Note:**

          If you do **not** specify a value, the function returns **all** user accounts.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_556"
  /twofactorauth_policy_status:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Return 2FA policy status
      description: This function displays the Two-Factor Authentication (2FA) policy
        status on the server.
      operationId: twofactorauth_policy_status
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_557"
  /twofactorauth_remove_user_config:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Remove 2FA settings
      description: |-
        This function removes the Two-Factor Authentication (2FA) settings for one or more specified user accounts.

        **Note:**

        If you remove the 2FA settings for an account, the user **must** perform the setup procedure again to re-configure 2FA on the account.
      operationId: twofactorauth_remove_user_config
      parameters:
      - name: user
        in: query
        description: |-
          The account's username.

          **Note:**

           To remove multiple users, increment the parameter name. For example, `user-1`, `user-2`, or `user-3`.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            description: Multiple users.
            value: user-1=username1 user-2=username2 user-3=username3
          single:
            description: A single user.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_558"
  /twofactorauth_set_issuer:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Update 2FA issuer value
      description: This function sets the `issuer` value that the system uses to generate
        the `secret` and `otpurls` values for Two-Factor Authentication on your accounts.
      operationId: twofactorauth_set_issuer
      parameters:
      - name: issuer
        in: query
        description: The issuer's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: hostname.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_559"
  /twofactorauth_set_tfa_config:
    get:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Update 2FA authentication secret and code
      description: This function sets the secret and the authentication code for Two-Factor
        Authentication (2FA) for the `root` or reseller account. You can generate
        a random secret and an OTP authentication URL with WHM API 1's `twofactorauth_generate_tfa_configorauth_generate_tfa_config` function.
      operationId: twofactorauth_set_tfa_config
      parameters:
      - name: secret
        in: query
        description: A generated code for use with 2FA in Base32 format.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WJ73QJSKZBXCFIPZ
      - name: tfa_token
        in: query
        description: The time-based one-time password (TOTP) that the authentication
          app provides.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "227174"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_560"
  /twofactorauth_set_tfa_config_for_user:
    post:
      tags:
      - Authentication
      - Two-Factor Authentication
      summary: Update cPanel account's 2FA data
      description: This function updates the Two-Factor Authentication (2FA) configuration
        for the given cPanel user.
      operationId: twofactorauth_set_tfa_config_for_user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                properties:
                  email:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        secret:
                          type: string
                          description: The 2FA secret for the account.
                          example: QLLIU5WTY3UTJGNG
                      description: An object that contains a hash of the email account's
                        data.
                    description: The email data for the user.
                  primary_account:
                    type: object
                    properties:
                      secret:
                        type: string
                        description: The 2FA secret for the account.
                        example: QLLIU5WTY3UTJGNG
                    description: An object that contains the secret for the cPanel
                      user.
                  team:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        secret:
                          type: string
                          description: The 2FA secret for the account.
                          example: QLLIU5WTY3UTJGNG
                      description: An object that contains a hash of the team user
                        account's data.
                description: The cPanel user account for which to set the 2FA config.
              example:
                example:
                  email:
                    user@example.com:
                      secret: QLLIU5WTY3UTJGNG
                  primary_account:
                    secret: QLLIU5WTY3UTJGNG
                  team:
                    team_user@example:
                      secret: QLLIU5WTY3UTJGNG
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_561"
  /uapi_cpanel:
    get:
      tags:
      - API Execution
      summary: Run UAPI function through WHM API
      description: This function calls a UAPI function through the WHM API. This function's
        output will match the UAPI function that it calls.
      operationId: uapi_cpanel
      parameters:
      - name: cpanel.function
        in: query
        description: |-
          The UAPI function to call.

          ***Note:***

          You must include the UAPI function's required parameters. You can also include its optional parameters.

          For example, to call the UAPI `get_stats` function with its required display parameter and the bandwidthusage and diskusage values:

          `display=bandwidthusage|diskusage`
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: get_stats
      - name: cpanel.module
        in: query
        description: The UAPI function's cPanel module.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: StatsBar
      - name: cpanel.user
        in: query
        description: The cPanel username to call with the UAPI function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_562"
  /unassign_account_enhancement:
    get:
      tags:
      - Account Enhancements
      summary: Unassign Account Enhancement
      description: This function removes an Account Enhancement from a cPanel account.
      operationId: unassign_account_enhancement
      parameters:
      - name: account
        in: query
        description: The username of the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      - name: name
        in: query
        description: The name of the account enhancement.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: enhancement 5000
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_563"
  /unblock_incoming_email_from_country:
    get:
      tags:
      - Mail
      - Spam Management
      summary: Remove block on emails from specific countries
      description: This function unblocks email from specific countries.
      operationId: unblock_incoming_email_from_country
      parameters:
      - name: country_code
        in: query
        description: |-
          The country to unblock. A valid [ISO 3166-1 alpha-2 code](https://www.iso.org/iso-3166-country-codes.html) two-letter country code.

          **Note:**
          * To search all available country codes, read the ISO's [Full list of Country Codes](https://www.iso.org/obp/ui) documentation.
          * To unblock multiple countries, duplicate or increment the parameter name. For example, to unblock three countries, you could:
            - Use the `country_code` parameter multiple times.
            - Use the `country_code`, `country_code-1`, and `country_code-2` parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            description: To unblock multiple country codes.
            value: country_code=US&country_code=AD
          multiple-alternative:
            description: To unblock multiple country codes using index parameters.
            value: country_code=US&country_code-1=AD&country_code-2=ES
          single:
            description: To unblock one country code.
            value: US
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_564"
  /unblock_incoming_email_from_domain:
    get:
      tags:
      - Mail
      - Spam Management
      summary: Remove block on emails from specific domains
      description: This function unblocks email from specific domains.
      operationId: unblock_incoming_email_from_domain
      parameters:
      - name: domain
        in: query
        description: |-
          The domain to unblock.

          **Note:**

          * The function returns `0` for the updated return if the server already doesn't block that domain.
          * An FQDN requires **at least** [a label, a dot (`.`), and a top-level domain (TLD)](https://en.wikipedia.org/wiki/Domain_name#Domain_name_syntax).
          * Enter an asterisk (`*`) to represent [a wildcard label or TLD](https://en.wikipedia.org/wiki/Wildcard_DNS_record).
          * To unblock multiple domains, duplicate or increment the parameter name.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Multiple domains.
            value: domain=example.com domain-1=example1.com domain-2=example2.com
          multiple-alternative:
            summary: Multiple domains.
            value: domain=example.com domain=example1.com domain=example2.com
          single:
            summary: A single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_565"
  /uninstall_rpm_plugin:
    get:
      tags:
      - RPM
      - Install or Uninstall Package
      summary: Uninstall WHM plugin RPM package
      description: This function starts the uninstall process for a plugin. The uninstall
        process runs as a background process.
      operationId: uninstall_rpm_plugin
      parameters:
      - name: name
        in: query
        description: The name of a plugin RPM to uninstall.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: plugin_name
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_566"
  /unlink_server_node:
    get:
      tags:
      - Server Administration
      - Server Nodes
      summary: Remove linked server node
      description: "This function unlinks a remote server node from your server.\n\
        \n**Important:**\n\n  This function does **not** unlink mail servers that\
        \ are currently in use. \n  You **must** first delete any accounts that use\
        \ the linked mail server."
      operationId: unlink_server_node
      parameters:
      - name: alias
        in: query
        description: The name of a linked remote server node.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      - name: handle_api_token
        in: query
        description: |-
          What to do with the linkage’s stored API token on the remote server node:

          - `leave`: Leave the API token active.
          - `expire_24h`: Set the API token to expire after 24 hours. This can be undone.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: expire_24h
          default: leave
          enum:
          - leave
          - expire_24h
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_567"
  /unlink_user_authn_provider:
    get:
      tags:
      - Authentication
      - Authentication Providers
      summary: Unregister cPanel account from authentication provider
      description: This function unlinks a cPanel account from an external authentication
        identity provider.
      operationId: unlink_user_authn_provider
      parameters:
      - name: provider_id
        in: query
        description: The system's internal key for the identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanelid
      - name: subject_unique_identifier
        in: query
        description: The unique identifier for the user at the identity provider.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "123456789012345678901"
      - name: username
        in: query
        description: The account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_568"
  /unset_all_service_proxy_backends:
    get:
      tags:
      - Services
      summary: Remove cPanel account service proxying
      description: |-
        This function removes a cPanel account's
        [service proxying](https://go.cpanel.net/ServiceProxying).

        **Note:**

        * If the cPanel account is a [distributed account](https://go.cpanel.net/cPanelGlossary#distributed-cpanel-account),
        this function will also unset **all** service proxying for the cPanel account on the
        [child node](https://go.cpanel.net/cPanelGlossary#child-node).
        * If the [Web Server](https://go.cpanel.net/howtouseserverprofiles#roles) role is active on
        the server, this function rebuilds the cPanel user's web virtual hosts (vhosts) and restarts
        the web server.
        * If the system **cannot** rebuild the cPanel user's vhosts, the API call will still succeed.
        However, the function returns a failure warning in the metadata.
        * To set a service proxying for a cPanel account, use the WHM API 1
        `set_service_proxy_backends` function.
      operationId: unset_all_service_proxy_backends
      parameters:
      - name: username
        in: query
        description: The cPanel account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_569"
  /unset_manual_mx_redirects:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Remove manual mail exchanger redirect record
      description: |-
        This function removes a domain's manual Exim mail exchanger (MX) redirect entry. The function also removes the manual MX redirect entry from the /etc/manualmx file.

        **Note:**

          To set a domain's manual MX redirection, use the WHM API 1  set_manual_mx_redirects function.
      operationId: unset_manual_mx_redirects
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to remove a manual MX redirect entry.

          **Note:**

           To remove multiple domain entries, increment the parameter. For example, use the domain, domain-1, and domain-2 parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_570"
  /unset_nsec3_for_domains:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Enable NSEC semantics for domain
      description: |-
        This function configures the domain to use [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) semantics instead of [Next Secure Record 3](https://tools.ietf.org/html/rfc4470) (NSEC3) semantics.

        **Note:**

        Only servers that run PowerDNS can use DNSSEC. If you call this function on a server that doesn't use PowerDNS, you will receive an error.
      operationId: unset_nsec3_for_domains
      parameters:
      - name: domain
        in: query
        description: The domain for which to disable NSEC3 semantics and use NSEC
          semantics.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_571"
  /unsetupreseller:
    get:
      tags:
      - Resellers
      - Reseller Account Management
      summary: Disables cPanel account's reseller status
      description: This function revokes reseller status from an account.
      operationId: unsetupreseller
      parameters:
      - name: user
        in: query
        description: The reseller account's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_572"
  /unsuspend_outgoing_email:
    get:
      tags:
      - Mail
      - cPanel Account Mail Management
      summary: Unsuspend account outgoing email
      description: This function unsuspends outgoing email for a cPanel account's
        users.
      operationId: unsuspend_outgoing_email
      parameters:
      - name: user
        in: query
        description: The cPanel account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_573"
  /unsuspendacct:
    get:
      tags:
      - Suspensions
      summary: Unsuspend cPanel account
      description: |-
        This function unsuspends an account.

        **Note:**

        **Only** the `root` account and `root`-enabled resellers can unsuspend a locked account.
      operationId: unsuspendacct
      parameters:
      - name: user
        in: query
        description: The account to unsuspend.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: retain-service-proxies
        in: query
        description: |-
          Whether to retain any [service proxies](https://go.cpanel.net/serviceproxyglossary) on an account.
          * `1` — Retain service proxies.
          * `0` — Do **not** retain service proxies.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_574"
  /unsuspendreseller:
    get:
      tags:
      - Resellers
      - Reseller Account Management
      summary: Unsuspend reseller
      description: This function unsuspends a reseller account.
      operationId: unsuspendreseller
      parameters:
      - name: user
        in: query
        description: The reseller's username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      - name: reseller-only
        in: query
        description: |-
          Whether to unsuspend only the reseller account.
          * `1` — The function **only** unsuspends the reseller account. The function will **not** unsuspend the accounts that the reseller account owns.
          * `0` — The function unsuspends the reseller account **and** the accounts that it owns.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 0
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_575"
  /untrack_acct_id:
    get:
      tags:
      - Accounts
      - Account Management
      summary: Remove UID or GID from tracked list
      description: |-
        This function removes a user identification number (UID) or group
        identification number (GID) from the tracked ID list.
      operationId: untrack_acct_id
      parameters:
      - name: uid or gid
        in: query
        description: |-
          The user or group ID to remove from the track list.

          **Note:**

           You **must** include the `uid` parameter, the `gid` parameter, or both.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 1012
      - name: check_exists
        in: query
        description: |-
          Whether to prevent removal of user or group IDs currently in use.

          * `1` — Prevent removal.
          * `0` — Do **not** prevent removal.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: check_quota
        in: query
        description: |-
          Whether to prevent removal of the user ID if the quota system tracks associated files.

          * `1` — Prevent removal.
          * `0` — Do **not** prevent removal.

          **Note:**

          * This parameter **only** applies to user IDs and **not** group IDs.
          * You cannot check filesystems if the quota system does **not** track them.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      - name: protect_system
        in: query
        description: |-
          Whether to prevent removal of system user or group IDs.

          * `1` — Prevent removal.
          * `0` — Do **not** prevent removal.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          default: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_576"
  /update_configclusterserver:
    get:
      tags:
      - Server Administration
      - Configuration Clusters
      summary: Update configuration cluster server credentials
      description: |-
        This function updates the username or remote access key for a cluster server.

        **Important:**

        * If you log in to a configuration cluster server that is *not* the parent server, *nothing* will indicate that the server is part of a configuration cluster. You can *only* view and modify this information from the master server.

        * We recommend that you run this function as a `POST` request with SSL enabled:
          * The length of the remote access key may cause problems if you run the function with the `GET` method (for example, a URL in your browser).
          * You risk security problems if you enter a remote access key through the `GET` method.
      operationId: update_configclusterserver
      parameters:
      - name: name
        in: query
        description: The remote configuration cluster server's name or IP address.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: key
        in: query
        description: "The new [remote access key](https://docs.cpanel.net/whm/clusters/remote-access-key/).\
          \ If you do **not** specify a value, the function does not update the remote\
          \ access key."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0
      - name: user
        in: query
        description: "The server's `root`-level account username. If you do not specify\
          \ a value, the function does not update the username."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: root
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_577"
  /update_contact_email:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Update WHM contact email address
      description: |-
        This function updates the contact email address in the `wwwacct.conf` file.
        For more information, read our 
        [Installation Guide - Customize Your Installation](https://docs.cpanel.net/installation-guide/customize-your-installation/)
        documentation.
      operationId: update_contact_email
      parameters:
      - name: contact_email
        in: query
        description: |-
          The contact email address to add as the `wwwacct.conf` file's `CONTACTEMAIL`
          setting.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: user@example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_578"
  /update_customizations:
    post:
      tags:
      - Customizations
      summary: Update customization data
      description: |-
        This function supplies branding data for a specific application and theme.

        Customization data includes brand logos and colors.

        This function is used to save customization data for the Jupiter theme **only**.
      operationId: update_customizations
      parameters:
      - name: application
        in: query
        description: The application name for the customization.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cpanel
          enum:
          - cpanel
          - webmail
      - name: data
        in: query
        description: The theme data to save.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: object
                  properties:
                    colors:
                      type: object
                      properties:
                        accent:
                          type: string
                          description: The hex-code to set in the customization.
                          example: "#00FF00"
                        primary:
                          type: string
                          description: The primary color to apply to the interface.
                          example: "#961218"
                      description: The hex-code colors used to apply a custom color
                        palette to the interface.
                    favicon:
                      type: string
                      description: The base64-encoded favorites icon. This function
                        **only** accepts the ICO file format.
                      format: base64
                      example: AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACanZoAAAAAAP///////////////////////////AD//+Ag///AEH//gDB//4AQf/+AuCq/AfAgBwP4IA8H+BABA/gQAwH8EAGArA/AgAQPwMACD+DAAAfA+AIPwP1UBQH//gAB//8AAf//gAP//wAH//+iP//////////////////////////////////////////////////////8AP//4CD//8AQf/+AMH//gBB//4C4Kr8B8CAHA/ggDwf4EAED+BADAfwQAYCsD8CABA/AwAIP4MAAB8D4Ag/A/VQFAf/+AAH//wAB//+AA///AAf//6I///////////////////////////8=
                    logo:
                      type: object
                      properties:
                        description:
                          type: string
                          description: The description of the logo used for accessibility
                            requirements.
                          example: The orange logo for cPanel.
                        forDarkBackground:
                          type: string
                          description: The base64-encoded logo used on black or dark
                            backgrounds. This function **only** accepts the SVG file
                            format.
                          format: base64
                          example: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIwLjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA5NCAyMCIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgOTQgMjA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCS5zdDB7ZmlsbDojRkZGRkZGO30KPC9zdHlsZT4KPHRpdGxlPmNQYW5lbCBMb2dvIC0gV2hpdGU8L3RpdGxlPgo8ZyBpZD0iTGF5ZXJfMiI+Cgk8ZyBpZD0iTGF5ZXJfMS0yIj4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNy44LDQuOWg1LjlsLTAuOSwzLjNjLTAuMSwwLjQtMC40LDAuOC0wLjgsMS4xYy0wLjQsMC4zLTAuOCwwLjQtMS4zLDAuNEg3LjljLTAuNiwwLTEuMiwwLjItMS43LDAuNQoJCQljLTAuNSwwLjQtMC44LDAuOS0xLDEuNGMtMC4xLDAuNC0wLjEsMC45LDAsMS4zYzAuMSwwLjQsMC4zLDAuNywwLjUsMS4xYzAuMiwwLjMsMC42LDAuNiwwLjksMC43QzcsMTUsNy41LDE1LjEsNy45LDE1LjFoMS43CgkJCWMwLjMsMCwwLjYsMC4xLDAuOCwwLjRjMC4yLDAuMiwwLjMsMC41LDAuMiwwLjhsLTEsMy43SDcuNmMtMS4yLDAtMi40LTAuMy0zLjQtMC44Yy0xLTAuNS0xLjktMS4yLTIuNi0yLjEKCQkJYy0xLjQtMS44LTEuOS00LjItMS4zLTYuNGwwLjEtMC40YzAuNC0xLjYsMS40LTIuOSwyLjctMy45QzMuOCw2LDQuNSw1LjYsNS4zLDUuM0M2LjEsNS4xLDYuOSw0LjksNy44LDQuOXoiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMTAuNywyMGw1LjEtMTguNGMwLjEtMC40LDAuNC0wLjgsMC44LTEuMUMxNywwLjEsMTcuNSwwLDE4LDBoNS40YzEuMiwwLDIuNCwwLjMsMy40LDAuOGMyLjEsMSwzLjUsMi45LDQsNQoJCQljMC4zLDEuMSwwLjIsMi4zLTAuMSwzLjRsLTAuMSwwLjRjLTAuMiwwLjgtMC42LDEuNS0xLDIuMmMtMS40LDItMy44LDMuMy02LjMsMy4zaC00LjdsMC45LTMuNGMwLjEtMC40LDAuNC0wLjgsMC44LTEuMQoJCQljMC40LTAuMywwLjgtMC40LDEuMy0wLjRoMS41YzEuMiwwLDIuMy0wLjgsMi43LTJjMC4xLTAuNCwwLjEtMC44LDAtMS4yYy0wLjEtMC40LTAuMy0wLjctMC41LTEuMWMtMC4yLTAuMy0wLjYtMC42LTAuOS0wLjcKCQkJQzI0LDUsMjMuNiw0LjksMjMuMSw0LjloLTIuOWwtMy44LDEzLjZjLTAuMSwwLjQtMC40LDAuOC0wLjgsMS4xYy0wLjQsMC4zLTAuOCwwLjQtMS4zLDAuNEgxMC43eiIvPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00My4xLDEwLjJsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWgtOC40Yy0wLjMsMC0wLjctMC4xLTEtMC4yCgkJCWMtMC4zLTAuMS0wLjUtMC4zLTAuNy0wLjZjLTAuMi0wLjItMC4zLTAuNS0wLjQtMC44Yy0wLjEtMC4zLTAuMS0wLjcsMC0xbDAuNS0xLjloMTEuNGMwLjcsMCwxLjMsMC4xLDEuOSwwLjQKCQkJYzAuNiwwLjMsMS4xLDAuNywxLjUsMS4yYzAuNCwwLjUsMC43LDEuMSwwLjgsMS43YzAuMSwwLjYsMC4xLDEuMywwLDEuOWwtMi4xLDcuM0M0NiwxOSw0NC42LDIwLDQzLDIwbC04LjQsMAoJCQljLTEuNCwwLTIuNy0wLjYtMy42LTEuN2MtMC40LTAuNS0wLjctMS4xLTAuOC0xLjdjLTAuMi0wLjctMC4xLTEuNCwwLjEtMmwwLjEtMC40YzAuMS0wLjUsMC4zLTAuOSwwLjYtMS4zYzAuMy0wLjQsMC42LTAuNywxLTEKCQkJYzAuNC0wLjMsMC44LTAuNSwxLjMtMC43YzAuNS0wLjIsMS0wLjIsMS41LTAuMmg3LjFsLTAuNSwxLjljLTAuMSwwLjQtMC40LDAuOC0wLjgsMS4xYy0wLjQsMC4zLTAuOCwwLjQtMS4zLDAuNGgtMy4yCgkJCWMtMC4zLDAtMC41LDAuMS0wLjYsMC40Yy0wLjEsMC4yLDAsMC40LDAuMSwwLjVjMC4xLDAuMSwwLjMsMC4yLDAuNSwwLjJoNS4xYzAuMiwwLDAuNCwwLDAuNS0wLjFjMC4xLTAuMSwwLjItMC4yLDAuMy0wLjQKCQkJbDAuMS0wLjJMNDMuMSwxMC4yeiIvPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik01OC4zLDQuOWMxLjIsMCwyLjQsMC4zLDMuNSwwLjhjMSwwLjUsMS45LDEuMiwyLjYsMi4xYzAuNywwLjksMS4yLDEuOSwxLjQsM2MwLjMsMS4xLDAuMiwyLjMtMC4xLDMuNAoJCQlsLTEuMyw0LjdjLTAuMSwwLjMtMC4zLDAuNi0wLjYsMC44Yy0wLjMsMC4yLTAuNiwwLjMtMSwwLjNINjBjLTAuNSwwLTEtMC40LTEtMC45YzAtMC4xLDAtMC4yLDAtMC4zbDEuNi01LjcKCQkJYzAuMS0wLjQsMC4xLTAuOCwwLTEuMmMtMC4xLTAuNC0wLjMtMC43LTAuNS0xLjFjLTAuMi0wLjMtMC42LTAuNi0wLjktMC43Yy0wLjQtMC4yLTAuOC0wLjMtMS4yLTAuM2gtMi45bC0yLjUsOS4xCgkJCWMtMC4xLDAuMy0wLjMsMC42LTAuNiwwLjhjLTAuMywwLjItMC42LDAuMy0xLDAuM2gtMi44Yy0wLjMsMC0wLjYtMC4xLTAuOC0wLjRjLTAuMi0wLjItMC4zLTAuNS0wLjItMC44bDMuOC0xMy45TDU4LjMsNC45eiIvPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik03My42LDkuN2MtMC4yLDAuMi0wLjQsMC40LTAuNCwwLjZMNzIsMTQuNWMtMC4xLDAuNCwwLjEsMC44LDAuNSwwLjljMC4xLDAsMC4xLDAsMC4yLDBoMTAuOGwtMC44LDMKCQkJYy0wLjEsMC40LTAuNCwwLjgtMC44LDEuMUM4MS41LDE5LjksODEsMjAsODAuNiwyMGgtOS44Yy0wLjcsMC0xLjMtMC4xLTEuOS0wLjRjLTAuNi0wLjMtMS4xLTAuNy0xLjUtMS4yCgkJCWMtMC40LTAuNS0wLjctMS4xLTAuOC0xLjdjLTAuMS0wLjYtMC4xLTEuMywwLjEtMS45bDEuNi01LjdjMC4yLTAuNiwwLjQtMS4yLDAuOC0xLjdjMC43LTEsMS43LTEuOCwyLjktMi4yCgkJCWMwLjYtMC4yLDEuMy0wLjMsMS45LTAuM2g2LjljMC43LDAsMS4zLDAuMSwxLjksMC40YzAuNiwwLjMsMS4xLDAuNywxLjUsMS4yQzg0LjYsNyw4NC45LDcuNiw4NSw4LjJjMC4xLDAuNiwwLjEsMS4zLTAuMSwxLjkKCQkJbC0wLjUsMS43Yy0wLjIsMC43LTAuNiwxLjQtMS4zLDEuOGMtMC42LDAuNS0xLjQsMC43LTIuMSwwLjdoLTcuOGwwLjUtMS44YzAuMS0wLjQsMC40LTAuOCwwLjgtMS4xYzAuNC0wLjMsMC44LTAuNCwxLjMtMC40SDc5CgkJCWMwLjMsMCwwLjUtMC4xLDAuNi0wLjRsMC4xLTAuNGMwLjEtMC4zLTAuMS0wLjYtMC40LTAuN2MwLDAtMC4xLDAtMC4xLDBoLTQuOEM3NCw5LjQsNzMuOCw5LjUsNzMuNiw5Ljd6Ii8+CgkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTgzLjUsMjBsNS4yLTE4LjljMC4xLTAuMywwLjMtMC42LDAuNi0wLjhjMC4zLTAuMiwwLjYtMC4zLDEtMC4zSDkzYzAuMywwLDAuNiwwLjEsMC44LDAuNAoJCQlDOTQsMC42LDk0LjEsMC45LDk0LDEuMmwtMy45LDEzLjljLTAuMiwwLjctMC41LDEuNC0wLjksMmMtMC40LDAuNi0wLjksMS4xLTEuNSwxLjVjLTAuNiwwLjQtMS4yLDAuOC0xLjksMQoJCQlDODUsMTkuOSw4NC4yLDIwLDgzLjUsMjB6Ii8+Cgk8L2c+CjwvZz4KPC9zdmc+
                        forLightBackground:
                          type: string
                          description: The base64-encoded logo used on white or light
                            backgrounds. This function **only** accepts the SVG file
                            format.
                          format: base64
                          example: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIwLjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9InhMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIKCSB2aWV3Qm94PSIwIDAgOTQgMjAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDk0IDIwOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6I0ZGNkMyQzt9Cjwvc3R5bGU+Cjx0aXRsZT5jUGFuZWwgTG9nbyAtIE9yYW5nZTwvdGl0bGU+CjxnIGlkPSJ4TGF5ZXJfMiI+Cgk8ZyBpZD0ieExheWVyXzEtMiI+CgkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTcuOCw0LjloNS45bC0wLjksMy4zYy0wLjEsMC40LTAuNCwwLjgtMC44LDEuMWMtMC40LDAuMy0wLjgsMC40LTEuMywwLjRINy45Yy0wLjYsMC0xLjIsMC4yLTEuNywwLjUKCQkJYy0wLjUsMC40LTAuOCwwLjktMSwxLjRjLTAuMSwwLjQtMC4xLDAuOSwwLDEuM2MwLjEsMC40LDAuMywwLjcsMC41LDEuMWMwLjIsMC4zLDAuNiwwLjYsMC45LDAuN0M3LDE1LDcuNSwxNS4xLDcuOSwxNS4xaDEuNwoJCQljMC4zLDAsMC42LDAuMSwwLjgsMC40YzAuMiwwLjIsMC4zLDAuNSwwLjIsMC44bC0xLDMuN0g3LjZjLTEuMiwwLTIuNC0wLjMtMy40LTAuOGMtMS0wLjUtMS45LTEuMi0yLjYtMi4xCgkJCWMtMS40LTEuOC0xLjktNC4yLTEuMy02LjRsMC4xLTAuNGMwLjQtMS42LDEuNC0yLjksMi43LTMuOUMzLjgsNiw0LjUsNS42LDUuMyw1LjNDNi4xLDUuMSw2LjksNC45LDcuOCw0Ljl6Ii8+CgkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTEwLjcsMjBsNS4xLTE4LjRjMC4xLTAuNCwwLjQtMC44LDAuOC0xLjFDMTcsMC4xLDE3LjUsMCwxOCwwaDUuNGMxLjIsMCwyLjQsMC4zLDMuNCwwLjhjMi4xLDEsMy41LDIuOSw0LDUKCQkJYzAuMywxLjEsMC4yLDIuMy0wLjEsMy40bC0wLjEsMC40Yy0wLjIsMC44LTAuNiwxLjUtMSwyLjJjLTEuNCwyLTMuOCwzLjMtNi4zLDMuM2gtNC43bDAuOS0zLjRjMC4xLTAuNCwwLjQtMC44LDAuOC0xLjEKCQkJYzAuNC0wLjMsMC44LTAuNCwxLjMtMC40aDEuNWMxLjIsMCwyLjMtMC44LDIuNy0yYzAuMS0wLjQsMC4xLTAuOCwwLTEuMmMtMC4xLTAuNC0wLjMtMC43LTAuNS0xLjFjLTAuMi0wLjMtMC42LTAuNi0wLjktMC43CgkJCUMyNCw1LDIzLjYsNC45LDIzLjEsNC45aC0yLjlsLTMuOCwxMy42Yy0wLjEsMC40LTAuNCwwLjgtMC44LDEuMWMtMC40LDAuMy0wLjgsMC40LTEuMywwLjRIMTAuN3oiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNDMuMSwxMC4ybDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM2MtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjFoLTguNGMtMC4zLDAtMC43LTAuMS0xLTAuMgoJCQljLTAuMy0wLjEtMC41LTAuMy0wLjctMC42Yy0wLjItMC4yLTAuMy0wLjUtMC40LTAuOGMtMC4xLTAuMy0wLjEtMC43LDAtMWwwLjUtMS45aDExLjRjMC43LDAsMS4zLDAuMSwxLjksMC40CgkJCWMwLjYsMC4zLDEuMSwwLjcsMS41LDEuMmMwLjQsMC41LDAuNywxLjEsMC44LDEuN2MwLjEsMC42LDAuMSwxLjMsMCwxLjlsLTIuMSw3LjNDNDYsMTksNDQuNiwyMCw0MywyMGwtOC40LDAKCQkJYy0xLjQsMC0yLjctMC42LTMuNi0xLjdjLTAuNC0wLjUtMC43LTEuMS0wLjgtMS43Yy0wLjItMC43LTAuMS0xLjQsMC4xLTJsMC4xLTAuNGMwLjEtMC41LDAuMy0wLjksMC42LTEuM2MwLjMtMC40LDAuNi0wLjcsMS0xCgkJCWMwLjQtMC4zLDAuOC0wLjUsMS4zLTAuN2MwLjUtMC4yLDEtMC4yLDEuNS0wLjJoNy4xbC0wLjUsMS45Yy0wLjEsMC40LTAuNCwwLjgtMC44LDEuMWMtMC40LDAuMy0wLjgsMC40LTEuMywwLjRoLTMuMgoJCQljLTAuMywwLTAuNSwwLjEtMC42LDAuNGMtMC4xLDAuMiwwLDAuNCwwLjEsMC41YzAuMSwwLjEsMC4zLDAuMiwwLjUsMC4yaDUuMWMwLjIsMCwwLjQsMCwwLjUtMC4xYzAuMS0wLjEsMC4yLTAuMiwwLjMtMC40CgkJCWwwLjEtMC4yTDQzLjEsMTAuMnoiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNTguMyw0LjljMS4yLDAsMi40LDAuMywzLjUsMC44YzEsMC41LDEuOSwxLjIsMi42LDIuMWMwLjcsMC45LDEuMiwxLjksMS40LDNjMC4zLDEuMSwwLjIsMi4zLTAuMSwzLjQKCQkJbC0xLjMsNC43Yy0wLjEsMC4zLTAuMywwLjYtMC42LDAuOGMtMC4zLDAuMi0wLjYsMC4zLTEsMC4zSDYwYy0wLjUsMC0xLTAuNC0xLTAuOWMwLTAuMSwwLTAuMiwwLTAuM2wxLjYtNS43CgkJCWMwLjEtMC40LDAuMS0wLjgsMC0xLjJjLTAuMS0wLjQtMC4zLTAuNy0wLjUtMS4xYy0wLjItMC4zLTAuNi0wLjYtMC45LTAuN2MtMC40LTAuMi0wLjgtMC4zLTEuMi0wLjNoLTIuOWwtMi41LDkuMQoJCQljLTAuMSwwLjMtMC4zLDAuNi0wLjYsMC44Yy0wLjMsMC4yLTAuNiwwLjMtMSwwLjNoLTIuOGMtMC4zLDAtMC42LTAuMS0wLjgtMC40Yy0wLjItMC4yLTAuMy0wLjUtMC4yLTAuOGwzLjgtMTMuOUw1OC4zLDQuOXoiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNzMuNiw5LjdjLTAuMiwwLjItMC40LDAuNC0wLjQsMC42TDcyLDE0LjVjLTAuMSwwLjQsMC4xLDAuOCwwLjUsMC45YzAuMSwwLDAuMSwwLDAuMiwwaDEwLjhsLTAuOCwzCgkJCWMtMC4xLDAuNC0wLjQsMC44LTAuOCwxLjFDODEuNSwxOS45LDgxLDIwLDgwLjYsMjBoLTkuOGMtMC43LDAtMS4zLTAuMS0xLjktMC40Yy0wLjYtMC4zLTEuMS0wLjctMS41LTEuMgoJCQljLTAuNC0wLjUtMC43LTEuMS0wLjgtMS43Yy0wLjEtMC42LTAuMS0xLjMsMC4xLTEuOWwxLjYtNS43YzAuMi0wLjYsMC40LTEuMiwwLjgtMS43YzAuNy0xLDEuNy0xLjgsMi45LTIuMgoJCQljMC42LTAuMiwxLjMtMC4zLDEuOS0wLjNoNi45YzAuNywwLDEuMywwLjEsMS45LDAuNGMwLjYsMC4zLDEuMSwwLjcsMS41LDEuMkM4NC42LDcsODQuOSw3LjYsODUsOC4yYzAuMSwwLjYsMC4xLDEuMy0wLjEsMS45CgkJCWwtMC41LDEuN2MtMC4yLDAuNy0wLjYsMS40LTEuMywxLjhjLTAuNiwwLjUtMS40LDAuNy0yLjEsMC43aC03LjhsMC41LTEuOGMwLjEtMC40LDAuNC0wLjgsMC44LTEuMWMwLjQtMC4zLDAuOC0wLjQsMS4zLTAuNEg3OQoJCQljMC4zLDAsMC41LTAuMSwwLjYtMC40bDAuMS0wLjRjMC4xLTAuMy0wLjEtMC42LTAuNC0wLjdjMCwwLTAuMSwwLTAuMSwwaC00LjhDNzQsOS40LDczLjgsOS41LDczLjYsOS43eiIvPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik04My41LDIwbDUuMi0xOC45YzAuMS0wLjMsMC4zLTAuNiwwLjYtMC44YzAuMy0wLjIsMC42LTAuMywxLTAuM0g5M2MwLjMsMCwwLjYsMC4xLDAuOCwwLjQKCQkJQzk0LDAuNiw5NC4xLDAuOSw5NCwxLjJsLTMuOSwxMy45Yy0wLjIsMC43LTAuNSwxLjQtMC45LDJjLTAuNCwwLjYtMC45LDEuMS0xLjUsMS41Yy0wLjYsMC40LTEuMiwwLjgtMS45LDEKCQkJQzg1LDE5LjksODQuMiwyMCw4My41LDIweiIvPgoJPC9nPgo8L2c+Cjwvc3ZnPgo=
                      description: Logo information used to add your custom logo to
                        the interface.
                  description: The customization data.
                documentation:
                  type: object
                  properties:
                    url:
                      type: string
                      description: URL to the companies documentation site. This url
                        will replace the default documentation link in the footer
                        if defined.
                      format: url
                      example: https://hosting.com/documentation
                  description: Optional documentation information.
                help:
                  type: object
                  properties:
                    url:
                      type: string
                      description: URL to the companies customer support site. This
                        url will replace the default help link in the footer if defined.
                      format: url
                      example: https://hosting.com/get-help
                  description: Optional help information.
              example:
                brand:
                  colors:
                    accent: "#00FF00"
                    primary: "#961218"
                  favicon: AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACanZoAAAAAAP///////////////////////////AD//+Ag///AEH//gDB//4AQf/+AuCq/AfAgBwP4IA8H+BABA/gQAwH8EAGArA/AgAQPwMACD+DAAAfA+AIPwP1UBQH//gAB//8AAf//gAP//wAH//+iP//////////////////////////////////////////////////////8AP//4CD//8AQf/+AMH//gBB//4C4Kr8B8CAHA/ggDwf4EAED+BADAfwQAYCsD8CABA/AwAIP4MAAB8D4Ag/A/VQFAf/+AAH//wAB//+AA///AAf//6I///////////////////////////8=
                  logo:
                    description: The orange logo for cPanel.
                    forDarkBackground: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIwLjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA5NCAyMCIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgOTQgMjA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCS5zdDB7ZmlsbDojRkZGRkZGO30KPC9zdHlsZT4KPHRpdGxlPmNQYW5lbCBMb2dvIC0gV2hpdGU8L3RpdGxlPgo8ZyBpZD0iTGF5ZXJfMiI+Cgk8ZyBpZD0iTGF5ZXJfMS0yIj4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNy44LDQuOWg1LjlsLTAuOSwzLjNjLTAuMSwwLjQtMC40LDAuOC0wLjgsMS4xYy0wLjQsMC4zLTAuOCwwLjQtMS4zLDAuNEg3LjljLTAuNiwwLTEuMiwwLjItMS43LDAuNQoJCQljLTAuNSwwLjQtMC44LDAuOS0xLDEuNGMtMC4xLDAuNC0wLjEsMC45LDAsMS4zYzAuMSwwLjQsMC4zLDAuNywwLjUsMS4xYzAuMiwwLjMsMC42LDAuNiwwLjksMC43QzcsMTUsNy41LDE1LjEsNy45LDE1LjFoMS43CgkJCWMwLjMsMCwwLjYsMC4xLDAuOCwwLjRjMC4yLDAuMiwwLjMsMC41LDAuMiwwLjhsLTEsMy43SDcuNmMtMS4yLDAtMi40LTAuMy0zLjQtMC44Yy0xLTAuNS0xLjktMS4yLTIuNi0yLjEKCQkJYy0xLjQtMS44LTEuOS00LjItMS4zLTYuNGwwLjEtMC40YzAuNC0xLjYsMS40LTIuOSwyLjctMy45QzMuOCw2LDQuNSw1LjYsNS4zLDUuM0M2LjEsNS4xLDYuOSw0LjksNy44LDQuOXoiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMTAuNywyMGw1LjEtMTguNGMwLjEtMC40LDAuNC0wLjgsMC44LTEuMUMxNywwLjEsMTcuNSwwLDE4LDBoNS40YzEuMiwwLDIuNCwwLjMsMy40LDAuOGMyLjEsMSwzLjUsMi45LDQsNQoJCQljMC4zLDEuMSwwLjIsMi4zLTAuMSwzLjRsLTAuMSwwLjRjLTAuMiwwLjgtMC42LDEuNS0xLDIuMmMtMS40LDItMy44LDMuMy02LjMsMy4zaC00LjdsMC45LTMuNGMwLjEtMC40LDAuNC0wLjgsMC44LTEuMQoJCQljMC40LTAuMywwLjgtMC40LDEuMy0wLjRoMS41YzEuMiwwLDIuMy0wLjgsMi43LTJjMC4xLTAuNCwwLjEtMC44LDAtMS4yYy0wLjEtMC40LTAuMy0wLjctMC41LTEuMWMtMC4yLTAuMy0wLjYtMC42LTAuOS0wLjcKCQkJQzI0LDUsMjMuNiw0LjksMjMuMSw0LjloLTIuOWwtMy44LDEzLjZjLTAuMSwwLjQtMC40LDAuOC0wLjgsMS4xYy0wLjQsMC4zLTAuOCwwLjQtMS4zLDAuNEgxMC43eiIvPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00My4xLDEwLjJsMC4xLTAuM2MwLTAuMSwwLTAuMi0wLjEtMC4zYy0wLjEtMC4xLTAuMi0wLjEtMC4zLTAuMWgtOC40Yy0wLjMsMC0wLjctMC4xLTEtMC4yCgkJCWMtMC4zLTAuMS0wLjUtMC4zLTAuNy0wLjZjLTAuMi0wLjItMC4zLTAuNS0wLjQtMC44Yy0wLjEtMC4zLTAuMS0wLjcsMC0xbDAuNS0xLjloMTEuNGMwLjcsMCwxLjMsMC4xLDEuOSwwLjQKCQkJYzAuNiwwLjMsMS4xLDAuNywxLjUsMS4yYzAuNCwwLjUsMC43LDEuMSwwLjgsMS43YzAuMSwwLjYsMC4xLDEuMywwLDEuOWwtMi4xLDcuM0M0NiwxOSw0NC42LDIwLDQzLDIwbC04LjQsMAoJCQljLTEuNCwwLTIuNy0wLjYtMy42LTEuN2MtMC40LTAuNS0wLjctMS4xLTAuOC0xLjdjLTAuMi0wLjctMC4xLTEuNCwwLjEtMmwwLjEtMC40YzAuMS0wLjUsMC4zLTAuOSwwLjYtMS4zYzAuMy0wLjQsMC42LTAuNywxLTEKCQkJYzAuNC0wLjMsMC44LTAuNSwxLjMtMC43YzAuNS0wLjIsMS0wLjIsMS41LTAuMmg3LjFsLTAuNSwxLjljLTAuMSwwLjQtMC40LDAuOC0wLjgsMS4xYy0wLjQsMC4zLTAuOCwwLjQtMS4zLDAuNGgtMy4yCgkJCWMtMC4zLDAtMC41LDAuMS0wLjYsMC40Yy0wLjEsMC4yLDAsMC40LDAuMSwwLjVjMC4xLDAuMSwwLjMsMC4yLDAuNSwwLjJoNS4xYzAuMiwwLDAuNCwwLDAuNS0wLjFjMC4xLTAuMSwwLjItMC4yLDAuMy0wLjQKCQkJbDAuMS0wLjJMNDMuMSwxMC4yeiIvPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik01OC4zLDQuOWMxLjIsMCwyLjQsMC4zLDMuNSwwLjhjMSwwLjUsMS45LDEuMiwyLjYsMi4xYzAuNywwLjksMS4yLDEuOSwxLjQsM2MwLjMsMS4xLDAuMiwyLjMtMC4xLDMuNAoJCQlsLTEuMyw0LjdjLTAuMSwwLjMtMC4zLDAuNi0wLjYsMC44Yy0wLjMsMC4yLTAuNiwwLjMtMSwwLjNINjBjLTAuNSwwLTEtMC40LTEtMC45YzAtMC4xLDAtMC4yLDAtMC4zbDEuNi01LjcKCQkJYzAuMS0wLjQsMC4xLTAuOCwwLTEuMmMtMC4xLTAuNC0wLjMtMC43LTAuNS0xLjFjLTAuMi0wLjMtMC42LTAuNi0wLjktMC43Yy0wLjQtMC4yLTAuOC0wLjMtMS4yLTAuM2gtMi45bC0yLjUsOS4xCgkJCWMtMC4xLDAuMy0wLjMsMC42LTAuNiwwLjhjLTAuMywwLjItMC42LDAuMy0xLDAuM2gtMi44Yy0wLjMsMC0wLjYtMC4xLTAuOC0wLjRjLTAuMi0wLjItMC4zLTAuNS0wLjItMC44bDMuOC0xMy45TDU4LjMsNC45eiIvPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik03My42LDkuN2MtMC4yLDAuMi0wLjQsMC40LTAuNCwwLjZMNzIsMTQuNWMtMC4xLDAuNCwwLjEsMC44LDAuNSwwLjljMC4xLDAsMC4xLDAsMC4yLDBoMTAuOGwtMC44LDMKCQkJYy0wLjEsMC40LTAuNCwwLjgtMC44LDEuMUM4MS41LDE5LjksODEsMjAsODAuNiwyMGgtOS44Yy0wLjcsMC0xLjMtMC4xLTEuOS0wLjRjLTAuNi0wLjMtMS4xLTAuNy0xLjUtMS4yCgkJCWMtMC40LTAuNS0wLjctMS4xLTAuOC0xLjdjLTAuMS0wLjYtMC4xLTEuMywwLjEtMS45bDEuNi01LjdjMC4yLTAuNiwwLjQtMS4yLDAuOC0xLjdjMC43LTEsMS43LTEuOCwyLjktMi4yCgkJCWMwLjYtMC4yLDEuMy0wLjMsMS45LTAuM2g2LjljMC43LDAsMS4zLDAuMSwxLjksMC40YzAuNiwwLjMsMS4xLDAuNywxLjUsMS4yQzg0LjYsNyw4NC45LDcuNiw4NSw4LjJjMC4xLDAuNiwwLjEsMS4zLTAuMSwxLjkKCQkJbC0wLjUsMS43Yy0wLjIsMC43LTAuNiwxLjQtMS4zLDEuOGMtMC42LDAuNS0xLjQsMC43LTIuMSwwLjdoLTcuOGwwLjUtMS44YzAuMS0wLjQsMC40LTAuOCwwLjgtMS4xYzAuNC0wLjMsMC44LTAuNCwxLjMtMC40SDc5CgkJCWMwLjMsMCwwLjUtMC4xLDAuNi0wLjRsMC4xLTAuNGMwLjEtMC4zLTAuMS0wLjYtMC40LTAuN2MwLDAtMC4xLDAtMC4xLDBoLTQuOEM3NCw5LjQsNzMuOCw5LjUsNzMuNiw5Ljd6Ii8+CgkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTgzLjUsMjBsNS4yLTE4LjljMC4xLTAuMywwLjMtMC42LDAuNi0wLjhjMC4zLTAuMiwwLjYtMC4zLDEtMC4zSDkzYzAuMywwLDAuNiwwLjEsMC44LDAuNAoJCQlDOTQsMC42LDk0LjEsMC45LDk0LDEuMmwtMy45LDEzLjljLTAuMiwwLjctMC41LDEuNC0wLjksMmMtMC40LDAuNi0wLjksMS4xLTEuNSwxLjVjLTAuNiwwLjQtMS4yLDAuOC0xLjksMQoJCQlDODUsMTkuOSw4NC4yLDIwLDgzLjUsMjB6Ii8+Cgk8L2c+CjwvZz4KPC9zdmc+
                    forLightBackground: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIwLjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9InhMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIKCSB2aWV3Qm94PSIwIDAgOTQgMjAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDk0IDIwOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6I0ZGNkMyQzt9Cjwvc3R5bGU+Cjx0aXRsZT5jUGFuZWwgTG9nbyAtIE9yYW5nZTwvdGl0bGU+CjxnIGlkPSJ4TGF5ZXJfMiI+Cgk8ZyBpZD0ieExheWVyXzEtMiI+CgkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTcuOCw0LjloNS45bC0wLjksMy4zYy0wLjEsMC40LTAuNCwwLjgtMC44LDEuMWMtMC40LDAuMy0wLjgsMC40LTEuMywwLjRINy45Yy0wLjYsMC0xLjIsMC4yLTEuNywwLjUKCQkJYy0wLjUsMC40LTAuOCwwLjktMSwxLjRjLTAuMSwwLjQtMC4xLDAuOSwwLDEuM2MwLjEsMC40LDAuMywwLjcsMC41LDEuMWMwLjIsMC4zLDAuNiwwLjYsMC45LDAuN0M3LDE1LDcuNSwxNS4xLDcuOSwxNS4xaDEuNwoJCQljMC4zLDAsMC42LDAuMSwwLjgsMC40YzAuMiwwLjIsMC4zLDAuNSwwLjIsMC44bC0xLDMuN0g3LjZjLTEuMiwwLTIuNC0wLjMtMy40LTAuOGMtMS0wLjUtMS45LTEuMi0yLjYtMi4xCgkJCWMtMS40LTEuOC0xLjktNC4yLTEuMy02LjRsMC4xLTAuNGMwLjQtMS42LDEuNC0yLjksMi43LTMuOUMzLjgsNiw0LjUsNS42LDUuMyw1LjNDNi4xLDUuMSw2LjksNC45LDcuOCw0Ljl6Ii8+CgkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTEwLjcsMjBsNS4xLTE4LjRjMC4xLTAuNCwwLjQtMC44LDAuOC0xLjFDMTcsMC4xLDE3LjUsMCwxOCwwaDUuNGMxLjIsMCwyLjQsMC4zLDMuNCwwLjhjMi4xLDEsMy41LDIuOSw0LDUKCQkJYzAuMywxLjEsMC4yLDIuMy0wLjEsMy40bC0wLjEsMC40Yy0wLjIsMC44LTAuNiwxLjUtMSwyLjJjLTEuNCwyLTMuOCwzLjMtNi4zLDMuM2gtNC43bDAuOS0zLjRjMC4xLTAuNCwwLjQtMC44LDAuOC0xLjEKCQkJYzAuNC0wLjMsMC44LTAuNCwxLjMtMC40aDEuNWMxLjIsMCwyLjMtMC44LDIuNy0yYzAuMS0wLjQsMC4xLTAuOCwwLTEuMmMtMC4xLTAuNC0wLjMtMC43LTAuNS0xLjFjLTAuMi0wLjMtMC42LTAuNi0wLjktMC43CgkJCUMyNCw1LDIzLjYsNC45LDIzLjEsNC45aC0yLjlsLTMuOCwxMy42Yy0wLjEsMC40LTAuNCwwLjgtMC44LDEuMWMtMC40LDAuMy0wLjgsMC40LTEuMywwLjRIMTAuN3oiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNDMuMSwxMC4ybDAuMS0wLjNjMC0wLjEsMC0wLjItMC4xLTAuM2MtMC4xLTAuMS0wLjItMC4xLTAuMy0wLjFoLTguNGMtMC4zLDAtMC43LTAuMS0xLTAuMgoJCQljLTAuMy0wLjEtMC41LTAuMy0wLjctMC42Yy0wLjItMC4yLTAuMy0wLjUtMC40LTAuOGMtMC4xLTAuMy0wLjEtMC43LDAtMWwwLjUtMS45aDExLjRjMC43LDAsMS4zLDAuMSwxLjksMC40CgkJCWMwLjYsMC4zLDEuMSwwLjcsMS41LDEuMmMwLjQsMC41LDAuNywxLjEsMC44LDEuN2MwLjEsMC42LDAuMSwxLjMsMCwxLjlsLTIuMSw3LjNDNDYsMTksNDQuNiwyMCw0MywyMGwtOC40LDAKCQkJYy0xLjQsMC0yLjctMC42LTMuNi0xLjdjLTAuNC0wLjUtMC43LTEuMS0wLjgtMS43Yy0wLjItMC43LTAuMS0xLjQsMC4xLTJsMC4xLTAuNGMwLjEtMC41LDAuMy0wLjksMC42LTEuM2MwLjMtMC40LDAuNi0wLjcsMS0xCgkJCWMwLjQtMC4zLDAuOC0wLjUsMS4zLTAuN2MwLjUtMC4yLDEtMC4yLDEuNS0wLjJoNy4xbC0wLjUsMS45Yy0wLjEsMC40LTAuNCwwLjgtMC44LDEuMWMtMC40LDAuMy0wLjgsMC40LTEuMywwLjRoLTMuMgoJCQljLTAuMywwLTAuNSwwLjEtMC42LDAuNGMtMC4xLDAuMiwwLDAuNCwwLjEsMC41YzAuMSwwLjEsMC4zLDAuMiwwLjUsMC4yaDUuMWMwLjIsMCwwLjQsMCwwLjUtMC4xYzAuMS0wLjEsMC4yLTAuMiwwLjMtMC40CgkJCWwwLjEtMC4yTDQzLjEsMTAuMnoiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNTguMyw0LjljMS4yLDAsMi40LDAuMywzLjUsMC44YzEsMC41LDEuOSwxLjIsMi42LDIuMWMwLjcsMC45LDEuMiwxLjksMS40LDNjMC4zLDEuMSwwLjIsMi4zLTAuMSwzLjQKCQkJbC0xLjMsNC43Yy0wLjEsMC4zLTAuMywwLjYtMC42LDAuOGMtMC4zLDAuMi0wLjYsMC4zLTEsMC4zSDYwYy0wLjUsMC0xLTAuNC0xLTAuOWMwLTAuMSwwLTAuMiwwLTAuM2wxLjYtNS43CgkJCWMwLjEtMC40LDAuMS0wLjgsMC0xLjJjLTAuMS0wLjQtMC4zLTAuNy0wLjUtMS4xYy0wLjItMC4zLTAuNi0wLjYtMC45LTAuN2MtMC40LTAuMi0wLjgtMC4zLTEuMi0wLjNoLTIuOWwtMi41LDkuMQoJCQljLTAuMSwwLjMtMC4zLDAuNi0wLjYsMC44Yy0wLjMsMC4yLTAuNiwwLjMtMSwwLjNoLTIuOGMtMC4zLDAtMC42LTAuMS0wLjgtMC40Yy0wLjItMC4yLTAuMy0wLjUtMC4yLTAuOGwzLjgtMTMuOUw1OC4zLDQuOXoiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNzMuNiw5LjdjLTAuMiwwLjItMC40LDAuNC0wLjQsMC42TDcyLDE0LjVjLTAuMSwwLjQsMC4xLDAuOCwwLjUsMC45YzAuMSwwLDAuMSwwLDAuMiwwaDEwLjhsLTAuOCwzCgkJCWMtMC4xLDAuNC0wLjQsMC44LTAuOCwxLjFDODEuNSwxOS45LDgxLDIwLDgwLjYsMjBoLTkuOGMtMC43LDAtMS4zLTAuMS0xLjktMC40Yy0wLjYtMC4zLTEuMS0wLjctMS41LTEuMgoJCQljLTAuNC0wLjUtMC43LTEuMS0wLjgtMS43Yy0wLjEtMC42LTAuMS0xLjMsMC4xLTEuOWwxLjYtNS43YzAuMi0wLjYsMC40LTEuMiwwLjgtMS43YzAuNy0xLDEuNy0xLjgsMi45LTIuMgoJCQljMC42LTAuMiwxLjMtMC4zLDEuOS0wLjNoNi45YzAuNywwLDEuMywwLjEsMS45LDAuNGMwLjYsMC4zLDEuMSwwLjcsMS41LDEuMkM4NC42LDcsODQuOSw3LjYsODUsOC4yYzAuMSwwLjYsMC4xLDEuMy0wLjEsMS45CgkJCWwtMC41LDEuN2MtMC4yLDAuNy0wLjYsMS40LTEuMywxLjhjLTAuNiwwLjUtMS40LDAuNy0yLjEsMC43aC03LjhsMC41LTEuOGMwLjEtMC40LDAuNC0wLjgsMC44LTEuMWMwLjQtMC4zLDAuOC0wLjQsMS4zLTAuNEg3OQoJCQljMC4zLDAsMC41LTAuMSwwLjYtMC40bDAuMS0wLjRjMC4xLTAuMy0wLjEtMC42LTAuNC0wLjdjMCwwLTAuMSwwLTAuMSwwaC00LjhDNzQsOS40LDczLjgsOS41LDczLjYsOS43eiIvPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik04My41LDIwbDUuMi0xOC45YzAuMS0wLjMsMC4zLTAuNiwwLjYtMC44YzAuMy0wLjIsMC42LTAuMywxLTAuM0g5M2MwLjMsMCwwLjYsMC4xLDAuOCwwLjQKCQkJQzk0LDAuNiw5NC4xLDAuOSw5NCwxLjJsLTMuOSwxMy45Yy0wLjIsMC43LTAuNSwxLjQtMC45LDJjLTAuNCwwLjYtMC45LDEuMS0xLjUsMS41Yy0wLjYsMC40LTEuMiwwLjgtMS45LDEKCQkJQzg1LDE5LjksODQuMiwyMCw4My41LDIweiIvPgoJPC9nPgo8L2c+Cjwvc3ZnPgo=
                documentation:
                  url: https://hosting.com/documentation
                help:
                  url: https://hosting.com/get-help
      - name: theme
        in: query
        description: The theme name for the customization.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: jupiter
          enum:
          - jupiter
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_579"
      x-cpanel-cli-support: true
  /update_featurelist:
    get:
      tags:
      - Packages
      - Feature Lists
      summary: Update feature list
      description: This function creates or updates a feature list.
      operationId: update_featurelist
      parameters:
      - name: featurelist
        in: query
        description: The feature list's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: TheBlackLagoon
      - name: feature name
        in: query
        description: |-
          Whether to include the feature in the feature list.

          **Notes:**

           This parameter's name is the feature's name. If you do not specify any features, the system will disable all features in the feature list.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 1
          enum:
          - 0
          - 1
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_580"
  /update_integration_link_token:
    get:
      tags:
      - Integration
      - Links
      summary: Update integration link token
      description: This function refreshes the token for an integration link.
      operationId: update_integration_link_token
      parameters:
      - name: app
        in: query
        description: |-
          The name of the application to link.

          **Note:**

           To update the name of the application in the interface, you **must** delete it and then recreate it with WHM API 1's `create_integration_link` function.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: WHMCS_billing
      - name: token
        in: query
        description: The new access token to use for the application.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: subway
      - name: user
        in: query
        description: The cPanel account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_581"
  /update_linked_server_node:
    get:
      tags:
      - Server Administration
      - Server Nodes
      summary: Update linked server node settings
      description: |-
        This function updates a linked remote cPanel server node.

        **Important:**

        This function **requires** the use of an API token. For more information,
        read our [Guide to API Authentication - API Tokens in WHM](https://go.cpanel.net/guide-to-api-authentication-api-tokens-in-whm)
        documentation.
      operationId: update_linked_server_node
      parameters:
      - name: alias
        in: query
        description: The name of a linked remote cPanel server node.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: example
      - name: api_token
        in: query
        description: |-
          The API token required to make API calls to the remote cPanel server node.

          This value defaults to the existing API token.

          **Note:**

           The API token **must** have `root`-level access on the remote cPanel server node.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 23ZX8RA1FTE1IVJRL90MB5CREDS4UE2H
      - name: hostname
        in: query
        description: |-
          A new remote cPanel server node's hostname. The system will update your remote
          cPanel server node's hostname to this value.

          This value defaults to the existing hostname.

          **Note:**

          This parameter does **not** accept an IP address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: example.com
      - name: skip_tls_verification
        in: query
        description: |-
          Whether to skip [SSL/TLS verification](https://docs.cpanel.net/knowledge-base/security/guide-to-ssl/).
          The system performs this action when it queries the remote cPanel server node.

          **Note:**

          If the remote cPanel server is SSL/TLS verified, you **cannot** skip verification.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 0
          default: 1
          enum:
          - 0
          - 1
      - name: username
        in: query
        description: |-
          The username required to make API calls to the remote cPanel server node.

          This value defaults to the existing username.

          **Note:**

          The username **must** have `root`-level access on the remote cPanel server node.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: root
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_582"
  /update_nameservers_config:
    get:
      tags:
      - DNS
      - Resolvers
      summary: Update default nameservers
      description: "This function updates nameservers in the `wwwacct.conf` file.\
        \ For more information, read our\_[Installation Guide - Customize Your Installation](https://go.cpanel.net/advancedinstall)\
        \ documentation."
      operationId: update_nameservers_config
      parameters:
      - name: nameserver
        in: query
        description: "The nameserver to add or update as the `wwwacct.conf` file's\
          \ `NS` setting. If you do not supply a value, the function does not update\
          \ the setting."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: ns1.example.com
      - name: nameserver2
        in: query
        description: "The nameserver to add or update as the `wwwacct.conf` file's\
          \ `NS2` setting. If you do not supply a value, the function does not update\
          \ the setting."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: ns2.example.com
      - name: nameserver3
        in: query
        description: "The nameserver to add or update as the `wwwacct.conf` file's\
          \ `NS3` setting. If you do not supply a value, the function does not update\
          \ the setting."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: ns3.example.com
      - name: nameserver4
        in: query
        description: "The nameserver to add or update as the `wwwacct.conf` file's\
          \ `NS4` setting. If you do not supply a value, the function does not update\
          \ the setting."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: domain
          example: ns4.example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_583"
  /update_reverse_dns_cache:
    get:
      tags:
      - DNS
      - DNS Zones
      summary: Update reverse DNS cache
      description: This function queries DNS and updates the map of local IP addresses
        to reverse DNS names.
      operationId: update_reverse_dns_cache
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_584"
  /update_sql_config:
    post:
      tags:
      - Databases
      - Manage MySQL Server
      summary: Update the servers SQL configuration.
      description: |-
        This function updates the database configuration file for MySQL® or MariaDB®.

        **Important:**

        When you disable the [MySQL/MariaDB role](https://go.cpanel.net/serverroles) and remote MySQL is **not** already configured, the system **disables** this function.
      operationId: update_sql_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_sql_config_body"
        required: true
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_585"
  /update_updateconf:
    post:
      tags:
      - Updates
      summary: Update software update behavior
      description: |-
        This function modifies a server's `/etc/cpupdate.conf` file. This file controls how the server handles software updates and upgrades.

        **Important:**

        You **must** have the [`root` level Access Control List (ACL) privilege](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) to execute this function.
      operationId: update_updateconf
      parameters:
      - name: CPANEL
        in: query
        description: |-
          The cPanel & WHM installation's release tier, or a [valid version number](https://go.cpanel.net/longtermsupport).

          If you do not use this parameter, the system retains the current setting.

          * A valid cPanel & WHM version number.
          * `STABLE` - This version has received considerable public exposure, testing, and verification.
          * `RELEASE` - This version is feature-complete and well-tested. It contains all intended features and functionality.
          * `CURRENT` - This version is tested and verified, but it may not contain all of the proposed functionality of a release. This tier is similar to the "release candidate" tier that other publication schemes use.
          * `EDGE` - This version only has rudimentary testing. The features are subject to further modification. This version usually lacks official public documentation.
          * `LTS` - Some hosting providers do not wish to upgrade cPanel & WHM to newer major versions. This is a single cPanel & WHM version for the year-long period in which WebPros International, LLC supports it.

            If you do not set this parameter, the system retains the current setting.

           New installations default to RELEASE.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/CPANEL"
      - name: RPMUP
        in: query
        description: |-
          The frequency with which the server updates the operating system distribution's packages each time that the `/usr/local/cpanel/scripts/upcp` script runs.

          If you do not set this parameter, the system retains the current setting.

          * `daily` - Update the system packages daily.
          * `manual` - Update the system packages manually.
          * `never` - If you specify `never`, the server administrator **must** run the `/usr/local/cpanel/scripts/update-packages` script when they update the server's packages.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/RPMUP"
      - name: SARULESUP
        in: query
        description: |-
          The frequency with which the server updates Apache SpamAssassin's™ rules when the `/usr/local/cpanel/scripts/upcp` script runs.

          If you do not set this parameter, the system retains the current setting.

          * `daily` - Update Apache SpamAssassin rules daily.
          * `manual` - Update Apache SpamAssassin rules manually.
          * `never` - If you specify `never`, the server administrator **must** run the `/usr/local/cpanel/scripts/update-packages` script when they update Apache SpamAssassin's rules.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/SARULESUP"
      - name: STAGING_DIR
        in: query
        description: |-
          The absolute directory path to the staging directory for updates.

          If you do not set this parameter, the system retains the current setting.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: /usr/local/cpanel
      - name: UPDATES
        in: query
        description: |-
          When the system will check for updates.

          If you do not set this parameter, the system retains the current setting.

          * `daily` - Update cPanel & WHM automatically through a cron job once every 24 hours.
          * `manual` - Update cPanel & WHM manually.
          * `never` - Do **not** update cPanel & WHM.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/UPDATES"
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_586"
  /updateuserdomains:
    get:
      tags:
      - DNS
      - Domain Management
      summary: Update /etc/userdomains file
      description: This function updates the `/etc/userdomains` file based on the
        entries in `/var/cpanel/users` directory.
      operationId: updateuserdomains
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_587"
  /validate_current_dkims:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Validate DKIM records
      description: This function retrieves and checks the DomainKeys Identified Mail
        (DKIM) records for one or more domains.
      operationId: validate_current_dkims
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to check the DKIM records.

          **Note:**

          To check multiple domains, duplicate or increment the parameter name.
          For example, `domain-1`, `domain-2`, and `domain-3` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Check the DKIM records for multiple domains.
            value: domain-1=example.com&domain-2=example.com&domain-3=example3.com
          multiple-alternative:
            summary: Check the DKIM records for multiple domains.
            value: domain=example.com&domain=example2.com&domain=example3.com
          single:
            summary: Check the DKIM records for a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_588"
  /validate_current_dmarcs:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Validate DMARC records
      description: This function retrieves and checks the DMARC record for one or
        more domains.
      operationId: EmailAuth::validate_current_dmarcs
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to check the DMARC record.

          **Note:**

          To check multiple domains, duplicate or increment the parameter name.
          For example, `domain-1`, `domain-2`, and `domain-3` parameters.

          If you do not include this argument, the system will validate DMARC records for all domains on the server.
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Check the DMARC record for multiple domains.
            value: domain-1=example.com&domain-2=example.com&domain-3=example3.com
          multiple-alternative:
            summary: Check the DMARC record for multiple domains.
            value: domain=example.com&domain=example2.com&domain=example3.com
          single:
            summary: Check the DMARC records for a single domain.
            value: domain=example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_589"
  /validate_current_installed_exim_config:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Validate Exim configuration
      description: This function validates the system's current Exim configuration.
      operationId: validate_current_installed_exim_config
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_590"
  /validate_current_ptrs:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Validate domain PTR records
      description: This function validates the pointer records (PTR) for IPv4 and
        IPv6 addresses an account's domains send mail from. It retrieves the PTR records
        for each IP address and determines which of the domain's IP addresses send
        mail. It then validates the PTR records for each IP address and validates
        the A (IPv4) or AAAA (IPv6) records pointing to each domain. This function
        also ensures that at least one of that domain's A or AAAA records points back
        to the IP address.
      operationId: validate_current_ptrs
      parameters:
      - name: domain
        in: query
        description: |-
          The domain for which to validate the PTR records.

          **Note:**

          To check multiple domains, duplicate or increment the parameter name.
          For example, use the `domain-1`, `domain-2`, and `domain-3` parameters.
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          multiple:
            summary: Validate multiple domains' PTR records.
            value: domain-1=example.com domain-2=example2.com domain-3=example3.com
          multiple-alternative:
            summary: Validate multiple domains' PTR records.
            value: domain=example.com&domain=example2.com&domain=example3.com
          single:
            summary: Validate a single domain's PTR records.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_591"
  /validate_current_spfs:
    get:
      tags:
      - Mail
      - Mail DNS Settings
      summary: Validate domain SPF records
      description: This function validates a Sender Policy Framework (SPF) record
        for one or more domains.
      operationId: validate_current_spfs
      parameters:
      - name: domain
        in: query
        description: The domain for which to check the SPF records.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: domain
        examples:
          multiple:
            summary: Check multiple domains.
            value: domain-1=example.com domain-2=example2.com domain-3=example3.com
          multiple-alternative:
            summary: Check multiple domains.
            value: domain=example.com domain=example2.com domain=example3.com
          single:
            summary: Check a single domain.
            value: example.com
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_592"
  /validate_exim_configuration_syntax:
    get:
      tags:
      - Mail
      - Mail Server Settings
      summary: Validate Exim configure file syntax
      description: |-
        This function evaluates and validates an Exim configuration file's syntax.

        **Note:**

        On servers that run CentOS 7, you may see a `named` warning about the absence of SPF resource
        records on DNS.
          * This warning is not relevant on CentOS 7 servers, because
          [RFC 7208 deprecated SPF records](https://tools.ietf.org/html/rfc7208).
          CentOS 7 servers use TXT records instead of SPF records.
          * Red Hat 7.1 and CentOS 7.1 both contain `bind-9.9.4-23.el7`, which is an updated version of
          BIND that complies with RFC 7208. To resolve this issue, update your operating system to a
          version that contains the updated version of BIND. For more information, read the
          [Red Hat Bugzilla case about SPF record errors](https://bugzilla.redhat.com/show_bug.cgi?id=1215164).
      operationId: validate_exim_configuration_syntax
      parameters:
      - name: cfg_text
        in: query
        description: |-
          The Exim configuration file's raw text.

          **Note:**

          If you do not use this parameter, the function will analyze Exim's current configuration.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: HTML
          example: RAW_CONFIGURATION_TEXT
      - name: section
        in: query
        description: |-
          The Exim configuration file's section to check.

          **Note:**

          If you use this parameter, pass **only** the desired section to validate as the
          `cfg_text` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: acl
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_593"
              examples:
                error_msg:
                  summary: An invalid Exim configuration.
                  value:
                    command: validate_exim_configuration_syntax
                    data:
                      broken_cfg_html: RAW_CONFIGURATION_TEXT
                      broken_cfg_text: |
                        ==>RAW_CONFIGURATION_TEXT<==
                      error_line: 1
                      error_msg: This is an error message.
                    output:
                      raw: |2+

                    reason: OK
                    result: 1
                    version: 1
                exim_caps:
                  summary: A valid Exim configuration.
                  value:
                    command: validate_exim_configuration_syntax
                    data:
                      exim_caps:
                        add_header: 1
                        archive: 1
                        boxtrapper: 1
                        content_scanning: 1
                        directives:
                          accept_8bitmime: 1
                          acl_not_smtp: 1
                          acl_not_smtp_mime: 1
                          acl_not_smtp_start: 1
                          acl_smtp_auth: 1
                          acl_smtp_connect: 1
                          acl_smtp_data: 1
                          acl_smtp_data_prdr: 1
                          acl_smtp_dkim: 1
                          acl_smtp_etrn: 1
                          acl_smtp_expn: 1
                          acl_smtp_helo: 1
                          acl_smtp_mail: 1
                          acl_smtp_mailauth: 1
                          acl_smtp_mime: 1
                          acl_smtp_notquit: 1
                          acl_smtp_predata: 1
                          acl_smtp_quit: 1
                          acl_smtp_rcpt: 1
                          acl_smtp_starttls: 1
                          acl_smtp_vrfy: 1
                          add_environment: 1
                          admin_groups: 1
                          allow_domain_literals: 1
                          allow_mx_to_ip: 1
                          allow_utf8_domains: 1
                          auth_advertise_hosts: 1
                          auto_thaw: 1
                          av_scanner: 1
                          bi_command: 1
                          bounce_message_file: 1
                          bounce_message_text: 1
                          bounce_return_body: 1
                          bounce_return_linesize_limit: 1
                          bounce_return_message: 1
                          bounce_return_size_limit: 1
                          bounce_sender_authentication: 1
                          callout_domain_negative_expire: 1
                          callout_domain_positive_expire: 1
                          callout_negative_expire: 1
                          callout_positive_expire: 1
                          callout_random_local_part: 1
                          check_log_inodes: 1
                          check_log_space: 1
                          check_rfc2047_length: 1
                          check_spool_inodes: 1
                          check_spool_space: 1
                          daemon_smtp_ports: 1
                          daemon_startup_retries: 1
                          daemon_startup_sleep: 1
                          delay_warning: 1
                          delay_warning_condition: 1
                          deliver_drop_privilege: 1
                          deliver_queue_load_max: 1
                          delivery_date_remove: 1
                          disable_ipv6: 1
                          dkim_verify_signers: 1
                          dns_again_means_nonexist: 1
                          dns_check_names_pattern: 1
                          dns_csa_search_limit: 1
                          dns_csa_use_reverse: 1
                          dns_dnssec_ok: 1
                          dns_ipv4_lookup: 1
                          dns_retrans: 1
                          dns_retry: 1
                          dns_trust_aa: 1
                          dns_use_edns0: 1
                          drop_cr: 1
                          dsn_advertise_hosts: 1
                          dsn_from: 1
                          envelope_to_remove: 1
                          errors_copy: 1
                          errors_reply_to: 1
                          event_action: 1
                          exim_group: 1
                          exim_path: 1
                          exim_user: 1
                          extra_local_interfaces: 1
                          extract_addresses_remove_arguments: 1
                          finduser_retries: 1
                          freeze_tell: 1
                          gecos_name: 1
                          gecos_pattern: 1
                          gnutls_allow_auto_pkcs11: 1
                          gnutls_compat_mode: 1
                          gnutls_require_kx: 1
                          gnutls_require_mac: 1
                          gnutls_require_protocols: 1
                          header_line_maxsize: 1
                          header_maxsize: 1
                          headers_charset: 1
                          helo_accept_junk_hosts: 1
                          helo_allow_chars: 1
                          helo_lookup_domains: 1
                          helo_try_verify_hosts: 1
                          helo_verify_hosts: 1
                          hold_domains: 1
                          host_lookup: 1
                          host_lookup_order: 1
                          host_reject_connection: 1
                          hosts_connection_nolog: 1
                          hosts_treat_as_local: 1
                          ignore_bounce_errors_after: 1
                          ignore_fromline_hosts: 1
                          ignore_fromline_local: 1
                          keep_environment: 1
                          keep_malformed: 1
                          local_from_check: 1
                          local_from_prefix: 1
                          local_from_suffix: 1
                          local_interfaces: 1
                          local_scan_timeout: 1
                          local_sender_retain: 1
                          localhost_number: 1
                          log_file_path: 1
                          log_selector: 1
                          log_timezone: 1
                          lookup_open_max: 1
                          max_username_length: 1
                          message_body_newlines: 1
                          message_body_visible: 1
                          message_id_header_domain: 1
                          message_id_header_text: 1
                          message_logs: 1
                          message_size_limit: 1
                          mua_wrapper: 1
                          never_users: 1
                          openssl_options: 1
                          percent_hack_domains: 1
                          perl_at_start: 1
                          perl_startup: 1
                          pid_file_path: 1
                          pipelining_advertise_hosts: 1
                          prdr_enable: 1
                          preserve_message_logs: 1
                          primary_hostname: 1
                          print_topbitchars: 1
                          process_log_path: 1
                          prod_requires_admin: 1
                          qualify_domain: 1
                          qualify_recipient: 1
                          queue_domains: 1
                          queue_list_requires_admin: 1
                          queue_only: 1
                          queue_only_file: 1
                          queue_only_load: 1
                          queue_only_load_latch: 1
                          queue_only_override: 1
                          queue_run_in_order: 1
                          queue_run_max: 1
                          queue_smtp_domains: 1
                          receive_timeout: 1
                          received_header_text: 1
                          received_headers_max: 1
                          recipient_unqualified_hosts: 1
                          recipients_max: 1
                          recipients_max_reject: 1
                          remote_max_parallel: 1
                          remote_sort_domains: 1
                          retry_data_expire: 1
                          retry_interval_max: 1
                          return_path_remove: 1
                          rfc1413_hosts: 1
                          rfc1413_query_timeout: 1
                          sender_unqualified_hosts: 1
                          slow_lookup_log: 1
                          smtp_accept_keepalive: 1
                          smtp_accept_max: 1
                          smtp_accept_max_nonmail: 1
                          smtp_accept_max_nonmail_hosts: 1
                          smtp_accept_max_per_connection: 1
                          smtp_accept_max_per_host: 1
                          smtp_accept_queue: 1
                          smtp_accept_queue_per_connection: 1
                          smtp_accept_reserve: 1
                          smtp_active_hostname: 1
                          smtp_banner: 1
                          smtp_check_spool_space: 1
                          smtp_connect_backlog: 1
                          smtp_enforce_sync: 1
                          smtp_etrn_command: 1
                          smtp_etrn_serialize: 1
                          smtp_load_reserve: 1
                          smtp_max_synprot_errors: 1
                          smtp_max_unknown_commands: 1
                          smtp_ratelimit_hosts: 1
                          smtp_ratelimit_mail: 1
                          smtp_ratelimit_rcpt: 1
                          smtp_reserve_hosts: 1
                          smtp_return_error_details: 1
                          spamd_address: 1
                          spf_guess: 1
                          split_spool_directory: 1
                          spool_directory: 1
                          sqlite_lock_timeout: 1
                          srs_config: 1
                          srs_hashlength: 1
                          srs_hashmin: 1
                          srs_maxage: 1
                          srs_secrets: 1
                          srs_usehash: 1
                          srs_usetimestamp: 1
                          strict_acl_vars: 1
                          strip_excess_angle_brackets: 1
                          strip_trailing_dot: 1
                          syslog_duplication: 1
                          syslog_facility: 1
                          syslog_processname: 1
                          syslog_timestamp: 1
                          system_filter: 1
                          system_filter_directory_transport: 1
                          system_filter_file_transport: 1
                          system_filter_group: 1
                          system_filter_pipe_transport: 1
                          system_filter_reply_transport: 1
                          system_filter_user: 1
                          tcp_nodelay: 1
                          timeout_frozen_after: 1
                          timezone: 1
                          tls_advertise_hosts: 1
                          tls_certificate: 1
                          tls_crl: 1
                          tls_dh_max_bits: 1
                          tls_dhparam: 1
                          tls_eccurve: 1
                          tls_ocsp_file: 1
                          tls_on_connect_ports: 1
                          tls_privatekey: 1
                          tls_remember_esmtp: 1
                          tls_require_ciphers: 1
                          tls_try_verify_hosts: 1
                          tls_verify_certificates: 1
                          tls_verify_hosts: 1
                          trusted_groups: 1
                          trusted_users: 1
                          unknown_login: 1
                          unknown_username: 1
                          untrusted_set_sender: 1
                          uucp_from_pattern: 1
                          uucp_from_sender: 1
                          warn_message_file: 1
                          write_rejectlog: 1
                        dkim: 1
                        domainkeys: 0
                        dovecot: 1
                        exiscan: 1
                        force_command: 1
                        maildir: 1
                        mailman: 1
                        no_forward_outbound_spam: 1
                        no_forward_outbound_spam_over_int: 0
                        notquit: 1
                        passwd: 1
                        rewrite_from_all: 0
                        rewrite_from_remote: 0
                        spf: 1
                        srs: 0
                    output:
                      raw: |2+

                    reason: OK
                    result: 1
                    version: 1
  /validate_login_token:
    get:
      tags:
      - Authentication
      - Market Integration
      summary: Validate login token and return access token
      description: "This function validates a login token with the cPanel Store or\
        \ a cPanel Market provider, and then returns access tokens."
      operationId: validate_login_token
      parameters:
      - name: login_token
        in: query
        description: The login token to validate.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 1a676e6f-99fc-11e6-9ab6-e60a769b73bc
      - name: provider
        in: query
        description: The cPanel Store or cPanel Market provider's name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: cPStore
      - name: url_after_login
        in: query
        description: The location to which the cPanel Store or cPanel Market provider
          redirects the user's browser after they log in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: url
          example: http://hostname.example.com/redirectionlocation.cgi?state
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_594"
  /validate_system_user:
    get:
      tags:
      - Transfers
      - Transfer Configuration
      summary: Validate username availability on target server
      description: |-
        This function validates a system user for use on the target server.

        **Note:**

          For more information about how this function works with other functions in the transfer and restore process, read our [Guide to Transfer and Restore API Functions](https://go.cpanel.net/transferrestoreAPIguide) documentation.
      operationId: validate_system_user
      parameters:
      - name: user
        in: query
        description: The system username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_595"
  /verify_icq_access:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Validate stored ICQ username and password
      description: |-
        This function calls WHM API 1's `verify_oscar_access`
        function with your specified ICQ accounts. You can specify ICQ
        accounts in the _Contact Information_ section of WHM's [*Basic WebHost Manager
        Setup*](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup/) interface (_Home >> Server Configuration >> Basic WebHost Manager
        Setup_).
      operationId: verify_icq_access
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_596"
  /verify_new_username:
    get:
      tags:
      - Account Creation
      summary: Validate new cPanel account username
      description: This function checks for username conflicts during account creation.
      operationId: verify_new_username
      parameters:
      - name: user
        in: query
        description: The account that you wish to create.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_597"
  /verify_new_username_for_restore:
    get:
      tags:
      - Account Restoration
      - Restore Account
      summary: Validate username during restoration
      description: "This function checks for username conflicts during account restoration.\
        \ If the function detects a username conflict, it outputs an error message\
        \ in the `reason` return."
      operationId: verify_new_username_for_restore
      parameters:
      - name: user
        in: query
        description: The cPanel account that you wish to transfer to the server.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_598"
  /verify_oscar_access:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Validate ICQ username and password
      description: |-
        This function tests the ICQ credentials that the system uses for notifications. The system generates a unique string and includes it in the test message.

        You can also review the user's ICQ message history to confirm that the server sent and received the message.

        The test's success or failure depends on the following conditions:
        * Valid username and password combination.
        * Network configuration.
        * Service outages.
        * External server rate limit.

        **Warning:**

          AOL discontinued support for AIM in December 2017. This function only tests ICQ credentials, not AIM credentials.
      operationId: verify_oscar_access
      parameters:
      - name: password
        in: query
        description: |-
          The ICQ account's password.

            **Note:**

          You **cannot** use this function to test an AIM account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 12345luggage
      - name: username
        in: query
        description: |-
          The ICQ account.

          **Notes:**

          * If the username value consists entirely of numbers, the system assumes that it is an ICQ account. Otherwise, the system treats the account as an AOL account.
          * You **cannot** use this function to test an AIM account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_599"
  /verify_posturl_access:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Send notification URL via POST verification
      description: |-
        This function calls the WHM API 1 `send_test_posturl` function for
        your specified POST notification URLs. Users can specify POST notification
        URLs in the *Contact Information* section of WHM's
        [*Basic WebHost Manager Setup*](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup)
        interface (*WHM >> Home >> Server Configuration >> Basic WebHost Manager Setup*).

        **Note:**

        If the *Contact Information* section of WHM's
        [*Basic WebHost Manager Setup*](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup)
        interface (*Home >> Server Configuration >> Basic WebHost Manager Setup*) contains
        multiple POST URLs, the function will return an array that contains the results
        for each URL.
      operationId: verify_posturl_access
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_600"
  /verify_pushbullet_access:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Send Pushbullet™ access verification
      description: |-
        This function calls the WHM API 1 `send_test_pushbullet_note` function with the system's specified
        Pushbullet™ accounts. You can specify Pushbullet accounts in the *Contact Information* section of WHM's
        *[Basic WebHost Manager Setup](https://docs.cpanel.net/whm/server-configuration/basic-webhost-manager-setup/)*
        interface (*Home >> Server Configuration >> Basic WebHost Manager Setup*).
      operationId: verify_pushbullet_access
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_601"
  /verify_slack_access:
    get:
      tags:
      - Server Administration
      - Notifications
      summary: Verify Slack® Webhook connection
      description: This function verifies the connection to a Slack® WebHook. You
        can specify Slack accounts in the Contact Information section of WHM's Basic
        WebHost Manager Setup  interface ( Home >> Server Configuration >> Basic WebHost
        Manager Setup ).
      operationId: verify_slack_access
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_602"
  /verify_user_has_feature:
    get:
      tags:
      - Packages
      - Feature Access
      summary: Return cPanel account feature access
      description: "This function checks whether a user has access to a feature on\
        \ a [feature list](https://go.cpanel.net/whmdocsFeatureManager)."
      operationId: verify_user_has_feature
      parameters:
      - name: feature
        in: query
        description: |-
          The feature's ID.

          **Note:**

          Call WHM API 1's `get_feature_names` function to view available features.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: sslinstall
      - name: user
        in: query
        description: The cPanel account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: username
          example: username
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_603"
  /version:
    get:
      tags:
      - Updates
      summary: Return cPanel & WHM version
      description: "This function returns [the\_cPanel & WHM version](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/)\
        \ that a server runs."
      operationId: version
      parameters: []
      responses:
        "200":
          description: HTTP Request was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_604"
components:
  schemas:
    AmazonS3BackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          aws_access_key_id:
            type: string
            description: The Amazon S3 Access Key ID.
            example: s123456789
          bucket:
            type: string
            description: The Amazon S3™ bucket.
            example: ChockFullOfNuts
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            example: subfolder
            default: ""
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
    AppConfig:
      type: object
      properties:
        acls:
          type: array
          description: The ACL(s) with permission to run the application.
          items:
            type: string
            example: any
        displayname:
          type: string
          description: |-
            The application's WHM display label.

            **Note:**

            The function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).
          example: Roundcube
        entryurl:
          type: string
          description: |-
            The application's WHM entry URL.

            **Note:**

            The function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).
          format: url-path
          example: roundcube/
        features:
          type: array
          description: The required features to run the application.
          items:
            type: string
            example: roundcube
        group:
          type: string
          description: The application's group.
          example: mailman
        icon:
          type: string
          description: |-
            The application's icon file, relative to the `/usr/local/cpanel/whostmgr/docroot/addon_plugins/` directory.

            **Note:**

            The function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).
          example: roundcube.ico
        name:
          type: string
          description: The application's name.
          example: roundcube
        origin:
          type: string
          description: |-
            The application's configuration file.

            **Note:**

            The function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).
          example: clamavconnector.conf
        phpConfig:
          type: string
          description: "The application's `php.ini` file, relative to the `/usr/local/cpanel/3rdparty/etc/`\
            \ directory."
          format: path
          example: php.ini
        target:
          type: string
          description: |-
            The action's target directory.

            **Note:**

            The function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).
          format: path
          example: _self
        upgradecall:
          type: string
          description: |-
            The absolute file path to the application's upgrade script.

            **Note:**

            * The function **only** returns this value for plugins that you register with [AppConfig](https://go.cpanel.net/appconfig).
            * The system passes upgrade information in the following format: `/usr/local/youraddon/bin/upgrade 11.36.0.0 11.38.0.0`, where:
              * `11.36.0.0` is the **previous** cPanel & WHM version.
              * `11.38.0.0` is the **current** cPanel & WHM version.
          format: path
          example: /usr/local/roundcube/bin/upgrade
        url:
          type: string
          description: The application's URL path.
          format: url-path
          example: /3rdparty/roundcube
        user:
          type: string
          description: The application's username.
          example: roundcube
    BackblazeBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          application_key:
            type: string
            description: The application key's name.
            example: A123b45CD678e9
          application_key_id:
            type: string
            description: The application key ID that authenticates the Backblaze B2
              account.
            example: 12a345B678c9
          bucket_id:
            type: string
            description: The bucket's ID.
            example: a12b34cd5678e9f
          bucket_name:
            type: string
            description: The bucket's name.
            example: ChockFullOfNuts
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: backups
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
    BackupDestinationGetResponse:
      discriminator:
        propertyName: type
        mapping:
          AmazonS3: "#/components/schemas/BackupDestinationGetResponseAmazonS3"
          Backblaze: "#/components/schemas/BackupDestinationGetResponseBackblaze"
          Custom: "#/components/schemas/BackupDestinationGetResponseCustom"
          FTP: "#/components/schemas/BackupDestinationGetResponseFTP"
          GoogleDrive: "#/components/schemas/BackupDestinationGetResponseGoogleDrive"
          Local: "#/components/schemas/BackupDestinationGetResponseLocal"
          Rsync: "#/components/schemas/BackupDestinationGetResponseRsync"
          S3Compatible: "#/components/schemas/BackupDestinationGetResponseS3Compatible"
          SFTP: "#/components/schemas/BackupDestinationGetResponseSFTP"
          WebDAV: "#/components/schemas/BackupDestinationGetResponseWebDAV"
      anyOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseAmazonS3"
      - $ref: "#/components/schemas/BackupDestinationGetResponseBackblaze"
      - $ref: "#/components/schemas/BackupDestinationGetResponseCustom"
      - $ref: "#/components/schemas/BackupDestinationGetResponseFTP"
      - $ref: "#/components/schemas/BackupDestinationGetResponseGoogleDrive"
      - $ref: "#/components/schemas/BackupDestinationGetResponseLocal"
      - $ref: "#/components/schemas/BackupDestinationGetResponseRsync"
      - $ref: "#/components/schemas/BackupDestinationGetResponseS3Compatible"
      - $ref: "#/components/schemas/BackupDestinationGetResponseSFTP"
      - $ref: "#/components/schemas/BackupDestinationGetResponseWebDAV"
    BackupDestinationGetResponseAmazonS3:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          aws_access_key_id:
            type: string
            description: The Amazon S3 Access Key ID.
            example: s123456789
          bucket:
            type: string
            description: The Amazon S3™ bucket.
            example: ChockFullOfNuts
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            format: path
            example: subfolder
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
    BackupDestinationGetResponseBackblaze:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          application_key:
            type: string
            description: The application key's name.
            example: A123b45CD678e9
          application_key_id:
            type: string
            description: The application key ID that authenticates the Backblaze B2
              account.
            example: 12a345B678c9
          bucket_id:
            type: string
            description: The bucket's ID.
            example: a12b34cd5678e9f
          bucket_name:
            type: string
            description: The bucket's name.
            example: ChockFullOfNuts
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
    BackupDestinationGetResponseBase:
      type: object
      properties:
        disable_reason:
          type: string
          description: |-
            An error message that explains why the backup is disabled.

            **Note:**

            You will only see this return when the transport is disabled.
          example: "Could not list files in destination: example"
        disabled:
          type: integer
          description: |-
            Shows whether the backup destination is disabled.
            * `1` — The destination is disabled.
            * `0` — The destination is enabled.
          example: 0
          enum:
          - 0
          - 1
        id:
          type: string
          description: The backup destination's ID
          example: sNnLb1req9oJN9lUJFhA99kY
        name:
          type: string
          description: The backup destination's name.
          example: destination_name
        type:
          type: string
          description: "The type of backup destination. Select a backup destination\
            \ from the following menu to view its return values:"
          example: Local
          enum:
          - Custom
          - FTP
          - Local
          - SFTP
          - WebDAV
          - AmazonS3
          - Rsync
          - GoogleDrive
          - S3Compatible
          - Backblaze
    BackupDestinationGetResponseCustom:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          script:
            type: string
            description: The absolute file path of the user-supplied transport solution
              script.
            format: path
            example: /home/backups/beammeupscotty.pl
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationGetResponseFTP:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          passive:
            type: integer
            description: |-
              Whether to use passive FTP.
              * `1` - Use passive FTP.
              * `0` - Use active FTP.
            example: 1
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationGetResponseGoogleDrive:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          client_id:
            type: string
            description: The Google Drive client ID.
            example: aBcdeFgHIjK123
          client_secret:
            type: string
            description: The Google Drive client secret.
            example: aBcde123FgHIjK456
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            format: path
            example: subfolder
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
    BackupDestinationGetResponseLocal:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          mount:
            type: integer
            description: |-
              Whether the path is mounted.
              * `1` - The path is mounted.
              * `0` - The path is **not** mounted.
            example: 0
            enum:
            - 1
            - 0
          no_mount_fail:
            type: integer
            description: |-
              Whether to fail the backup attempt if the mount fails.
              * `1` - Fail the backup attempt.
              * `0` - Do **not** fail the backup attempt.
            example: 0
            enum:
            - 1
            - 0
          path:
            type: string
            description: The absolute path to the backups directory.
            format: path
            example: /home/backups
    BackupDestinationGetResponseRsync:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          authtype:
            type: string
            description: |-
              The authorization type.
              * `password`
              * `key`
            example: password
            enum:
            - password
            - key
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 22
          privatekey:
            type: string
            description: "If the `authtype` return's value is `key`, the absolute\
              \ path to the private key file."
            format: path
            example: /home/backups/key
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationGetResponseS3Compatible:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          aws_access_key_id:
            type: string
            description: The S3-compatible provider key ID.
            example: s123456789
          bucket:
            type: string
            description: The S3-compatible bucket.
            example: ChockFullOfNuts
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            example: subfolder
          host:
            type: string
            description: The S3-compatible provider's server.
            format: domain
            example: www.s3example.com
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
    BackupDestinationGetResponseSFTP:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          authtype:
            type: string
            description: |-
              The authorization type.
              * `password`
              * `key`
            example: password
            enum:
            - password
            - key
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
          privatekey:
            type: string
            description: "If the `authtype` return's value is `key`, the absolute\
              \ path to the private key file."
            format: path
            example: /home/backups/key
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationGetResponseWebDAV:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationGetResponseBase"
      - type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
          ssl:
            type: integer
            description: |-
              Whether to use SSL.
              * `1` - Use SSL.
              * `0` - Do **not** use SSL.
            example: 1
            enum:
            - 1
            - 0
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationResponse:
      type: object
      properties:
        disable_reason:
          type: string
          description: |-
            An error message that explains why the backup is disabled.

            **Note:**

            You will only see this return when the transport is disabled.
          example: "Could not list files in destination: example"
        disabled:
          type: integer
          description: |-
            Shows whether the backup destination is disabled.
            * `1` — The destination is disabled.
            * `0` — The destination is enabled.
          example: 0
          enum:
          - 0
          - 1
        id:
          type: string
          description: The ID of the backup destination to modify.
          example: 0W1ei2rd3A4lI5sT6he7Be8st
        name:
          type: string
          description: A new name for the backup destination.
          example: destination_name
        type:
          type: string
          description: The type of backup destination.
          example: Local
          enum:
          - Custom
          - FTP
          - Local
          - SFTP
          - WebDAV
          - AmazonS3
          - Rsync
          - GoogleDrive
          - S3Compatible
          - Backblaze
    BackupDestinationResponseType:
      discriminator:
        propertyName: type
        mapping:
          AmazonS3: "#/components/schemas/AmazonS3BackupDestinationResponse"
          Backblaze: "#/components/schemas/BackblazeBackupDestinationResponse"
          Custom: "#/components/schemas/CustomBackupDestinationResponse"
          FTP: "#/components/schemas/FTPBackupDestinationResponse"
          GoogleDrive: "#/components/schemas/GoogleDriveBackupDestinationResponse"
          Local: "#/components/schemas/LocalBackupDestinationResponse"
          Rsync: "#/components/schemas/RsyncBackupDestinationResponse"
          S3Compatible: "#/components/schemas/S3CompatibleBackupDestinationResponse"
          SFTP: "#/components/schemas/SFTPBackupDestinationResponse"
          WebDAV: "#/components/schemas/WebDAVBackupDestinationResponse"
      anyOf:
      - $ref: "#/components/schemas/AmazonS3BackupDestinationResponse"
      - $ref: "#/components/schemas/BackblazeBackupDestinationResponse"
      - $ref: "#/components/schemas/CustomBackupDestinationResponse"
      - $ref: "#/components/schemas/FTPBackupDestinationResponse"
      - $ref: "#/components/schemas/GoogleDriveBackupDestinationResponse"
      - $ref: "#/components/schemas/LocalBackupDestinationResponse"
      - $ref: "#/components/schemas/RsyncBackupDestinationResponse"
      - $ref: "#/components/schemas/S3CompatibleBackupDestinationResponse"
      - $ref: "#/components/schemas/SFTPBackupDestinationResponse"
      - $ref: "#/components/schemas/WebDAVBackupDestinationResponse"
    BackupDestinationSetParameterAmazonS3:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - aws_access_key_id
        - bucket
        - password
        - timeout
        type: object
        properties:
          aws_access_key_id:
            type: string
            description: The Amazon S3 Access Key ID.
            example: s123456789
          bucket:
            type: string
            description: The Amazon S3™ bucket.
            example: ChockFullOfNuts
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            format: path
            example: subfolder
            default: ""
          password:
            type: string
            description: The Amazon S3 Access Key's password.
            example: 123456luggage
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
    BackupDestinationSetParameterBackblaze:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - application_key
        - application_key_id
        - bucket_id
        - bucket_name
        type: object
        properties:
          application_key:
            type: string
            description: The application key's name.
            example: A123b45CD678e9
          application_key_id:
            type: string
            description: The application key ID that authenticates the Backblaze B2
              account.
            example: 12a345B678c9
          bucket_id:
            type: string
            description: The bucket's ID.
            example: a12b34cd5678e9f
          bucket_name:
            type: string
            description: The bucket's name.
            example: ChockFullOfNuts
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: backups
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
    BackupDestinationSetParameterBase:
      required:
      - id
      type: object
      properties:
        disable_reason:
          type: string
          description: An error message that explains why the backup is disabled.
          example: "Could not list files in destination: example"
        disabled:
          type: integer
          description: |-
            Whether to disable the backup destination.
            * `1` — Disable the destination.
            * `0` — Enable the destination.

            **Note:**

            If you do not set this parameter, the system retains the current setting.
          example: 0
          enum:
          - 0
          - 1
        id:
          type: string
          description: The ID of the backup destination to modify.
          example: 0W1ei2rd3A4lI5sT6he7Be8st
        name:
          type: string
          description: |-
            A new name for the backup destination.

            **Note:**

            If you do not set this parameter, the system retains the current setting.
          example: destination_name
        type:
          type: string
          description: |-
            The type of backup destination.

            **Note:**

            If you do not set this parameter, the system retains the current setting.

            Select a backup destination from the following menu to view its optional parameters:
          example: Local
          enum:
          - Custom
          - FTP
          - Local
          - SFTP
          - WebDAV
          - AmazonS3
          - Rsync
          - GoogleDrive
          - S3Compatible
          - Backblaze
        upload_system_backup:
          type: integer
          description: |-
            Whether to upload system backups.
            * `1` — Upload.
            * `0` — Do **not** upload.

            **Note:**

            If you do not set this parameter, the system retains the current setting.
          example: 1
          enum:
          - 0
          - 1
        only_used_for_logs:
          type: integer
          description: |-
            Whether to use this transport only for logs.
            * `1` — This destination will be skipped for regular backups.
            * `0` — Both log and regular backups will be uploaded.

            This setting defaults to 0.
            The only time log files get their own backup is via scripts/remote_log_transfer

            **Note:**

            If you do not set this parameter, the system retains the current setting.
          example: 1
          enum:
          - 0
          - 1
    BackupDestinationSetParameterCustom:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - host
        - password
        - path
        - script
        - username
        type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          password:
            type: string
            description: The remote server account's password.
            example: 123456luggage
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          script:
            type: string
            description: The absolute file path of the user-supplied transport solution
              script.
            format: path
            example: /home/backups/beammeupscotty.pl
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationSetParameterFTP:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - host
        - password
        - path
        - username
        type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          passive:
            type: integer
            description: |-
              Whether to use passive FTP.
              * `1` - Use passive FTP.
              * `0` - Use active FTP.
            example: 1
            default: 1
          password:
            type: string
            description: The remote server account's password.
            example: 123456luggage
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
            default: 21
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationSetParameterGoogleDrive:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - client_id
        - client_secret
        type: object
        properties:
          client_id:
            type: string
            description: The Google Drive client ID.
            example: aBcdeFgHIjK123
          client_secret:
            type: string
            description: The Google Drive client secret.
            example: aBcde123FgHIjK456
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            format: path
            example: subfolder
            default: ""
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
    BackupDestinationSetParameterLocal:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - path
        type: object
        properties:
          mount:
            type: integer
            description: |-
              Whether the path is mounted.
              * `1` - The path is mounted.
              * `0` - The path is **not** mounted.
            example: 0
            default: 0
            enum:
            - 1
            - 0
          no_mount_fail:
            type: integer
            description: |-
              Whether to fail the backup attempt if the mount fails.
              * `1` - Fail the backup attempt.
              * `0` - Do **not** fail the backup attempt.
            example: 0
            default: 0
            enum:
            - 1
            - 0
          path:
            type: string
            description: The absolute path to the backups directory.
            format: path
            example: /home/backups
    BackupDestinationSetParameterRsync:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - authtype
        - host
        - path
        - username
        type: object
        properties:
          authtype:
            type: string
            description: |-
              The authorization type.
              * `password`
              * `key`
            example: password
            enum:
            - password
            - key
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          passphrase:
            type: string
            description: "If the `authtype` parameter's value is `key`, the private\
              \ key file's passphrase."
            example: 123456luggage
          password:
            type: string
            description: "If the `authtype` parameter's value is `password`, the remote\
              \ server account's password."
            example: 123456luggage
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 22
            default: 22
          privatekey:
            type: string
            description: "If the `authtype` parameter's value is `key`, the absolute\
              \ path to the private key file."
            format: path
            example: /home/backups/key
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationSetParameterS3Compatible:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - aws_access_key_id
        - bucket
        - host
        - password
        - timeout
        type: object
        properties:
          aws_access_key_id:
            type: string
            description: The S3-compatible provider key ID.
            example: s123456789
          bucket:
            type: string
            description: The S3-compatible bucket.
            example: ChockFullOfNuts
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            format: path
            example: subfolder
            default: ""
          host:
            type: string
            description: The S3-compatible provider's server.
            example: www.s3example.com
          password:
            type: string
            description: The S3-compatible provider key's password or secret.
            example: 123456luggage
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
    BackupDestinationSetParameterSFTP:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - authtype
        - host
        - path
        - username
        type: object
        properties:
          authtype:
            type: string
            description: |-
              The authorization type.
              * `password`
              * `key`
            example: password
            enum:
            - password
            - key
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          passphrase:
            type: string
            description: "If the `authtype` parameter's value is `key`, the private\
              \ key file's passphrase."
            example: 123456luggage
          password:
            type: string
            description: "If the `authtype` parameter's value is `password`, the remote\
              \ server account's password."
            example: 123456luggage
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
            default: 21
          privatekey:
            type: string
            description: "If the `authtype` parameter's value is `key`, the absolute\
              \ path to the private key file."
            format: path
            example: /home/backups/key
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    BackupDestinationSetParameterType:
      discriminator:
        propertyName: type
        mapping:
          AmazonS3: "#/components/schemas/BackupDestinationSetParameterAmazonS3"
          Backblaze: "#/components/schemas/BackupDestinationSetParameterBackblaze"
          Custom: "#/components/schemas/BackupDestinationSetParameterCustom"
          FTP: "#/components/schemas/BackupDestinationSetParameterFTP"
          GoogleDrive: "#/components/schemas/BackupDestinationSetParameterGoogleDrive"
          Local: "#/components/schemas/BackupDestinationSetParameterLocal"
          Rsync: "#/components/schemas/BackupDestinationSetParameterRsync"
          S3Compatible: "#/components/schemas/BackupDestinationSetParameterS3Compatible"
          SFTP: "#/components/schemas/BackupDestinationSetParameterSFTP"
          WebDAV: "#/components/schemas/BackupDestinationSetParameterWebDAV"
      anyOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterAmazonS3"
      - $ref: "#/components/schemas/BackupDestinationSetParameterBackblaze"
      - $ref: "#/components/schemas/BackupDestinationSetParameterCustom"
      - $ref: "#/components/schemas/BackupDestinationSetParameterFTP"
      - $ref: "#/components/schemas/BackupDestinationSetParameterGoogleDrive"
      - $ref: "#/components/schemas/BackupDestinationSetParameterLocal"
      - $ref: "#/components/schemas/BackupDestinationSetParameterRsync"
      - $ref: "#/components/schemas/BackupDestinationSetParameterS3Compatible"
      - $ref: "#/components/schemas/BackupDestinationSetParameterSFTP"
      - $ref: "#/components/schemas/BackupDestinationSetParameterWebDAV"
    BackupDestinationSetParameterWebDAV:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationSetParameterBase"
      - required:
        - host
        - password
        - path
        - username
        type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          password:
            type: string
            description: The remote server account's password.
            example: 123456luggage
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
            default: 21
          ssl:
            type: integer
            description: |-
              Whether to use SSL.
              * `1` - Use SSL.
              * `0` - Do **not** use SSL.
            example: 1
            default: 1
            enum:
            - 1
            - 0
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    CustomBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          script:
            type: string
            description: The absolute file path of the user-supplied transport solution
              script.
            example: /home/backups/beammeupscotty.pl
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    DnsAddZoneParameterBase:
      required:
      - class
      - domain
      - line
      - name
      - type
      type: object
      properties:
        class:
          description: The record's class.
          example: IN
          oneOf:
          - type: string
            enum:
            - IN
          - type: string
            description: A valid DNS record class.
        domain:
          type: string
          description: The new zone record's domain.
          format: domain
          example: example.com
        name:
          type: string
          description: |-
            The record's name.

            **Note:**

            Do **not** omit any necessary trailing periods.
          format: domain
          example: hostname.example.com.
        ttl:
          minimum: 1
          type: integer
          description: "The record's Time To Live (TTL), in seconds."
          example: 86400
          default: 86400
        type:
          type: string
          description: |-
            The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types):
            * `A` - A records store IPv4 addresses. Use them to map a hostname to an IPv4 address.
            * `A6` - A6 records store IPv6 addresses.
            * `AAAA` - AAAA records store IPv6 addresses.
            * `AFSDB` - AFSDB records store the location of an AFS cell's database servers.
            * `ALIAS` - ALIAS records create an alias to another hostname, but can coexist with other records on that name. We strongly discourage using this record type.
            * `CAA` - CAA records control which certificate authorities can issue SSL certificates for a domain.
            * `CNAME` - CNAME records create an alias to another hostname.
            * `DNAME` - DNAME records create an alias for a hostname and its subnames.
            * `DS` - DS records specify a record's delegation signer.
            * `HINFO` - HINFO records specify a host's CPU and OS types.
            * `LOC` - LOC records store a hostname's geographical location.
            * `MX` - MX records point a domain name to its MTAs.
            * `NS` - NS records store a domain's authoritative nameservers.
            * `PTR` - PTR records point to a CNAME.
            * `RP` - RP records store a domain's Responsible Person's information.
            * `SOA` - SOA records designate the beginning of a zone of authority.
            * `SRV` - SRV records store the service location records for newer protocols (for example, Autodiscover).
            * `TXT` - TXT records store descriptive text or useful records (for example, SPF or DKIM records).

            When you call this function, you **must** include the additional parameters for the desired
            zone record type. Select a zone record from the menu to view the required additional
            parameters:
          example: A
          enum:
          - A
          - A6
          - AAAA
          - AFSDB
          - ALIAS
          - CAA
          - CNAME
          - DNAME
          - DS
          - HINFO
          - LOC
          - MX
          - NS
          - PTR
          - RP
          - SOA
          - SRV
          - TXT
    DnsAddZoneParameterType:
      discriminator:
        propertyName: type
        mapping:
          A: "#/components/schemas/DnsAddZoneParameterTypeA"
          A6: "#/components/schemas/DnsAddZoneParameterTypeA6"
          AAAA: "#/components/schemas/DnsAddZoneParameterTypeAAAA"
          AFSDB: "#/components/schemas/DnsAddZoneParameterTypeAFSDB"
          ALIAS: "#/components/schemas/DnsAddZoneParameterTypeALIAS"
          CAA: "#/components/schemas/DnsAddZoneParameterTypeCAA"
          CNAME: "#/components/schemas/DnsAddZoneParameterTypeCNAME"
          DNAME: "#/components/schemas/DnsAddZoneParameterTypeDNAME"
          DS: "#/components/schemas/DnsAddZoneParameterTypeDS"
          HINFO: "#/components/schemas/DnsAddZoneParameterTypeHINFO"
          LOC: "#/components/schemas/DnsAddZoneParameterTypeLOC"
          MX: "#/components/schemas/DnsAddZoneParameterTypeMX"
          NS: "#/components/schemas/DnsAddZoneParameterTypeNS"
          PTR (Reverse DNS): "#/components/schemas/DnsAddZoneParameterTypePTR"
          RP: "#/components/schemas/DnsAddZoneParameterTypeRP"
          SOA: "#/components/schemas/DnsAddZoneParameterTypeSOA"
          SRV: "#/components/schemas/DnsAddZoneParameterTypeSRV"
          TXT: "#/components/schemas/DnsAddZoneParameterTypeTXT"
      anyOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeA"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeA6"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeAAAA"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeAFSDB"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeALIAS"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeCAA"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeCNAME"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeDNAME"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeDS"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeHINFO"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeLOC"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeMX"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeNS"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypePTR"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeRP"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeSOA"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeSRV"
      - $ref: "#/components/schemas/DnsAddZoneParameterTypeTXT"
    DnsAddZoneParameterTypeA:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          address:
            type: string
            description: |-
              The zone record's IPv4 address.

              **Note:**

              For more information about A records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: ipv4
            example: 192.168.0.20
    DnsAddZoneParameterTypeA6:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          prefix:
            minimum: 1
            type: integer
            description: |-
              The record's prefix length.

              **Important:**

              A6 records are **deprecated**. We **strongly** recommend that you use AAAA records to
              store IPv6 addresses.
            example: 48
            deprecated: true
          refer:
            type: string
            description: |-
              The record's IPv6 address suffix.

              **Note:**

              You **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.
            example: 0::0
            deprecated: true
    DnsAddZoneParameterTypeAAAA:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          address:
            type: string
            description: |-
              The zone record's IPv6 address.

              **Note:**

              * You **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.
              * For more information about AAAA records, read [RFC 3596 at IANA](http://tools.ietf.org/html/rfc3596).
            format: ipv6
            example: 2001:1:42:1::2a
    DnsAddZoneParameterTypeAFSDB:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          hostname:
            type: string
            description: The database servers' hostname.
            format: domain
            example: hostname.example.com
          subtype:
            type: integer
            description: |-
              The 16-bit integer of an AFS cell type.

              For example, specify `1` to signify an AFS version 3.0 Volume Location Server.

              **Note:**

              For more information about AFSDB records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).
            example: 1
    DnsAddZoneParameterTypeALIAS:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          alias:
            type: string
            description: |-
              The hostname you want to point to.

              **Note:**

              We strongly recommend that you do not use this function.
              Using the ALIAS DNS record may result in unexpected behavior, including website downtimes outside of your control, inconsistency in the handling of the record, and security vulnerabilities.
              This record is only available if you enable access to it and use PowerDNS.
            format: domain
            example: hostname.example.com
    DnsAddZoneParameterTypeCAA:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          flag:
            type: integer
            description: |-
              Whether the Certificate Authority (CA) will issue an SSL certificate if the CAA resource record contains unknown property tags.

              * `0` - The CA will issue an SSL certificate.
              * `1` - The CA will **not** issue an SSL certificate.

              For more information about CAA record flags and property tags, read the [RFC 6844 documentation](https://tools.ietf.org/html/rfc6844#section-3).
            example: 0
            enum:
            - 0
            - 1
          tag:
            type: string
            description: |-
              The CAA record's property type.

              * `issue` - Authorize a CA to issue a certificate for the domain.
              * `issuewild` - Authorize a CA to issue a wildcard certificate for the domain.
              * `iodef` - Specify a URL to which a CA may report policy violations.
            example: issue
            enum:
            - issue
            - issuewild
            - iodef
          value:
            type: string
            description: |-
              The CA's domain or URL. This is a valid [SSL provider](https://sslmate.com/labs/caa/),
              `mailto` URL, or a standard URL.

              **Note:**

              If you use `iodef` as the `tag` parameter's value, enter a URL that a CA can use to report issues as this parameter's value.
            example: exampleca.com
    DnsAddZoneParameterTypeCNAME:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          cname:
            type: string
            description: |-
              The canonical name (CNAME) alias.

              **Note:**

              For more information about CNAME records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: hostname.example.com
          flatten:
            type: integer
            description: |-
              Whether to resolve the specified CNAME value with the record's IP address.

              If you do **not** also set the `flatten_to` parameter, the system will attempt to resolve the CNAME automatically.

              * `1` - Flattened.
              * `0` - Not flattened (the function will **fail**).

              **Note:**

              Only use this parameter when you alter the zone's `root` record.
            example: 1
            enum:
            - 0
            - 1
          flatten_to:
            description: |-
              The IP address that the specified CNAME will resolve to.

              **Note:**

              You **must** use the `flatten` parameter with this parameter.
            oneOf:
            - type: string
              description: A valid IPv4 address.
              format: ipv4
              example: 192.0.2.27
            - type: string
              description: A valid IPv6 address.
              format: ipv6
              example: 2001:0db8:85a3:0042:1000:8a2e:0370:7334
    DnsAddZoneParameterTypeDNAME:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          dname:
            type: string
            description: |-
              The delegation name (DNAME) alias.

              **Note:**

              For more information about DNAME records, read [RFC 2672 at IANA](http://tools.ietf.org/html/rfc2672).
            format: domain
            example: hostname.example.com
    DnsAddZoneParameterTypeDS:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          algorithm:
            type: integer
            description: |-
              The record's algorithm number.

              * `1` - RSAMD5
              * `2` - Diffie-Hellman
              * `3` - DSA/SHA-1
              * `4` - Elliptic Curve
              * `5` - RSA/SHA-1
              * `7` - RSASHA1-NSEC3-SHA1
              * `8` - RSA/SHA-256
              * `10` - RSA/SHA-512
              * `13` - ECDSA Curve P-256 with SHA-256
              * `14` - ECDSA Curve P-384 with SHA-384
              * `252` - Indirect
              * `253` - Private DNS
              * `254` - Private OID
            example: 5
            enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 7
            - 8
            - 10
            - 13
            - 14
            - 252
            - 253
            - 254
          digtype:
            type: integer
            description: |-
              The record's digest type.

              * `1` — SHA-1
              * `2` — SHA-256
              * `4` — SHA-384
            example: 1
            enum:
            - 1
            - 2
            - 4
          keyname:
            type: integer
            description: |-
              The record's KeyTag value.

              **Note:**

              For more information about DS records, read [RFC 4034 at IANA](http://tools.ietf.org/html/rfc4034).
            example: 2642
    DnsAddZoneParameterTypeHINFO:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          cpu:
            type: string
            description: |-
              The host's CPU type.

              **Note:**

              For more information about HINFO records, read [RFC 1700 at IANA](http://tools.ietf.org/html/rfc1700.txt).
            example: INTEL-386
          os:
            type: string
            description: The host's operating system.
            example: UNIX
    DnsAddZoneParameterTypeLOC:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          altitude:
            type: string
            description: |-
              The location's altitude above sea level, in meters.

              **Note:**

              Make certain that you append `m` to the altitude value.
            example: 178m
          horiz_pre:
            minimum: 1
            type: integer
            description: "The location's horizontal precision distance, in meters."
            example: 10
          latitude:
            type: string
            description: The location's latitude.
            example: 41 51 54.305 N
          longitude:
            type: string
            description: The location's longitude.
            example: 87 36 47.95 W
          size:
            minimum: 1
            type: integer
            description: "The diameter of a sphere that encloses the entire location,\
              \ in meters."
            example: 10
          version:
            type: integer
            description: |-
              The record's version number.

              **Note:**

              * You **must** set this value to `0`.
              * For more information about LOC records, read [RFC 1876 at IANA](http://tools.ietf.org/html/rfc1876).
            example: 0
            enum:
            - 0
          vert_pre:
            minimum: 1
            type: integer
            description: "The location's vertical precision distance, in meters."
            example: 10
    DnsAddZoneParameterTypeMX:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          exchange:
            type: string
            description: The server's location's canonical name (CNAME).
            format: domain
            example: mail.example.com
          preference:
            type: integer
            description: |-
              The record's priority order.

              **Note:**

              * Lower values have a higher priority order.
              * For more information about MX records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            example: 10
    DnsAddZoneParameterTypeNS:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          nsdname:
            type: string
            description: |-
              The domain's authoritative nameserver.

              **Note:**

              For more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: ns1.example.com
    DnsAddZoneParameterTypePTR:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          ptrdname:
            type: string
            description: |-
              A pointer to a canonical name (CNAME).

              **Note:**

              * Do **not** omit any necessary trailing periods.
              * For more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: hostname.example.com
          zone:
            type: string
            description: The new reverse DNS zone's name.
            example: 0.168.192.in-addr.arpa
    DnsAddZoneParameterTypeRP:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          mbox:
            type: string
            description: |-
              The Responsible Person's (RP) email address.

              **Note:**

              * Replace the `@` symbol with a period (`.`).
              * Do **not** omit any necessary trailing periods.
              * For more information about RP records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).
            example: user.example.com.
          txtdname:
            type: string
            description: |-
              The RP's domain name.

              **Note:**

              Do **not** omit any necessary trailing periods.
            format: domain
            example: mx1.host.example.com.
    DnsAddZoneParameterTypeSOA:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          Lines:
            minimum: 1
            type: integer
            description: The number of lines in the SOA section.
            example: 4
          expire:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ server attempts to complete a zone transfer."
            example: 3600000
          mname:
            type: string
            description: The domain's authoritative nameserver.
            format: domain
            example: ns1.host.example.com
          refresh:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ DNS server queries the primary DNS server's SOA records for changes."
            example: 1440
          retry:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ server retries a failed zone transfer."
            example: 14400
          rname:
            type: string
            description: |-
              The Responsible Person's (RP) email address.

              **Note:**

              * Replace the `@` symbol with a period (`.`).
              * Do **not** omit any necessary trailing periods.
            example: email.host.example.com
          serial:
            type: integer
            description: |-
              The zone file's revision number.

              **Note:**

              For more information about SOA records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            example: 2013122501
    DnsAddZoneParameterTypeSRV:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          port:
            type: integer
            description: The target host's port.
            example: 389
          priority:
            type: integer
            description: |-
              The target host's priority preference.

              **Note:**

              * Lower numbers have a higher priority order.
              * For more information about SRV records, read [RFC 2782 at IANA](http://tools.ietf.org/html/rfc2782).
            example: 0
          target:
            type: string
            description: The service's target host.
            format: domain
            example: service.example.com
          weight:
            type: integer
            description: A relative weight. The system uses this value to rank entries
              with the same `priority` value.
            example: 2
    DnsAddZoneParameterTypeTXT:
      allOf:
      - $ref: "#/components/schemas/DnsAddZoneParameterBase"
      - type: object
        properties:
          txtdata:
            type: string
            description: |-
              The TXT record's data.

              **Note:**

              * This value **must** include beginning and ending quotes (`""`).
              * Do **not** URI-encode the quotes.
              * For more information about TXT records, read [RFC 1464 at IANA](http://tools.ietf.org/html/rfc1464).
            example: '"v=spf1 a -all"'
    DnsEditZoneParameterBase:
      required:
      - domain
      - line
      - ttl
      type: object
      properties:
        class:
          description: |-
            The record's class.

            If you do not use this parameter, the system retains the current setting.
          example: IN
          oneOf:
          - type: string
            enum:
            - IN
          - type: string
            description: A valid DNS record class.
        domain:
          type: string
          description: The zone record's domain.
          format: domain
          example: example.com
        line:
          minimum: 1
          type: integer
          description: The zone record's file line number.
          example: 24
        name:
          type: string
          description: |-
            The record's name.

            If you do not use this parameter, the system retains the current setting.

            **Note:**

            Do **not** omit any necessary trailing periods.
          format: domain
          example: hostname.example.com.
        ttl:
          minimum: 1
          type: integer
          description: "The record's Time To Live (TTL), in seconds."
          example: 86400
        type:
          type: string
          description: |-
            The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types):
            * `A` - A records store IPv4 addresses. Use them to map a hostname to an IPv4 address.
            * `A6` - A6 records store IPv6 addresses.
            * `AAAA` - AAAA records store IPv6 addresses.
            * `AFSDB` - AFSDB records store the location of an AFS cell's database servers.
            * `ALIAS` - ALIAS records create an alias to another hostname, but can coexist with other records on that name. We strongly discourage using this record type.
            * `CAA` - CAA records control which certificate authorities can issue SSL certificates for a domain.
            * `CNAME` - CNAME records create an alias to another hostname.
            * `DNAME` - DNAME records create an alias for a hostname and its subnames.
            * `DS` - DS records specify a record's delegation signer.
            * `HINFO` - HINFO records specify a host's CPU and OS types.
            * `LOC` - LOC records store a hostname's geographical location.
            * `MX` - MX records point a domain name to its MTAs.
            * `NS` - NS records store a domain's authoritative nameservers.
            * `PTR` - PTR records point to a CNAME.
            * `RP` - RP records store a domain's Responsible Person's information.
            * `SOA` - SOA records designate the beginning of a zone of authority.
            * `SRV` - SRV records store the service location records for newer protocols (for example, Autodiscover).
            * `TXT` - TXT records store descriptive text or useful records (for example, SPF or DKIM records).

            If you do not use this parameter, the system retains the current setting.

            **Warning:**

            Additional properties may be required based on the `type`.

            When you call this function, you **must** include the additional parameters for the desired
            zone record type if you use this parameter. Select a zone record from the menu to view the required additional
            parameters:
          example: A
          enum:
          - A
          - AAAA
          - AFSDB
          - ALIAS
          - CAA
          - CNAME
          - DNAME
          - DS
          - HINFO
          - LOC
          - MX
          - NS
          - PTR
          - RP
          - SOA
          - SRV
          - TXT
    DnsEditZoneParameterType:
      discriminator:
        propertyName: type
        mapping:
          A: "#/components/schemas/DnsEditZoneParameterTypeA"
          A6: "#/components/schemas/DnsEditZoneParameterTypeA6"
          AAAA: "#/components/schemas/DnsEditZoneParameterTypeAAAA"
          AFSDB: "#/components/schemas/DnsEditZoneParameterTypeAFSDB"
          ALIAS: "#/components/schemas/DnsEditZoneParameterTypeALIAS"
          CAA: "#/components/schemas/DnsEditZoneParameterTypeCAA"
          CNAME: "#/components/schemas/DnsEditZoneParameterTypeCNAME"
          DNAME: "#/components/schemas/DnsEditZoneParameterTypeDNAME"
          DS: "#/components/schemas/DnsEditZoneParameterTypeDS"
          HINFO: "#/components/schemas/DnsEditZoneParameterTypeHINFO"
          LOC: "#/components/schemas/DnsEditZoneParameterTypeLOC"
          MX: "#/components/schemas/DnsEditZoneParameterTypeMX"
          NS: "#/components/schemas/DnsEditZoneParameterTypeNS"
          PTR: "#/components/schemas/DnsEditZoneParameterTypePTR"
          RP: "#/components/schemas/DnsEditZoneParameterTypeRP"
          SOA: "#/components/schemas/DnsEditZoneParameterTypeSOA"
          SRV: "#/components/schemas/DnsEditZoneParameterTypeSRV"
          TXT: "#/components/schemas/DnsEditZoneParameterTypeTXT"
      anyOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeA"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeA6"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeAAAA"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeAFSDB"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeALIAS"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeCAA"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeCNAME"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeDNAME"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeDS"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeHINFO"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeLOC"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeMX"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeNS"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypePTR"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeRP"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeSOA"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeSRV"
      - $ref: "#/components/schemas/DnsEditZoneParameterTypeTXT"
    DnsEditZoneParameterTypeA:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - required:
        - address
        type: object
        properties:
          address:
            type: string
            description: |-
              The zone record's IPv4 address.

              **Note:**

              For more information about A records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: ipv4
            example: 192.168.0.20
    DnsEditZoneParameterTypeA6:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - required:
        - prefix
        - refer
        type: object
        properties:
          prefix:
            minimum: 1
            type: integer
            description: The record's prefix length.
            example: 48
            deprecated: true
          refer:
            type: string
            description: |-
              The record's address suffix.

              **Note:**

              You **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.
            example: 0::0
            deprecated: true
        description: |2-

          A6 records are **deprecated**. We **strongly** recommend that you use AAAA records to
          store IPv6 addresses.
    DnsEditZoneParameterTypeAAAA:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - required:
        - address
        type: object
        properties:
          address:
            type: string
            description: |-
              The zone record's IPv6 address.

              **Note:**

              * You **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.
              * For more information about AAAA records, read [RFC 3596 at IANA](http://tools.ietf.org/html/rfc3596).
            format: ipv6
            example: 2001:1:42:1::2a
    DnsEditZoneParameterTypeAFSDB:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - required:
        - hostname
        - subtype
        type: object
        properties:
          hostname:
            type: string
            description: The database servers' hostname.
            format: domain
            example: hostname.example.com
          subtype:
            type: integer
            description: |-
              The 16-bit integer of an AFS cell type.

              For example, specify `1` to signify an AFS version 3.0 Volume Location Server.

              **Note:**

              * You **must** uuencode the colons (`:`) in IPv6 addresses in your function calls.
              * For more information about AFSDB records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).
            example: 1
    DnsEditZoneParameterTypeALIAS:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - required:
        - alias
        type: object
        properties:
          alias:
            type: string
            description: |-
              The hostname you want to point to.

              **Note:**

              We strongly recommend that you do not use this function.
              Using the ALIAS DNS record may result in unexpected behavior, including website downtimes outside of your control, inconsistency in the handling of the record, and security vulnerabilities.
              This record is only available if you enable access to it and use PowerDNS.
            format: domain
            example: hostname.example.com
    DnsEditZoneParameterTypeCAA:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - required:
        - flag
        - tag
        - value
        type: object
        properties:
          flag:
            type: integer
            description: |-
              Whether the Certificate Authority (CA) will issue an SSL certificate if the CAA resource record contains unknown property tags.

              * `0` - The CA will issue an SSL certificate.
              * `1` - The CA will **not** issue an SSL certificate.

              For more information about CAA record flags and property tags, read the [RFC 6844 documentation](https://tools.ietf.org/html/rfc6844#section-3).
            example: 0
            enum:
            - 0
            - 1
          tag:
            type: string
            description: |-
              The CAA record's property type.

              * `issue` - Authorize a CA to issue a certificate for the domain.
              * `issuewild` - Authorize a CA to issue a wildcard certificate for the domain.
              * `iodef` - Specify a URL to which a CA may report policy violations.
            example: issue
            enum:
            - issue
            - issuewild
            - iodef
          value:
            type: string
            description: |-
              The CA's domain or URL. This is a valid [SSL provider](https://sslmate.com/labs/caa/),
              `mailto` URL, or a standard URL.

              **Note:**

              If you use `iodef` as the `tag` parameter's value, enter a URL that a CA can use to report issues as this parameter's value.
            example: exampleca.com
    DnsEditZoneParameterTypeCNAME:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - required:
        - cname
        type: object
        properties:
          cname:
            type: string
            description: |-
              The canonical name (CNAME) alias.

              **Note:**

              For more information about CNAME records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: hostname.example.com
          flatten:
            type: integer
            description: |-
              Whether to resolve the specified CNAME value with the record's IP address.

              If you do **not** also set the `flatten_to` parameter, the system will attempt to resolve the CNAME automatically.

              * `1` - Flattened.
              * `0` - Not flattened (the function will **fail**).

              **Note:**

              Only use this parameter when you alter the zone's `root` record.
            example: 1
            enum:
            - 0
            - 1
          flatten_to:
            description: |-
              The IP address that the specified CNAME will resolve to.

              **Note:**

              You **must** use the `flatten` parameter with this parameter.
            oneOf:
            - type: string
              description: A valid IPv4 address.
              format: ipv4
              example: 192.0.2.27
            - type: string
              description: A valid IPv6 address.
              format: ipv6
              example: 2001:0db8:85a3:0042:1000:8a2e:0370:7334
    DnsEditZoneParameterTypeDNAME:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - required:
        - dname
        type: object
        properties:
          dname:
            type: string
            description: |-
              The delegation name (DNAME) alias.

              **Note:**

              For more information about DNAME records, read [RFC 2672 at IANA](http://tools.ietf.org/html/rfc2672).
            format: domain
            example: hostname.example.com
    DnsEditZoneParameterTypeDS:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          algorithm:
            type: integer
            description: |-
              The record's algorithm number.

              * `1` - RSAMD5
              * `2` - Diffie-Hellman
              * `3` - DSA/SHA-1
              * `4` - Elliptic Curve
              * `5` - RSA/SHA-1
              * `7` - RSASHA1-NSEC3-SHA1
              * `8` - RSA/SHA-256
              * `10` - RSA/SHA-512
              * `13` - ECDSA Curve P-256 with SHA-256
              * `14` - ECDSA Curve P-384 with SHA-384
              * `252` - Indirect
              * `253` - Private DNS
              * `254` - Private OID
            example: 5
            enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 7
            - 8
            - 10
            - 13
            - 14
            - 252
            - 253
            - 254
          digtype:
            type: integer
            description: |-
              The record's digest type.

              * `1` — SHA-1
              * `2` — SHA-256
              * `4` — SHA-384
            example: 1
            enum:
            - 1
            - 2
            - 4
          keyname:
            type: integer
            description: |-
              The record's KeyTag value.

              **Note:**

              For more information about DS records, read [RFC 4034 at IANA](http://tools.ietf.org/html/rfc4034).
            example: 2642
    DnsEditZoneParameterTypeHINFO:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          cpu:
            type: string
            description: |-
              The host's CPU type.

              **Note:**

              For more information about HINFO records, read [RFC 1700 at IANA](http://tools.ietf.org/html/rfc1700.txt).
            example: INTEL-386
          os:
            type: string
            description: The host's operating system.
            example: UNIX
    DnsEditZoneParameterTypeLOC:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          altitude:
            type: string
            description: |-
              The location's altitude above sea level, in meters.

              **Note:**

              Make certain that you append `m` to the altitude value.
            example: 178m
          horiz_pre:
            minimum: 1
            type: integer
            description: "The location's horizontal precision distance, in meters."
            example: 10
          latitude:
            type: string
            description: The location's latitude.
            example: 54.305 N
          longitude:
            type: string
            description: The location's longitude.
            example: 47.95 W
          size:
            minimum: 1
            type: integer
            description: "The diameter of a sphere that encloses the entire location,\
              \ in meters."
            example: 10
          version:
            type: integer
            description: |-
              The record's version number.

              **Note:**

              * You **must** set this value to `0`.
              * For more information about LOC records, read [RFC 1876 at IANA](http://tools.ietf.org/html/rfc1876).
            example: 0
            enum:
            - 0
          vert_pre:
            minimum: 1
            type: integer
            description: "The location's vertical precision distance, in meters."
            example: 10
    DnsEditZoneParameterTypeMX:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          exchange:
            type: string
            description: The server's location's canonical name (CNAME).
            format: domain
            example: mail.example.com
          preference:
            type: integer
            description: |-
              The record's priority order.

              **Note:**

              * Lower values have a higher priority order.
              * For more information about MX records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            example: 10
    DnsEditZoneParameterTypeNS:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          nsdname:
            type: string
            description: |-
              The domain's authoritative nameserver.

              **Note:**

              For more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: ns1.example.com
    DnsEditZoneParameterTypePTR:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          ptrdname:
            type: string
            description: |-
              A pointer to a canonical name (CNAME).

              **Note:**

              * Do **not** omit any necessary trailing periods.
              * For more information about PTR records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: hostname.example.com
    DnsEditZoneParameterTypeRP:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          mbox:
            type: string
            description: |-
              The Responsible Person's (RP) email address.

              **Note:**

              * Replace the `@` symbol with a period (`.`).
              * Do **not** omit any necessary trailing periods.
              * For more information about RP records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).
            example: user.example.com.
          txtdname:
            type: string
            description: |-
              The RP's domain name.

              **Note:**

              Do **not** omit any necessary trailing periods.
            format: domain
            example: mx1.host.example.com.
    DnsEditZoneParameterTypeSOA:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          expire:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ server attempts to complete a zone transfer."
            example: 3600000
          lines:
            minimum: 1
            type: integer
            description: The number of lines in the SOA section.
            example: 4
          mname:
            type: string
            description: The domain's authoritative nameserver.
            format: domain
            example: ns1.host.example.com
          refresh:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ DNS server queries the primary DNS server's SOA records for changes."
            example: 1440
          retry:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ server retries a failed zone transfer."
            example: 14400
          rname:
            type: string
            description: |-
              The Responsible Person's (RP) email address.

              **Note:**

              * Replace the `@` symbol with a period (`.`).
              * Do **not** omit any necessary trailing periods.
            example: email.host.example.com
          serial:
            type: integer
            description: |-
              The zone file's revision number.

              **Note:**

              For more information about SOA records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            example: 2013122501
    DnsEditZoneParameterTypeSRV:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          port:
            type: integer
            description: The target host's port.
            example: 389
          priority:
            type: integer
            description: |-
              The target host's priority preference.

              **Note:**

              * Lower numbers have a higher priority order.
              * For more information about SRV records, read [RFC 2782 at IANA](http://tools.ietf.org/html/rfc2782).
            example: 0
          target:
            type: string
            description: The service's target host.
            format: domain
            example: service.example.com
          weight:
            type: integer
            description: A relative weight. The system uses this value to rank entries
              with the same `priority` value.
            example: 2
    DnsEditZoneParameterTypeTXT:
      allOf:
      - $ref: "#/components/schemas/DnsEditZoneParameterBase"
      - type: object
        properties:
          txtdata:
            type: string
            description: |-
              The TXT record's data.

              **Note:**

              * This value **must** include beginning and ending quotes (`""`).
              * Do **not** URI-encode the quotes.
              * For more information about TXT records, read [RFC 1464 at IANA](http://tools.ietf.org/html/rfc1464).
            example: '"v=spf1 a -all"'
    FTPBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          passive:
            type: integer
            description: |-
              Whether to use passive FTP.
              * `1` - Use passive FTP.
              * `0` - Use active FTP.
            example: 1
            default: 1
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
            default: 21
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    GoogleDriveBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          client_id:
            type: string
            description: The Google Drive client ID.
            example: aBcdeFgHIjK123
          client_secret:
            type: string
            description: The Google Drive client secret.
            example: aBcde123FgHIjK456
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            example: subfolder
            default: ""
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
    Group:
      required:
      - acl
      - dnsonly_ok
      - file
      - group
      - groupdesc
      - grouporder
      - type
      type: object
      properties:
        acl:
          type: string
          description: |-
            The group's Access Control Lists (ACLs).

            **Note:**

            * Only WHM users who possess the specified ACLs can view or use the item.
            * System administrators can configure users' ACLs in WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface (*WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges*).
            * For a complete list of available ACLs, read our [Guide to WHM Plugins - ACL Reference Chart](https://go.cpanel.net/ACLReferenceChart) documentation.
          nullable: true
          example: ACL=all
        dnsonly_ok:
          type: string
          description: |-
            The group's status for [cPanel DNSOnly](https://go.cpanel.net/cpanel-dnsonly)™ servers.

            * `dns` - The group appears on cPanel DNSOnly servers.
            * `` - The group does not appear on cPanel DNSOnly servers.
          nullable: true
          example: dns
          enum:
          - dns
        file:
          type: string
          description: |-
            The icon file to display for the group.

            **Note:**

            * Icons for any WHM plugins exist separately from the server's theme. For more information, read our [Guide to WHM Plugins - Plugin Files](https://go.cpanel.net/whmpluginfiles) documentation.
            * A valid `.png` or `.svg` image file, relative to the theme's icon directory.
          example: feature_name.png
        group:
          type: string
          description: The group name.
          example: group_name
        groupdesc:
          type: string
          description: |-
            The group's display name.

            **Note:**

            You can localize this string to display it in the user's preferred language in the WHM interface. For more information, read our [Guide to Locales](https://go.cpanel.net/guide-to-locales) documentation
          example: "$LANG{'Group Name'}"
        grouporder:
          minimum: 1
          type: integer
          description: |-
            The group's display order in the WHM interface.

            **Note:**

            Lower values appear at the top of the interface
          example: 1
        imgtype:
          type: string
          description: |-
            The group's image type.

            * `icon` - The only possible value.
          example: icon
          enum:
          - icon
        items:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        key:
          type: string
          description: |-
            A key to uniquely identify WHM interfaces and their associated assets for the [cPanel Analytics](https://go.cpanel.net/analytics) program.

            **Note:**

            Generally, this value matches the `file` parameter's value without the file's extension.
          example: feature_name
        searchtext:
          type: string
          description: "A list of the group's search terms, space delimited."
          example: search keywords
        subtype:
          type: string
          description: |-
            The icon type to use.

            * `img` - The only possible value.
          example: img
          enum:
          - img
        target:
          type: string
          description: |-
            The area of the interface in which the feature appears.

            A valid HTML `<a>` target attribute.
          example: _blank
        type:
          type: string
          description: The object's type.
          example: group
      description: A group of features.
    Image:
      required:
      - acl
      - description
      - dnsonly_ok
      - file
      - group
      - itemorder
      - type
      - url
      type: object
      properties:
        acl:
          type: string
          description: |-
            The feature's Access Control Lists (ACLs).

            **Note:**

            * Only WHM users who possess the specified ACLs can view or use the item.
            * System administrators can configure users' ACLs in WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface (*WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges*).
            * For a complete list of available ACLs, read our [Guide to WHM Plugins - ACL Reference Chart](https://go.cpanel.net/ACLReferenceChart) documentation.
          nullable: true
          example: ACL=all
        description:
          type: string
          description: |-
            The feature's description that displays when the feature appears on the WHM Home interface.

            **Note:**

            You can localize this string to display it in the user's preferred language in the WHM interface. For more information, read our [Guide to Locales](https://go.cpanel.net/guide-to-locales) documentation.
          example: "View and manage reseller accounts on your server. Resellers manage\
            \ other [asis,cPanel] accounts and can access [asis,cPanel]."
        dnsonly_ok:
          type: string
          description: |-
            The group's status for [cPanel DNSOnly](https://go.cpanel.net/cpanel-dnsonly)™ servers.

            * `dns` - The group appears on cPanel DNSOnly servers.
            * `` - The group does not appear on cPanel DNSOnly servers.
          nullable: true
          example: dns
          enum:
          - dns
        file:
          type: string
          description: |-
            The icon file to display for the group.

            **Note:**

            * Icons for any WHM plugins exist separately from the server's theme. For more information, read our [Guide to WHM Plugins - Plugin Files](https://go.cpanel.net/whmpluginfiles) documentation.
            * A valid `.png` or `.svg` image file, relative to the theme's icon directory.
          example: feature_name.png
        group:
          type: string
          description: The group in which the item appears. This is a value of an
            existing group object.
          example: group_name
        imgtype:
          type: string
          description: |-
            The feature's image type.

            * `icon` - The only possible value.
          example: icon
          enum:
          - icon
        itemdesc:
          type: string
          description: |-
            The feature's display name.

            **Note:**

            * You can localize this string to display it in the user's preferred language in the WHM interface. For more information, read our [Guide to Locales](https://go.cpanel.net/guide-to-locales) documentation.
            * This should be a [Template Toolkit](https://go.cpanel.net/tmpltoolkit) directive.
          example: "$LANG{'Feature Name'}"
        itemorder:
          minimum: 1
          type: integer
          description: |-
            The feature's display order within its group.

            **Note:**

            Lower values appear earlier in the group.
          example: 1
        key:
          type: string
          description: |-
            A key to uniquely identify WHM interfaces and their associated assets for the [cPanel Analytics](https://go.cpanel.net/analytics) program.

            **Note:**

            Generally, this value matches the `file` parameter's value without the file's extension.
          example: feature_name
        minimum_accounts_needed:
          minimum: 1
          type: integer
          description: The minimum number of accounts required to display the feature
            icon.
          example: 2
        multiuser_required:
          type: integer
          description: |-
            Whether the server allows for the creation of more than a single user.

            * `1` — Display the feature icon.
            * `0` — Do **not** display the feature icon.

            **Note:**

            You **cannot** use this parameter on servers with a [cPanel Solo License](https://go.cpanel.net/cpanel-solo-license).
          example: 1
          enum:
          - 1
        role:
          $ref: "#/components/schemas/Role"
        searchtext:
          type: string
          description: "A list search terms for the feature, space delimited."
          example: search keywords
        service:
          $ref: "#/components/schemas/Service"
        subitems:
          type: array
          items:
            $ref: "#/components/schemas/Subitem"
        subtype:
          type: string
          description: |-
            The icon type to use.

            * `img` - The only possible value.
          example: img
          enum:
          - img
        target:
          type: string
          description: |-
            The area of the interface in which the feature appears.

            A valid HTML `<a>` target attribute.
          example: _blank
        type:
          type: string
          description: |-
            The object's type.

            * `image` - The only possible value.
          example: image
          enum:
          - image
        url:
          type: string
          description: The feature's interface location. This path is relative to
            the `/usr/local/cpanel/` directory.
          format: url-path
          example: /example_plugin/feature_name
      description: An individual WHM feature.
    Int0-999999NullOrUnlimited:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
    Int0Max999999NullOrUnlimited:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 1
        type: integer
    Int999999OrUnlimited:
      example: unlimited
      oneOf:
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
    IntPosNullOrUnlimited:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - minimum: 0
        type: integer
    IntPosOrUnlimited:
      example: unlimited
      oneOf:
      - type: string
        enum:
        - unlimited
      - minimum: 0
        type: integer
    LocalBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          mount:
            type: integer
            description: |-
              Whether the path is mounted.
              * `1` - The path is mounted.
              * `0` - The path is **not** mounted.
            example: 0
            default: 0
            enum:
            - 1
            - 0
          no_mount_fail:
            type: integer
            description: |-
              Whether to fail the backup attempt if the mount fails.
              * `1` - Fail the backup attempt.
              * `0` - Do **not** fail the backup attempt.
            example: 0
            default: 0
            enum:
            - 1
            - 0
          path:
            type: string
            description: The absolute path to the backups directory.
            format: path
            example: /home/backups
    MarketItem:
      type: object
      properties:
        billing_type:
          type: string
          description: |-
            The type of billing used with the product.

            * `none` - The product is free.
            * `one-time` - Use of the product requires a one-time payment.
            * `monthly` - Use of the product requires a monthly subscription payment.
            * `yearly` - Use of the product requires a yearly subscription payment.
          enum:
          - none
          - one-time
          - monthly
          - yearly
        description:
          type: string
          description: A description of the product.
          example: An Extended Validation (EV) SSL certificate signed by cPanel.
        display_name:
          type: string
          description: The product's display name.
          example: EV Certificate by cPanel.
        icon:
          type: string
          description: The icon to display in the product list.
          format: base64 image
        icon_mime_type:
          type: string
          description: The icon's image format.
          format: MIME
          example: image/svg+xml
        max_users:
          type: integer
          description: The maximum number of users the system will allow for the product.
          nullable: true
        maximum_server_price:
          type: string
          description: The maximum price that the system will allow for the product.
          format: currency
          nullable: true
          example: "20"
        minimum_server_price:
          type: string
          description: The minimum price that the system will allow for the product.
          format: currency
          nullable: true
          example: "3"
        price:
          minimum: 1
          type: string
          description: |-
            The product's price.
            * `null` - The item does not possess a static price.
          format: currency
          nullable: true
          example: "6"
        price_unit:
          type: string
          description: The currency code of the product's price.
          format: ISO-4217
          example: USD
        product:
          type: string
          description: The human-readable product name. Use this in displays to the
            user.
          example: Comodo EV Certificate
        product_category:
          type: string
          example: N/A
        product_group:
          type: string
          description: The product's group.
          example: ssl_certificate
        product_id:
          type: string
          description: The product's ID.
          example: "12345"
        provider_display_name:
          type: string
          description: The cPanel Market provider's display name.
          example: cPanel Store
        provider_name:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
        requires_ip:
          type: string
          description: |-
            Whether product require an IP address.
            * `1` - The product requires an IP address.
            * `0` - The product does **NOT** require an IP address.
          example: "0"
          default: "0"
          enum:
          - "1"
          - "0"
      description: A product available from one of the cPanel Market providers.
    MarketItemType:
      anyOf:
      - $ref: "#/components/schemas/MarketItem"
      - $ref: "#/components/schemas/SSLCertificateMarketItem"
    MarketProviderMetaData:
      type: object
      properties:
        display_name:
          $ref: "#/components/schemas/MarketProviderMetaData_display_name"
        enabled:
          $ref: "#/components/schemas/MarketProviderMetaData_enabled"
        icon:
          $ref: "#/components/schemas/MarketProviderMetaData_icon"
        icon_mime_type:
          $ref: "#/components/schemas/MarketProviderMetaData_icon_mime_type"
        minimum_server_price:
          $ref: "#/components/schemas/MarketProviderMetaData_minimum_server_price"
        price:
          $ref: "#/components/schemas/MarketProviderMetaData_price"
        price_unit:
          $ref: "#/components/schemas/MarketProviderMetaData_price_unit"
        product_description:
          $ref: "#/components/schemas/MarketProviderMetaData_product_description"
        product_group:
          $ref: "#/components/schemas/MarketProviderMetaData_product_group"
        product_id:
          $ref: "#/components/schemas/MarketProviderMetaData_product_id"
        recommended:
          $ref: "#/components/schemas/MarketProviderMetaData_recommended"
    Metadata:
      type: object
      properties:
        command:
          type: string
          description: The method name called.
          example: api_token_get_details
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` – Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    Payload:
      type: array
      description: The zone’s content.
      items:
        discriminator:
          propertyName: type
          mapping:
            comment: "#/components/schemas/ResponseComment"
            control: "#/components/schemas/ResponseControl"
            record: "#/components/schemas/ResponseRR"
        oneOf:
        - $ref: "#/components/schemas/ResponseRR"
        - $ref: "#/components/schemas/ResponseControl"
        - $ref: "#/components/schemas/ResponseComment"
    Raw:
      required:
      - itemdesc
      - type
      type: object
      properties:
        itemdesc:
          type: string
          description: "A valid [Template Toolkit](https://go.cpanel.net/tmpltoolkit)\
            \ directive."
          example: "[% PROCESS 'menu/plugins_list.tmpl' target='mainFrame' -%]"
        type:
          type: string
          description: |-
            The object's type.

            * `raw` - The only possible value. Raw data for template directives.
          example: raw
          enum:
          - raw
      description: Raw data for template directives.
    ResponseBase:
      type: object
      properties:
        line_index:
          minimum: 0
          type: integer
          description: The line’s index in the zone file.
          example: 22
        type:
          type: string
          description: |-
            The type of object in the zone file:

            * `record` - A resource record.
            * `control` - A control statement.
            * `comment` - A line comment.
          enum:
          - record
          - control
          - comment
    ResponseComment:
      title: Comment
      allOf:
      - $ref: "#/components/schemas/ResponseControlOrComment"
    ResponseControl:
      title: Control
      allOf:
      - $ref: "#/components/schemas/ResponseControlOrComment"
    ResponseControlOrComment:
      allOf:
      - $ref: "#/components/schemas/ResponseBase"
      - type: object
        properties:
          text_b64:
            type: string
            description: "The line’s text, encoded to base64."
            format: base64
            example: OyBab25lIGZpbGUgZm9yIHRleGFzLmNvbQ==
    ResponseRR:
      title: Resource Record
      allOf:
      - $ref: "#/components/schemas/ResponseBase"
      - type: object
        properties:
          data_b64:
            type: array
            description: "The resource record’s content, encoded to base64."
            items:
              type: string
              format: base64
              example: dGV4YXMuY29tLg==
          dname_b64:
            type: string
            description: "The resource record’s owner, encoded to base64. A base64-decoded\
              \ owner that lacks a trailing period (`.`) is a subdomain of the zone."
            format: base64
            example: dGV4YXMuY29tLg==
          record_type:
            type: string
            description: The resource record’s type.
            example: MX
          ttl:
            minimum: 0
            type: integer
            description: The resource record’s TTL (Time-to-Live).
            example: 14400
    Role:
      description: |-
        The feature's server role.

        **Warning:**

        The server creates this parameter automatically. Do **not** edit this parameter's value. We do **not** support customizations to this parameter.

        **Note:**

        * The icon only appears in the interface if the server configuration uses this role.
        * For more information about roles and server configurations, read our [How to Use Server Profiles](https://go.cpanel.net/howtouseserverprofiles) documentation.
      anyOf:
      - type: object
        properties:
          match:
            type: string
            description: |-
              Whether to require all roles in the roles parameter to match the server's roles.

              * `all` - Require the server to match all roles in the roles parameter to display the feature. (AND condition)
              * `any` - Require the server to match any role in the roles parameter to display the feature. (OR condition)
            example: any
            enum:
            - any
          roles:
            type: array
            description: The array of role names.
            example:
            - MailLocal
            - MailSend
            items:
              type: string
      - type: string
        example: MailSend
    RsyncBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          authtype:
            type: string
            description: |-
              The authorization type.
              * `password`
              * `key`
            example: password
            enum:
            - password
            - key
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 22
            default: 22
          privatekey:
            type: string
            description: "If the `authtype` return's value is `key`, the absolute\
              \ path to the private key file."
            example: /home/backups/key
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    S3CompatibleBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          aws_access_key_id:
            type: string
            description: The S3-compatible provider key ID.
            example: s123456789
          bucket:
            type: string
            description: The S3-compatible bucket.
            example: ChockFullOfNuts
          folder:
            type: string
            description: "The path to the backups directory, relative to the root\
              \ directory, on the remote server."
            example: subfolder
            default: ""
          host:
            type: string
            description: The S3-compatible provider's server.
            example: www.s3example.com
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
    SFTPBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          authtype:
            type: string
            description: |-
              The authorization type.
              * `password`
              * `key`
            example: password
            enum:
            - password
            - key
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
            default: 21
          privatekey:
            type: string
            description: "If the `authtype` return's value is `key`, the absolute\
              \ path to the private key file."
            example: /home/backups/key
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    SSLCertificateMarketItem:
      description: An SSL certificate product available from one of the cPanel Market
        providers.
      allOf:
      - $ref: "#/components/schemas/MarketItem"
      - type: object
        properties:
          x_certificate_term:
            type: array
            description: An array indicating the length and unit of time that the
              product secures for.
            example:
            - "1"
            - year
            items:
              type: string
          x_identity_verification:
            type: array
            description: |-
              An array of objects that define a schema for identity
                verification information for Organizational Validation (OV)
                and Extended Validation (EV) certificates.
              OV and EV certificates require identifying information.
            items:
              $ref: "#/components/schemas/SSLCertificateMarketItem_x_identity_verification"
          x_max_http_redirects:
            minimum: 0
            type: integer
            description: |-
              The maximum number of HTTP redirections that the
                provider allows during a Domain Control Validation (DCV)
                check of the domain or domains in the certificate.
            example: 1
          x_payment_trigger:
            type: string
            description: |-
              Whether the provider charges immediately or when they issue the SSL certificate.

              * `checkout` - Collect payment and finalize immediately after checkout. Any failures to issue the certificate **must** prompt a separate refund.
              * `issuance` - Collect payment when the provider issues the certificate to the user.
            example: issuance
            enum:
            - checkout
            - issuance
          x_price_per_domain:
            type: string
            description: The product's price per domain.
            format: currency
            example: "3"
          x_price_per_domain_maximum:
            type: string
            description: The maximum price per domain.
            format: currency
            example: "30.00"
          x_price_per_domain_minimum:
            type: string
            description: The minimum price per domain.
            format: currency
            example: "3.00"
          x_price_per_wildcard_domain:
            type: string
            description: The price per domain for a wildcard certificate.
            format: currency
            example: "99.00"
          x_price_per_wildcard_domain_maximum:
            type: string
            description: The maximum price per wildcard domain.
            format: currency
            example: "990.00"
          x_price_per_wildcard_domain_minimum:
            type: string
            description: The minimum price per wildcard domain.
            format: currency
            example: "99.00"
          x_ssl_per_domain_pricing:
            type: integer
            description: |-
              Whether the provider uses per-domain pricing for this certificate.
              * `1` - The provider uses per-domain pricing.
              * `0` - The provider does *not* use per-domain pricing.
            example: 1
            enum:
            - 1
            - 0
          x_supports_dns_dcv:
            type: integer
            description: |-
              Whether this product supports DNS-based DCV.
              * `1` - This product supports DNS-based DCV.
              * `0` - This product does *not* support DNS-based DVC.
            example: 1
            enum:
            - 1
            - 0
          x_validation_type:
            type: string
            description: |-
              The type of validation that the product creates.

              * `dv` - Domain Validation
              * `ev` - Extended Validation
              * `ov` - Organization Validation
            example: dv
            enum:
            - dv
            - ev
            - ov
          x_warn_after:
            minimum: 1
            type: integer
            description: |-
              A length of time, in seconds, after which the cPanel interface
                warns the user that a problem may exist with the order.
              The warning will suggest that they should contact
                the cPanel Market provider's support contact.
            example: 14400
          x_wildcard_parent_domain_free:
            type: integer
            description: |-
              Whether the provider includes the price of the parent domain in the price of a wildcard certificate.

              For example, a wildcard certificate for `*.example.com` possesses the `example.com` parent domain.

              * `1` - Yes, the parent domain is included.
              * `0` - No, the parent domain costs extra.
            example: 1
            enum:
            - 1
            - 0
    SSLMarketProviderMetaData:
      allOf:
      - $ref: "#/components/schemas/MarketProviderMetaData"
      - type: object
        properties:
          x_identity_verification:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_identity_verification"
          x_max_http_redirects:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_max_http_redirects"
          x_price_per_domain:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_price_per_domain"
          x_price_per_domain_maximum:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_price_per_domain_maximum"
          x_price_per_domain_minimum:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_price_per_domain_minimum"
          x_price_per_wildcard_domain:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_price_per_wildcard_domain"
          x_price_per_wildcard_domain_maximum:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_price_per_wildcard_domain_maximum"
          x_price_per_wildcard_domain_minimum:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_price_per_wildcard_domain_minimum"
          x_ssl_per_domain_pricing:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_ssl_per_domain_pricing"
          x_supports_dns_dcv:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_supports_dns_dcv"
          x_warn_after:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_warn_after"
          x_wildcard_parent_domain_free:
            $ref: "#/components/schemas/SSLMarketProviderMetaData_x_wildcard_parent_domain_free"
    Service:
      description: |-
        The [cPanel Service Daemon](https://go.cpanel.net/ThecPanelWHMServiceDaemons) that monitors the feature.

        **Warning:**

        The server creates this parameter automatically. Do **not** edit this parameter's value. We do not support customizations to this parameter.

        **Note:**

        * This icon only appears on servers with the service enabled.
        * For a complete list of service daemons, read our [cPanel Service Daemons](https://go.cpanel.net/ThecPanelWHMServiceDaemons) documentation.
      example: mysql
      oneOf:
      - type: object
        properties:
          match:
            type: string
            description: |-
              Whether to require all services in the services parameter to match enabled services on the server.

              * `all` - Require the server to match **all** services under the `services` key to display the feature. (AND condition)
              * `any` - Require the server to match any service under the `services` key to display the feature. (OR condition)
            example: any
            enum:
            - any
          services:
            type: array
            description: An array of services.
            example:
            - mysql
            - ftp
            items:
              type: string
      - type: string
        example: mysql
    Subitem:
      required:
      - acl
      - breadcrumb
      - dnsonly_ok
      - file
      - group
      - parent
      - type
      - url
      type: object
      properties:
        acl:
          type: string
          description: |-
            The subitem's Access Control Lists (ACLs).

            **Note:**

            * Only WHM users who possess the specified ACLs can view or use the item.
            * System administrators can configure users' ACLs in WHM's [*Edit Reseller Nameservers and Privileges*](https://go.cpanel.net/whmdocsEditResellerNameserversandPrivileges) interface (*WHM >> Home >> Resellers >> Edit Reseller Nameservers and Privileges*).
            * For a complete list of available ACLs, read our [Guide to WHM Plugins - ACL Reference Chart](https://go.cpanel.net/ACLReferenceChart) documentation.
          nullable: true
          example: ACL=all
        breadcrumb:
          type: string
          description: |-
            A subitem's parent feature's location.

            * The system uses this value to generate breadcrumbs at the top of each WHM interface.
            * The subitem's parent feature's `url` value.
          format: url-path
          example: /example_plugin/feature_name
        dnsonly_ok:
          type: string
          description: |-
            The subitem's status for [cPanel DNSOnly](https://go.cpanel.net/cpanel-dnsonly)™ servers.

            * `dns` - The subitem appears on cPanel DNSOnly servers.
            * `` - The subitem does not appear on cPanel DNSOnly servers.
          nullable: true
          example: dns
          enum:
          - dns
        file:
          type: string
          description: |-
            The icon file to display for the subitem.

            **Note:**

            * Icons for any WHM plugins exist separately from the server's theme. For more information, read our [Guide to WHM Plugins - Plugin Files](https://go.cpanel.net/whmpluginfiles) documentation.
            * A valid `.png` or `.svg` image file, relative to the theme's icon directory.
          example: feature_name.png
        group:
          type: string
          description: The group in which the subitem appears. This is a value of
            an existing group object.
          example: group_name
        itemdesc:
          type: string
          description: |-
            The subitem's display name.

            **Note:**

            * You can localize this string to display it in the user's preferred language in the WHM interface. For more information, read our [Guide to Locales](https://go.cpanel.net/guide-to-locales) documentation.
          example: "$LANG{'Feature Name'}"
        key:
          type: string
          description: |-
            A key to uniquely identify WHM interfaces and their associated assets for the [cPanel Analytics](https://go.cpanel.net/analytics) program.

            **Note:**

            Generally, this value matches the `file` parameter's value without the file's extension.
          example: feature_name
        parent:
          minimum: 1
          type: integer
          description: The subitem's parent feature's display order in the WHM interface.
            This is the parent feature's `itemorder` value.
          example: 1
        searchtext:
          type: string
          description: "A list search terms for the subitem, space delimited."
          example: search keywords
        target:
          type: string
          description: |-
            The area of the interface in which the subitem displays.

            A valid HTML `<a>` target attribute.
          example: _blank
        type:
          type: string
          description: |-
            The object's type.

            * `subitem` - The only possible value.
          example: subitem
          enum:
          - subitem
        url:
          type: string
          description: The subitem's interface location. This path is relative to
            the `/usr/local/cpanel/` directory.
          format: url-path
          example: /example_plugin/feature_name
      description: A subsection of an individual WHM feature.
    TokenDetails:
      type: object
      properties:
        acls:
          type: array
          description: A list of privileges assigned to the token.
          example:
          - create-acct
          - kill-acct
          - list-accts
          items:
            type: string
        create_time:
          type: integer
          description: The API token's creation time.
          format: unix_timestamp
          example: 1483625276
        expires_at:
          type: integer
          description: |-
            The API token's expiration time.

            **Note:**

            A `null` value means that the API token does **not** expire.
          format: unix_timestamp
          nullable: true
          example: 1609372800
        name:
          type: string
          description: The API token's name.
          example: example
        whitelist_ips:
          type: array
          description: List of remote IP or CIDR IP ranges this token may be used
            from.
          nullable: true
          example:
          - 192.0.2.1
          - 192.0.2.2
          - 192.0.2.8/29
          - fc00:abcd:0000:0000:0000:0000:0000:000f
          - 2620:0000:28a4:0000:0000:0000:0000:0000/48
          items:
            anyOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6
            - type: string
              format: cidr
    Transfers_EnqueueTransferItem_Base:
      required:
      - module
      - transfer_session_id
      type: object
      properties:
        module:
          type: string
          description: |-
            The transfer system module.

            * `LegacyAccountBackup` — This module restores legacy-account backup files.
            * `FeatureListRemoteRoot` — This module transfers the feature list from the remote server.
            * `PackageRemoteRoot` — This module transfers the package settings.
            * `AccountLocal` — This module restores backup files.
            * `AccountRemoteRoot` — This module uses the `root` credentials to transfer account settings that are not a part of a package.
            * `AccountRemoteUser` — This module uses the account's user credentials to transfer account settings that are not a part of a package.

            **Note:**

            * The `module` parameter determines which additional parameters to use with the function.
            * You **must** perform each module action as a separate step.

            When you call this function, you **must** include the additional parameters for the desired transfer system module. Select a module from the menu to view its required additional parameters:
          example: AccountRemoteRoot
        size:
          minimum: 1
          type: integer
          description: |-
            The size of the content to transfer, in bytes.
            The restore system uses this value to determine the best filesystem
            partition for the restored account’s home directory. For best
            results, give as accurate of a value as possible.
          example: 133698
          default: 1
        transfer_session_id:
          type: string
          description: The transfer session's ID.
          example: vm5docscpanelcopya20140211211719FxjU
    Transfers_EnqueueTransferItem_Type:
      discriminator:
        propertyName: module
        mapping:
          AccountLocal: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot"
          AccountRemoteRoot: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteRoot"
          AccountRemoteUser: "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base"
          FeatureListRemoteRoot: "#/components/schemas/Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot"
          LegacyAccountBackup: "#/components/schemas/Transfers_EnqueueTransferItem_Type_LegacyAccountBackup"
          PackageRemoteRoot: "#/components/schemas/Transfers_EnqueueTransferItem_Type_PackageRemoteRoot"
      anyOf:
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteRoot"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteUser"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_LegacyAccountBackup"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_PackageRemoteRoot"
    Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot:
      allOf:
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base"
      - type: object
        properties:
          force:
            type: integer
            description: |-
              Whether to overwrite an account with an identical username.

              * `1` — Overwrite the account.
              * `0` — Do **not** overwrite the account.

              This parameter performs the following actions:

              * Restores the cPanel account on the destination server.
              * Overwrites all account settings, data, and databases.
              * Ignores errors and warnings for naming conflicts.

              **Note:**

              * The values you enter for the `user` and `localuser` parameters **must** match.
              * You cannot use this parameter if you called the WHM API 1 `create_remote_root_transfer_session` function with the `unrestricted_restore` parameter set to `1`.
            example: 1
            enum:
            - 0
            - 1
    Transfers_EnqueueTransferItem_Type_AccountRemoteRoot:
      allOf:
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot"
      - properties:
          live_transfer:
            type: integer
            description: |-
              Whether to use the [*Live Transfer*](https://go.cpanel.net/livetransfers) feature.

              * `1` — Use.
              * `0` — Do **not** use.
            example: 1
            default: 0
            enum:
            - 0
            - 1
          xferpoint:
            type: integer
            description: |-
              Whether to use the [*Express Transfer*](https://go.cpanel.net/livetransfer) feature.

              * `1` — Use.
              * `0` — Do **not** use.
            example: 1
            enum:
            - 0
            - 1
    Transfers_EnqueueTransferItem_Type_AccountRemoteUser:
      $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base"
    Transfers_EnqueueTransferItem_Type_Account_Base:
      allOf:
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Base"
      - required:
        - localuser
        - user
        type: object
        properties:
          customip:
            type: string
            description: |-
              The custom IP address to assign to the transferred account.

              **Note:**

              This parameter requires that the `ip` parameter has a value of `1`.
            example: 192.168.0.1
          detected_remote_user:
            type: string
            description: The user account name that the remote server returns when
              you query the user account.
            example: user
          domain:
            type: string
            description: The domain name.
            format: domain
            example: example.com
          ip:
            type: integer
            description: |-
              Whether to assign a dedicated IP address to the transferred account.

              * `1` — Assign a dedicated IP address.
              * `0` — Do **not** assign a dedicated IP address.

              **Note:**

              If no dedicated IP address exists, the system assigns the account to a shared IP address.
            example: 1
            enum:
            - 0
            - 1
          localuser:
            type: string
            description: The local account's username.
            format: username
            example: localuser
          mail_location:
            description: |-
              The server on which the account's email will reside after it completes the transfer.

              * `.local` — The local server.
              * `.existing` — Use the location defined in the account's backup data.
              * The alias (friendly name) of a remote [cPanel & WHM linked server node.](https://go.cpanel.net/whmdocsLinkServerNodes). For example, the `example-alias` for the `servernode.example.com` domain.

              **Note:**

              The system will use the `.local` option if:
                * The system cannot use the cPanel & WHM linked server node when you call the `.existing` option.
                * The cPanel & WHM linked server node's alias (friendly name) is invalid.
            example: .local
            oneOf:
            - type: string
              enum:
              - .local
              - .existing
            - type: string
              description: A remote cPanel & WHM linked server node's alias (friendly
                name).
            default: .existing
          overwrite_sameowner_dbs:
            type: integer
            description: |-
              Whether to allow the system to overwrite the account's existing databases with the databases in the backup file.

              * `1` — Overwrite.
              * `0` — Do **not** overwrite.
            example: 1
            enum:
            - 0
            - 1
          overwrite_sameowner_dbusers:
            type: integer
            description: |-
              Whether to allow the system to overwrite the account's existing database users with the database users in the backup file.

              * `1` — Overwrite.
              * `0` — Do **not** overwrite.
            example: 1
            enum:
            - 0
            - 1
          overwrite_with_delete:
            type: integer
            description: |-
              Whether to replace and delete **all** directories and files on the destination server.

              * `1` — Overwrite.
              * `0` — Do **not** overwrite.

              **Warning:**

              If you use this parameter, the system deletes **every** directory and file on the destination server. The system does **not** delete the directories and files from the source server.
            example: 1
            enum:
            - 0
            - 1
          replaceip:
            type: string
            description: |-
              The lines in the domain's zonefile to replace with the new IP address.

              * `all` — Replace all of the matching `A` record addresses in the zone file with the new IP address, including custom `A` records.
              * `basic` — Replace **only** the cPanel-managed `A` records for this IP address. This includes the main domain and any [service subdomains](https://go.cpanel.net/ServiceProxySubdomains).
            example: all
            enum:
            - all
            - basic
          reseller:
            type: integer
            description: |-
              Whether to make the account a reseller.

              * `1` — Make the account a reseller account.
              * `0` — Do **not** make the account a reseller account.
            example: 1
            enum:
            - 0
            - 1
          shared_mysql_server:
            type: integer
            description: |-
              Whether one of the following conditions is true:

              * The target and remote servers share the same remote MySQL server.
              * The target server is the remote MySQL server for the remote server.
              * The remote server is the remote MySQL server for the target server.

              Value:

              * `1` — One is true.
              * `0` — None are true.
            example: 1
            enum:
            - 0
            - 1
          skipaccount:
            type: integer
            description: |-
              Whether to skip the recreation of the account.

              * `1` — Skip.
              * `0` — Restore.

              **Note:**

              * The values you enter for the `user` and `localuser` parameters **must** match.
              * This parameter is similar to the `force` parameter, but performs none of the account creation steps.
            example: 1
            enum:
            - 0
            - 1
          skipacctdb:
            type: integer
            description: |-
              Whether to skip the transfer of the account's databases.

              * `1` — Skip.
              * `0` — Restore.
            example: 1
            enum:
            - 0
            - 1
          skipbwdata:
            type: integer
            description: |-
              Whether to skip the transfer of the account's bandwidth data.

              * `1` — Skip.
              * `0` — Restore.
            example: 1
            enum:
            - 0
            - 1
          skiphomedir:
            type: integer
            description: |-
              Whether to skip the contents of the home directory.

              * `1` — Skip.
              * `0` — Restore.
            example: 1
            enum:
            - 0
            - 1
          skipres:
            type: integer
            description: |-
              Whether to skip restoration of the account's reseller permissions.

              * `1` — Skip.
              * `0` — Restore.
            example: 1
            enum:
            - 0
            - 1
          user:
            type: string
            description: The account to transfer.
            format: username
            example: user
    Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot:
      allOf:
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Base"
      - required:
        - featurelist
        type: object
        properties:
          featurelist:
            type: string
            description: The feature list's name.
            example: user_features
    Transfers_EnqueueTransferItem_Type_LegacyAccountBackup:
      allOf:
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Base"
      - required:
        - restoretype
        - user
        type: object
        properties:
          mysql_dbs_to_restore:
            type: string
            description: |-
              A comma-separated list of MySQL databases to restore, which will overwrite those databases on the account.

              **Note:**

              The default behavior is to select and overwrite all databases.

              **Warning:**

              The _Restricted Restore_ feature does not allow an account to overwrite data that it does not own. If the transfer session's `unrestricted_restore` parameter has a value of `0`, this parameter is ignored.
            example: "msdb1,msdb2,msdb3"
          overwrite_all_dbs:
            type: integer
            description: |-
              Whether to allow the system to overwrite all of the account's databases with the databases in the backup file.

              * `1` — Overwrite.
              * `0` — Do **not** overwrite.

              **Note:**

              You may use only **one** of the following parameters:

              * `overwrite_all_dbs`
              * `overwrite_sameowner_dbs`
              * Both the `mysql_dbs_to_restore` and `pgsql_dbs_to_restore` parameters.

              If you do not use any of these parameters, the system will restore all of the databases on the account, but will **not** overwrite any of them.

              **Warning:**

              The _Restricted Restore_ feature does not allow an account to overwrite data that it does not own. If the transfer session's `unrestricted_restore` parameter has a value of `0`, the `overwrite_all_dbs` parameter will automatically change to a value of `0` and the `overwrite_sameowner_dbs` parameter will change to a value of `1`. This prevents the restore system from overwriting databases that the account does not own.
            enum:
            - 0
            - 1
          overwrite_sameowner_dbs:
            type: integer
            description: |-
              Whether to allow the system to overwrite the account's existing databases with the databases in the backup file.

              * `1` — Overwrite.
              * `0` — Do **not** overwrite.
            enum:
            - 0
            - 1
          overwrite_sameowner_dbusers:
            type: integer
            description: |-
              Whether to allow the system to overwrite the account's existing database users with the database users in the backup file.

              * `1` — Overwrite.
              * `0` — Do **not** overwrite.
            enum:
            - 0
            - 1
          pgsql_dbs_to_restore:
            type: string
            description: |-
              A comma-separated list of PostgreSQL® databases to restore, which will overwrite those databases on the account.

              **Note:**

              The default behavior is to select and overwrite all databases.

              **Warning:**

              The _Restricted Restore_ feature does not allow an account to overwrite data that it does not own. If the transfer session's `unrestricted_restore` parameter has a value of `0`, this parameter is ignored.
            example: "pgdb1,pgdb2,pgdb3"
          restoreall:
            type: integer
            description: |-
              Whether to recreate the account on the target server.

              * `1` — Recreate.
              * `0` — Do **not** recreate.
            enum:
            - 0
            - 1
          restorebwdata:
            type: integer
            description: |-
              Whether to restore bandwidth data.

              * `1` — Restore.
              * `0` — Do **not** restore.
            enum:
            - 0
            - 1
          restoreip:
            type: integer
            description: |-
              Whether to assign the account's dedicated IP address that is stored in the backup file.

              * `1` — Assign.
              * `0` — Do **not** assign.
            enum:
            - 0
            - 1
          restoremail:
            type: integer
            description: |-
              Whether to restore the account's mail data.

              * `1` — Restore.
              * `0` — Do **not** restore.
            enum:
            - 0
            - 1
          restoremysql:
            type: integer
            description: |-
              Whether to restore MySQL® database data.

              * `1` — Restore.
              * `0` — Do **not** restore.
            enum:
            - 0
            - 1
          restoresubs:
            type: integer
            description: |-
              Whether to restore the account's subdomains.

              * `1` — Restore.
              * `0` — Do **not** restore.
            enum:
            - 0
            - 1
          restoretype:
            type: string
            description: |-
              The backup type to restore.

              * `monthly`
              * `weekly`
              * `daily`
            example: daily
            enum:
            - monthly
            - weekly
            - daily
          unrestricted_restore:
            type: integer
            description: |-
              Whether to bypass the *Restricted Restore* system.

              * `1` — Bypass.
              * `0` — Do **not** bypass.
            enum:
            - 0
            - 1
          user:
            type: string
            description: The account's username.
            format: username
            example: user
    Transfers_EnqueueTransferItem_Type_PackageRemoteRoot:
      allOf:
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Base"
      - required:
        - package
        type: object
        properties:
          package:
            type: string
            description: The package's name.
            example: user_package
    WebDAVBackupDestinationResponse:
      allOf:
      - $ref: "#/components/schemas/BackupDestinationResponse"
      - type: object
        properties:
          host:
            type: string
            description: The remote server's hostname.
            format: domain
            example: backups.example.com
          path:
            type: string
            description: The path to the backups directory on the remote server.
            format: path
            example: /backups
          port:
            maximum: 65535
            minimum: 1
            type: integer
            description: The remote server's FTP port.
            example: 21
            default: 21
          ssl:
            type: integer
            description: |-
              Whether to use SSL.
              * `1` - Use SSL.
              * `0` - Do **not** use SSL.
            example: 1
            default: 1
            enum:
            - 1
            - 0
          timeout:
            maximum: 300
            minimum: 30
            type: integer
            description: "The session timeout, in seconds."
            example: 300
            default: 30
          username:
            type: string
            description: The remote server account's username.
            example: username
    a:
      description: |-
        An object representing A record data.

        **Note:**

        For more information about A records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
      allOf:
      - type: object
        properties:
          address:
            type: string
            description: The zone record's IPv4 address.
            example: 192.168.0.20
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `A` — A records store IPv4 addresses. Use them to map a hostname to an IPv4 address.
            example: A
      - $ref: "#/components/schemas/record"
    a6:
      description: |-
        An object representing A6 record data.

        **Important:**

        A6 records are **deprecated**. We strongly **recommend** that you use [AAAA](http://tools.ietf.org/html/rfc3596) records to store IPv6 addresses.
      allOf:
      - type: object
        properties:
          prefix:
            type: integer
            description: The record's prefix length.
            example: 48
          refer:
            type: string
            description: The record's address suffix.
            example: 0::0
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `A6` — A6 records store IPv6 addresses.

              **Important:**

              A6 records are **deprecated**. We strongly **recommend** that you use [AAAA](http://tools.ietf.org/html/rfc3596) records to store IPv6 addresses.
            example: A6
      - $ref: "#/components/schemas/record"
    aaaa:
      description: |-
        An object representing AAAA record data.

        **Note:**

        For more information about AAAA records, read [RFC 3596 at IANA](http://tools.ietf.org/html/rfc3596).
      allOf:
      - type: object
        properties:
          address:
            type: string
            description: The zone record's IPv6 address.
            example: 2001:1:42:1::2a
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `AAAA` — AAAA records store IPv6 addresses.

              **Important:**

              A6 records are **deprecated**. We strongly **recommend** that you use [AAAA](http://tools.ietf.org/html/rfc3596) records to store IPv6 addresses.
            example: AAAA
      - $ref: "#/components/schemas/record"
    asfdb:
      description: |-
        An object representing AFSDB record data.

        **Note:**

        For more information about AFSDB records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).
      allOf:
      - type: object
        properties:
          hostname:
            type: string
            description: The database servers' hostname.
            example: afs.example.com
          subtype:
            type: integer
            description: "The AFS cell type. A 16-bit integer that represents the\
              \ type of AFS cell. For example, a value of 1 indicates an AFS version\
              \ 3.0 Volume Location Server."
            example: 1
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `AFSDB` — AFSDB records store the location of an AFS cell's database servers.
            example: AFSDB
      - $ref: "#/components/schemas/record"
    bwSchema:
      $ref: "#/components/schemas/nearReachedBaseSchema"
    caa:
      description: |-
        An object representing CAA record data.

        **Note:**

        For more information about CAA record flags and property tags, read the [RFC 6844](https://tools.ietf.org/html/rfc6844#section-3) documentation.
      allOf:
      - type: object
        properties:
          flag:
            type: integer
            description: |-
              Whether the CA will issue an SSL certificate if the CAA resource record contains unknown property tags.
              * `0` - Non-critical. The CAA Resource Record contains unknown property tags, and the CA issued an SSL certificate.
              * `1` - Critical. The CAA Resource Record contains unknown property tags, and the CA did **not** issue an SSL certificate.
            example: 0
          tag:
            type: string
            description: |-
              The CAA record's property type.
              * `issue` - A CA issued a certificate for the domain.
              * `issuewild` - A CA issued a wildcard certificate for the domain.
              * `iodef` - The user specified a URL to which a CA may report policy violations.
            example: issue
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `CAA` — CAA records control which certificate authorities can issue SSL certificates for a domain.
            example: CAA
          value:
            type: string
            description: |-
              The CA's domain or URL.
              * A valid [SSL provider](https://sslmate.com/labs/caa/).
              * A mailto URL or a standard URL.
            example: totallyrealca.tld
      - $ref: "#/components/schemas/record"
    cname:
      description: |-
        An object representing CNAME record data.

        **Note:**

        For more information about CNAME records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
      allOf:
      - type: object
        properties:
          cname:
            type: string
            description: The canonical name (CNAME) alias.
            example: sydneybristow.example.com
          flatten:
            type: integer
            description: |-
              Whether the specified CNAME value resolves with the record's IP address.
              * `1` - Resolves.
              * `0` - Does **not** resolve.
            example: 1
          flatten_to:
            type: string
            description: The IP address to which the specified CNAME resolves.
            example: 192.168.0.20
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `CNAME` — CNAME records create an alias to another hostname.
            example: CNAME
      - $ref: "#/components/schemas/record"
    diskSchema:
      allOf:
      - $ref: "#/components/schemas/nearReachedBaseSchema"
      - properties:
          fraction:
            type: number
            nullable: true
          near:
            type: integer
            nullable: true
            enum:
            - 0
            - 1
          reached:
            type: integer
            nullable: true
            enum:
            - 0
            - 1
          threshold_blocks:
            type: integer
            description: The block threshold used for the resource limit check.
            nullable: true
            example: 10485760
    dname:
      description: |-
        An object representing DNAME record data.

        **Note:**

        For more information about DNAME records, read [RFC 2672 at IANA](http://tools.ietf.org/html/rfc2672).
      allOf:
      - type: object
        properties:
          dname:
            type: string
            description: The delegation name (DNAME) alias.
            example: hostname.dev.example.com
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `DNAME` — DNAME records create an alias for a hostname and its subnames.
            example: DNAME
      - $ref: "#/components/schemas/record"
    ds:
      description: |-
        An object representing DS record data.

        **Note:**

        For more information about DS records, read [RFC 4034 at IANA](http://tools.ietf.org/html/rfc4034).
      allOf:
      - type: object
        properties:
          algorithm:
            type: integer
            description: |-
              The record's algorithm number.
              * `1` — RSAMD5
              * `2` — Diffie-Hellman
              * `3` — DSA/SHA-1
              * `4` — Elliptic Curve
              * `5` — RSA/SHA-1
              * `7` - RSASHA1-NSEC3-SHA1
              * `8` - RSA/SHA-256
              * `10` - RSA/SHA-512
              * `13` - ECDSA Curve P-256 with SHA-256
              * `14` - ECDSA Curve P-384 with SHA-384
              * `252` — Indirect
              * `253` — Private DNS
              * `254` — Private OID
            example: 5
          digtype:
            type: integer
            description: |-
              The record's digest type.
              * `1` — SHA-1
              * `2` — SHA-256
              * `4` — SHA-384
            example: 1
          keyname:
            type: integer
            description: The record's KeyTag value.
            example: 2642
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `DS` — DS records specify a record's delegation signer.
            example: DS
      - $ref: "#/components/schemas/record"
    getzonerecordResponseBase:
      type: object
      properties:
        Line:
          minimum: 1
          type: integer
          description: The zone record's file line number.
          example: 24
        class:
          description: The record's class.
          example: IN
          oneOf:
          - type: string
            enum:
            - IN
          - type: string
            description: A valid DNS record class.
        name:
          type: string
          description: The record's name.
          format: domain
          example: hostname.example.com.
        ttl:
          minimum: 1
          type: integer
          description: "The record's Time To Live (TTL), in seconds."
          example: 86400
        type:
          type: string
          description: "The DNS record type.\n* `A` - A records store IPv4 addresses.\
            \ Use them to map a hostname to an IPv4 address.\n* `A6`- A6 records store\
            \ IPv6 addresses.\n* `AAAA` - AAAA records store IPv6 addresses.\n* `AFSDB`\
            \ - AFSDB records store the location of an AFS cell's database servers.\n\
            * `ALIAS` - ALIAS records create an alias to another hostname, but can\
            \ coexist with other records on that name. We strongly discourage using\
            \ this record type. \n* `CAA` - CAA records control which certificate\
            \ authorities can issue SSL certificates for a domain.\n* `CNAME` - CNAME\
            \ records create an alias to another hostname.\n* `DNAME` - DNAME records\
            \ create an alias for a hostname and its subnames.\n* `DS` - DS records\
            \ specify a record's delegation signer.\n* `HINFO` - HINFO records specify\
            \ a host's CPU and OS types.\n* `LOC` - LOC records store a hostname's\
            \ geographical location.\n* `MX` - MX records point a domain name to its\
            \ MTAs.\n* `NS` - NS records store a domain's authoritative nameservers.\n\
            * `PTR` - PTR records point to a CNAME.\n* `RP` - RP records store a domain's\
            \ Responsible Person's information.\n* `SOA` - SOA records designate the\
            \ beginning of a zone of authority.\n* `SRV` - SRV records store the service\
            \ location records for newer protocols (for example, Autodiscover).\n\
            * `SSHFP` - SSHFP records store a domain's SSH public host key's fingerprint.\n\
            * `TXT` - TXT records store descriptive text or useful records (for example,\
            \ SPF or DKIM records).\n\n **Warning:**\n\n  We do not currently support\
            \ the SSHFP DNS record type.\n\nThis function will return a differently\
            \ depending on which record type you query. Select a zone\nrecord type\
            \ from the menu to view each set of return data:"
          example: A
          enum:
          - A
          - AAAA
          - AFSDB
          - ALIAS
          - CAA
          - CNAME
          - DNAME
          - DS
          - HINFO
          - LOC
          - MX
          - NS
          - PTR
          - RP
          - SOA
          - SRV
          - SSHFP
          - TXT
      discriminator:
        propertyName: type
        mapping:
          A: "#/components/schemas/getzonerecordResponseTypeA"
          A6: "#/components/schemas/getzonerecordResponseTypeA6"
          AAAA: "#/components/schemas/getzonerecordResponseTypeAAAA"
          AFSDB: "#/components/schemas/getzonerecordResponseTypeAFSDB"
          ALIAS: "#/components/schemas/getzonerecordResponseTypeALIAS"
          CAA: "#/components/schemas/getzonerecordResponseTypeCAA"
          CNAME: "#/components/schemas/getzonerecordResponseTypeCNAME"
          DNAME: "#/components/schemas/getzonerecordResponseTypeDNAME"
          DS: "#/components/schemas/getzonerecordResponseTypeDS"
          HINFO: "#/components/schemas/getzonerecordResponseTypeHINFO"
          LOC: "#/components/schemas/getzonerecordResponseTypeLOC"
          MX: "#/components/schemas/getzonerecordResponseTypeMX"
          NS: "#/components/schemas/getzonerecordResponseTypeNS"
          PTR: "#/components/schemas/getzonerecordResponseTypePTR"
          RP: "#/components/schemas/getzonerecordResponseTypeRP"
          SOA: "#/components/schemas/getzonerecordResponseTypeSOA"
          SRV: "#/components/schemas/getzonerecordResponseTypeSRV"
          SSHFP: "#/components/schemas/getzonerecordResponseTypeSSHFP"
          TXT: "#/components/schemas/getzonerecordResponseTypeTXT"
    getzonerecordResponseTypeA:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          address:
            type: string
            description: |-
              The zone record's IPv4 address.

              **Note:**

              For more information about A records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: ipv4
            example: 192.168.0.20
    getzonerecordResponseTypeA6:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          prefix:
            minimum: 1
            type: integer
            description: The record's prefix length.
            example: 48
            deprecated: true
          refer:
            type: string
            description: |-
              The record's address suffix.

              **Important:**

              A6 records are **deprecated**. We **strongly** recommend that you use AAAA records to
              store IPv6 addresses.
            example: 0::0
            deprecated: true
    getzonerecordResponseTypeAAAA:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          address:
            type: string
            description: |-
              The zone record's IPv6 address.

              **Note:**

               For more information about AAAA records, read [RFC 3596 at IANA](http://tools.ietf.org/html/rfc3596).
            format: ipv6
            example: 2001:1:42:1::2a
    getzonerecordResponseTypeAFSDB:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          hostname:
            type: string
            description: The database servers' hostname.
            format: domain
            example: hostname.example.com
          subtype:
            type: integer
            description: |-
              The 16-bit integer of an AFS cell type.

              **Note:**

              For more information about AFSDB records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).
            example: 1
    getzonerecordResponseTypeALIAS:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          alias:
            type: string
            description: |-
              The hostname you want to point to.

              **Note:**

              We strongly recommend that you do not use this function.
              Using the ALIAS DNS record may result in unexpected behavior, including website downtimes outside of your control, inconsistency in the handling of the record, and security vulnerabilities.
              This record is only available if you enable access to it and use PowerDNS.
            format: domain
            example: hostname.example.com
    getzonerecordResponseTypeCAA:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          flag:
            type: integer
            description: |-
              Whether the Certificate Authority (CA) will issue an SSL certificate if the CAA resource record contains unknown property tags.

              * `0` - Non-critical. If the CAA Resource Record contains unknown property tags, the CA will issue an SSL certificate.
              * `1` - Critical. If the CAA Resource Record contains unknown property tags, the CA will **not** issue an SSL certificate.

              **Note:**

              For more information about CAA record flags and property tags, read the [RFC 6844 documentation](https://tools.ietf.org/html/rfc6844#section-3).
            example: 0
            enum:
            - 0
            - 1
          tag:
            type: string
            description: |-
              The CAA record's property type.

              * `issue` - A CA issued a certificate for the domain.
              * `issuewild` - A CA issued a wildcard certificate for the domain.
              * `iodef` - The user specified a URL to which a CA may report policy violations.
            example: issue
            enum:
            - issue
            - issuewild
            - iodef
          value:
            type: string
            description: |-
              The CA's domain or URL. This is a valid [SSL provider](https://sslmate.com/labs/caa/),
              `mailto` URL, or a standard URL.
            example: exampleca.com
    getzonerecordResponseTypeCNAME:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          cname:
            type: string
            description: |-
              The canonical name (CNAME) alias.

              **Note:**

              For more information about CNAME records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: hostname.example.com
          flatten:
            type: integer
            description: |-
              Whether the specified CNAME value resolves with the record's IP address.

              * `1` - Resolves.
              * `0` - Does not resolve.
            example: 1
            enum:
            - 0
            - 1
          flatten_to:
            description: The IP address to which the specified CNAME resolves.
            oneOf:
            - type: string
              description: A valid IPv4 address.
              format: ipv4
              example: 192.0.2.27
            - type: string
              description: A valid IPv6 address.
              format: ipv6
              example: 2001:0db8:85a3:0042:1000:8a2e:0370:7334
    getzonerecordResponseTypeDNAME:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          dname:
            type: string
            description: |-
              The delegation name (DNAME) alias.

              **Note:**

              For more information about DNAME records, read [RFC 2672 at IANA](http://tools.ietf.org/html/rfc2672).
            format: domain
            example: hostname.example.com
    getzonerecordResponseTypeDS:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          algorithm:
            type: integer
            description: |-
              The record's algorithm number.

              * `1` - RSAMD5
              * `2` - Diffie-Hellman
              * `3` - DSA/SHA-1
              * `4` - Elliptic Curve
              * `5` - RSA/SHA-1
              * `7` - RSASHA1-NSEC3-SHA1
              * `8` - RSA/SHA-256
              * `10` - RSA/SHA-512
              * `13` - ECDSA Curve P-256 with SHA-256
              * `14` - ECDSA Curve P-384 with SHA-384
              * `252` - Indirect
              * `253` - Private DNS
              * `254` - Private OID
            example: 5
            enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 7
            - 8
            - 10
            - 13
            - 14
            - 252
            - 253
            - 254
          digtype:
            type: integer
            description: |-
              The record's digest type.

              * `1` — SHA-1
              * `2` — SHA-256
              * `4` — SHA-384
            example: 1
            enum:
            - 1
            - 2
            - 4
          keyname:
            type: integer
            description: |-
              The record's KeyTag value.

              **Note:**

              For more information about DS records, read [RFC 4034 at IANA](http://tools.ietf.org/html/rfc4034).
            example: 2642
    getzonerecordResponseTypeHINFO:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          cpu:
            type: string
            description: |-
              The host's CPU type.

              **Note:**

              For more information about HINFO records, read [RFC 1700 at IANA](http://tools.ietf.org/html/rfc1700.txt).
            example: INTEL-386
          os:
            type: string
            description: The host's operating system.
            example: UNIX
    getzonerecordResponseTypeLOC:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          altitude:
            type: string
            description: "The location's altitude above sea level, in meters."
            example: 178m
          horiz_pre:
            minimum: 1
            type: integer
            description: "The location's horizontal precision distance, in meters."
            example: 10
          latitude:
            type: string
            description: The location's latitude.
            example: 41 51 54.305 N
          longitude:
            type: string
            description: The location's longitude.
            example: 87 36 47.95 W
          size:
            minimum: 1
            type: integer
            description: "The diameter of a sphere that encloses the entire location,\
              \ in meters."
            example: 10
          version:
            type: integer
            description: |-
              The record's version number.

              **Note:**

              For more information about LOC records, read [RFC 1876 at IANA](http://tools.ietf.org/html/rfc1876).
            example: 0
            enum:
            - 0
          vert_pre:
            minimum: 1
            type: integer
            description: "The location's vertical precision distance, in meters."
            example: 10
    getzonerecordResponseTypeMX:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          exchange:
            type: string
            description: The server's location's canonical name (CNAME).
            format: domain
            example: mail.example.com
          preference:
            type: integer
            description: |-
              The record's priority order.

              **Note:**

              * Lower values have a higher priority order.
              * For more information about MX records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            example: 10
    getzonerecordResponseTypeNS:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          nsdname:
            type: string
            description: |-
              The domain's authoritative nameserver.

              **Note:**

              For more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: ns1.example.com
    getzonerecordResponseTypePTR:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          ptrdname:
            type: string
            description: |-
              A pointer to a canonical name (CNAME).

              **Note:**

              For more information about PTR records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            format: domain
            example: hostname.example.com
    getzonerecordResponseTypeRP:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          mbox:
            type: string
            description: |-
              The Responsible Person's (RP) email address.

              **Note:**

              For more information about RP records, read [RFC 1183 at IANA](http://tools.ietf.org/html/rfc1183).
            example: user.example.com.
          txtdname:
            type: string
            description: The RP's domain name.
            format: domain
            example: mx1.host.example.com.
    getzonerecordResponseTypeSOA:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          Lines:
            minimum: 1
            type: integer
            description: The number of lines in the SOA section.
            example: 4
          expire:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ server attempts to complete a zone transfer."
            example: 3600000
          mname:
            type: string
            description: The domain's authoritative nameserver.
            format: domain
            example: ns1.host.example.com
          refresh:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ DNS server queries the primary DNS server's SOA records for changes."
            example: 1440
          retry:
            minimum: 1
            type: integer
            description: "The amount of time, in seconds, to wait before the secondary\
              \ server retries a failed zone transfer."
            example: 14400
          rname:
            type: string
            description: The Responsible Person's (RP) email address.
            example: user.example.com.
          serial:
            type: integer
            description: |-
              The zone file's revision number.

              **Note:**

              For more information about SOA records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
            example: 2013122501
    getzonerecordResponseTypeSRV:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          port:
            maximum: 65535
            minimum: 0
            type: integer
            description: The target host's port.
            example: 389
          priority:
            type: integer
            description: |-
              The target host's priority preference.

              **Note:**

              * Lower numbers have a higher priority order.
              * For more information about SRV records, read [RFC 2782 at IANA](http://tools.ietf.org/html/rfc2782).
            example: 0
          target:
            type: string
            description: The service's target host.
            format: domain
            example: service.example.com
          weight:
            type: integer
            description: A relative weight. The system uses this value to rank entries
              with the same `priority` value.
            example: 2
    getzonerecordResponseTypeSSHFP:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          algorithm:
            type: integer
            description: |-
              The public key's algorithm number.

              * `1` - RSA
              * `2` - DSS

              **Note:**

              For more information about SSHFP records, read [RFC 4255 at IANA](http://tools.ietf.org/html/rfc4255).

              **Warning:**

              * We do **not** currently support this DNS record type.
            example: 1
            enum:
            - 1
            - 2
          fptype:
            type: integer
            description: |-
              The public key's fingerprint type.

              * `1` - SHA-1
            example: 1
            enum:
            - 1
    getzonerecordResponseTypeTXT:
      allOf:
      - $ref: "#/components/schemas/getzonerecordResponseBase"
      - type: object
        properties:
          txtdata:
            type: string
            description: |-
              The TXT record's data.

              **Note:**

              For more information about TXT records, read [RFC 1464 at IANA](http://tools.ietf.org/html/rfc1464).
            example: v=spf1 a -all
          unencoded:
            type: integer
            description: |-
              Whether the TXT record's data is encoded.

              * `1` - Encoded.
              * `0` - **Not** encoded.
            example: 0
            enum:
            - 1
            - 0
    hinfo:
      description: |-
        An object representing HINFO record data.

        **Note:**

        For more information about HINFO records, read [RFC 1700 at IANA](http://tools.ietf.org/html/rfc1700.txt).
      allOf:
      - type: object
        properties:
          cpu:
            type: string
            description: The host's CPU type.
            example: INTEL-386
          os:
            type: string
            description: The host's operating system.
            example: UNIX
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `HINFO` — HINFO records specify a host's CPU and OS types.
            example: HINFO
      - $ref: "#/components/schemas/record"
    ip-address:
      anyOf:
      - type: string
        format: ipv4
        example: 192.168.0.1
      - type: string
        format: cidr
        example: 192.168.0.1/30
      - type: string
        format: ipv4-ipv4
        example: 192.168.0.1-192.168.0.2
      - type: string
        format: ipv6
        example: "2001:db8::"
      - type: string
        format: cidr
        example: 2001:db8::/32
      - type: string
        format: ipv6-ipv6
        example: 2001:0db8::-2001:0db8:ffff:ffff:ffff:ffff:ffff:ffff
    loc:
      description: |-
        An object representing LOC record data.

        **Note:**

        For more information about LOC records, read [RFC 1876 at IANA](http://tools.ietf.org/html/rfc1876).
      allOf:
      - type: object
        properties:
          altitude:
            type: string
            description: "The location's altitude. The location's altitude above sea\
              \ level, in meters, and the m character."
            example: 178m
          horiz_pre:
            minimum: 0
            type: integer
            description: "The location's horizontal precision, in meters."
            example: 10
          latitude:
            type: string
            description: The location's latitude.
            example: 41 51 54.305 N
          longitude:
            type: string
            description: The location's longitude.
            example: 87 36 47.95 W
          size:
            minimum: 0
            type: integer
            description: "The diameter of a sphere that encloses the entire location,\
              \ in meters."
            example: 10
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `LOC` — LOC records store a hostname's geographical location.
            example: LOC
          version:
            type: integer
            description: The record's version number. You **must** set this value
              to `0`.
            example: 0
          vert_pre:
            minimum: 0
            type: integer
            description: "The location's vertical precision, in meters."
            example: 10
      - $ref: "#/components/schemas/record"
    mx:
      description: |-
        An object representing MX record data.

        **Note:**

        For more information about MX records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
      allOf:
      - type: object
        properties:
          exchange:
            type: string
            description: The server's location's canonical name (CNAME).
            example: mail.example.com
          preference:
            type: integer
            description: |-
              The record's preference. An integer that represents the record's priority order.

              **Note:**

              Lower values have a higher priority order.
            example: 10
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `MX` — MX records point a domain name to its MTAs.
            example: MX
      - $ref: "#/components/schemas/record"
    nearReachedBaseSchema:
      type: object
      properties:
        fraction:
          type: number
          description: A fractional number ranging from 0.00 to 1.00 indicating the
            fraction of the resource limit that was consumed.
          example: 0.54
        near:
          type: integer
          description: |-
            Whether the account is near this resource limit. Nearness is defined according to `nearness_fraction`.

            * `1` — Near.
            * `0` — Not near.
          example: 1
          enum:
          - 0
          - 1
        reached:
          type: integer
          description: |-
            Whether the account has reached this resource limit.

            * `1` — Reached.
            * `0` — Not reached.
          example: 1
          enum:
          - 0
          - 1
    ns:
      description: |-
        An object representing NS record data.

        **Note:**

        For more information about NS records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
      allOf:
      - type: object
        properties:
          nsdname:
            type: string
            description: The domain's authoritative nameserver.
            example: ns1.example.com
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `NS` — NS records store a domain's authoritative nameservers.
            example: NS
      - $ref: "#/components/schemas/record"
    ptr:
      description: |-
        An object representing PTR record data.

        **Note:**

        For more information about PTR records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
      allOf:
      - type: object
        properties:
          ptrdname:
            type: string
            description: A pointer to a canonical name (CNAME).
            example: hostname.example.com.
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `PTR` — PTR records point to a CNAME.
            example: PTR
      - $ref: "#/components/schemas/record"
    record:
      type: object
      properties:
        Line:
          type: integer
          description: The zone record's line number.
          example: 1
        class:
          type: string
          description: |-
            The record's class.
            - IN
            - Very rarely, another valid DNS record class.
          example: IN
        name:
          type: string
          description: The record's name.
          example: hostname.example.com
        ttl:
          type: integer
          description: The record's Time To Live (TTL).
          example: 86400
    restorePoint:
      properties:
        options:
          $ref: "#/components/schemas/restorePoint_options"
        restore_point:
          type: string
          description: The date of the backup file.
          format: ISO-8601 Date
          example: 2019-10-21T00:00:00.000Z
        user:
          type: string
          description: The cPanel account's username.
          format: username
          example: username
    rp:
      description: |-
        An object representing RP record data.

        **Note:**

        For more information about RP records, read [RFC 1183 at IANA](https://tools.ietf.org/html/rfc1183).
      allOf:
      - type: object
        properties:
          mbox:
            type: string
            description: The Responsible Person's (RP's) email address.
            example: user.example.com.
          txtdname:
            type: string
            description: The RP's domain name.
            example: mx1.host.example.com.
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `RP` — RP records store a domain's Responsible Person's information.
            example: RP
      - $ref: "#/components/schemas/record"
    soa:
      description: |-
        An object representing SOA record data.

        **Note:**

        For more information about SOA records, read [RFC 1035 at IANA](http://tools.ietf.org/html/rfc1035).
      allOf:
      - type: object
        properties:
          Lines:
            minimum: 0
            type: integer
            description: The number of lines in the SOA section.
            example: 4
          expire:
            minimum: 0
            type: integer
            description: "The amount of time to wait before the secondary server attempts\
              \ to complete a zone transfer, in seconds."
            example: 3600000
          mname:
            type: string
            description: The domain's authoritative nameserver.
            example: ns1.example.com
          refresh:
            minimum: 0
            type: integer
            description: "The amount of time to wait before the secondary DNS server\
              \ queries the primary DNS server's SOA records for changes, in seconds."
            example: 1440
          retry:
            minimum: 0
            type: integer
            description: "The amount of time to wait before the secondary server retries\
              \ a failed zone transfer, in seconds."
            example: 1440
          rname:
            type: string
            description: The Responsible Person's (RP's) email address.
            example: user.example.com.
          serial:
            type: integer
            description: The zone file's revision number.
            example: 2013122501
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `SOA` — SOA records designate the beginning of a zone of authority.
            example: SOA
      - $ref: "#/components/schemas/record"
    srv:
      description: |-
        An object representing SRV record data.

        **Note:**

        For more information about SRV records, read [RFC 2782 at IANA](http://tools.ietf.org/html/rfc2782).
      allOf:
      - type: object
        properties:
          port:
            type: integer
            description: The target host's port.
            example: 389
          priority:
            type: integer
            description: |-
              The target host's preference. An integer that represents the target host's priority order.

              **Note:**

              Lower numbers have a higher priority order.
            example: 0
          target:
            type: string
            description: The service's target host.
            format: domain
            example: service.example.com
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `SRV` — SRV records store the service location records for newer protocols (for example, Autodiscover).
            example: SRV
          weight:
            type: integer
            description: A relative weight. The system uses this value to rank entries
              with the same `priority` value. An integer that represents the target
              host's weight against other hosts with the same `priority` value.
            example: 2
      - $ref: "#/components/schemas/record"
    sshfp:
      description: |-
        An object representing SSHFP record data.

        **Warning:**

        We do **not** currently support this DNS record type.

        **Note:**

        For more information about SSHFP records, read [RFC 4255 at IANA](http://tools.ietf.org/html/rfc4255).
      allOf:
      - type: object
        properties:
          algorithm:
            type: integer
            description: |-
              The public key's algorithm number.
              * `1` — RSA
              * `2` — DSS
            example: 1
          fptype:
            type: integer
            description: |-
              The public key's fingerprint type.
              * `1` — SHA-1
            example: 1
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `SSHFP` — SSHFP records store a domain's SSH public host key's fingerprint.

              **Warning:**

                We do **not** currently support the SSHFP DNS record type.
            example: SSHFP
      - $ref: "#/components/schemas/record"
    txt:
      description: |-
        An object representing TXT record data.

        **Note:**

        For more information about TXT records, read [RFC 1464 at IANA](http://tools.ietf.org/html/rfc1464).
      allOf:
      - type: object
        properties:
          txtdata:
            type: string
            description: The TXT record's data.
            example: v=spf1 a -all
          type:
            type: string
            description: |-
              The [DNS record type](https://en.wikipedia.org/wiki/List_of_DNS_record_types).
              * `TXT` — TXT records store descriptive text or useful records (for example, SPF or DKIM records).
            example: TXT
          unencoded:
            type: integer
            description: |-
              Whether the TXT record's data is encoded.
              * `1` — Encoded.
              * `0` — **Not** encoded.
            example: 1
      - $ref: "#/components/schemas/record"
    schemas-Transfers_EnqueueTransferItem_Type:
      discriminator:
        propertyName: module
        mapping:
          AccountLocal: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot"
          AccountRemoteRoot: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteRoot"
          AccountRemoteUser: "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base"
          FeatureListRemoteRoot: "#/components/schemas/Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot"
          LegacyAccountBackup: "#/components/schemas/Transfers_EnqueueTransferItem_Type_LegacyAccountBackup"
          PackageRemoteRoot: "#/components/schemas/Transfers_EnqueueTransferItem_Type_PackageRemoteRoot"
      anyOf:
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountLocal_or_AccountRemoteRoot"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_AccountRemoteRoot"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_Account_Base"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_FeatureListRemoteRoot"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_LegacyAccountBackup"
      - $ref: "#/components/schemas/Transfers_EnqueueTransferItem_Type_PackageRemoteRoot"
    inline_response_200:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_metadata"
    inline_response_200_1:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_1_metadata"
    inline_response_200_2:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_2_metadata"
    inline_response_200_3:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_3_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_3_metadata"
    inline_response_200_4:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_4_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_4_metadata"
    inline_response_200_5:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_5_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_5_metadata"
    inline_response_200_6:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_6_metadata"
    inline_response_200_7:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_7_metadata"
    inline_response_200_8:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_8_metadata"
    inline_response_200_9:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_9_metadata"
    inline_response_200_10:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_10_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_10_metadata"
    inline_response_200_11:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_11_metadata"
    inline_response_200_12:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_12_metadata"
    bwlimit:
      example: 1048576
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited bandwidth.
      - type: string
      - type: string
        enum:
        - unlimited
      default: 1048576
    MAX_DEFER_FAIL_PERCENTAGE:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows users ot send an unlimited number of
          failed or deferred messages.
        enum:
        - unlimited
      default: unlimited
    MAX_EMAIL_PER_HOUR:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows users to send an unlimited number of
          emails.
        enum:
        - unlimited
      default: unlimited
    max_emailacct_quota:
      example: 1024
      oneOf:
      - maximum: 4294967296
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited email account quota.
      - type: string
      - type: string
        enum:
        - unlimited
      default: 1024
    maxaddon:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited addon domains.
      - type: string
      - type: string
        enum:
        - unlimited
      default: 0
    maxftp:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited FTP accounts.
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    maxlst:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited mailing lists.
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    maxpark:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited parked domains.
      - type: string
      - type: string
        enum:
        - unlimited
      default: 0
    maxpop:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited email accounts.
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    maxsql:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited databases.
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    maxsub:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited subdomains.
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    quota:
      example: 10240
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - description: The hosting plan allows unlimited disk space.
      - type: string
      - type: string
        enum:
        - unlimited
      default: 10240
    inline_response_200_13:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_13_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_13_metadata"
    inline_response_200_14:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_14_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_14_metadata"
    inline_response_200_15:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_15_metadata"
    inline_response_200_16:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_16_metadata"
    inline_response_200_17:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_17_metadata"
    whitelist_ip:
      anyOf:
      - type: string
        format: ipv4
      - type: string
        format: ipv6
      - type: string
        format: cidr
    inline_response_200_18:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_18_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_18_metadata"
    inline_response_200_19:
      anyOf:
      - title: Token Recognized
        type: object
        properties:
          data:
            allOf:
            - description: The API token’s details. Only present if the system recognizes
                the given `token`.
            - $ref: "#/components/schemas/TokenDetails"
          metadata:
            $ref: "#/components/schemas/Metadata"
      - title: Token Unrecognized
        type: object
        properties:
          metadata:
            $ref: "#/components/schemas/Metadata"
    inline_response_200_20:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_20_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_20_metadata"
    inline_response_200_21:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_21_metadata"
    whitelist_ip_1:
      anyOf:
      - type: string
        format: ipv4
      - type: string
        format: ipv6
      - type: string
        format: cidr
      - type: string
        enum:
        - any
    inline_response_200_22:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_22_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_22_metadata"
    inline_response_200_23:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_23_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_23_metadata"
    inline_response_200_24:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_24_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_24_metadata"
    inline_response_200_25:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_25_metadata"
    inline_response_200_26:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_26_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_26_metadata"
    inline_response_200_27:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_27_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_27_metadata"
    inline_response_200_28:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_28_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_28_metadata"
    inline_response_200_29:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_29_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_29_metadata"
    inline_response_200_30:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_30_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_30_metadata"
    inline_response_200_31:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_31_metadata"
    inline_response_200_32:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_32_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_32_metadata"
    inline_response_200_33:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_33_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_33_metadata"
    inline_response_200_34:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_34_metadata"
    inline_response_200_35:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/BackupDestinationGetResponse"
        metadata:
          $ref: "#/components/schemas/inline_response_200_35_metadata"
    inline_response_200_36:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_36_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_36_metadata"
    inline_response_200_37:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_37_metadata"
    inline_response_200_38:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_38_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_38_metadata"
    inline_response_200_39:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_39_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_39_metadata"
    inline_response_200_40:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_40_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_40_metadata"
    inline_response_200_41:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_41_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_41_metadata"
    inline_response_200_42:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_42_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_42_metadata"
    inline_response_200_43:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_43_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_43_metadata"
    inline_response_200_44:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_44_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_44_metadata"
    inline_response_200_45:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_45_metadata"
    inline_response_200_46:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_46_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_46_metadata"
    inline_response_200_47:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_47_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_47_metadata"
    inline_response_200_48:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_48_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_48_metadata"
    batch_create_cphulk_records_records:
      required:
      - ip
      type: object
      properties:
        comment:
          maximum: 255
          type: string
          example: Dangerous website
        ip:
          $ref: "#/components/schemas/ip-address"
      description: A whitelist or blacklist record.
    batch_create_cphulk_records_body:
      required:
      - api.version
      - list_name
      - records
      properties:
        api.version:
          type: integer
          description: The WHM API version number.
          enum:
          - 1
        list_name:
          type: string
          description: "The cPHulk list's name.\n\n* `black` - Add a new record or\
            \ records to the blacklist.\n* `white` - Add a new record or records to\
            \ the whitelist. "
          example: white
          enum:
          - black
          - white
        records:
          type: array
          description: The list of records to add to the whitelist or blacklist.
          items:
            $ref: "#/components/schemas/batch_create_cphulk_records_records"
        skip_enabled_check:
          type: integer
          description: "Whether to skip checking if cPHulk runs on the server.\n\n\
            * `1` - Do **not** check if cPHulk is running.\n* `0` - Check if cPHulk\
            \ is running.\n\n**Note:**\n\n If cPHulk is disabled and you check its\
            \ status, the function returns the following message: `cPHulk is disabled\
            \ on the server.` "
          example: 1
          default: 0
          enum:
          - 0
          - 1
      example:
        api.version: 1
        list_name: white
        records:
        - comment: Automated update tools.
          ip: 192.168.0.1
        - comment: System administrators and support systems.
          ip: 192.168.1.0/30
        - comment: Owner of example.com.
          ip: 122.1.56.7-122.1.56.8
        - comment: Special access group 1
          ip: "2001:db9::"
        - comment: Special access group 1
          ip: 2001:db9::1-2001:db9::5
        - comment: Special access group 2
          ip: 2001:db8::/32
    inline_response_200_49:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_49_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_49_metadata"
    inline_response_200_50:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_50_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_50_metadata"
    inline_response_200_51:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_51_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_51_metadata"
    inline_response_200_52:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_52_metadata"
    inline_response_200_53:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_53_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_53_metadata"
    inline_response_200_54:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_54_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_54_metadata"
    inline_response_200_55:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_55_metadata"
    inline_response_200_56:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_56_metadata"
    inline_response_200_57:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_57_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_57_metadata"
    inline_response_200_58:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_58_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_58_metadata"
    inline_response_200_59:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_59_data"
          description: An object that contains details about the conversion job's
            status.
          example:
            "1":
              job_end_time: 1462383658
              job_id: "1"
              job_status: DONE
              source_acct: user1
        metadata:
          $ref: "#/components/schemas/inline_response_200_59_metadata"
    inline_response_200_60:
      type: object
      properties:
        data:
          type: object
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_60_metadata"
    inline_response_200_61:
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_61_data"
          example:
            example.com:
              docroot: /home/exampleparent/public_html/example.com
              domain_type: addon
              ip: 192.0.2.0
              owner: root
              subdomain: example.exampleparent.com
        metadata:
          $ref: "#/components/schemas/inline_response_200_61_metadata"
    inline_response_200_62:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_62_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_62_metadata"
    inline_response_200_63:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_63_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_63_metadata"
    inline_response_200_64:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_64_metadata"
    inline_response_200_65:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_65_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_65_metadata"
    inline_response_200_66:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_66_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_66_metadata"
    inline_response_200_67:
      type: object
      properties:
        data:
          description: Information returned by the cPanel API function passed in `cpanel_jsonapi_module`
            and `cpanel_jsonapi_func`.
        metadata:
          $ref: "#/components/schemas/inline_response_200_67_metadata"
    inline_response_200_68:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_68_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_68_metadata"
    inline_response_200_69:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_69_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_69_metadata"
    inline_response_200_70:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_70_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_70_metadata"
    inline_response_200_71:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_71_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_70_metadata"
    inline_response_200_72:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_72_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_72_metadata"
    inline_response_200_73:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_73_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_73_metadata"
    inline_response_200_74:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_74_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_74_metadata"
    inline_response_200_75:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_75_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_75_metadata"
    inline_response_200_76:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_76_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_76_metadata"
    inline_response_200_77:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_77_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_77_metadata"
    inline_response_200_78:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_78_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_78_metadata"
    inline_response_200_79:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_79_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_79_metadata"
    inline_response_200_80:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_80_metadata"
    inline_response_200_81:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_81_metadata"
    inline_response_200_82:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_82_metadata"
    host:
      anyOf:
      - type: string
        description: A valid IP address.
        format: ipv4
        example: 192.168.0.0
      - type: string
        description: A valid domain.
        format: domain
        example: remote.example.com
    inline_response_200_83:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_83_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_83_metadata"
    inline_response_200_84:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_84_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_84_metadata"
    inline_response_200_85:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_85_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_85_metadata"
    inline_response_200_86:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_86_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_86_metadata"
    account_enhancements:
      oneOf:
      - type: string
      - type: array
        items:
          type: string
    bwlimit_1:
      format: megabytes
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - minimum: 0
        type: integer
    max_defer_fail_percentage:
      example: unlimited
      oneOf:
      - type: string
        enum:
        - unlimited
      - minimum: 0
        type: integer
      default: unlimited
    max_email_per_hour:
      example: unlimited
      oneOf:
      - type: string
        enum:
        - unlimited
      - minimum: 0
        type: integer
    max_emailacct_quota_1:
      format: megabytes
      example: 1024
      oneOf:
      - type: string
        enum:
        - unlimited
      - maximum: 4294967296
        minimum: 0
        type: integer
      default: 1024
    maxaddon_1:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
      default: 0
    maxftp_1:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
    maxlst_1:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
    maxpark_1:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
      default: 0
    maxpop_1:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
    maxsql_1:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
    maxsub_1:
      example: unlimited
      oneOf:
      - type: string
      - type: string
        enum:
        - unlimited
      - maximum: 999999
        minimum: 0
        type: integer
    inline_response_200_87:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_87_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_87_metadata"
    inline_response_200_88:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_88_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_88_metadata"
    inline_response_200_89:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_89_metadata"
    inline_response_200_90:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_90_metadata"
    inline_response_200_91:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_91_metadata"
    inline_response_200_92:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_92_metadata"
    inline_response_200_93:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_93_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_93_metadata"
    inline_response_200_94:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_94_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_94_metadata"
    inline_response_200_95:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_95_metadata"
    inline_response_200_96:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_96_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_96_metadata"
    inline_response_200_97:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_97_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_97_metadata"
    inline_response_200_98:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_98_metadata"
    inline_response_200_99:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_99_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_99_metadata"
    inline_response_200_100:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_100_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_100_metadata"
    inline_response_200_101:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_101_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_101_metadata"
    inline_response_200_102:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_102_metadata"
    inline_response_200_103:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_103_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_103_metadata"
    inline_response_200_104:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_104_metadata"
    inline_response_200_105:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_105_metadata"
    inline_response_200_106:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_106_metadata"
    inline_response_200_107:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_107_metadata"
    inline_response_200_108:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_108_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_108_metadata"
    inline_response_200_109:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_109_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_109_metadata"
    inline_response_200_110:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_110_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_110_metadata"
    inline_response_200_111:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_111_metadata"
    inline_response_200_112:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_112_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_112_metadata"
    inline_response_200_113:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_113_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_113_metadata"
    inline_response_200_114:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_114_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_114_metadata"
    inline_response_200_115:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_115_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_115_metadata"
    inline_response_200_116:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_116_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_116_metadata"
    inline_response_200_117:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: object
            description: |-
              Returns the contents of the `/etc/cpanel/ea4/ea4-metainfo.json` file.
              Returns an empty value if the `/etc/cpanel/ea4/ea4-metainfo.json` file does not exist.
          description: Contents of the `/etc/cpanel/ea4/ea4-metainfo.json` file.
          example:
            additional_packages:
            - ea-nginx
            - ea-example
            default_php_handler: cgi
            default_php_package: ea-php72
            type: object
        metadata:
          $ref: "#/components/schemas/inline_response_200_117_metadata"
    inline_response_200_118:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: array
            description: |-
              * An object that contains recommendation information about a package.

              **Note:**

              * The function uses the name of the referenced package as the return name.  For example, `ea-php74-php`.
            items:
              type: object
              properties:
                desc:
                  type: string
                  description: |-
                    The recommendation's description.

                    **Note:**

                    * The function **only** returns this value if it exists.
                level:
                  type: string
                  description: |-
                    The level that triggers a recommendation to appear, based on [Bootstrap 3 alert components](http://getbootstrap.com/components/#alerts).

                    * `primary`
                    * `success`
                    * `info`
                    * `warning`
                    * `danger`

                    **Note:**

                    * The function **only** returns this value if it exists.
                    * This return's value only affects the UI if set to `danger`.
                  enum:
                  - primary
                  - success
                  - info
                  - warning
                  - danger
                name:
                  type: string
                  description: The recommendation's name.
                "on":
                  type: string
                  description: |-
                    The action that triggers a recommendation.

                    * `add`
                    * `remove`
                  enum:
                  - add
                  - remove
                options:
                  type: array
                  description: An object that contains each option for the package's
                    recommendations.
                  items:
                    type: object
                    properties:
                      items:
                        type: array
                        description: |-
                          An array of information that corresponds with a text value.

                          **Note:**

                          The function **only** returns this value if it exists.
                        example:
                        - ea-apache24
                        items:
                          type: string
                      level:
                        type: string
                        description: |-
                          The level that triggers a recommendation to appear, based on [Bootstrap 3 alert components](http://getbootstrap.com/components/#alerts).

                          * `primary`
                          * `success`
                          * `info`
                          * `warning`
                          * `danger`

                          **Note:**

                          * The function **only** returns this value if it exists.
                          * This return's value only affects the UI if set to `danger`.
                        enum:
                        - primary
                        - success
                        - info
                        - warning
                        - danger
                      recommended:
                        type: boolean
                        description: |-
                          The type of recommendation that the interface will return.

                          * `true` - Recommended.
                          * `false` - Not recommended.

                          **Note:**

                          * The function **only** returns this value if it exists.
                          * If the function does **not** return this value, then the text displayed in the interface is informational.
                        enum:
                        - true
                        - false
                      text:
                        type: string
                        description: The text returned in the user interface.
                      url:
                        type: string
                        description: |-
                          A URL that provides more information.

                          **Note:**

                          The function **only** returns this value if it exists.
                        format: url
                url:
                  type: string
                  description: |-
                    A URL to provide more information.

                    **Note:**

                    * The function **only** returns this value if it exists.
                  format: url
          example:
            ea-php55-php:
            - desc: "PHP DSO runs as the user by default. In a shared hosting environment,\
                \ this is a security issue."
              level: danger
              name: PHP DSO
              "on": add
              options:
              - items:
                - ruid2
                - mpm-itk
                level: success
                recommended: true
                text: "We strongly recommend that you install one of the following\
                  \ packages unless this is a single-user system:"
              - level: warning
                recommended: false
                text: "If you use suPHP, you will add some security, but may experience\
                  \ performance issues on your server."
              url: https://www.example.com
        metadata:
          $ref: "#/components/schemas/inline_response_200_118_metadata"
    inline_response_200_119:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_119_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_119_metadata"
    inline_response_200_120:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_120_metadata"
    inline_response_200_121:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_121_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_121_metadata"
    bwlimit_2:
      example: 1048576
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: 1048576
    max_defer_fail_percentage_1:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        enum:
        - unlimited
      default: unlimited
    max_email_per_hour_1:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
        enum:
        - unlimited
      default: unlimited
    max_emailacct_quota_2:
      example: 1024
      oneOf:
      - maximum: 4294967296
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: 1024
    maxaddon_2:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: 0
    maxftp_2:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    maxlst_2:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    maxpark_2:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: 0
    maxpop_2:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    maxsql_2:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    maxsub_2:
      example: unlimited
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: unlimited
    quota_1:
      example: 10240
      oneOf:
      - maximum: 999999
        minimum: 0
        type: integer
      - type: string
      - type: string
        enum:
        - unlimited
      default: 10240
    inline_response_200_122:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_13_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_122_metadata"
    quota_2:
      example: 500
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        enum:
        - unlimited
    inline_response_200_123:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_123_metadata"
    inline_response_200_124:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_124_metadata"
    inline_response_200_125:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_125_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_125_metadata"
    inline_response_200_126:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_126_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_126_metadata"
    inline_response_200_127:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_127_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_127_metadata"
    inline_response_200_128:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_128_metadata"
    inline_response_200_129:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_129_metadata"
    inline_response_200_130:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_130_metadata"
    inline_response_200_131:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_131_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_131_metadata"
    inline_response_200_132:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_132_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_132_metadata"
    inline_response_200_133:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_133_metadata"
    inline_response_200_134:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_134_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_134_metadata"
    inline_response_200_135:
      type: object
      properties:
        data:
          type: object
        metadata:
          $ref: "#/components/schemas/inline_response_200_135_metadata"
    inline_response_200_136:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_136_metadata"
    inline_response_200_137:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_137_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_137_metadata"
    inline_response_200_138:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_138_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_138_metadata"
    inline_response_200_139:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_139_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_139_metadata"
    inline_response_200_140:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_140_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_140_metadata"
    inline_response_200_141:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_141_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_141_metadata"
    inline_response_200_142:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_142_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_142_metadata"
    inline_response_200_143:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_143_metadata"
    inline_response_200_144:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_144_metadata"
    inline_response_200_145:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_145_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_145_metadata"
    inline_response_200_146:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_146_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_146_metadata"
    inline_response_200_147:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_147_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_147_metadata"
    inline_response_200_148:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_148_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_148_metadata"
    inline_response_200_149:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_149_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_149_metadata"
    inline_response_200_150:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_150_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_150_metadata"
    inline_response_200_151:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_151_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_151_metadata"
    inline_response_200_152:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_152_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_152_metadata"
    inline_response_200_153:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_153_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_153_metadata"
    logfile:
      example: master.log
      oneOf:
      - type: string
        enum:
        - master.log
        - master.error_log
      - type: string
        description: A valid log file name found in the `master.log` file.
        example: item-TRANSFER_AccountRemoteUser_root
    inline_response_200_154:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_154_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_154_metadata"
    inline_response_200_155:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_155_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_155_metadata"
    inline_response_200_156:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_156_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_156_metadata"
    inline_response_200_157:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_157_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_157_metadata"
    inline_response_200_158:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_158_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_158_metadata"
    inline_response_200_159:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_159_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_159_metadata"
    inline_response_200_160:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_160_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_160_metadata"
    inline_response_200_161:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_161_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_161_metadata"
    inline_response_200_162:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_162_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_162_metadata"
    inline_response_200_163:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_163_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_163_metadata"
    inline_response_200_164:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_164_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_164_metadata"
    inline_response_200_165:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_165_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_165_metadata"
    inline_response_200_166:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_166_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_166_metadata"
    inline_response_200_167:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_167_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_167_metadata"
    inline_response_200_168:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_168_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_168_metadata"
    inline_response_200_169:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_169_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_169_metadata"
    inline_response_200_170:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_170_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_170_metadata"
    inline_response_200_171:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_171_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_171_metadata"
    inline_response_200_172:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_172_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_172_metadata"
    inline_response_200_173:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_173_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_173_metadata"
    inline_response_200_174:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_174_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_174_metadata"
    inline_response_200_175:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_175_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_175_metadata"
    inline_response_200_176:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_176_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_176_metadata"
    inline_response_200_177:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_177_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_177_metadata"
    inline_response_200_178:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_178_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_178_metadata"
    inline_response_200_179:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_179_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_179_metadata"
    inline_response_200_180:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_180_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_180_metadata"
    inline_response_200_181:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_181_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_181_metadata"
    inline_response_200_182:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_182_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_182_metadata"
    inline_response_200_183:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_183_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_183_metadata"
    inline_response_200_184:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_184_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_184_metadata"
    inline_response_200_185:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_185_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_185_metadata"
    inline_response_200_186:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_186_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_186_metadata"
    inline_response_200_187:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_187_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_187_metadata"
    inline_response_200_188:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_188_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_188_metadata"
    inline_response_200_189:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_189_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_189_metadata"
    inline_response_200_190:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_190_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_190_metadata"
    inline_response_200_191:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_191_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_191_metadata"
    inline_response_200_192:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_192_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_192_metadata"
    inline_response_200_193:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_193_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_193_metadata"
    inline_response_200_194:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_194_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_194_metadata"
    inline_response_200_195:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_195_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_195_metadata"
    inline_response_200_196:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_196_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_196_metadata"
    inline_response_200_197:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_185_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_197_metadata"
    inline_response_200_198:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_198_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_198_metadata"
    inline_response_200_199:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_199_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_199_metadata"
    inline_response_200_200:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_200_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_200_metadata"
    inline_response_200_201:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_201_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_201_metadata"
    inline_response_200_202:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_202_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_202_metadata"
    inline_response_200_203:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_203_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_203_metadata"
    inline_response_200_204:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_204_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_204_metadata"
    inline_response_200_205:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_205_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_205_metadata"
    inline_response_200_206:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_206_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_206_metadata"
    inline_response_200_207:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_207_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_207_metadata"
    account:
      example: user@example.com
      oneOf:
      - type: string
        format: email
      - type: string
        format: username
    inline_response_200_208:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_208_data"
          example:
            INBOX:
              guid: 111111234560f0c58d158c92a000044f
              messages: 42000
              vsize: 42
            INBOX.Drafts:
              guid: 11111111234560f0c58d158c92a00000
              messages: 5
              vsize: 522
            INBOX.Sent:
              guid: 1111111234560f0c58d158c92a000004
              messages: 1
              vsize: 56
            INBOX.Trash:
              guid: 1111234560f0c58d158c92a000044f0d
              messages: 2001
              vsize: 5643
            INBOX.angel_face@example_com:
              guid: 11234560f0c58d158c92a000044f0d23
              messages: 3
              vsize: 1524
            INBOX.marla_singer@example_com:
              guid: 1234560f0c58d158c92a000044f0d230
              messages: 5
              vsize: 100
            INBOX.narrator@example_com:
              guid: 11111234560f0c58d158c92a000044f0
              messages: 0
              vsize: 0
            INBOX.robert_paulsen@example_com:
              guid: 111111111234560f0c58d158c92a0001
              messages: 2
              vsize: 2222
            INBOX.tyler_durden@example_com:
              guid: 111234560f0c58d158c92a000044f0d2
              messages: 55
              vsize: 12244
        metadata:
          $ref: "#/components/schemas/inline_response_200_208_metadata"
    account_1:
      type: string
      anyOf:
      - type: string
        description: A valid email account that exists on the server
        format: email
        example: user@example.com
      - type: string
        description: The cPanel user's account name.
        format: username
        example: example
      - type: string
        description: An alias that represents the cPanel user's mailbox
        format: email
        example: _mainaccount@example.com
    inline_response_200_209:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_209_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_209_metadata"
    inline_response_200_210:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_210_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_210_metadata"
    inline_response_200_211:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_211_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_211_metadata"
    inline_response_200_212:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_212_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_212_metadata"
    inline_response_200_213:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_213_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_213_metadata"
    inline_response_200_214:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_214_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_214_metadata"
    inline_response_200_215:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_215_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_215_metadata"
    inline_response_200_216:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_216_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_216_metadata"
    inline_response_200_217:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_217_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_217_metadata"
    inline_response_200_218:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_218_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_218_metadata"
    inline_response_200_219:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_219_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_219_metadata"
    inline_response_200_220:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_220_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_220_metadata"
    inline_response_200_221:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_221_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_221_metadata"
    inline_response_200_222:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_222_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_222_metadata"
    inline_response_200_223:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_223_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_223_metadata"
    inline_response_200_224:
      type: object
      properties:
        data:
          description: "The RPM section and its associated RPMs.\n\n**Note:**\n\n\
            * This function uses the RPM section's name and RPM key's name for each\
            \ return value.\n* If you specify the `key` parameter, this function returns\
            \ **only** the called RPM key.\n* If you do **not** specify the `key`\
            \ parameter, the function returns **all** RPM keys\nin the called `section`\
            \ parameter. "
          oneOf:
          - type: object
            additionalProperties:
              type: array
              description: A list of all available RPMs. The system uses the RPM key's
                name as the return name.
              items:
                type: string
            example:
              "3rdparty":
              - cpanel-pcre
              - cpanel-pixman
              - cpanel-analog
          - type: object
            additionalProperties:
              type: object
              additionalProperties:
                type: array
                description: A list of all available RPMs. The system uses the RPM
                  key's name as the return name.
                items:
                  type: string
              description: A list containing the RPM section's RPM information. The
                system uses the RPM section name as the return name.
            example:
              rpm_groups:
                "3rdparty":
                - cpanel-pcre
                - cpanel-pixman
                - cpanel-analog
        metadata:
          $ref: "#/components/schemas/inline_response_200_224_metadata"
    inline_response_200_225:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_225_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_225_metadata"
    inline_response_200_226:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            description: |-
              A configuration key's setting.

              **Note:**

              The key name is the return's name.
            anyOf:
            - type: string
            - type: integer
            - type: object
          description: A list of the configuration key's settings.
          example:
            auth_cache_negative_ttl: 3600
            auth_cache_size: 1M
            auth_cache_ttl: 3600
            auth_policy_hash_nonce: 91057590
            compress_messages: 0
            config_vsz_limit: 2048
            disable_plaintext_auth: "no"
            expire_trash: 0
            expire_spam: 0
            hulk_auth_passwd: FAMONex4Bn9Hv1BO
            include_trash_in_quota: 0
            incoming_reached_quota: bounce
            ipv6: "on"
            lmtp_process_limit: 500
            lmtp_process_min_avail: 0
            lmtp_user_concurrency_limit: 4
            login_max_processes_count: 50
            login_process_per_connection: "no"
            login_process_size: 128
            login_processes_count: 2
            mail_process_size: 512
            mdbox_rotate_interval: 0
            mdbox_rotate_size: 10M
            protocol_imap:
              mail_max_userip_connections: 20
              map_idle_notify_interval: 24
            protocol_pop3:
              mail_max_userip_connections: 3
            protocols: imap pop3
            ssl_cipher_list: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
            ssl_min_protocol: TLSv1.2
        metadata:
          $ref: "#/components/schemas/inline_response_200_226_metadata"
    inline_response_200_227:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_227_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_227_metadata"
    inline_response_200_228:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_228_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_228_metadata"
    inline_response_200_229:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_229_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_229_metadata"
    inline_response_200_230:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_230_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_230_metadata"
    inline_response_200_231:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_231_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_231_metadata"
    inline_response_200_232:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_232_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_232_metadata"
    inline_response_200_233:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_233_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_233_metadata"
    inline_response_200_234:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_234_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_234_metadata"
    inline_response_200_235:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_235_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_235_metadata"
    inline_response_200_236:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_236_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_236_metadata"
    inline_response_200_237:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_237_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_237_metadata"
    inline_response_200_238:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_238_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_238_metadata"
    inline_response_200_239:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_239_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_239_metadata"
    inline_response_200_240:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_240_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_240_metadata"
    inline_response_200_241:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
            description: The cPanel user account's associated domain.
            format: domain
            example: example.com
          description: Keys are cPanel user accounts that contain backup metadata.
          example:
            username: example.com
            username2: example.net
            username3: example.org
        metadata:
          $ref: "#/components/schemas/inline_response_200_241_metadata"
    inline_response_200_242:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_242_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_242_metadata"
    inline_response_200_243:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_243_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_243_metadata"
    inline_response_200_244:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
            description: |-
              The name of the appkey and its corresponding URL to the specific
              application.

              **Note:**

              This function returns this value as the appkey name and the appkey's
              application URL.
          description: A list of appkeys and their corresponding file locations.
          example:
            Backups_Home: frontend/jupiter/backup/index.html
            Calendar_Configure: frontend/jupiter/mail/calendars_and_contacts/index.html
            ContactInfo_Change: frontend/jupiter/contact/index.html
            Cron_Home: frontend/jupiter/cron/index.html
            Database_MySQL: frontend/jupiter/sql/index.html
            Database_phpMyAdmin: frontend/jupiter/sql/PhpMyAdmin.html
            Email_AccountLevelFiltering: frontend/jupiter/mail/filters/userfilters.html
            Email_Accounts: frontend/jupiter/mail/pops/index.html
            Email_Archive: frontend/jupiter/mail/archive.html
            Email_Authentication: frontend/jupiter/mail/auth.html
            Email_AutoResponders: frontend/jupiter/mail/autores.html
            Email_BoxTrapper: frontend/jupiter/mail/boxtrapper.html
            Email_DefaultAddress: frontend/jupiter/mail/def.html
            Email_DeliveryReport: frontend/jupiter/mail/def.html
            Email_Disk_Usage: frontend/jupiter/mail/manage_disk_usage/
            Email_Forwarders: frontend/jupiter/mail/fwds.html
            Email_GreyListing: frontend/jupiter/mail/greylisting/index.html
            Email_MailingLists: frontend/jupiter/mail/lists.html
            Email_Routing: frontend/jupiter/mail/email_routing.html
            Email_SpamFilter: frontend/jupiter/mail/spam/spam.html
            Email_UserLevelFiltering: frontend/jupiter/mail/filters/managefilters.html
            FileManager_Home: frontend/jupiter/filemanager/index.html
            Locale_Change: frontend/jupiter/setlang/index.html
            Password_Change: frontend/jupiter/passwd/index.html
            SSL_TLS_Manager: frontend/jupiter/ssl/index.html
            SSL_TLS_Status: frontend/jupiter/security/tls_status/
            SSL_TLS_Wizard: frontend/jupiter/security/tls_wizard/
            Site_Software: frontend/jupiter/addoncgi/cpaddons.html
            Solr_Disk_Usage: frontend/jupiter/mail/search_index/
            Stats_AWStats: frontend/jupiter/stats/awstats_landing.html
        metadata:
          $ref: "#/components/schemas/inline_response_200_244_metadata"
    inline_response_200_245:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_245_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_245_metadata"
    inline_response_200_246:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_246_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_246_metadata"
    inline_response_200_247:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_247_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_247_metadata"
    inline_response_200_248:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_248_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_248_metadata"
    inline_response_200_249:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_249_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_249_metadata"
    inline_response_200_250:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_250_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_250_metadata"
    inline_response_200_251:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_251_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_251_metadata"
    inline_response_200_252:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_252_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_252_metadata"
    inline_response_200_253:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_253_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_253_metadata"
    inline_response_200_254:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_254_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_254_metadata"
    inline_response_200_255:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_255_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_255_metadata"
    inline_response_200_256:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_256_metadata"
    inline_response_200_257:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_257_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_257_metadata"
    inline_response_200_258:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_258_metadata"
    inline_response_200_259:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_259_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_259_metadata"
    inline_response_200_260:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_260_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_260_metadata"
    inline_response_200_261:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_261_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_261_metadata"
    inline_response_200_262:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_262_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_262_metadata"
    inline_response_200_263:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_263_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_263_metadata"
    inline_response_200_264:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_264_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_264_metadata"
    inline_response_200_265:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_265_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_265_metadata"
    inline_response_200_266:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_266_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_266_metadata"
    inline_response_200_267:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_267_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_267_metadata"
    inline_response_200_268:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_268_metadata"
    inline_response_200_269:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_269_metadata"
    inline_response_200_270:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_270_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_270_metadata"
    inline_response_200_271:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_271_metadata"
    inline_response_200_272:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_272_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_272_metadata"
    inline_response_200_273:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_273_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_273_metadata"
    inline_response_200_274:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_274_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_274_metadata"
    inline_response_200_275:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_275_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_275_metadata"
    inline_response_200_276:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_276_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_276_metadata"
    inline_response_200_277:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_277_metadata"
    inline_response_200_278:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_278_metadata"
    inline_response_200_279:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_263_data_versions"
        metadata:
          $ref: "#/components/schemas/inline_response_200_279_metadata"
    bwlimit_3:
      example: 0
      oneOf:
      - type: string
        enum:
        - unlimited
      - minimum: 0
        type: integer
      default: unlimited
    inline_response_200_280:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_280_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_280_metadata"
    inline_response_200_281:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_281_metadata"
    inline_response_200_282:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_282_metadata"
    inline_response_200_283:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_283_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_283_metadata"
    inline_response_200_284:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_284_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_284_metadata"
    inline_response_200_285:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_285_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_285_metadata"
    inline_response_200_286:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_286_data"
          description: Configuration cluster signatures and users for each server.
          example:
            example1.com:
              signature: d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0
              user: root
            example2.com:
              signature: d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d1
              user: root
        metadata:
          $ref: "#/components/schemas/inline_response_200_286_metadata"
    inline_response_200_287:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_287_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_287_metadata"
    inline_response_200_288:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_288_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_288_metadata"
    inline_response_200_289:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_289_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_289_metadata"
    inline_response_200_290:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_290_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_290_metadata"
    inline_response_200_291:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_291_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_291_metadata"
    inline_response_200_292:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_292_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_292_metadata"
    inline_response_200_293:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_293_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_293_metadata"
    inline_response_200_294:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_294_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_294_metadata"
    inline_response_200_295:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_295_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_295_metadata"
    inline_response_200_296:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_296_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_296_metadata"
    inline_response_200_297:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_297_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_297_metadata"
    inline_response_200_298:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_298_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_298_metadata"
    inline_response_200_299:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_299_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_299_metadata"
    inline_response_200_300:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_300_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_300_metadata"
    inline_response_200_301:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_301_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_301_metadata"
    inline_response_200_302:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_302_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_302_metadata"
    inline_response_200_303:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_303_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_303_metadata"
    inline_response_200_304:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_304_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_304_metadata"
    inline_response_200_305:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_305_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_305_metadata"
    inline_response_200_306:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_306_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_306_metadata"
    inline_response_200_307:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_307_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_307_metadata"
    inline_response_200_308:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_308_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_308_metadata"
    inline_response_200_309:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_309_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_309_metadata"
    inline_response_200_310:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_310_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_310_metadata"
    inline_response_200_311:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_311_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_311_metadata"
    inline_response_200_312:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_312_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_312_metadata"
    inline_response_200_313:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_313_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_313_metadata"
    inline_response_200_314:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_314_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_314_metadata"
    inline_response_200_315:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_315_metadata"
    inline_response_200_316:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_316_metadata"
    inline_response_200_317:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_317_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_317_metadata"
    inline_response_200_318:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_318_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_318_metadata"
    inline_response_200_319:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_319_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_319_metadata"
    inline_response_200_320:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_320_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_320_metadata"
    inline_response_200_321:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_321_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_321_metadata"
    MAX_EMAILACCT_QUOTA:
      example: unlimited
      oneOf:
      - type: string
        enum:
        - unlimited
      - maximum: 4294967296
        minimum: 1
        type: integer
    inline_response_200_322:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_322_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_322_metadata"
    BWLIMIT:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
        format: megabytes
      - type: string
        description: The hosting plan allows unlimited bandwidth.
        enum:
        - unlimited
    MAX_DEFER_FAIL_PERCENTAGE_1:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows unlimited email messages.
        enum:
        - unlimited
    MAX_EMAIL_PER_HOUR_1:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows unlimited emails per hour.
        enum:
        - unlimited
    MAX_EMAILACCT_QUOTA_1:
      example: unlimited
      oneOf:
      - minimum: 1
        type: integer
        format: megabytes
      - type: string
        description: The hosting plan allows an unlimited email account quota size.
        enum:
        - unlimited
    MAXADDON:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows unlimited addon domains.
        enum:
        - unlimited
    MAXFTP:
      example: 2
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows for unlimited FTP accounts.
        enum:
        - unlimited
    MAXLST:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows an unlimited number of mailing lists.
        enum:
        - unlimited
    MAXPARK:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows unlimited parked domains.
        enum:
        - unlimited
    MAXPOP:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan's can create unlimited email accounts.
        enum:
        - unlimited
    MAXSQL:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows unlimited SQL databases.
        enum:
        - unlimited
    MAXSUB:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
      - type: string
        description: The hosting plan allows unlimited subdomains.
        enum:
        - unlimited
    QUOTA:
      example: unlimited
      oneOf:
      - minimum: 0
        type: integer
        format: megabytes
      - type: string
        description: The hosting plan has unlimited disk space.
        enum:
        - unlimited
    inline_response_200_323:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_323_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_323_metadata"
    inline_response_200_324:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_324_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_324_metadata"
    BWLIMIT_1:
      example: unlimited
      oneOf:
      - type: string
        enum:
        - unlimited
      - minimum: 0
        type: integer
    mail_node_alias:
      example: mailnode
      oneOf:
      - type: string
        description: A mail node alias.
        example: mailnode
      - type: string
        description: Transfer a user’s mail from an existing mail node to the local
          server.
        enum:
        - .local
    MAX_EMAILACCT_QUOTA_2:
      example: unlimited
      oneOf:
      - type: string
        enum:
        - unlimited
      - maximum: 4294967296
        minimum: 0
        type: integer
    inline_response_200_325:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_325_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_325_metadata"
    inline_response_200_326:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_326_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_326_metadata"
    inline_response_200_327:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_327_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_327_metadata"
    inline_response_200_328:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_328_metadata"
    state:
      anyOf:
      - type: string
        enum:
        - "On"
        - "Off"
      - type: string
        enum:
        - "On"
        - "Off"
        - DetectionOnly
      - type: string
        enum:
        - "On"
        - "Off"
        - RelevantOnly
      - type: string
      - type: integer
    inline_response_200_329:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_329_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_329_metadata"
    inline_response_200_330:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_330_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_330_metadata"
    inline_response_200_331:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_331_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_331_metadata"
    inline_response_200_332:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_332_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_332_metadata"
    inline_response_200_333:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_333_metadata"
    inline_response_200_334:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_334_metadata"
    inline_response_200_335:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_335_metadata"
    inline_response_200_336:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_336_metadata"
    inline_response_200_337:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_337_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_337_metadata"
    inline_response_200_338:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_338_metadata"
    inline_response_200_339:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_339_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_339_metadata"
    inline_response_200_340:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_340_metadata"
    inline_response_200_341:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_341_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_341_metadata"
    inline_response_200_342:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_342_metadata"
    inline_response_200_343:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_343_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_343_metadata"
    inline_response_200_344:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_344_metadata"
    inline_response_200_345:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_345_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_345_metadata"
    inline_response_200_346:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_346_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_346_metadata"
    inline_response_200_347:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_347_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_347_metadata"
    inline_response_200_348:
      type: object
      properties:
        data:
          type: array
          description: An array of objects that contains information about the log
            entry.
          items:
            $ref: "#/components/schemas/inline_response_200_348_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_348_metadata"
    inline_response_200_349:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_349_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_349_metadata"
    inline_response_200_350:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_350_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_350_metadata"
    inline_response_200_351:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_351_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_351_metadata"
    inline_response_200_352:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_352_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_352_metadata"
    inline_response_200_353:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_353_metadata"
    inline_response_200_354:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_354_metadata"
    inline_response_200_355:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_355_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_355_metadata"
    inline_response_200_356:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_356_metadata"
    inline_response_200_357:
      type: object
      properties:
        data:
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_357_metadata"
    inline_response_200_358:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_358_metadata"
    inline_response_200_359:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_359_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_359_metadata"
    inline_response_200_360:
      type: object
      properties:
        data: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_360_metadata"
    inline_response_200_361:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_361_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_361_metadata"
    inline_response_200_362:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_362_metadata"
    inline_response_200_363:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_363_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_363_metadata"
    inline_response_200_364:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_364_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_364_metadata"
    inline_response_200_365:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_365_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_365_metadata"
    inline_response_200_366:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_366_metadata"
    inline_response_200_367:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_367_metadata"
    inline_response_200_368:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_368_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_368_metadata"
    inline_response_200_369:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_369_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_368_metadata"
    inline_response_200_370:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_370_metadata"
    inline_response_200_371:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_371_metadata"
    inline_response_200_372:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_372_metadata"
    inline_response_200_373:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_373_metadata"
    inline_response_200_374:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_374_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_374_metadata"
    inline_response_200_375:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_375_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_375_metadata"
    inline_response_200_376:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_376_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_376_metadata"
    inline_response_200_377:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_377_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_377_metadata"
    inline_response_200_378:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_378_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_378_metadata"
    inline_response_200_379:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_379_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_379_metadata"
    inline_response_200_380:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_380_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_380_metadata"
    inline_response_200_381:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_381_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_381_metadata"
    inline_response_200_382:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_382_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_382_metadata"
    inline_response_200_383:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_383_metadata"
    inline_response_200_384:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_384_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_384_metadata"
    inline_response_200_385:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_385_metadata"
    personalization_get_body:
      type: object
      properties:
        names:
          maxLength: 2048
          type: array
          description: |-
            A list of NVData keys stored on the server.

            **Note:**

            If you did **not** set a value for the requested keys, the system returns
            a null value.
          nullable: true
          example:
          - milk
          - coffee
          items:
            type: string
        store:
          maxLength: 128
          type: string
          description: The name under which the values are stored.
          example: beverages
    inline_response_200_386:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_386_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_386_metadata"
    personalization_set_body:
      required:
      - api.version
      - personalization
      type: object
      properties:
        api.version:
          type: integer
          description: The WHM API version number
          enum:
          - 1
        personalization:
          type: object
          description: An object you want to store.
        store:
          maxLength: 128
          type: string
          description: The name under which the values will be stored.
          example: beverages
      example:
        api.version: 1
        personalization:
          coffee: hot
          milk: cold
        store: beverages
    inline_response_200_387:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_387_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_387_metadata"
    php_fpm_config_get_body:
      type: object
      properties:
        domain:
          type: string
          description: |-
            A blank value or domain name whose PHP-FPM configuration you wish to retrieve.

            * A valid domain that resides on the local server — Retrieves the domain's PHP-FPM configuration information.
            * A blank value — Retrieves the system's PHP-FPM information.
          example: example.com
          default: ""
    inline_response_200_388:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_388_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_388_metadata"
    php_fpm_config_set_config:
      required:
      - base_flag_name
      - trinary_admin_value
      - value
      type: object
      properties:
        base_flag_name:
          type: string
          description: |-
            A PHP INI directive or PHP-FPM pool option name.

            **PHP INI directives**

            * `allow_url_fopen` - The PHP configuration treats URLs as files.
            * `disable_functions` - Lists the functions that the system will disable.
            * `doc_root` - The PHP pages' document root.
            * `error_log` - The error log file.
            * `error_reporting` - The errors that the system reports on.
            * `log_errors` - Whether the system will log errors.
            * `short_open_tag` - Whether the system recognizes code between the <? and ?> tags as a PHP source.

            **Pool options**

            * `pm_max_children` - The maximum number of process pools that the PHP-FPM Master Process will generate to handle requests.
            * `pm_max_requests` - The maximum number of requests that the process pools can receive.
            * `pm_process_idle_timeout` - The amount of time, in seconds, that a pool process will wait for a request.
        trinary_admin_value:
          type: integer
          description: |-
            Whether the PHP value is a PHP INI directive value (`php_value`), a PHP INI ADMIN value (`php_admin_value`), or a PHP-FPM pool option (`pm_*`).

            * `0` - A PHP-FPM-specific value (pool options).
            * `1` - A PHP INI ADMIN directive. A cPanel account user **cannot** override this directive.
            * `2` - A PHP INI directive. A cPanel account user can override this directive.
          example: 0
          enum:
          - 0
          - 1
          - 2
        value:
          type: string
          description: An argument value for `base_flag_name` parameter.
    php_fpm_config_set_body:
      required:
      - config
      type: object
      properties:
        config:
          type: array
          description: An array of objects containing the PHP-FPM configuration values
            to validate or update.
          items:
            $ref: "#/components/schemas/php_fpm_config_set_config"
        domain:
          type: string
          description: |-
            A blank value or domain name whose PHP-FPM configuration you wish
            to set.
          default: ""
        validate_only:
          type: boolean
          description: |-
            Whether the function request is for validation or to update the settings.
            * `true` - Only validate the configuration.
            * `false` - Validate and update the configuration.
          default: false
      example:
        config:
        - base_flag_name: error_reporting
          trinary_admin_value: 1
          value: E_ALL & ~E_NOTICE
        - base_flag_name: pm_max_children
          trinary_admin_value: 0
          value: "10"
    inline_response_200_389:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_389_metadata"
    inline_response_200_390:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_390_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_390_metadata"
    inline_response_200_391:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_391_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_391_metadata"
    inline_response_200_392:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_392_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_392_metadata"
    inline_response_200_393:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_393_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_393_metadata"
    inline_response_200_394:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_394_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_394_metadata"
    inline_response_200_395:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_395_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_395_metadata"
    inline_response_200_396:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_396_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_396_metadata"
    inline_response_200_397:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_397_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_397_metadata"
    inline_response_200_398:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_398_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_398_metadata"
    inline_response_200_399:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_399_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_399_metadata"
    inline_response_200_400:
      type: object
      properties:
        data:
          type: object
        metadata:
          $ref: "#/components/schemas/inline_response_200_400_metadata"
    inline_response_200_401:
      type: object
      properties:
        data:
          type: object
          example: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_401_metadata"
    inline_response_200_402:
      type: object
      properties:
        data: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_402_metadata"
    inline_response_200_403:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_403_metadata"
    inline_response_200_404:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_404_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_404_metadata"
    inline_response_200_405:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_405_metadata"
    inline_response_200_406:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_406_metadata"
    inline_response_200_407:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_407_metadata"
    inline_response_200_408:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_408_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_408_metadata"
    inline_response_200_409:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_409_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_409_metadata"
    inline_response_200_410:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_410_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_410_metadata"
    inline_response_200_411:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_411_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_411_metadata"
    inline_response_200_412:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_412_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_412_metadata"
    inline_response_200_413:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_413_metadata"
    inline_response_200_414:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_414_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_414_metadata"
    inline_response_200_415:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_415_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_415_metadata"
    inline_response_200_416:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_416_metadata"
    host_1:
      anyOf:
      - type: string
        description: A valid IP address.
        format: ipv4
        example: 192.168.0.0
      - type: string
        description: A valid domain.
        format: domain
        example: remote.example.com
    inline_response_200_417:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_417_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_417_metadata"
    mysql_host:
      example: 192.168.0.1
      oneOf:
      - type: string
        format: ipv4
      - type: string
        format: hostname
    inline_response_200_418:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_418_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_418_metadata"
    host_2:
      example: 192.168.0.1
      oneOf:
      - type: string
        format: ipv4
      - type: string
        format: hostname
    inline_response_200_419:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_419_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_419_metadata"
    inline_response_200_420:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_420_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_420_metadata"
    inline_response_200_421:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_421_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_421_metadata"
    inline_response_200_422:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_422_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_422_metadata"
    inline_response_200_423:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_423_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_423_metadata"
    inline_response_200_424:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_424_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_424_metadata"
    mysql_host_1:
      example: 192.168.0.1
      oneOf:
      - type: string
        format: ipv4
      - type: string
        format: hostname
    inline_response_200_425:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_425_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_425_metadata"
    inline_response_200_426:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_426_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_426_metadata"
    inline_response_200_427:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_427_metadata"
    inline_response_200_428:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_428_metadata"
    inline_response_200_429:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_429_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_429_metadata"
    inline_response_200_430:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_430_metadata"
    inline_response_200_431:
      type: object
      properties:
        data: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_431_metadata"
    inline_response_200_432:
      type: object
      properties:
        data: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_432_metadata"
    inline_response_200_433:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_433_metadata"
    inline_response_200_434:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_434_metadata"
    inline_response_200_435:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_435_metadata"
    inline_response_200_436:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_436_metadata"
    inline_response_200_437:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_437_metadata"
    inline_response_200_438:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_438_metadata"
    inline_response_200_439:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_439_metadata"
    inline_response_200_440:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_440_metadata"
    inline_response_200_441:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_441_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_441_metadata"
    inline_response_200_442:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_442_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_442_metadata"
    inline_response_200_443:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_443_metadata"
    inline_response_200_444:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_444_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_444_metadata"
    inline_response_200_445:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_445_metadata"
    inline_response_200_446:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_446_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_446_metadata"
    inline_response_200_447:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_447_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_447_metadata"
    inline_response_200_448:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_448_metadata"
    restore_config_from_upload_body:
      required:
      - file
      - module
      type: object
      properties:
        file:
          type: string
          description: |-
            The configuration file data, in `multipart/form-data` format.

            **Note:**

            When you call this function on the command line, you **must** provide the configuration file's filepath. For example, you would use the 'file=@/var/cpanel/cpanel.config' parameter structure to call this function.
          format: binary
          example: !!binary |-
            IyMjIyBOT1RJQ0UgIyMjIwojIEFmdGVyIG1hbnVhbGx5IGVkaXRpbmcgYW55IGNvbmZpZ3VyYXRp
            b24gc2V0dGluZ3MgaW4gdGhpcyBmaWxlLAojIHBsZWFzZSBydW4gJy91c3IvbG9jYWwvY3BhbmVs
            L3NjcmlwdHMvcmVzdGFydHNydl9jcHNydmQnIG9yCiMgJ3NlcnZpY2UgY3BhbmVsIHJlc3RhcnQn
            IHRvIGZ1bGx5IHVwZGF0ZSB5b3VyIHNlcnZlcidzIGNvbmZpZ3VyYXRpb24uClJTPWp1cGl0ZXIK
            VkZJTFRFUkRJUj0vZXRjL3ZmaWx0ZXJzCmFjY2Vzc19sb2c9L3Vzci9sb2NhbC9jcGFuZWwvbG9n
            cy9hY2Nlc3NfbG9nCmFjY291bnRfbG9naW5fYWNjZXNzPW93bmVyX3Jvb3QKYWRtaW51c2VyPWNw
            YW5lbAphbGxvd19kZXByZWNhdGVkX2FjY2Vzc2hhc2g9MAphbGxvd19sb2dpbl9hdXRvY29tcGxl
            dGU9MQphbGxvd19zZXJ2ZXJfaW5mb19zdGF0dXNfZnJvbT0KYWxsb3dfd2Vha19jaGVja3N1bXM9
            MAphbGxvd2Nwc3NsaW5zdGFsbD0xCmFsbG93cGFya2hvc3RuYW1lZG9tYWluc3ViZG9tYWlucz0w
            CmFsbG93cGFya29ub3RoZXJzPTAKYWxsb3dyZW1vdGVkb21haW5zPTAKYWxsb3dyZXNlbGxlcnNo
            b3N0bmFtZWRvbWFpbnN1YmRvbWFpbnM9MAphbGxvd3VucmVnaXN0ZXJlZGRvbWFpbnM9MQphbGxv
            d3dobXBhcmtvbm90aGVycz0wCmFsd2F5c3JlZGlyZWN0dG9zc2w9MQphcGFjaGVfcG9ydD0wLjAu
            MC4wOjgwCmFwYWNoZV9zc2xfcG9ydD0wLjAuMC4wOjQ0MwphcGlfc2hlbGw9MQphdXRvY3JlYXRl
            YWVudHJpZXM9MQphdXRvZGlzY292ZXJfaG9zdD1jcGFuZWxlbWFpbGRpc2NvdmVyeS5jcGFuZWwu
            bmV0CmF1dG9kaXNjb3Zlcl9tYWlsX3NlcnZpY2U9aW1hcAphdXRvZGlzY292ZXJfcHJveHlfc3Vi
            ZG9tYWlucz0wCmF1dG91cGRhdGVfY2VydGlmaWNhdGVfb25faG9zdG5hbWVfbWlzbWF0Y2g9MQph
            d3N0YXRzYnJvd3NlcnVwZGF0ZT0wCmF3c3RhdHNyZXZlcnNlZG5zPTAKYmFzZW5hbWU9Y3BhbmVs
            CmJpbmRfZGVmZXJyZWRfcmVzdGFydF90aW1lPTIKYmxvY2tjb21tb25kb21haW5zPTEKYndjeWNs
            ZT0yCmNnaWhpZGVwYXNzPTEKY2hlY2tfem9uZV9vd25lcj0xCmNoZWNrX3pvbmVfc3ludGF4PTEK
            Y2hrc2VydmRfY2hlY2tfaW50ZXJ2YWw9MzAwCmNoa3NlcnZkX2hhbmdfYWxsb3dlZF9pbnRlcnZh
            bHM9MgpjaGtzZXJ2ZF9wbGFpbnRleHRfbm90aWZ5PTAKY2x1c3Rlcl9hdXRvZGlzYWJsZV90aHJl
            c2hvbGQ9MTAKY2x1c3Rlcl9mYWlsdXJlX25vdGlmaWNhdGlvbnM9MQpjb25zZXJ2ZV9tZW1vcnk9
            MApjb29raWVpcHZhbGlkYXRpb249c3RyaWN0CmNvcmVkdW1wPTAKY3BhZGRvbnNfYWRtaW5lbWFp
            bD0KY3BhZGRvbnNfYXV0b3VwZGF0ZT0xCmNwYWRkb25zX21heF9tb2RlcmF0aW9uX3JlcV9hbGxf
            bW9kPTk5CmNwYWRkb25zX21heF9tb2RlcmF0aW9uX3JlcV9wZXJfbW9kPTk5CmNwYWRkb25zX21v
            ZGVyYXRpb25fcmVxdWVzdD0wCmNwYWRkb25zX25vXzNyZF9wYXJ0eT0wCmNwYWRkb25zX25vX21v
            ZGlmaWVkX2NwYW5lbD0xCmNwYWRkb25zX25vdGlmeV9vd25lcj0xCmNwYWRkb25zX25vdGlmeV9y
            b290PTEKY3BhZGRvbnNfbm90aWZ5X3VzZXJzPUFsbG93IHVzZXJzIHRvIGNob29zZQpjcGFuZWxf
            bG9jYWxlPQpjcHJlZGlyZWN0PU9yaWdpbiBEb21haW4gTmFtZQpjcHJlZGlyZWN0c3NsPVNTTCBD
            ZXJ0aWZpY2F0ZSBOYW1lCmNwc3J2ZC1kb21haW5sb29rdXA9MApjcmVhdGVfYWNjb3VudF9ka2lt
            PTEKY3JlYXRlX2FjY291bnRfc3BmPTEKY3ljbGVfaG91cnM9MjQKZGF0YWJhc2VfcHJlZml4PTEK
            ZGVidWdob29rcz0wCmRlZmF1bHRfYXJjaGl2ZS1sb2dzPTEKZGVmYXVsdF9sb2dpbl90aGVtZT1j
            cGFuZWwKZGVmYXVsdF9wa2dfYndsaW1pdD0xMDQ4NTc2CmRlZmF1bHRfcGtnX21heF9lbWFpbGFj
            Y3RfcXVvdGE9MTAyNApkZWZhdWx0X3BrZ19xdW90YT0xMDI0MApkZWZhdWx0X3JlbW92ZS1vbGQt
            YXJjaGl2ZWQtbG9ncz0xCmRlZmF1bHRtYWlsYWN0aW9uPWxvY2FsdXNlcgpkaXNhYmxlLXBocC1h
            cy1yZXNlbGxlci1zZWN1cml0eT0wCmRpc2FibGVxdW90YWNhY2hlPTAKZGlza191c2FnZV9pbmNs
            dWRlX21haWxtYW49MQpkaXNrX3VzYWdlX2luY2x1ZGVfc3FsZGJzPTEKZGlzcGxheV9jcGFuZWxf
            ZG9jbGlua3M9MApkbnNhZG1pbl9sb2c9MApkbnNhZG1pbl92ZXJib3NlX3N5bmM9MApkbnNhZG1p
            bmFwcApkbnNsb29rdXBvbmNvbm5lY3Q9MApkb2Nyb290PS91c3IvbG9jYWwvY3BhbmVsL2Jhc2UK
            ZG9tYWlub3duZXJfbWFpbF9wYXNzPTAKZG9ybWFudF9zZXJ2aWNlcz1jcGRhdmQsY3BodWxrZCxj
            cHNydmQsZG5zYWRtaW4sc3BhbWQKZHVtcGxvZ3M9MQplbWFpbF9hY2NvdW50X3F1b3RhX2RlZmF1
            bHRfc2VsZWN0ZWQ9dXNlcmRlZmluZWQKZW1haWxfYWNjb3VudF9xdW90YV91c2VyZGVmaW5lZF9k
            ZWZhdWx0X3ZhbHVlPTEwMjQKZW1haWxfb3V0Ym91bmRfc3BhbV9kZXRlY3RfYWN0aW9uPW5vYWN0
            aW9uCmVtYWlsX291dGJvdW5kX3NwYW1fZGV0ZWN0X2VuYWJsZT0xCmVtYWlsX291dGJvdW5kX3Nw
            YW1fZGV0ZWN0X3RocmVzaG9sZD01MDAKZW1haWxfc2VuZF9saW1pdHNfY291bnRfbWFpbG1hbj0w
            CmVtYWlsX3NlbmRfbGltaXRzX2RlZmVyX2N1dG9mZj0xMjUKZW1haWxfc2VuZF9saW1pdHNfbWF4
            X2RlZmVyX2ZhaWxfcGVyY2VudGFnZQplbWFpbF9zZW5kX2xpbWl0c19taW5fZGVmZXJfZmFpbF90
            b190cmlnZ2VyX3Byb3RlY3Rpb249NQplbWFpbGFyY2hpdmU9MAplbWFpbHBhc3N3b3Jkcz0wCmVt
            YWlsc3BlcmRheW5vdGlmeQplbWFpbHVzZXJzX2Rpc2t1c2FnZV9jcml0aWNhbF9jb250YWN0X2Fk
            bWluPTEKZW1haWx1c2Vyc19kaXNrdXNhZ2VfY3JpdGljYWxfcGVyY2VudD05MC4wMDAwCmVtYWls
            dXNlcnNfZGlza3VzYWdlX2Z1bGxfY29udGFjdF9hZG1pbj0xCmVtYWlsdXNlcnNfZGlza3VzYWdl
            X2Z1bGxfcGVyY2VudD05OC4wMDAwCmVtYWlsdXNlcnNfZGlza3VzYWdlX3dhcm5fY29udGFjdF9h
            ZG1pbj0wCmVtYWlsdXNlcnNfZGlza3VzYWdlX3dhcm5fcGVyY2VudD04MC4wMDAwCmVtYWlsdXNl
            cnNfbWFpbGJveF9jcml0aWNhbF9wZXJjZW50PTkwLjAwMDAKZW1haWx1c2Vyc19tYWlsYm94X2Z1
            bGxfcGVyY2VudD05OC4wMDAwCmVtYWlsdXNlcnNfbWFpbGJveF93YXJuX3BlcmNlbnQ9ODAuMDAw
            MAplbWFpbHVzZXJzYmFuZHdpZHRoZXhjZWVkPTAKZW1haWx1c2Vyc2JhbmR3aWR0aGV4Y2VlZDcw
            PTAKZW1haWx1c2Vyc2JhbmR3aWR0aGV4Y2VlZDc1PTAKZW1haWx1c2Vyc2JhbmR3aWR0aGV4Y2Vl
            ZDgwPTEKZW1haWx1c2Vyc2JhbmR3aWR0aGV4Y2VlZDg1PTAKZW1haWx1c2Vyc2JhbmR3aWR0aGV4
            Y2VlZDkwPTAKZW1haWx1c2Vyc2JhbmR3aWR0aGV4Y2VlZDk1PTAKZW1haWx1c2Vyc2JhbmR3aWR0
            aGV4Y2VlZDk3PTAKZW1haWx1c2Vyc2JhbmR3aWR0aGV4Y2VlZDk4PTAKZW1haWx1c2Vyc2JhbmR3
            aWR0aGV4Y2VlZDk5PTAKZW1wdHlfdHJhc2hfZGF5cz1kaXNhYmxlZAplbmFibGVfcGlwZWRfbG9n
            cz0xCmVuYWJsZWNvbXBpbGVyb3B0aW1pemF0aW9ucz0wCmVuYWJsZWZpbGVwcm90ZWN0PTEKZW5n
            aW5lPWNwYW5lbAplbmdpbmVwbD1jcGFuZWwucGwKZW5naW5lcm9vdD0vdXNyL2xvY2FsL2NwYW5l
            bApleGltLXJldHJ5dGltZT0xNQpleGltX3JldGVudGlvbl9kYXlzPTEwCmV4aW1tYWlsdHJhcD0x
            CmV4dHJhY3B1cz0wCmZpbGVfdXBsb2FkX21heF9ieXRlcwpmaWxlX3VwbG9hZF9tdXN0X2xlYXZl
            X2J5dGVzPTUKZmlsZV91c2FnZT0wCmZ0cHF1b3RhY2hlY2tfZXhwaXJlX3RpbWU9MzAKZnRwc2Vy
            dmVyPXB1cmUtZnRwZApnemlwX2NvbXByZXNzaW9uX2xldmVsPTYKZ3ppcF9waWd6X2Jsb2NrX3Np
            emU9NDA5NgpnemlwX3BpZ3pfcHJvY2Vzc2VzPTEKaHRhY2Nlc3NfY2hlY2tfcmVjdXJzZT0yCmh0
            dHBkX2RlZmVycmVkX3Jlc3RhcnRfdGltZT0wCmludml0ZV9zdWI9MQppb25pY2VfYmFuZHdpZHRo
            X3Byb2Nlc3Npbmc9Ngppb25pY2VfY3BiYWNrdXA9Ngppb25pY2VfZG92ZWNvdF9tYWludGVuYW5j
            ZT03CmlvbmljZV9lbWFpbF9hcmNoaXZlX21haW50ZW5hbmNlPTcKaW9uaWNlX2Z0cHF1b3RhY2hl
            Y2s9Ngppb25pY2VfbG9nX3Byb2Nlc3Npbmc9Nwppb25pY2VfcXVvdGFjaGVjaz02CmlvbmljZV91
            c2VyYmFja3VwPTcKaW9uaWNlX3VzZXJwcm9jPTYKaXB2Nl9jb250cm9sPTAKaXB2Nl9saXN0ZW49
            MApqYWlsYXBhY2hlPTAKamFpbGRlZmF1bHRzaGVsbD0wCmphaWxtb3VudGJpbnN1aWQ9MApqYWls
            bW91bnR1c3JiaW5zdWlkPTAKamFpbHByb2Ntb2RlPW1vdW50X3Byb2NfamFpbGVkX2ZhbGxiYWNr
            X2Z1bGwKa2VlcGZ0cGxvZ3M9MAprZWVwbG9ncz0wCmtlZXBzdGF0c2xvZz0wCmxvYWR0aHJlc2hv
            bGQKbG9jYWxfbmFtZXNlcnZlcl90eXBlPWJpbmQKbG9nX3N1Y2Nlc3NmdWxfbG9naW5zPTAKbG9n
            Y2htb2Q9MDY0MApsb2dvdXRfcmVkaXJlY3RfdXJsPQptYWlsYm94X3N0b3JhZ2VfZm9ybWF0PW1h
            aWxkaXIKbWFpbHNlcnZlcj1kb3ZlY290Cm1haW50ZW5hbmNlX3JwbV92ZXJzaW9uX2NoZWNrPTEK
            bWFpbnRlbmFuY2VfcnBtX3ZlcnNpb25fZGlnZXN0X2NoZWNrPTEKbWF4Y3BzcnZkY29ubmVjdGlv
            bnM9MjAwCm1heGVtYWlsc3BlcmhvdXIKbWF4bWVtPTc2OAptaW5fdGltZV9iZXR3ZWVuX2FwYWNo
            ZV9ncmFjZWZ1bF9yZXN0YXJ0cz0xMAptaW5wd3N0cmVuZ3RoPTAKbW9kc2VjX2tlZXBfaGl0cz03
            Cm15Y25mX2F1dG9fYWRqdXN0X2lubm9kYl9idWZmZXJfcG9vbF9zaXplPTAKbXljbmZfYXV0b19h
            ZGp1c3RfbWF4YWxsb3dlZHBhY2tldD0xCm15Y25mX2F1dG9fYWRqdXN0X29wZW5maWxlc19saW1p
            dD0xCm15bmFtZT1jcGFuZWxkCm15c3FsLWhvc3Q9bG9jYWxob3N0Cm15c3FsLXZlcnNpb249NS41
            Cm15c3FsZGVidWc9MApub2JvZHlzcGFtPTEKbm9jcGJhY2t1cGxvZ3M9MApub3NlbmRsYW5ndXBk
            YXRlcz0wCm5vdGlmeV9leHBpcmluZ19jZXJ0aWZpY2F0ZXM9MQpudW1hY2N0bGlzdD0zMApvdmVy
            d3JpdGVjdXN0b21wcm94eXN1YmRvbWFpbnM9MApvdmVyd3JpdGVjdXN0b21zcnZyZWNvcmRzPTAK
            cGVybWl0X2FwcGNvbmZpZ19lbnRyaWVzX3dpdGhvdXRfYWNscz0wCnBlcm1pdF9hcHBjb25maWdf
            ZW50cmllc193aXRob3V0X2ZlYXR1cmVzPTAKcGVybWl0X3VucmVnaXN0ZXJlZF9hcHBzX2FzX3Jl
            c2VsbGVyPTAKcGVybWl0X3VucmVnaXN0ZXJlZF9hcHBzX2FzX3Jvb3Q9MApwaHBfbWF4X2V4ZWN1
            dGlvbl90aW1lPTkwCnBocF9tZW1vcnlfbGltaXQ9MTI4CnBocF9wb3N0X21heF9zaXplPTU1CnBo
            cF9zeXN0ZW1fZGVmYXVsdF92ZXJzaW9uPWVhLXBocDU2CnBocF91cGxvYWRfbWF4X2ZpbGVzaXpl
            PTUwCnBocGxvYWRlcj0KcGhwb3BlbmJhc2VkaXJob21lPTAKcG1hX2Rpc2FibGVpcz0wCnBvcGJl
            Zm9yZXNtdHA9MApwb3BiZWZvcmVzbXRwc2VuZGVycz0wCnBvc3RncmVzZGVidWc9MApwcm9kdWN0
            PWNQYW5lbApwcm94eXN1YmRvbWFpbnM9MQpwcm94eXN1YmRvbWFpbnNmb3JuZXdhY2NvdW50cz0x
            CnByb3h5c3ViZG9tYWluc292ZXJyaWRlPTEKcHVibGljaHRtbHN1YnNvbmx5PTEKcXVlcnlfYXBh
            Y2hlX2Zvcl9ub2JvZHlfc2VuZGVycz0xCnJlZmVycmVyYmxhbmtzYWZldHk9MApyZWZlcnJlcnNh
            ZmV0eT0wCnJlbW90ZXdobXRpbWVvdXQ9MzUKcmVwcXVvdGFfdGltZW91dD02MApyZXF1aXJlc3Ns
            PTAKcmVzZXRwYXNzPTEKcmVzZXRwYXNzX3N1Yj0xCnJvb3Q9L3Vzci9sb2NhbC9jcGFuZWwKcm90
            YXRlbG9nc19zaXplX3RocmVzaGhvbGRfaW5fbWVnYWJ5dGVzPTMwMApyb3VuZGN1YmVfZGI9c3Fs
            aXRlCnJwbXVwX2FsbG93X2tlcm5lbD0wCnNlbGZzaWduZWRfZ2VuZXJhdGlvbl9mb3JfYmVzdGF2
            YWlsYWJsZV9zc2xfaW5zdGFsbD0xCnNlbmRfZXJyb3JfcmVwb3J0cz0xCnNlbmRfc2VydmVyX2Nv
            bmZpZ3VyYXRpb249MQpzZW5kX3NlcnZlcl91c2FnZT0xCnNlcnZlcl9sb2NhbGU9ZW4Kc2hvd19y
            ZWJvb3RfYmFubmVyPTEKc2hvd3dobWJ3dXNhZ2Vpbm1lZ3M9MApzaWduYXR1cmVfdmFsaWRhdGlv
            bj1SZWxlYXNlIGFuZCBEZXZlbG9wbWVudCBLZXlyaW5ncwpza2lwX2Noa3NlcnZkX3JlY292ZXJ5
            X25vdGlmeT0wCnNraXBhbmFsb2c9MApza2lwYXBhY2hlY2xpZW50c29wdGltaXplcj0wCnNraXBh
            d3N0YXRzPTAKc2tpcGJveGNoZWNrPTEKc2tpcGJveHRyYXBwZXI9MApza2lwYndsaW1pdGNoZWNr
            PTAKc2tpcGNoa3NlcnZkPTAKc2tpcGNwYmFuZHdkPTAKc2tpcGRpc2tjaGVjaz0wCnNraXBkaXNr
            dXNhZ2U9MApza2lwZXhpbXN0YXRzPTAKc2tpcGh0dHBhdXRoPTEKc2tpcGphaWxtYW5hZ2VyPTAK
            c2tpcG1haWxhdXRob3B0aW1pemVyPTAKc2tpcG1haWxtYW49MApza2lwbW9kc2VjbG9nPTAKc2tp
            cG5vdGlmeWFjY3RiYWNrdXBmYWlsdXJlPTAKc2tpcG9vbWNoZWNrPTAKc2tpcHBhcmVudGNoZWNr
            PTEKc2tpcHJlY2VudGF1dGhlZG1haWxpcHRyYWNrZXI9MApza2lwcm91bmRjdWJlPTAKc2tpcHNw
            YW1hc3Nhc3Npbj0wCnNraXBzcGFtYm94PTEKc2tpcHNxbWFpbD0wCnNraXB0YWlsd2F0Y2hkPTAK
            c2tpcHdlYmFsaXplcj0wCnNtdHBtYWlsZ2lkb25seT0xCnNzaF9ob3N0X2tleV9jaGVja2luZz0w
            CnN0YXRzX2xvZz0vdXNyL2xvY2FsL2NwYW5lbC9sb2dzL3N0YXRzX2xvZwpzdGF0c2xvZ2xldmVs
            PTEKc3RhdHRocmVzaGhvbGQ9MjU2CnN5c3RlbV9kaXNrdXNhZ2VfY3JpdGljYWxfcGVyY2VudD05
            Mi41NTAwCnN5c3RlbV9kaXNrdXNhZ2Vfd2Fybl9wZXJjZW50PTgyLjU1MDAKdGNwX2NoZWNrX2Zh
            aWx1cmVfdGhyZXNob2xkPTMKdHJhbnNmZXJzX3RpbWVvdXQ9MTgwMAp0d2Vha191bnNldF92YXJz
            PQp1cGNwX2xvZ19yZXRlbnRpb25fZGF5cz00NQp1cGRhdGVfbG9nX2FuYWx5c2lzX3JldGVudGlv
            bl9sZW5ndGg9OTAKdXNlX2FwYWNoZV9tZDVfZm9yX2h0YWNjZXNzPTEKdXNlX2luZm9ybWF0aW9u
            X3NjaGVtYT0xCnVzZWF1dGhuYW1lc2VydmVycz0xCnVzZW1haWxmb3JtYWlsbWFudXJsPTAKdXNl
            bXlzcWxvbGRwYXNzPTAKdXNlcmRpcnByb3RlY3Q9MQp2ZXJpZnlfM3JkcGFydHlfY3BhZGRvbnM9
            MAp2ZXJzaW9uPTMuNAp4ZnJhbWVjcHNydmQ9MAplbmFibGVfYXBpX2xvZz0w
        module:
          type: string
          description: |-
            The configuration module's name.

            * `Basic` — The [Basic WebHost Manager Setup](https://go.cpanel.net/whmdocsBasicasisWebHostManagerSetup) configuration.
            * `Main` — The [Tweak Settings](https://go.cpanel.net/whmdocsTweakSettings) configuration.

            **Important:**

            This parameter is case-sensitive. You **must** enter the parameter in the correct case format; otherwise, the function will fail.
          example: Main
          enum:
          - Basic
          - Main
    inline_response_200_449:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_449_metadata"
    inline_response_200_450:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_450_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_450_metadata"
    inline_response_200_451:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_451_metadata"
    inline_response_200_452:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_452_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_452_metadata"
    inline_response_200_453:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_453_metadata"
    inline_response_200_454:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_454_metadata"
    inline_response_200_455:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_455_metadata"
    inline_response_200_456:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_456_metadata"
    inline_response_200_457:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_457_metadata"
    inline_response_200_458:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_458_metadata"
    inline_response_200_459:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_459_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_459_metadata"
    inline_response_200_460:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_460_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_460_metadata"
    inline_response_200_461:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_461_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_461_metadata"
    inline_response_200_462:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_462_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_462_metadata"
    inline_response_200_463:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_463_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_463_metadata"
    inline_response_200_464:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_464_metadata"
    inline_response_200_465:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_465_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_465_metadata"
    inline_response_200_466:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_466_metadata"
    inline_response_200_467:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_467_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_467_metadata"
    inline_response_200_468:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_468_metadata"
    save_connected_application_data:
      type: object
      properties:
        jwt:
          type: object
          additionalProperties: {}
          description: The contents of a JSON Web Token used during registration or
            updates.
          example:
            callback_url: https://application-1.com/api/si/servers/registrations/callback
            challenge: ddd13a92-d55e-4818-a960-9776ede6cd74
            email: john.doe@email.example
            exp: 1401912171
            ips:
            - 1.1.1.1
            - 2.2.2.2
            iss: https://application-1.com
            iss_desc: Sample application
            name: John Doe
            redirect_url: https://application-1/redirect
            scope:
            - admin:users
            - admin:resellers
            - admin:domains
            state: xyz
        private_key:
          type: string
          description: "The name of the private key, if any, used by encryption, signing,\
            \ or other security schemes used when communicating with this connected\
            \ application."
          example: FEF6253E6A122532430D
        public_key:
          type: string
          description: "The name of the public key, if any, sent to the connected\
            \ application during registration."
          example: AAF6253E6A1225324305623EE
        token_name:
          type: string
          description: "The name of the API token, if any, sent to the connected application\
            \ to allow that application to make API calls on this server."
          example: Application 1 API Token
      additionalProperties: {}
      description: "Data associated with the connected application. There are predefined\
        \ elements related to specific security scenarios, but additional data may\
        \ be stored here as well."
    save_connected_application_body:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/save_connected_application_data"
        name:
          type: string
          description: The name of the connected application.
          example: application-1
    inline_response_200_469:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_469_metadata"
    inline_response_200_470:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_470_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_470_metadata"
    inline_response_200_471:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_471_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_471_metadata"
    inline_response_200_472:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_472_metadata"
    inline_response_200_473:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_473_metadata"
    inline_response_200_474:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_474_metadata"
    inline_response_200_475:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_475_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_475_metadata"
    inline_response_200_476:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_476_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_476_metadata"
    inline_response_200_477:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_477_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_477_metadata"
    inline_response_200_478:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_478_metadata"
    inline_response_200_479:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_479_metadata"
    inline_response_200_480:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_480_metadata"
    inline_response_200_481:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_481_metadata"
    inline_response_200_482:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_482_metadata"
    inline_response_200_483:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_483_metadata"
    inline_response_200_484:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_484_metadata"
    inline_response_200_485:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_485_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_485_metadata"
    value:
      example: 1
      oneOf:
      - type: string
      - type: integer
    inline_response_200_486:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_486_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_486_metadata"
    inline_response_200_487:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_487_metadata"
    inline_response_200_488:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_488_metadata"
    inline_response_200_489:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_489_metadata"
    inline_response_200_490:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_490_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_490_metadata"
    inline_response_200_491:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_491_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_491_metadata"
    inline_response_200_492:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_492_metadata"
    inline_response_200_493:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_493_metadata"
    inline_response_200_494:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_494_metadata"
    inline_response_200_495:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_495_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_495_metadata"
    inline_response_200_496:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_496_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_496_metadata"
    inline_response_200_497:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_497_metadata"
    inline_response_200_498:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_498_metadata"
    inline_response_200_499:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_499_metadata"
    inline_response_200_500:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_500_metadata"
    inline_response_200_501:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_501_metadata"
    value_1:
      example: "512"
      oneOf:
      - type: string
      - type: integer
    inline_response_200_502:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_502_metadata"
    general:
      anyOf:
      - type: string
        description: A valid hostname.
        format: hostname
        example: hostname.example.com
      - type: string
        description: A valid IP address.
        format: ipv4
        example: 192.0.2.102
    service_group_backend:
      anyOf:
      - type: string
        description: A valid hostname.
        format: hostname
        example: hostname.example.com
      - type: string
        description: A valid IP address.
        format: ipv4
        example: 192.0.2.102
    inline_response_200_503:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_503_metadata"
    inline_response_200_504:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_504_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_504_metadata"
    inline_response_200_505:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_505_metadata"
    inline_response_200_506:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_506_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_506_metadata"
    inline_response_200_507:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_507_metadata"
    inline_response_200_508:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_508_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_508_metadata"
    inline_response_200_509:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_509_metadata"
    inline_response_200_510:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_510_metadata"
    inline_response_200_511:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_511_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_511_metadata"
    inline_response_200_512:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_512_metadata"
    inline_response_200_513:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_513_metadata"
    inline_response_200_514:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_514_metadata"
    inline_response_200_515:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_515_metadata"
    nameserver1:
      example: 192.168.0.20
      oneOf:
      - type: string
        format: ipv4
      - type: string
        format: ipv6
    nameserver2:
      format: ipv4
      example: 192.168.0.21
      oneOf:
      - type: string
        format: ipv4
      - type: string
        format: ipv6
    nameserver3:
      example: 2001:4860:4860::8888
      oneOf:
      - type: string
        format: ipv4
      - type: string
        format: ipv6
      default: ""
    inline_response_200_516:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_516_metadata"
    inline_response_200_517:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_517_metadata"
    inline_response_200_518:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_518_metadata"
    inline_response_200_519:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_519_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_519_metadata"
    inline_response_200_520:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_520_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_520_metadata"
    inline_response_200_521:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_521_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_521_metadata"
    inline_response_200_522:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_522_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_522_metadata"
    inline_response_200_523:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_523_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_523_metadata"
    inline_response_200_524:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_524_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_524_metadata"
    mail_location:
      oneOf:
      - type: string
        enum:
        - .local
        - .existing
      - type: string
        description: The remote cPanel & WHM linked server node's alias.
        example: example-alias
      default: .existing
    inline_response_200_525:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_525_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_525_metadata"
    inline_response_200_526:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_526_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_526_metadata"
    inline_response_200_527:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_527_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_527_metadata"
    inline_response_200_528:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_528_metadata"
    inline_response_200_529:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_529_metadata"
    inline_response_200_530:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_530_metadata"
    inline_response_200_531:
      type: object
      properties:
        details:
          $ref: "#/components/schemas/inline_response_200_531_details"
        metadata:
          $ref: "#/components/schemas/inline_response_200_531_metadata"
        needs_reboot:
          type: integer
          description: |-
            Whether the system requires a reboot.

            * `1` — System requires a reboot.
            * `0` — System does **not** require a reboot.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_532:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_532_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_532_metadata"
    inline_response_200_533:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_533_metadata"
    inline_response_200_534:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_534_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_534_metadata"
    inline_response_200_535:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_535_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_535_metadata"
    inline_response_200_536:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_536_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_536_metadata"
    inline_response_200_537:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_537_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_537_metadata"
    inline_response_200_538:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_538_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_538_metadata"
    inline_response_200_539:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_539_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_539_metadata"
    inline_response_200_540:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_540_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_540_metadata"
    inline_response_200_541:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_541_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_541_metadata"
    inline_response_200_542:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_542_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_542_metadata"
    inline_response_200_543:
      type: object
      properties:
        data:
          type: object
          properties: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_543_metadata"
    inline_response_200_544:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_544_metadata"
    inline_response_200_545:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_545_metadata"
    inline_response_200_546:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_546_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_546_metadata"
    inline_response_200_547:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_547_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_547_metadata"
    inline_response_200_548:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_548_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_548_metadata"
    inline_response_200_549:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_549_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_549_metadata"
    inline_response_200_550:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_550_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_550_metadata"
    inline_response_200_551:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_551_metadata"
    inline_response_200_552:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_552_metadata"
    inline_response_200_553:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_553_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_553_metadata"
    inline_response_200_554:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_554_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_554_metadata"
    inline_response_200_555:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_555_data"
          description: The cPanel user account that the API was called for.
          example:
            example:
              email:
                user@example.com:
                  secret: QLLIU5WTY3UTJGNG
              primary_account:
                secret: QLLIU5WTY3UTJGNG
              team:
                team_user@example:
                  secret: QLLIU5WTY3UTJGNG
        metadata:
          $ref: "#/components/schemas/inline_response_200_555_metadata"
    inline_response_200_556:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_556_data"
          description: The data that the function returns.
          example:
            example:
              is_enabled: 0
              primary_domain: example.com
        metadata:
          $ref: "#/components/schemas/inline_response_200_556_metadata"
    inline_response_200_557:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_557_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_557_metadata"
    inline_response_200_558:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_558_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_558_metadata"
    inline_response_200_559:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_559_metadata"
    inline_response_200_560:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_560_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_560_metadata"
    inline_response_200_561:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_561_metadata"
    inline_response_200_562:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_562_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_562_metadata"
    inline_response_200_563:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_563_metadata"
    inline_response_200_564:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_564_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_564_metadata"
    inline_response_200_565:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_565_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_565_metadata"
    inline_response_200_566:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_566_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_566_metadata"
    inline_response_200_567:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_567_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_567_metadata"
    inline_response_200_568:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_568_metadata"
    inline_response_200_569:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_569_metadata"
    inline_response_200_570:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_570_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_570_metadata"
    inline_response_200_571:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_571_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_571_metadata"
    inline_response_200_572:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_572_metadata"
    inline_response_200_573:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_573_metadata"
    inline_response_200_574:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_574_metadata"
    inline_response_200_575:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_575_metadata"
    inline_response_200_576:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_576_metadata"
    inline_response_200_577:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_577_metadata"
    inline_response_200_578:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_578_metadata"
    inline_response_200_579:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_579_metadata"
    inline_response_200_580:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_580_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_580_metadata"
    inline_response_200_581:
      type: object
      properties:
        data: {}
        metadata:
          $ref: "#/components/schemas/inline_response_200_581_metadata"
    inline_response_200_582:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_582_metadata"
    inline_response_200_583:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_583_metadata"
    inline_response_200_584:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_584_metadata"
    update_sql_config_data:
      type: object
      properties:
        name:
          type: string
        remove:
          type: boolean
        section:
          type: string
        value:
          type: string
      example: "{\"name\":\"max_allowed_packet\",\"section\":\"mysqld\",\"value\"\
        :\"268435456\"}"
    update_sql_config_body:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: Array of objects that contains the requested updates to the
            sql configuration.
          items:
            $ref: "#/components/schemas/update_sql_config_data"
    inline_response_200_585:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_585_metadata"
    CPANEL:
      example: RELEASE
      anyOf:
      - type: string
        enum:
        - STABLE
        - RELEASE
        - CURRENT
        - EDGE
        - LTS
      - type: string
        format: cPanel version
      - type: string
    RPMUP:
      example: daily
      anyOf:
      - type: string
        enum:
        - daily
        - manual
        - never
      - type: string
    SARULESUP:
      example: daily
      anyOf:
      - type: string
        enum:
        - daily
        - manual
        - never
      - type: string
    UPDATES:
      example: daily
      anyOf:
      - type: string
        enum:
        - daily
        - manual
        - never
      - type: string
    inline_response_200_586:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_586_metadata"
    inline_response_200_587:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_587_metadata"
    inline_response_200_588:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_588_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_588_metadata"
    inline_response_200_589:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_589_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_589_metadata"
    inline_response_200_590:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_590_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_590_metadata"
    inline_response_200_591:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_591_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_591_metadata"
    inline_response_200_592:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_592_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_592_metadata"
    inline_response_200_593:
      type: object
      properties:
        data:
          type: object
          description: An object containing a valid or invalid Exim configuration
            information.
          anyOf:
          - type: object
            properties:
              broken_cfg_html:
                type: string
                description: "The line with the broken configuration, in HTML format."
                format: HTML
                example: |
                  RAW_CONFIGURATION_TEXT
              broken_cfg_text:
                type: string
                description: The line that includes the broken configuration.
                format: HTML
                example: |
                  ==>RAW_CONFIGURATION_TEXT<==
              error_line:
                minimum: 1
                type: integer
                description: The first line in the Exim configuration file that contains
                  an error.
              error_msg:
                type: string
                description: Any error messages that the validation script encountered.
            description: The function returns this object for an invalid Exim configuration.
          - type: object
            properties:
              exim_caps:
                properties:
                  add_header:
                    type: integer
                    description: |-
                      Whether the server supports the `add_header` directive.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  archive:
                    type: integer
                    description: |-
                      Whether the server supports system-wide archives.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  boxtrapper:
                    type: integer
                    description: |-
                      Whether the server supports BoxTrapper functionality.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  content_scanning:
                    type: integer
                    description: |-
                      Whether the server supports content scanning functionality.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  directives:
                    type: object
                    additionalProperties:
                      type: integer
                      description: |-
                        Whether the directive is active or inactive on the server.

                        * `1` — Active.
                        * `0` — Inactive.

                        **Note:**

                        The return's name is the directive's name.
                      enum:
                      - 1
                      - 0
                    description: A list of individual Exim directives.
                  dkim:
                    type: integer
                    description: |-
                      Whether the server supports DomainKeys Identified Mail (DKIM).

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  domainkeys:
                    type: integer
                    description: |-
                      Whether the server supports DKIM.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  dovecot:
                    type: integer
                    description: |-
                      Whether the server supports Dovecot authentication.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  exiscan:
                    type: integer
                    description: |-
                      Whether the server contains exiscan, which scans messages from
                      authenticated senders for malware.

                      * `1` — Contains exiscan.
                      * `0` — Does **not** contain exiscan.
                    enum:
                    - 1
                    - 0
                  force_command:
                    type: integer
                    description: |-
                      Whether the server supports the `force_command` directive for
                      pipe transports.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  maildir:
                    type: integer
                    description: |-
                      Whether the server supports the Maildir format.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  mailman:
                    type: integer
                    description: |-
                      Whether the server supports the Mailman feature.

                      * `1` — Supports.
                      *  `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  no_forward_outbound_spam:
                    type: integer
                    description: |-
                      Whether the server will refuse to forward outbound spam if it
                      matches the Apache SpamAssassin™ internal `spam_score` setting.

                      * `1` — Server refuses to forward.
                      * `0` — Server allows.
                    enum:
                    - 1
                    - 0
                  no_forward_outbound_spam_over_int:
                    type: integer
                    description: |-
                      Whether the server will refuse to forward outbound spam if it
                      matches a defined Apache SpamAssassin score.

                      * `1` — Server refuses to forward.
                      * `0` — Server allows.
                    enum:
                    - 1
                    - 0
                  notquit:
                    type: integer
                    description: |-
                      Whether the server supports the `acl_smtp_notquit` ACL, which runs
                      when an SMTP session ends without a `QUIT`.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  passwd:
                    type: integer
                    description: |-
                      Whether the server supports password authentication.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  rewrite_from_all:
                    type: integer
                    description: |-
                      Whether the server supports the rewrite function on all incoming
                      mail.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  rewrite_from_remote:
                    type: integer
                    description: |-
                      Whether the server can rewrite the outgoing `From:` header to the
                      actual sender.

                      * `1` — Can rewrite.
                      * `0` — **Cannot** rewrite.
                    enum:
                    - 1
                    - 0
                  spf:
                    type: integer
                    description: |-
                      Whether the server supports SPF checks.

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                  srs:
                    type: integer
                    description: |-
                      Whether the server supports the Sender Rewriting Scheme (SRS).

                      * `1` — Supports.
                      * `0` — Does **not** support.
                    enum:
                    - 1
                    - 0
                description: The function returns this object for a valid Exim configuration.
        metadata:
          $ref: "#/components/schemas/inline_response_200_593_metadata"
    inline_response_200_594:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_594_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_594_metadata"
    inline_response_200_595:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_595_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_595_metadata"
    inline_response_200_596:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_596_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_596_metadata"
    inline_response_200_597:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_597_metadata"
    inline_response_200_598:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/inline_response_200_598_metadata"
    inline_response_200_599:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_475_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_599_metadata"
    inline_response_200_600:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_600_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_600_metadata"
    inline_response_200_601:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_601_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_601_metadata"
    inline_response_200_602:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_602_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_602_metadata"
    inline_response_200_603:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_603_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_603_metadata"
    inline_response_200_604:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_604_data"
        metadata:
          $ref: "#/components/schemas/inline_response_200_604_metadata"
    MarketProviderMetaData_display_name:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's display name.
    MarketProviderMetaData_enabled:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about whether the product is enabled in the
        Market.
    MarketProviderMetaData_icon:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's icon file.
    MarketProviderMetaData_icon_mime_type:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the icon's mime type.
    MarketProviderMetaData_minimum_server_price:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the minimum server price for the certificate.
    MarketProviderMetaData_price:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's price.
    MarketProviderMetaData_price_unit:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's price per unit.
    MarketProviderMetaData_product_description:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's description.
    MarketProviderMetaData_product_group:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's group label.
    MarketProviderMetaData_product_id:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's ID.
    MarketProviderMetaData_recommended:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about whether the product is recommended.
    SSLCertificateMarketItem_x_identity_verification:
      type: object
      properties:
        description:
          type: string
          description: A sentence that provides more information about the SSL provider.
          example: This is a company name
        is_optional:
          type: integer
          description: |-
            Whether the value is optional.
            * `1` - Optional.
            * Any object that does **not** contain a `1` value indicates that the SSL certificate provider requires identity verification.
          example: 1
          enum:
          - 1
        label:
          type: string
          description: A phrase that serves as a label for the value.
          example: Company Name
        name:
          type: string
          description: The name by which to submit this value.
          example: duns_number
        options:
          type: array
          description: |-
            An array of two member arrays.

            **Note:**

            This return **only** appears if the type return contains the `choose_one` value.
          example:
          - - b
            - Incorporated Business
          - - d
            - Government Entity
        pattern:
          type: string
          description: |-
            A regular expression pattern that clients should use to verify the relevant value prior to order submission.

            **Note:**

            This return only appears if the `type` return contains the `text` value.
          format: regex
          example: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
        type:
          type: string
          description: |-
            A description of the value.
            * `text` - A general text statement.
            * `email` - An email address.
            * `tel` - A telephone number.
            * `country_code` - A country code ID.
            * `choose_one` - The user must select one of the provided options.
            * A date, in `yyyy-MM-dd` format.
          oneOf:
          - type: string
            example: choose_one
            enum:
            - test
            - email
            - tel
            - country_code
            - choose_one
          - type: string
            format: ISO-8601 Date
            example: 2020-08-15T00:00:00.000Z
    SSLMarketProviderMetaData_x_identity_verification:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Defines a schema for identity verification information for OV and
        EV certificates.
    SSLMarketProviderMetaData_x_max_http_redirects:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about the maximum number of HTTP redirections that
        the provider allows during a Domain Control Validation (DCV) check of the
        domain or domains in the certificate.
    SSLMarketProviderMetaData_x_price_per_domain:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's price per domain.
    SSLMarketProviderMetaData_x_price_per_domain_maximum:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about the maximum allowable price per domain for the
        certificate.
    SSLMarketProviderMetaData_x_price_per_domain_minimum:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about the minimum allowable price per domain for the
        certificate.
    SSLMarketProviderMetaData_x_price_per_wildcard_domain:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about the price per wildcard certificate.
    SSLMarketProviderMetaData_x_price_per_wildcard_domain_maximum:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about the maximum allowable price per wildcard certificate.
    SSLMarketProviderMetaData_x_price_per_wildcard_domain_minimum:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about the minimum allowable price per wildcard certificate.
    SSLMarketProviderMetaData_x_ssl_per_domain_pricing:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Metadata information about the product's pricing per domain.
    SSLMarketProviderMetaData_x_supports_dns_dcv:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about whether the product supports DNS-based DCV.
    SSLMarketProviderMetaData_x_warn_after:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about a length of time after which the cPanel interface
        will warn the user that there may be a problem with the order.
    SSLMarketProviderMetaData_x_wildcard_parent_domain_free:
      type: object
      properties:
        read_only:
          type: number
          description: |-
            Whether the attribute is read-only.
            * `1` — The attribute is read-only.
            * `0` — System administrators can edit the attribute.
          example: 1
          enum:
          - 0
          - 1
      description: Information about whether the provider includes the price of the
        parent domain in the price of a wildcard certificate.
    restorePoint_options:
      type: object
      properties:
        give_ip:
          type: integer
          description: |-
            Whether the restoration process will assign a dedicated IP address
            to the account.

            * `1` — Will assign.
            * `0` — Will **not** assign.
          example: 1
          enum:
          - 1
          - 0
        mail_config:
          type: integer
          description: |-
            Whether the restoration process will restore the account's email
            configuration.

            * `1` — Will restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 1
          - 0
        mysql:
          type: integer
          description: |-
            Whether the restoration process will restore the account's MySQL®
            databases.

            * `1` — Will restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 1
          - 0
        subdomains:
          type: integer
          description: |-
            Whether the restoration process will restore the account's subdomains.

            * `1` — Will restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_data:
      type: object
      properties:
        html:
          type: string
          description: The HTML and Template Toolkit soure code for the hosting plan's
            extensions' templates.
          example: <div class="fatBorder" id="dog_Extension"> <fieldset class="groupEditor">
            <div class="propertyGroup"> <h3>Dog Settings</h3> <div class="propertyEditor">
            <div class="propertyLabel">Dog Species</div> <div class="propertyValue"><input
            id="dog_species" type="text" name="dog_species" value="dalmatian"></div>
            </div> <div class="propertyEditor"> <div class="propertyLabel">Tail Length</div>
            <div class="propertyValue"> <input type="radio" id="dogTailLengthTiny"
            name="dog_tail_length" value="tiny"> <label for="dogTailLengthTiny">Tiny</label><br>
            <input type="radio" id="dogTailLengthNormal" name="dog_tail_length" value="normal">
            <label for="dogTailLengthNormal">Normal</label><br> <input type="radio"
            id="dogTailLengthLong" name="dog_tail_length" value="long"> <label for="dogTailLengthLong">Long</label>
            </div> </div> <div class="propertyEditor"> <div class="propertyLabel"><label
            for="dog_spots">Has Spots</label></div> <div class="propertyValue"> <input
            id="dog_spots" type="checkbox" name="dog_spots" value="y" checked="checked">
            </div> </div> </div> </fieldset> </div>
    inline_response_200_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: _getpkgextensionform
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_1_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: abort_transfer_session
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_2_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: accept_eula
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_3_data:
      type: object
      properties:
        accesshash:
          type: string
          description: The user's access hash.
          example: cb523f89e9a31123fde7c6f93b580ac05bf00a2804d4febe6667ab9917a14baa1c4914da209bf55c862999ea51983a117a4d2f238140200b1e5b270b94b2c52492747e5ebfdeddb8abf4e1b0c428c6c68b701b48e13dbe39da49450e7a8e5422e18ab3b6290b5b6556bd82ee21d9c1103e7a51d1e94f2ac0c4dcc6a10954b8634c6db16a541660c3c89e10254f05583f4167adfcff7781090ea930647b46e5b981f3e16c7723ca4e12dc4b54a778dc66a28df73632a0d3a8e01e207b9fd6b555b72936a903af014f30061d712d736176a87fb5333c5b90cf0bb4f3c6735f2b45929ac79fb1184045a5f4c20bfcc553f5ab760eec077c0d6096e54d02724201281e441e7b0f642370a63f61c68766e224c8510bc32b0316780660c34352cbfeeccfee9d4f02e20ba7b664d3e84e9419ca386c41df07613f8af252aba8626a8b54796bbe616f41af1e6f11a3d0327f7608d23666fca64e6ebe899f7479a5fb0aea008b1e7a41890c9c58037682450febf91b7aa1c080d31d834b0ae466f8533df838ab271b26a7fb7de96402ad4a818d6b786af92c38414d2ef6c88deb7c685a1e60c3cbcfbf20cf6d2a00dd50d2be9bc1824d91284ec6842dd7db42564dfc3ecb75c1a9bc775c45c5f08784b9e2885c2d
    inline_response_200_3_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: accesshash
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_4_data_child_nodes:
      properties:
        alias:
          type: string
          description: The alias of the child node
          example: nodealias
        workload:
          type: string
          description: The workload delegated to the child node
          example: Mail
          enum:
          - Mail
    inline_response_200_4_data_acct:
      type: object
      properties:
        backup:
          type: integer
          description: |-
            Whether backups are enabled.
            * `1` Enabled.
            * `0` Disabled.
          example: 0
          enum:
          - 0
          - 1
        child_nodes:
          type: array
          description: An array that contains the the workload and alias values for
            each of the child nodes.
          items:
            $ref: "#/components/schemas/inline_response_200_4_data_child_nodes"
        disklimit:
          description: |-
            The account's disk space quota.
            * `unlimited`
            * A maximum amount of disk space, in mebibyte (MiB).
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        diskused:
          type: string
          description: "The account's current disk space usage. An integer that represents\
            \ an amount of disk space, in mebibyte (MiB). For example, 14M represents\
            \ 14 MiB of disk space."
          format: mebibyte-short
          example: 14M
        domain:
          type: string
          description: The account's main domain. A valid domain name on the account.
          format: fqdn
          example: example.com
        email:
          type: string
          description: The account's contact email address. A valid email address.
          format: email
          example: username@example.com
        inodeslimit:
          description: |-
            The limit on the number of files that the account owns.
            * `unlimited`
            * A maximum amount of files as an integer.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        inodesused:
          minimum: 0
          type: integer
          description: The number of files that the account owns.
          example: 1
        ip:
          type: string
          description: The account's main domain's IP address.
          format: ipv4
          example: 192.168.0.128
        ipv6:
          type: array
          description: The account's main domain's IPv6 addresses.
          items:
            type: string
            format: ipv6
            example: 0101:ca75:0101:ca75:0101:ca75:0101:ca77
        is_locked:
          type: integer
          description: |-
            Whether the account is currently locked.
            * `1` Locked.
            * `0` Not locked.
          example: 0
          enum:
          - 0
          - 1
        legacy_backup:
          type: integer
          description: |-
            Whether legacy backups are enabled.
            * `1` Enabled.
            * `0` Disabled.
          example: 0
          enum:
          - 0
          - 1
        mailbox_format:
          type: string
          description: |-
            The storage format that the account's email mailboxes use.
            * `maildir` The account's mail is stored in `maildir` format.
            * `mbox` The account's mail is stored in `mbox` format.
          format: mailbox_format
          example: maildir
          enum:
          - maildir
          - mbox
        max_defer_fail_percentage:
          description: |-
            The percentage of failed or deferred email messages that the account
            can send per hour before outgoing mail is rate-limited.
            * `unlimited`
            * An integer that represents a percentage of messages.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        max_email_per_hour:
          description: |-
            The maximum number of emails that the account can send in one hour.
            * `unlimited`
            * An integer that represents a number of sent emails.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        max_emailacct_quota:
          description: |-
            The maximum size that the cPanel account can define when it creates an email account.
            * `unlimited`
            * A positive integer that represents the allowable maximum size of an email account, in mebibyte (MiB).
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxaddons:
          description: |-
            The account's maximum number of addon domains.
            * `unlimited`
            * `*unknown*`  The account cannot use any addon domains.
            * An integer that represents a number of addon domains.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxftp:
          description: |-
            The account's maximum number of FTP accounts.
            * `unlimited`
            * An integer that represents a number of FTP accounts.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxlst:
          description: |-
            The account's maximum number of mailing lists.
            * `unlimited`
            * An integer that represents a number of mailing lists.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxparked:
          description: |-
            The account's maximum number of parked domains (aliases).
            * `unlimited`
            * `*unknown*` The account cannot use any parked domains.
            * An integer that represents a number of parked domains.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxpop:
          description: |-
            The account's maximum number of email addresses.
            * `unlimited`
            * An integer that represents a number of email accounts.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxsql:
          description: |-
            The account's maximum number of SQL databases.
            * `unlimited`
            * An integer that represents a number of SQL databases.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxsub:
          description: |-
            The account's maximum number of subdomains.
            * `unlimited`
            * `*unknown*` The account cannot use any subdomains.
            * An integer that represents a number of subdomains.
          example: unlimited
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        min_defer_fail_to_trigger_protection:
          description: |-
            The minimum number of failed or deferred messages that the account can send before
            outgoing mail is subject to rate-limiting.
            * `unlimited`
            * An integer that represents a number of failed or deferred messages.
          example: "5"
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        outgoing_mail_hold:
          type: integer
          description: |-
            Whether to retain outgoing mail in the mail queue for the account's users.
            * `1` Suspend and force failure of outgoing email.
            * `0` Unsuspend outgoing email.
          example: 0
          enum:
          - 0
          - 1
        outgoing_mail_suspended:
          type: integer
          description: |-
            Whether to suspend outgoing email from the account's users and force failure of any of their mail currently in the mail queue.
            * `1` - Suspend and force failure of outgoing email.
            * `0` - Unsuspend outgoing email.

            **Note:**

            If mail for a cPanel user's account is suspended, the system will reject their email before the system puts it in the mail server queue.
          example: 0
          enum:
          - 0
          - 1
        owner:
          type: string
          description: |-
            The account's owner.
            * root
            * A reseller account's username.
          format: username
          example: root
        partition:
          type: string
          description: The partition that contains the account's home directory. The
            name of a partition on the server.
          example: home
        plan:
          type: string
          description: The account's hosting package. The name of a package on the
            server.
          format: plan
          example: packagename
        shell:
          type: string
          description: The account's shell. A shell location on the server.
          format: shell
          example: /bin/bash
        startdate:
          type: string
          description: |-
            The account creation date. The date in YY-Mon-DD HH-mm human-readable format, where:- YY represents the year.
            * `Mon` represents the month.
            * `DD` represents the date.
            * `HH` represents the hour.
            * `mm` represents the minute.
          format: YY-Mon-DD-HH-MM
          example: 13 May 22 16:03
        suspended:
          type: integer
          description: |-
            Whether the account is currently suspended.
            * `1`  Suspended.
            * `0`  Not suspended.
          example: 0
          enum:
          - 0
          - 1
        suspendreason:
          type: string
          description: |-
            The reason for account suspension, if one was provided.
            * `null` The account is not currently suspended.
            * A blank value, if the suspender did not provide a reason.
            * A message that explains the suspension.
          nullable: true
          example: not suspended
        suspendtime:
          type: string
          description: |-
            The time of suspension.
            * `null` The account is not currently suspended.
            * The time at which the account became suspended.
          nullable: true
        temporary:
          type: integer
          description: |-
            Whether the Customer Support Ticket process created this user for temporary access to the system.
            * `1` - Temporary user.
            * `0` - Regular user.
          example: 0
          enum:
          - 0
          - 1
        theme:
          type: string
          description: |-
            The account's cPanel interface theme.
            * Any valid theme on the server.
          format: theme
          example: jupiter
        uid:
          type: integer
          description: The account's user ID on the system.
        unix_startdate:
          type: integer
          description: "The account creation date. The account creation date and time,\
            \ in Unix time format."
          format: unix_timestamp
          example: 1369256589
        user:
          type: string
          description: The account username. A cPanel account or reseller username
            on the server.
          format: username
          example: username
    inline_response_200_4_data:
      type: object
      properties:
        acct:
          type: array
          description: An array of objects of account data.
          items:
            $ref: "#/components/schemas/inline_response_200_4_data_acct"
    inline_response_200_4_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: accountsummary
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` Success
            * `0` Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_5_data_reseller:
      type: object
      properties:
        active:
          minimum: 1
          type: integer
          description: The number of active accounts that the reseller account owns.
          example: 9
        limit:
          minimum: 1
          type: integer
          description: |-
            The maximum number of accounts that the reseller account may create, if a maximum exists.

            **NOTE:**

            A null value indicates that the reseller does not have an account creation limit.
          nullable: true
          example: 25
        suspended:
          minimum: 1
          type: integer
          description: The number of suspended accounts that the reseller account
            owns.
          nullable: true
          example: 5
        user:
          type: string
          description: The reseller account's username or the `root` user.
          example: root
      description: An object that contains information for an account.
    inline_response_200_5_data:
      type: object
      properties:
        reseller:
          $ref: "#/components/schemas/inline_response_200_5_data_reseller"
    inline_response_200_5_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: acctcounts
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_6_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: activate_zone_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_7_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: add_autossl_user_excluded_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_8_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: add_configclusterserver
        name:
          type: string
          description: The remote configuration cluster server's name.
          example: example.com
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        signature:
          type: string
          description: A truncated version of the server's remote access key.
          example: d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0
        user:
          type: string
          description: The username for the server's `root`-level account.
          example: root
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_9_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: add_override_features_for_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_10_data:
      type: object
      properties:
        new_key_id:
          type: string
          description: The security key's ID.
          example: "1"
    inline_response_200_10_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: add_zone_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_11_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: adddns
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Added example.com ok belonging to user user
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_12_metadata_output:
      type: object
      properties:
        messages:
          type: array
          description: A list of messages returned from the function.
          items:
            type: string
            example: eth0:cp1 is now up. 192.168.0.20/255.255.255.0 broadcast 192.168.0.255
              has been added.
    inline_response_200_12_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: addips
        output:
          $ref: "#/components/schemas/inline_response_200_12_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Success
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_13_data:
      type: object
      properties:
        pkg:
          type: string
          description: The new hosting plan's name.
          example: package1
    inline_response_200_13_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: addpkg
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_14_data:
      type: object
      properties:
        pkg:
          type: string
          description: The hosting plan's name.
          example: package1
    inline_response_200_14_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: addpkgext
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_15_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: addzonerecord
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: |
            Bind reloading on hostname using rndc zone: [example.com]
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_16_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: allow_all_whm_root_access
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_17_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: analyze_transfer_session_remote
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_18_data:
      type: object
      properties:
        acls:
          type: array
          description: An array of privileges that the token possesses.
          items:
            type: string
            example: kill-acct
        create_time:
          type: integer
          description: "The API token's creation time, in Unix time format."
          format: unix_timestamp
          example: 1483625276
        expires_at:
          type: integer
          description: |-
            The API token's expiration time.

            * A valid timestamp, in Unix time format.
            * A `null` value.
          format: unix_timestamp
          nullable: true
          example: 1609372800
        name:
          type: string
          description: |-
            The new API token's name.

            **Note:**

            Use this value to revoke an API token with WHM API 1's
            `api_token_revoke` function.
          example: example
        token:
          type: string
          description: |-
            The new API token to use to authenticate to WHM.

            **Warning:**

            Make **certain** that you save your API token in a safe location.
            You **cannot** access the token again after you use this function.
          example: UWU28DCA23NKY76CN17MDPKM3O7EFQY8
        whitelist_ips:
          type: array
          description: List of remote IP or CIDR IP ranges this token may be used
            from.
          nullable: true
          example:
          - 1.1.1.1
          - 1.1.1.2
          - 1.1.1.8/29
          - fc00:abcd:0000:0000:0000:0000:0000:000f
          - 2620:0000:28a4:0000:0000:0000:0000:0000/48
          items:
            anyOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6
            - type: string
              format: cidr
    inline_response_200_18_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: api_token_create
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_20_data_tokens:
      properties:
        acls:
          type: object
          additionalProperties:
            type: integer
            description: |-
              Whether the Access Control List (ACL) is enabled.
              * `1` - The ACL is enabled.
              * `0` - The ACL is disabled.

              **Note**

              The property name should be an [ACL](https://go.cpanel.net/ACLReferenceChart).
            example: 1
            enum:
            - 0
            - 1
          description: An object of privileges available to the user.
        create_time:
          type: integer
          description: The API token's creation time.
          format: unix_timestamp
          example: 1483625276
        expires_at:
          type: integer
          description: "The API token's expiration time. If the API token does not\
            \ expire, the value is `null`."
          format: unix_timestamp
          nullable: true
          example: 1609372800
        name:
          type: string
          description: The API token's name.
          example: my-token-name
        whitelist_ips:
          type: array
          description: List of remote IP or CIDR IP ranges this token may be used
            from.
          nullable: true
          example:
          - 192.0.2.1
          - 192.0.2.2
          - 192.0.2.8/29
          - fc00:abcd:0000:0000:0000:0000:0000:000f
          - 2620:0000:28a4:0000:0000:0000:0000:0000/48
          items:
            anyOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6
            - type: string
              format: cidr
      description: An object of API token details.
    inline_response_200_20_data:
      type: object
      properties:
        tokens:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_20_data_tokens"
          description: An object that contains WHM account's API token names.
          example:
            my-controller-token:
              acls:
                create-acct: 0
                edit-account: 0
                limit-bandwidth: 1
                list-accts: 1
                suspend-acct: 1
                upgrade-account: 0
              create_time: 1483625276
              expires_at: 1609372800
              name: my-controller-token
              whitelist_ips:
              - 192.0.2.1
              - 192.0.2.2
              - 192.0.2.8/29
              - fc00:abcd:0000:0000:0000:0000:0000:000f
              - 2620:0000:28a4:0000:0000:0000:0000:0000/48
            my-read-only-token:
              acls:
                create-acct: 0
                edit-account: 0
                limit-bandwidth: 0
                list-accts: 1
                suspend-acct: 0
                upgrade-account: 0
              create_time: 1490882281
              name: my-read-only-token
    inline_response_200_20_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: api_token_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_21_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: api_token_revoke
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_22_data:
      type: object
      properties:
        acls:
          type: array
          description: A list of privileges assigned to the token.
          example:
          - create-acct
          - kill-acct
          - list-accts
          items:
            type: string
        create_time:
          type: integer
          description: The API token's creation time.
          format: unix_timestamp
          example: 1483625276
        expires_at:
          type: integer
          description: |-
            The API token's expiration time.

            **Note:**

            A `null` value means that the API token does **not** expire.
          format: unix_timestamp
          nullable: true
          example: 1609372800
        name:
          type: string
          description: |-
            The API token's name.

            **Note:**

            * This function returns the API token's new name when you use
            the `new_name` parameter.

            * Use this value to revoke an API token with WHM API 1's `api_token_revoke`
            function.
          example: example
        whitelist_ips:
          type: array
          description: List of remote IP or CIDR IP ranges this token may be used
            from.
          nullable: true
          example:
          - 192.0.2.1
          - 192.0.2.2
          - 192.0.2.8/29
          - fc00:abcd:0000:0000:0000:0000:0000:000f
          - 2620:0000:28a4:0000:0000:0000:0000:0000/48
          items:
            anyOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6
            - type: string
              format: cidr
    inline_response_200_22_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: api_token_update
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` – Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_23_data:
      type: object
      properties:
        app:
          type: array
          description: An array of available WHM API 1 functions.
          example:
          - accountsummary
          - listaccts
          items:
            type: string
    inline_response_200_23_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: applist
        reason:
          type: string
          description: The reason the api failed when the metadata.result field is
            0. The field may be set to a success message on a successful call.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the api call.
          example: 1
    inline_response_200_24_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the DMARC record was applied.
          format: domain
          example: example.com
        msg:
          type: string
          description: The domain's DMARC record status message.
          example: "[ADD:TXT@_dmarc.example.com:v=DMARC1; p=reject;]"
        status:
          type: integer
          description: |-
            Whether the system applied a DMARC record to the domain.
            * `1` - The system applied a DMARC record.
            * `0` - The system did **not** apply a DMARC record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_24_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contains information about the DMARC
            records applied to domains.
          items:
            $ref: "#/components/schemas/inline_response_200_24_data_payload"
    inline_response_200_24_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: apply_dmarc
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_25_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: assign_account_enhancement
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_26_data:
      type: object
      properties:
        authorized:
          type: integer
          description: |-
            Whether the public SSH key has authorization.
            * `1` — Authorized.
            * `0` — **Not** authorized.
          example: 1
          enum:
          - 1
          - 0
        file:
          type: string
          description: The public SSH key file's name.
          example: sshkey.pub
    inline_response_200_26_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: authorizesshkey
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_27_data:
      type: object
      properties:
        modules:
          type: object
          additionalProperties:
            pattern: "^[1-9][0-9]*$"
            type: string
            description: |-
              The priority of the transfer module.

              **Note:**

              The key is the transfer module's name.
            example: "6000"
          description: The transfer module's information.
          example:
            AccountLocal: "5000"
            AccountRemoteRoot: "3000"
            AccountRemoteUser: "4000"
            FeatureListRemoteRoot: "1000"
            LegacyAccountBackup: "6000"
            PackageRemoteRoot: "2000"
    inline_response_200_27_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: available_transfer_modules
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_28_data:
      type: object
      properties:
        log_entry:
          type: string
          description: |-
            The upgrade log's location, relative to the
            [`/var/cpanel/logs/`](https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-log-files/#/var-cpanel-logs)
            directory.
          example: mysql_upgrade.20200202-172923
        pid:
          minimum: 1
          type: integer
          description: The upgrade check's process ID.
          example: 23456
    inline_response_200_28_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: background_mysql_upgrade_checker_run
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_29_data:
      type: object
      properties:
        error:
          type: integer
          description: |-
            An error code.
            * `0` — Successful upgrade.
            * `-1` — Child process died from a signal.
            * `4` — MySQL upgrade failed error code.
          example: 0
        error_log:
          type: string
          description: |-
            The upgrade's error log file.

            **Note:**

             You can review MySQL upgrade error logs in the following location, where $TIME represents the time in [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) format: `/var/cpanel/logs/mysql_upgrade.$TIME/unattended_background_upgrade.error`.
          example: "Starting The system failed to update MYSQL,\\n------------------------------------\\\
            n"
        log:
          type: string
          description: The upgrade's log file.
          example: "Starting process with log file at /var/cpanel/logs/mysql_upgrade.20141108-172923/unattended_background_upgrade.log\n\
            Beginning MariaDB 10.0 upgrade...\nObtained version information from system.\n\
            Ensuring the MariaDB100 repository is available and working.\ncheckyum\
            \ version 22.3\nEnsuring that the package MariaDB-client with version\
            \ matching 10.0 is available.\nEnsuring that the package MariaDB-common\
            \ with version matching 10.0 is available.\nEnsuring that the package\
            \ MariaDB-devel with version matching 10.0 is available.\nEnsuring that\
            \ the package MariaDB-server with version matching 10.0 is available.\n\
            Ensuring that the package MariaDB-shared with version matching 10.0 is\
            \ available.\nEnsuring that the package coreutils is available.\nEnsuring\
            \ that the package grep is available.\nEnsuring that the package perl-DBI\
            \ is available.\n your MariaDB server version for the right syntax to\
            \ use near ''.`netcopya0I5KfqYTfHqJr` FOR UPGRADE'' at line 1 when executing\
            \ ''CHECK TABLE ... FOR UPGRADE''\nFATAL ERROR: Upgrade failed\nDone building\
            \ configuration.\nHooks system enabled.\nChecking for and running RPM::Versions\
            \ ''post'' hooks for any RPMs about to be installed\nAll required ''post''\
            \ hooks have been run\nRunning: /usr/local/cpanel/scripts/check_cpanel_pkgs\
            \ --targets=MySQL41,MySQL50,MySQL51,MySQL55,MySQL56,MariaDB100,MariaDB101\
            \ --fix\nRestarting mysql service.\nWaiting for mysql to restart waiting\
            \ for mysql to initialize finished.\n\e[1;32mMariaDB upgrade completed\
            \ successfully\e[0m\n------------------------------------\n"
        state:
          type: string
          description: |-
            The upgrade's state.
            * success
            * failed
            * in progress
          example: success
          enum:
          - success
          - failed
          - in progress
    inline_response_200_29_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: background_mysql_upgrade_status
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_30_data_backup_config:
      type: object
      properties:
        backup_daily_enable:
          type: integer
          description: |-
            Whether daily backups are enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        backup_daily_retention:
          minimum: 1
          type: integer
          description: The number of retained daily backups.
          example: 5
        backup_monthly_dates:
          type: string
          description: A comma-seprated list of the days of the month on which the
            system runs monthly backups.
          example: "1,15,22"
        backup_monthly_enable:
          type: integer
          description: |-
            Whether monthly backups are enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        backup_monthly_retention:
          minimum: 1
          type: integer
          description: The number of retained monthly backups.
          example: 5
        backup_weekly_day:
          type: string
          description: |-
            The day of the week on which the system runs weekly backups.

            * `0` — Sunday.
            * `1` — Monday.
            * `2` — Tuesday.
            * `3` — Wednesday.
            * `4` — Thursday.
            * `5` — Friday.
            * `6` — Saturday.
          example: "1,3,5"
        backup_weekly_enable:
          type: integer
          description: |-
            Whether weekly backups are enabled.

            * `1` — Enable.
            * `0` — Disable.
          example: 0
          enum:
          - 0
          - 1
        backup_weekly_retention:
          minimum: 1
          type: integer
          description: The number of retained weekly backups.
          example: 4
        backupaccts:
          type: integer
          description: |-
            Whether to back up accounts.

            * `1` — Back up.
            * `0` — Do **not** back up.

            **Note:**

            This setting affects whether the system enables the *File and
            Directory Restoration* interface in cPanel & WHM. For more
            information, read the
            [How to Manage Metadata Settings](https://go.cpanel.net/MetadataSettings)
            documentation.
          example: 1
          enum:
          - 1
          - 0
        backupbwdata:
          type: integer
          description: |-
            Whether bandwidth tracking data backups are enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        backupdays:
          type: string
          description: |-
            The days of the week on which the system runs daily backups.

            * `0` — Sunday.
            * `1` — Monday.
            * `2` — Tuesday.
            * `3` — Wednesday.
            * `4` — Thursday.
            * `5` — Friday.
            * `6` — Saturday.
          example: "0,2,4,6"
        backupdir:
          type: string
          description: The aboslute file path to the server's local backup directory.
          example: /backup
        backupenable:
          type: integer
          description: |-
            Whether backups are enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        backupfiles:
          type: integer
          description: |-
            Whether system file backups are enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        backuplogs:
          type: integer
          description: |-
            Whether error log backups are enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        backupmount:
          type: integer
          description: |-
            Whether the system mounts backup partitions as part of the
            backup process.

            * `1` — Mounted.
            * `0` — **Not** mounted.

            **Note:**

            This setting affects whether the system enables the *File and
            Directory Restoration* interface in cPanel & WHM. For more
            information, read the
            [How to Manage Metadata Settings](https://go.cpanel.net/MetadataSettings)
            documentation.
          example: 0
          enum:
          - 0
          - 1
        backupsuspendedaccounts:
          type: integer
          description: |-
            Whether suspended account backups are enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        backuptype:
          type: string
          description: |-
            The type of backup file the system creates.

            * `compressed` — A compressed `.tar` file.
            * `uncompressed` — An uncompressed `.tar` file.
            * `incremental` — A full tree of files and directories.
          example: compressed
          enum:
          - compressed
          - uncompressed
          - incremental
        check_min_free_space:
          type: integer
          description: |-
            Whether the system performs a check of the minimum free disk space
            available on the destination server.

            * `1` — Check the free disk space on the destination server.
            * `0` — Do **not** check the free disk space on the destination
            server.
          example: 1
          enum:
          - 0
          - 1
        disable_metadata:
          type: integer
          description: |-
            Whether the backup system creates metadata when a backup runs.

            * `1` — Disables metadata creation.
            * `0` — Enables metadata creation.
          example: 0
          enum:
          - 1
          - 0
        errorthreshhold:
          minimum: 1
          type: integer
          description: The number of times that the system attempts to use the additional
            backup destination.
          example: 3
        force_prune_daily:
          type: integer
          description: |-
            Whether the `backup_daily_retention` parameter is strictly enforced.

            * `1` — Enforced.
            * `0` — The system **only** enforces the `backup_daily_retention`
            setting after a backup successfully completes.
          example: 0
          enum:
          - 0
          - 1
        force_prune_monthly:
          type: integer
          description: |-
            Whether the `backup_monthly_retention` parameter is strictly enforced.

            * `1` — Enforced.
            * `0` — The system **only** enforces the `backup_monthly_retention`
            setting after a backup successfully completes.
          example: 0
          enum:
          - 0
          - 1
        force_prune_weekly:
          type: integer
          description: |-
            Whether the `backup_weekly_retention` parameter is strictly enforced.

            * `1` — Enforced.
            * `0` — The system **only** enforces the `backup_weekly_retention`
            setting after a backup successfully completes.
          example: 0
          enum:
          - 0
          - 1
        gziprsyncopts:
          type: string
          description: The environment variables passed to the `gzip` application.
            The system uses these variables to adjust how the `gzip` application runs
            when compressing backups.
          example: --rysncable
        keeplocal:
          type: integer
          description: |-
            Whether the system deletes backups from the local directory.

            * `1` — The system does not delete backups from the local backup
            directory.
            * `0` — The system **deletes** backups from the local
            directory.

            **Note:**

            The `backupdir` return value contains the local backup directory.
          example: 1
          enum:
          - 0
          - 1
        linkdest:
          type: integer
          description: |-
            Whether the system checks the `rsync` function for hardlink support.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        localzonesonly:
          type: integer
          description: |-
            Whether the system uses a local zone file from the `dnsadmin` daemon
            or `/var/named/domain.tld` file, where `domain.tld` is the target domain.

            * `1` — The system uses the `/var/named/domain.tld` file.
            * `0` — The system uses the `dnsadmin` daemon.
          example: 0
          enum:
          - 0
          - 1
        maximum_restore_timeout:
          minimum: 1
          type: integer
          description: "The maximum interval, in seconds, that the restoration attempts\
            \ a run to completion. If the restoration takes longer than this interval,\
            \ the system terminates the restoration."
          example: 21600
        maximum_timeout:
          minimum: 1
          type: integer
          description: "The maximum interval, in seconds, that the backup attempts\
            \ a run to completion. If the backup takes longer than this interval,\
            \ the system terminates the backup."
          example: 7200
        min_free_space:
          minimum: 1
          type: integer
          description: The minimum amount of free disk space the system checks for
            on the destination server before attempting a backup to that server.
          example: 1024
        min_free_space_unit:
          type: string
          description: |-
            The unit of measure of disk space for the `min_free_space` return.

            * `MB` — Megabytes.
            * `percent` — Percentages.
          example: MB
          enum:
          - MB
          - percent
        mysqlbackup:
          type: string
          description: |-
            The method that the system uses to back up MySQL® databases.

            * `accounts` — Backs up databases into each account's archive.
            * `dir` — Backs up the entire MySQL directory.
            * `both` — Back up databases into each account's archive **and**
            the entire MySQL directory.
          example: accounts
        postbackup:
          type: integer
          description: |-
            Whether the `/usr/local/cpanel/scripts/postcpbackup` script runs
            after the backup completes.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        prebackup:
          type: integer
          description: |-
            Whether the `/usr/local/cpanel/scripts/precpbackup` script runs before
            the system processes backups.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        psqlbackup:
          type: integer
          description: |-
            Whether backups of PostgreSQL® databases are enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        remote_restore_staging_dir:
          type: string
          description: |-
            The directory on the local server where the system temporarily
            stores a remote server's backup file during a backup restoration.
          example: /backup
      description: A list of backup configuration data.
    inline_response_200_30_data:
      type: object
      properties:
        backup_config:
          $ref: "#/components/schemas/inline_response_200_30_data_backup_config"
    inline_response_200_30_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_config_get
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_31_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_config_set
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_32_data:
      type: object
      properties:
        backup_set:
          type: array
          description: A list of dates containing the backup files.
          example:
          - 2019-02-12T00:00:00.000Z
          - 2019-02-12T00:00:00.000Z
          - 2019-02-12T00:00:00.000Z
          items:
            type: string
            format: ISO-8601 Date
    inline_response_200_32_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_date_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_33_data:
      type: object
      properties:
        id:
          type: string
          description: The backup destination's ID.
          example: PhAxIoLSdIkCI40q9vWS4BYy
    inline_response_200_33_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_destination_add
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_34_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_destination_delete
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_35_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_destination_get
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_36_data:
      type: object
      properties:
        destination_list:
          type: array
          description: An array of objects containing backup destination information.
          items:
            $ref: "#/components/schemas/BackupDestinationResponseType"
    inline_response_200_36_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_destination_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_37_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_destination_set
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_38_data:
      type: object
      properties:
        id:
          type: string
          description: The destination's ID.
          example: 0W1ei2rd3A4lI5sT6he7Be8st
    inline_response_200_38_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_destination_validate
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_39_data:
      type: object
      properties:
        exists:
          type: integer
          description: |-
            Whether Google credentials exist for the Google Drive client ID.

            * `1` — Google Drive credentials exist.
            * `0` — Google Drive credentials do **not** exist.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_39_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_does_client_id_have_google_credentials
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_40_data:
      type: object
      properties:
        uri:
          type: string
          description: The generated Google Drive OAuth redirect URI.
          format: uri
          example: https://accounts.google.com/o/oauth2/auth?client_id=aBcdeFgHIjK123&response_type=code&redirect_uri=https%3A%2F%2Fhost-10-0-0-2.example.tld%3A2087%2Fgoogledriveauth%2Fcallback&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.file&access_type=offline&prompt=consent&state=IkdLqOej5CLPW1nHRF6OJYaahE7HPXrRUvpFs6MhmBMbCjvWDQcstyYhbUFge5IJ
    inline_response_200_40_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_generate_google_oauth_uri
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_41_data_transport_status:
      type: object
      properties:
        date:
          type: string
          description: |-
            The backup transport event's date. A date in YYYY-MM-DD format, where:- YYYY represents the year.
            - MM represents the month.
            - DD represents the day.
          example: 2018-08-30T00:00:00.000Z
        end_timestamp:
          type: string
          description: |-
            The transport event's end time. A date and time in YYYY-MM-DD HH:MM:SS format, where:- YYYY represents the year.
            - MM represents the month.
            - DD represents the day.
            - HH represents the hour.
            - MM represents the minute.
            - SS represents the second.
          example: 2018-08-30T02:04:06.000Z
        start_timestamp:
          type: string
          description: |-
            The transport event's start time. A date and time in YYYY-MM-DD HH:MM:SS format, where:- YYYY represents the year.
            - MM represents the month.
            - DD represents the day.
            - HH represents the hour.
            - MM represents the minute.
            - SS represents the second.
          example: 2018-08-30T02:04:08.000Z
        status:
          type: string
          description: |-
            The transport event's status.
            - completed
            - failed
            - pending
            - running
          example: running
        transport:
          type: string
          description: |-
            The transport event's name.

            **Note:**

             If multiple transports use the same name, the system returns the first instance of the transport with that name. A valid transport name.
          example: transportname
        user:
          type: string
          description: |-
            The user for whom the system transported the backup
             A valid username on the server.
          example: salem
      description: "hash of information about each transport event. This hash contains\
        \ the date,  end_timestamp , start_timestamp , status , transport , and user\
        \ returns."
    inline_response_200_41_data:
      type: object
      properties:
        pages:
          type: integer
          description: |-
            The number of pages that the backup transports contain.

            **Note:**

             This return's value depends on the pagination variables that you pass when you call the function. An integer value.
          example: 3
        transport_status:
          $ref: "#/components/schemas/inline_response_200_41_data_transport_status"
    inline_response_200_41_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_get_transport_status
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_42_data:
      type: object
      properties:
        remote_backups:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: array
              description: |-
                An array containing information on one account's backups for a given transport.

                The property name is a cPanel account on the server.

                Each array element is a date.
              items:
                type: string
                description: ""
                format: ISO-8601 Date
                example: 2018-07-19T00:00:00.000Z
            description: |-
              An object containing details of accounts whose backups the system sent through a transport.

              The property name is a backup transport ID, an automatically generated random string.
          description: An object containing the backup destination information.
          example:
            nN04BhzirlJUNSLSBXSMBEYG:
              janedoe:
              - 2020-08-28T00:00:00.000Z
              - 2020-08-31T00:00:00.000Z
              - 2020-09-02T00:00:00.000Z
    inline_response_200_42_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_list_transported
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_43_data_backup_set:
      type: object
      properties:
        backup_date:
          type: array
          description: |-
            The backup file's date. A date in YYYY-MM-DD format, where:- YYYY represents the year.
            - MM represents the month.
            - DD represents the day.
          items:
            type: string
            example: 2014-01-01T00:00:00.000Z
        user:
          type: string
          description: The backup file set's owner. A valid username.
          example: username
    inline_response_200_43_data:
      type: object
      properties:
        backup_set:
          type: array
          properties: {}
          description: hash of a user's backup information. This hash includes the
            user and backup_date returns.
          items:
            $ref: "#/components/schemas/inline_response_200_43_data_backup_set"
    inline_response_200_43_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_set_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_44_data_destination_legend:
      type: object
      properties:
        name:
          type: string
          description: The backup destination's name.
          example: More Backups
        type:
          type: string
          description: |-
            The type of backup destination used in the configuration.

            * `AmazonS3`
            * `Backblaze`
            * `Custom`
            * `FTP`
            * `GoogleDrive`
            * `Local`
            * `Rsync`
            * `S3Compatible`
            * `SFTP`
            * `WebDAV`
          example: Local
          enum:
          - AmazonS3
          - Backblaze
          - Custom
          - FTP
          - GoogleDrive
          - Local
          - Rsync
          - S3Compatible
          - SFTP
          - WebDAV
      description: |-
        An object containing the backup destination's name and its transport type.

        **Note:**

        This return's name is the destination's identification string.
    inline_response_200_44_data:
      type: object
      properties:
        backup_set:
          type: object
          additionalProperties:
            type: array
            description: |-
              An array of objects containing the cPanel account's backup file information.

              **Note:**

              This return name is the cPanel account's name.
            format: username
            items:
              type: object
              properties:
                when:
                  type: string
                  description: The date the backup was created.
                  format: ISO-8601 Date
                  example: 2020-09-01T00:00:00.000Z
                where:
                  type: string
                  description: |-
                    The location of where the backup is located.

                    * `local` - A backup located on the local machine.
                    * `remote` - A backup located on a remote machine.
                  example: local
                  enum:
                  - local
                  - remote
              description: An object containing the time and location backup information.
          description: An object that contains an object of backup destination information.
          example:
            cpusername1:
            - when: 2020-01-25T00:00:00.000Z
              where: local
            - when: 2020-01-26T00:00:00.000Z
              where: local
            cpusername2:
            - when: 2020-01-25T00:00:00.000Z
              where: local
            - when: 2020-01-26T00:00:00.000Z
              where: local
        destination_legend:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_44_data_destination_legend"
          description: An object containing objects that contain the backup's destination
            and type information.
          example:
            GLT1vFsVO8cqk2UWWFpJ9kSQ:
              name: More Backups
              type: Local
    inline_response_200_44_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_set_list_combined
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_45_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_skip_users_all
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: Configuration update process started
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_46_data_reason:
      type: object
      properties:
        msg:
          type: string
          description: The function's status.
          example: Done
        perc:
          maximum: 100
          minimum: 0
          type: integer
          description: The percentage of users whose backup status has changed.
          example: 100
        running:
          type: integer
          description: |-
            Whether user configuration changes are still in progress.

            * `1` - In Progress.
            * `0` - Finished.
          example: 0
          enum:
          - 0
          - 1
      description: An object that contains backup configuration status information.
    inline_response_200_46_data:
      properties:
        reason:
          $ref: "#/components/schemas/inline_response_200_46_data_reason"
    inline_response_200_46_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_skip_users_all_status
        reason:
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK.
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_47_data_user:
      type: object
      properties:
        status:
          type: string
          description: |-
            The account's backup status
            * `active`
            * `inactive`
            * `no_backup`
          example: active
          enum:
          - active
          - inactive
          - no_backup
        username:
          type: string
          description: The user's username.
          format: username
          example: username
    inline_response_200_47_data:
      type: object
      properties:
        user:
          type: array
          description: An array of objects containing user backup information.
          items:
            $ref: "#/components/schemas/inline_response_200_47_data_user"
    inline_response_200_47_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: backup_user_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_48_data_metadata:
      type: object
      properties:
        command:
          type: string
          description: The method name called.
          example: version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
      description: The metadata returned by the command.
    inline_response_200_48_data_result:
      type: object
      properties:
        data:
          type: object
          description: The data returned by the command.
        metadata:
          $ref: "#/components/schemas/inline_response_200_48_data_metadata"
    inline_response_200_48_data:
      type: object
      properties:
        result:
          type: array
          description: "Information regarding function output. Each result contains\
            \ the returns from one of the command parameter's functions. For information\
            \ about each function's returns, read the function's documentation."
          example:
          - data:
              hostname: example-hosting.com
            metadata:
              command: gethostname
              reason: OK
              result: 1
              version: 1
          - data:
              version: 11.88.0.1
            metadata:
              command: version
              reason: OK
              result: 1
              version: 1
          items:
            $ref: "#/components/schemas/inline_response_200_48_data_result"
    inline_response_200_48_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: batch
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_49_data:
      type: object
      properties:
        comment:
          type: string
          description: The comment that you included when you called the function.
          example: George Wendt flying through the air.
        ip_blocks_removed:
          type: integer
          description: The number of IP address blocks that the function deleted.
          example: 1
        ips_added:
          type: array
          description: An array of IP addresses that the function added from the list.
            This function will always returns ranges in the IP1-IP2 format.
          example:
          - 192.168.0.1
          - 192.168.1.0-192.168.1.3
          - 122.1.56.7-122.1.56.8
          items:
            $ref: "#/components/schemas/ip-address"
        ips_failed:
          type: object
          additionalProperties:
            type: string
            description: |-
              The reason why the system failed to add an IP address to the list.

              **Note:**

              The IP address is the return's name.
          description: An object of IP addresses that the system failed to add to
            the list. This object contains one or more IP address returns.
          example:
            "192.168.0.1": "Invalid IP address or range: \"192.68.0.1\""
        iptable_bans_removed:
          minimum: 0
          type: integer
          description: The number of `iptables` temporary block rules that the function
            deleted.
          example: 0
        list_name:
          type: string
          description: |-
            The cPHulk list's name.
            * `black`
            * `white`
          example: white
          enum:
          - black
          - white
        original_ips_added:
          type: array
          description: |-
            An array of IP addresses that the function added from the list.
              The system will return the one of the following formats:

             - A IPv4 address (192.168.0.1).
             - A simple IPv4 address range (192.168.1.1-192.168.1.4).
             - A CIDR IPv4 address range (192.168.1.0/30).
          example:
          - 192.168.0.1
          - 192.168.1.0/30
          - 122.1.56.7-122.1.56.8
          items:
            $ref: "#/components/schemas/ip-address"
        requester_ip:
          description: The IP address of the user or system that requested the addition.
          example: 10.1.4.228
          anyOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        requester_ip_is_whitelisted:
          type: integer
          description: |-
            Whether the requester's IP address exists on cPHulk's whitelist.
            * `1` - Whitelisted.
            * `0` - Not whitelisted.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_49_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: batch_create_cphulk_records
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_50_data:
      type: object
      properties:
        updated:
          type: integer
          description: |-
            Whether the function blocked one or more countries.
            * `1` — Success.
            * `0` — Failure.

            **Note**
            The function returns `0` for the `updated` return if the server already blocks that country.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_50_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: block_incoming_email_from_country
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_51_data:
      type: object
      properties:
        updated:
          type: integer
          description: |-
            Whether the function blocked one or more domains.
            * 1 — Success.
            * 0 — Failure.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_51_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: block_incoming_email_from_domain
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_52_metadata_output:
      type: object
      properties:
        raw:
          type: string
          example: |-
            <pre>
            Changing the account bandwidth limit from “0” to “unlimited”.
            Changing Feature List to default
            Changing the maximum email accounts from “unlimited” to “unlimited”.
            Changing the maximum SQL databases from “unlimited” to “unlimited”.
            Changing the maximum FTP accounts from “unlimited” to “unlimited”.
            Changing the maximum mailing lists from “unlimited” to “unlimited”.
            Changing the maximum subdomains from “unlimited” to “unlimited”.
            Changing the maximum email quota from “unlimited” to “unlimited” …
            Changing "Maximum Hourly Email by Domain Relayed" from unlimited to unlimited
            Changing "Maximum percentage of failed or deferred messages a domain may send per hour" from unlimited to unlimited
            Changing the maximum parked domains from “unlimited” to “0”.
            Changing the maximum addon domains from “unlimited” to “0”.
            Removing Shell Access
            Shell changed
            Changing cPanel theme from jupiter to jupiter
            Changing plan from default to boo
            Bandwidth limit (unlimited) is lower than (unlimited) (all limits removed)<br /><blockquote><div style='float:left;'>Enabling...</div><div style='float:left;'>...exampleaddon.com...</div><div style='float:left;'>...exampleaddon.example.com...</div><div style='float:left;'>...example.com...</div><div style='float:left;'>Done</div></blockquote><br /><div class='clearit' style='clear:both; width:80%;'> </div>Setting quota to “unlimited”.
            <span class="b2">Warning, this will not change shared IP accounts to dedicated IP accounts, or the reverse.</span>
            <span class="b2">Warning: Changing a user’s package does not affect their Digest Authentication settings.</span>
            </pre>
    inline_response_200_52_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: changepackage
        output:
          $ref: "#/components/schemas/inline_response_200_52_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_53_data:
      type: object
      properties:
        comment:
          type: string
          description: |-
            The remote connection's comment section.
            * A valid string.
            * `undef` - If the local and remote servers connect successfully.
          example: "null"
        protocol_versions:
          type: array
          description: |-
            The available SSH protocol versions.
            * A valid string.
            * `undef` - If the local and remote servers connect successfully.
          items:
            type: string
            example: "2.0"
        received:
          type: string
          description: The raw data from the remote server.
          example: SSH-2.0-OpenSSH_5.3
        server_software:
          type: string
          description: |-
            The version of the remote server's SSH server software.
            * A valid string.
            * `undef` - If the local and remote servers connect successfully.
          example: OpenSSH_5.3
    inline_response_200_53_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: check_remote_ssh_connection
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_54_data:
      type: object
      properties:
        has_trust:
          type: integer
          description: |-
            Whether the nameserver can send information to other cluster members.
            * `1` — Can send information.
            * `0` — Can't send information.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_54_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cluster_member_has_trust_with
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_55_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: configurebackgroundprocesskiller
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_56_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: configureservice
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Enabled monitoring for mysql.
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_57_data_steps:
      type: object
      properties:
        end_time:
          type: integer
          description: The date when the step ended.
          format: unix_timestamp
        start_time:
          type: integer
          description: The date when the step started.
          format: unix_timestamp
        status:
          type: string
          description: |-
            The status of the conversion step.

            * `DONE` — The step is finished.
            * `IN PROGRESS` — The step is in progress.
            * `FAILED` — The step failed.
          enum:
          - DONE
          - IN PROGRESS
          - FAILED
        step_name:
          type: string
          description: A step of the conversion process.
        warnings:
          type: string
          description: "The warning message for the step that describes a potential\
            \ problem, if any exist."
    inline_response_200_57_data:
      type: object
      properties:
        domain:
          type: string
          description: The addon domain you converted into a cPanel account.
          format: domain
          example: cptestaddon175.tld
        job_end_time:
          type: integer
          description: A date that indicates when the convertion ended.
          format: unix_timestamp
          example: 1462216653
        job_id:
          minimum: 1
          type: integer
          description: The conversion's job identification number.
          example: 2
        job_start_time:
          type: integer
          description: A date that indicates when the conversion started.
          format: unix_timestamp
          example: 1462465001
        job_status:
          type: string
          description: |-
            The status of the conversion process.

            * `INPROGRESS` — The conversion process is in progress.
            * `QUEUED` — The system queued the conversion job.
            * `SKIPPED` — The system skipped at least one step in the conversion process.
            * `FAILED` — At least one step in the conversion process failed.
            * `DONE` — The conversion process finished successfully.
          example: DONE
          enum:
          - INPROGRESS
          - QUEUED
          - SKIPPED
          - FAILED
          - DONE
        source_acct:
          type: string
          description: The source cPanel user account that you converted into an account.
          format: username
          example: cptest
        steps:
          type: array
          description: An array of objects containing the steps taken by the conversion
            process.
          example:
          - end_time: 1462465001
            start_time: 1462465001
            status: DONE
            step_name: Saving email forwarder data
            warnings: ""
          - end_time: 1462465001
            start_time: 1462465001
            status: DONE
            step_name: Saving custom DNS records
            warnings: ""
          - end_time: 1462465001
            start_time: 1462465001
            status: DONE
            step_name: Saving installed SSL Certificate
            warnings: ""
          - end_time: 1462465001
            start_time: 1462465001
            status: DONE
            step_name: Saving EasyApache 4 configuration
            warnings: ""
          - end_time: 1462465009
            start_time: 1462465001
            status: DONE
            step_name: Removing Addon Domain
            warnings: ""
          - end_time: 1462465014
            start_time: 1462465009
            status: DONE
            step_name: Creating new cPanel account
            warnings: ""
          - end_time: 1462465015
            start_time: 1462465014
            status: DONE
            step_name: Restoring custom DNS records
            warnings: ""
          - end_time: 1462465016
            start_time: 1462465015
            status: DONE
            step_name: Copying Custom VirtualHost Includes
            warnings: ""
          - end_time: 1462465016
            start_time: 1462465016
            status: DONE
            step_name: Copying document root content
            warnings: "/usr/bin/gtar: ./shadow: Cannot open: Permission denied\\n/usr/bin/gtar:\
              \ Exiting with failure status due to previous errors"
          - end_time: 1462465016
            start_time: 1462465016
            status: DONE
            step_name: Setting the proper permissions on document root
            warnings: ""
          - end_time: 1462465017
            start_time: 1462465016
            status: DONE
            step_name: Copying email accounts
            warnings: ""
          - end_time: 1462465017
            start_time: 1462465017
            status: DONE
            step_name: Restoring email forwarders
            warnings: ""
          - end_time: 1462465017
            start_time: 1462465017
            status: DONE
            step_name: Copying Autoresponders
            warnings: ""
          - end_time: 1462465017
            start_time: 1462465017
            status: DONE
            step_name: Copying webmail data
            warnings: ""
          - end_time: 1462465017
            start_time: 1462465017
            status: DONE
            step_name: Restoring installed SSL Certificate
            warnings: ""
          - end_time: 1462465017
            start_time: 1462465017
            status: DONE
            step_name: Restoring EasyApache 4 configuration
            warnings: ""
          items:
            $ref: "#/components/schemas/inline_response_200_57_data_steps"
        target_acct:
          type: string
          description: The destination cPanel user account for the conversion.
          example: user2
    inline_response_200_57_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: convert_addon_fetch_conversion_details
        reason:
          type: string
          description: The reason the function failed when the `metadata.result` field
            is `0`. This field may include a success message when the function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The API version of the function.
          example: 1
    inline_response_200_58_data:
      type: object
      properties:
        docroot:
          type: string
          description: The absolute file path of the addon domain.
          example: /home/exampleparent/public_html/example.com
        has_dedicated_ip:
          type: integer
          description: |-
            Whether the domain uses a dedicated IP address.

            * `1` — The domain uses a dedicated IP address.
            * `0` — The domain does **not** use a dedicated IP address.
          example: 0
          enum:
          - 1
          - 0
        has_ssl_cert_installed:
          type: integer
          description: |-
            Whether an SSL certificate secures the domain.

            * `1` — An SSL certificate secures the domain.
            * `0` — An SSL certificate does **not** secure the domain.
          example: 0
          enum:
          - 1
          - 0
        ip:
          type: string
          description: The domain's IP address.
          format: ipv4
          example: 192.0.2.0
        is_sni_supported:
          type: integer
          description: |-
            Whether the domain supports Server Name Indication (SNI).

            * `1` — The domain supports SNI.
            * `0` — The domain does **not** support SNI.
          example: 0
          enum:
          - 1
          - 0
        number_of_autoresponders:
          minimum: 0
          type: integer
          description: The number of the domain's autoresponders.
          example: 0
        number_of_domain_forwarders:
          minimum: 0
          type: integer
          description: The number of the domain's domain forwarders.
          example: 1
        number_of_email_accounts:
          minimum: 0
          type: integer
          description: The number of the domain's email accounts.
          example: 2
        number_of_email_forwarders:
          minimum: 0
          type: integer
          description: The number of the domain's email forwarders.
          example: 1
        owner:
          type: string
          description: The addon domain owner's cPanel account username.
          format: username
          example: username
    inline_response_200_58_metadata:
      type: object
      properties:
        command:
          type: string
          example: convert_addon_fetch_domain_details
        reason:
          type: string
          description: The reason the function failed when the `metadata.result` field
            is `0`. This field may include a success message when the function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The API version of the function.
          example: 1
    inline_response_200_59_data:
      type: object
      properties:
        job_end_time:
          type: integer
          description: The time when the convert addon domain to account process ended.
          format: unix_timestamp
        job_id:
          minimum: 1
          pattern: "[1-9]+"
          type: string
          description: |-
            The conversion's job identification number.

            **Note:**

            The system stores this numeric value as a string.
        job_status:
          type: string
          description: |-
            The status of the conversion process.

            * `DONE` — The conversion finished successfully.
            * `IN PROGRESS` — The conversion is running.
            * `FAILED` — The converion failed for some reason.
          enum:
          - DONE
          - IN PROGRESS
          - FAILED
        source_acct:
          type: string
          description: The addon domain to convert into a cPanel account.
      description: |-
        The converion job's identification number.

        **Note:**

        The property name is the identification number of the requested job.
    inline_response_200_59_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: convert_addon_get_conversion_status
        reason:
          type: string
          description: The reason the function failed when the `metadata.result` field
            is `0`. This field may include a success message when the function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The API version of the function.
          example: 1
    inline_response_200_60_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: convert_addon_initiate_conversion
        reason:
          type: string
          description: The reason the function failed when the `metadata.result` field
            is `0`. This field may include a success message when the function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The API version of the function.
          example: 1
    inline_response_200_61_data:
      properties:
        docroot:
          type: string
          description: The document root for the addon domain.
          example: /home/exampleparent/public_html/example.com
        domain_type:
          type: string
          description: The domain's type.
          example: addon
        ip:
          type: string
          description: The domain's IPv4 address.
          format: ipv4
          example: 192.0.2.0
        ipv6:
          type: string
          description: The domain's IPv6 address.
          format: ipv6
          example: 2001:db8:a0b:12f0::1
        owner:
          type: string
          description: The domain's owner.
          format: username
          example: exampleparent
        reseller:
          type: string
          description: The domain's reseller.
          format: username
          example: exampleparent
        subdomain:
          type: string
          description: The domain's subdomain.
          format: domain
          example: example.exampleparent.com
      description: |-
        An object containing the domain's data.

        **Note:**
        The domain's name is the return's name.
    inline_response_200_61_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: convert_addon_list_addon_domains
        reason:
          type: string
          description: The reason the function failed when the `metadata.result` field
            is 0. This field may include a success message when the function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - `1` - Success.
            - `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The API version of the function.
          example: 1
    inline_response_200_62_data_conversions:
      type: object
      properties:
        domain:
          type: string
          description: The addon domain to convert into a cPanel account.
          format: domain
          example: example.com
        end_time:
          type: integer
          description: A date in Unix time format that indicates when the process
            ended.
          format: unix_timestamp
          example: 1462216653
        job_id:
          minimum: 0
          type: integer
          description: The conversion's job number.
          example: 1
        source_acct:
          type: string
          description: The cPanel account username that owned the domain at the time
            of conversion.
          format: username
          example: example
        start_time:
          type: integer
          description: A date in Unix time format that indicates when the process
            started.
          format: unix_timestamp
          example: 1462216639
        status:
          type: string
          description: |-
            The status of the conversion process.
            * `DONE` — The conversion is finished.
            * `IN PROGRESS` — The conversion is in progress.
            * `FAILED` — The conversion failed.
          example: DONE
          enum:
          - DONE
          - IN PROGRESS
          - FAILED
        target_acct:
          type: string
          description: The destination user account for the conversion.
          format: username
          example: example2
    inline_response_200_62_data:
      type: object
      properties:
        conversions:
          type: array
          description: List of conversions from an addon domain to an independent
            cPanel account.
          items:
            $ref: "#/components/schemas/inline_response_200_62_data_conversions"
    inline_response_200_62_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: convert_addon_list_conversions
        reason:
          type: string
          description: The reason the function failed when the `metadata.result` field
            is `0`. This field may include a success message when the function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * 1 — Success.
            * 0 — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The API version of the function.
          example: 1
    inline_response_200_63_data:
      type: object
      properties:
        build_id:
          type: integer
          description: The ID of the log file for the conversion process.
          example: 1493645268
    inline_response_200_63_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: convert_all_domains_to_fpm
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * 1 - Success
            * 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_64_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: convert_and_migrate_from_legacy_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Legacy Backup configuration was renamed from /etc/cpbackup.conf
            to /etc/cpbackup.conf-1485958451 as a backup copy for your records.
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_65_data:
      type: object
      properties:
        key:
          type: string
          description: The converted key file's text.
          example: "PuTTY-User-Key-File-2: ssh-rsa Encryption: aes256-cbc Comment:\
            \ imported-openssh-key Public-Lines: 12 AAAAB3NzaC1yc2EAAAABIwAAAgEAuuth41YYyWABsRKexJXgSMD8FvIBFCptUfZP\
            \ 4U/6R41FvL/RS+99kq1WL/KASsKRoEA5uc0axM+iNgZtKuemQYGUZNvN+8X8sC/l E6GF7X3Pvj2Ml4AlD7TQv0WQZUp9xn+SlOti+3pYh+S56vzNjvdifO7U5mPGW/81\
            \ 9N4vGhG3ThaAgETwkL33CM2LeNRuvoWpeQcuzEVX2aOvHQZqOvV15fTjZ64ZGL3i UDtKmeaHs4tMqgNIUXgn1P1V4TgPvTIfopH8FBX3g1pD15XD3vn+XHLwia0505c5\
            \ +QM+jElS3HHb0vrrDo3S+8koXLWp07wu/GYrvBd5+MlsSV7bpr7lmWj8uMQjc0ap eZe+eb/MteadWnqIPeOVuracssCvDLqXEPK2KjhFMPqBTepNhZaJHRfvkodPm43C\
            \ 50nhqzrNoxFvXb1rfCjPPqGfhuSZhlCmo2FDiZPKdl0X7bhzDIvMVikyqJP06bqK y9iclyQv0VPfyCIx/VDcVclIoUa8A49nAinXHKeUx9QUNBHv8wXdyz7W41jQa+++\
            \ Ih3Yc4o9rpV95DDmKp7iF6kFk4aVjIWDgEsPTaL28wlvUyazoW5TAGPHDrRJoedU ag8KDRNPrGbKYu3CvoINiz0sshyCvr1gjKNG75Cwe+L4hXIkaw8wlCpwFq8VSX70\
            \ RS9Pei8= Private-Lines: 28 bb31s+xsiAv1+pclnmvreEYdxvuVmbeWMjUWJd4Y4TKIAyLEItsXNs078qn1QAZ+\
            \ Wj6t+0HcnhuUVICHyCyJrp++1g4OtzTAHRczaD5ybhb9ktSe1qlnszKD1Rg5/o+B 61h6kvMcZyuNSjtPkmqQ3XIh8OFYybB2oJXY7gJQzfRuRwk8dx9YWtIR4438Nbv5\
            \ ecTzGUDWvx+AfYzC4X/UIGiRy8AftfiBQyA+c1OFyg37qM1SLYnZYmIpSf5GsQ3A MaEGlB9P9hE2uoqZ4yT/A0aHj7w8DGEzYZqxNbMlCIJhLEO3vKZvMvaq7Q8ramG6\
            \ BzYwUz+8NPgCBUp1qyIcN2vvEHEq57pMMHYNfJMVfG9o0ijo+xxGCPV3MosmmvRI 1nxH0nrgdA2o6SJp/dJrKm3Hicbbxak/Kz4m8BROcnlCgptdjHp9V/cBnFq/UUHv\
            \ or32gShGWmnG6+XyQs4LxpbLC4koz8EjPwg3/3W2Qn6Drn3i98omvZpmnX466i7e GUiHaiKTpBkqZkHmHFxNBAbbs85yngeo8o3RGUsmN69RupTqSkkLDuDFOMwgfsZG\
            \ TWexWg/qBe+8Xrbshd9HphxvWv+Q3YcSeg+mm8Bc50Q5saLKYdQQsbfV5wtIpvLj 0eyjoTSh+FkPGBw/iB1MDzYV5OoIIgiDBndP2bOK2zFsLElSbbv/r3i//wL98316DgJWmJiQDqKxly4MEij8TfIVDAsdeyJJKvg6iGahonHbEBkZ9g9wcCpxlg8iMtTf\
            \ /7eb8SmcPwe1NGdgB7PR1dU/RQ/kBbLaaBfo/1jQEnCC8VmksVu7B9ULImfLEOEm +A4J4NpKKlQocgCvJAtMogL+uRS5GpojJIElVqP12jnb7Ij3AYY3Zb4qotlprLeK\
            \ 7dJslpNnrD/MSvbJZ/ZoAX+xyDxUMeq/83Xv30i5/wh00QBY4Cv5NTDU4rPoVmQm EWGW5aQx34in4JHY5bK3F4BvVYm7MscKLHoU8/OeKVAgzNcatUgPlN43FG9SX0AE\
            \ pP3EYlVADSfULdbfBn9dZDidAiDMXnCv9259J65zA64tuT9XluinHXVs5PA/f5vm rZPQhAzGThw7h9L6rGYGfSKd9KYoTwf8kSOA6WU7OEyhfTvCdaW76vPi4CRW2M/Y\
            \ RHX0IUdv3VxfKb4WnXFeQl6LshmGB1T2mbMyfThlqUCGAvPJyWDtZ6OpOUl3CK87 3jhFzO7t5wruhuWZ3RcISVsrdqcjgCrKy6Q9y+HbLJoNY40BkJm7f6WeV+hHn7o1\
            \ od7JiqDGq3Qk+ECEdexvqdRQS7BWgO7xudGFk+WFY02zoGvq5DMviNfsxqhM06P+ JgEinB8xPPCOPzi6q8T1y1Pz44gmluM15/QRX4z0Mwz6UQasVC/NsZxdfoNGtCy0\
            \ c2DAscy4zsiKhZMlLr0loPYycO2bOit6E5eYkrACJR2115/ZgVwzvzdmc/INJCxG3TvKYbeuv/tkolt56uJWGfMF2ZrfLJaaQ0iAiUyMep/keLP2bJ4Y97o+03BtQszZ\
            \ zixXvzeQAX97WdBaUJU0C3mCKDOtkv4RWZ8hXV5v0m2tm7xbXVBzF22Pej2iHDKx GQkciskBRwQM4bDZorkcO+WnGn6uPbtw5v/AuIUqB1UNAcehWN6UTiFNveP4hLYu\
            \ iRGWnZZ+uTbip91PNXSxXzb9yMWV2qSVIsZvud8kpR8ttL26Z4ySUKkFuPrgUeTeELnOF3GP6Ixk+IkwxU575w==\
            \ Private-MAC: 1dfa6a4c8297d31e4cfadbf61aac8b4c5ca75584"
    inline_response_200_65_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: convertopensshtoputty
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_66_data__cp_redirects:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            oneOf:
            - type: string
            - type: integer
            x-additionalPropertiesName: header-name
          description: |-
            An object containing the header fields that the request returned.

            **Note:**

            This object's keys vary based on the URL's headers.
          nullable: true
          example:
            age: "425879"
            cache-control: max-age=604800
            content-length: "1256"
            content-type: text/html; charset=UTF-8
            date: "Thu, 05 Mar 2020 23:42:25 GMT"
            etag: '"3147526947+ident"'
            expires: "Thu, 12 Mar 2020 23:42:25 GMT"
            last-modified: "Thu, 17 Oct 2019 07:18:26 GMT"
            server: ECS (dab/4BA8)
            vary: Accept-Encoding
            x-cache: HIT
        protocol:
          type: string
          description: The URL's HTTP protocol.
          nullable: true
          example: HTTP/1.1
        reason:
          type: string
          description: The response that the server returned.
          nullable: true
          example: OK
        status:
          type: string
          description: The response's HTTP status code.
          nullable: true
          example: "200"
        success:
          type: integer
          description: |-
            Whether the function returned a 2XX HTTP status code.
            - `1` -  Success.
            - `0` -  Failure.
          nullable: true
          example: 1
          enum:
          - 0
          - 1
        url:
          type: string
          description: The URL that provided the response.
          format: url
          nullable: true
          example: http://www.example.com
    inline_response_200_66_data:
      type: object
      properties:
        _cp_redirects:
          type: array
          description: |-
            An array that contains the redirects which the website performs, if any exist.

            **Notes:**

            * This return counts redirects.
            * If any redirects exist, this returns as an array of objects containing the `content`, `protocol`, `reason`, `status`, `success`, and `url` returns and the `headers` object.
            * `null`  - Redirects do not exist.

            **Note:**

             The JSON example output above displays this condition.
          nullable: true
          items:
            $ref: "#/components/schemas/inline_response_200_66_data__cp_redirects"
        content:
          type: string
          description: |-
            The URL's content.

            **Note:**

             We strongly recommend that you confirm the content's type before you use the content return's value. The function may also return this value in the _cp_redirects array of hashes. A valid string.
          example: "<!doctype html>\\n<html>\\n<head>\\n <title>Example Domain</title>\\\
            n\\n <meta charset=\\\"utf-8\\\" />\\n <meta http-equiv=\\\"Content-type\\\
            \" content=\\\"text/html; charset=utf-8\\\" />\\n <meta name=\\\"viewport\\\
            \" content=\\\"width=device-width, initial-scale=1\\\" />\\n <style type=\\\
            \"text/css\\\">\\n body {\\n background-color: #f0f0f2;\\n margin: 0;\\\
            n padding: 0;\\n font-family: -apple-system, system-ui, BlinkMacSystemFont,\
            \ \\\"Segoe UI\\\", \\\"Open Sans\\\", \\\"Helvetica Neue\\\", Helvetica,\
            \ Arial, sans-serif;\\n\\n }\\n div {\\n width: 600px;\\n margin: 5em\
            \ auto;\\n padding: 2em;\\n background-color: #fdfdff;\\n border-radius:\
            \ 0.5em;\\n box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\\n }\\n a:link,\
            \ a:visited {\\n color: #38488f;\\n text-decoration: none;\\n }\\n @media\
            \ (max-width: 700px) {\\n div {\\n margin: 0 auto;\\n width: auto;\\n\
            \ }\\n }\\n </style>\\n</head>\\n\\n<body>\\n<div>\\n <h1>Example Domain</h1>\\\
            n <p>This domain is for use in illustrative examples in documents. You\
            \ may use this\\n domain in literature without prior coordination or asking\
            \ for permission.</p>\\n <p><a href=\\\"https://www.iana.org/domains/example\\\
            \">More information...</a></p>\\n</div>\\n</body>\\n</html>\\n"
    inline_response_200_66_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cors_proxy_get
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_67_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cpanel
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_68_data:
      type: object
      properties:
        ip_blocks:
          type: object
          additionalProperties:
            type: integer
            description: |-
              Whether the *Trusted Hosts* list includes the IP address range.
              This return's name is the IP address range.

              * `1` — Trusted.
              * `0` — Not trusted.
            enum:
            - 1
            - 0
          description: A list containing the neighboring netblocks.
          example:
            "10.0.0.0-10.255.255.255": 1
            "199.0.0.0-199.3.255.255": 1
            "48.0.0.0-48.255.255.255": 1
    inline_response_200_68_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cpgreylist_is_server_netblock_trusted
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_69_data_ips:
      properties:
        create_time:
          type: string
          description: The date and time when the function created the record.
          format: ISO-8601 Date Time (Space Separated)
          example: 2015-07-28T08:16:52.000Z
        host_ip:
          type: string
          description: The mail provider's IP address or range.
          format: ipv4
          example: 192.168.0.1
        is_trusted:
          type: integer
          description: |-
            Whether Greylisting trusts this mail provider's IP addresses.
            - `1` — Trusted.
            - `0` — Not trusted.
          example: 1
          enum:
          - 0
          - 1
        provider_id:
          minimum: 1
          type: integer
          description: The mail provider's identification number.
          example: 7
      description: An object containing the mail provider's IP address data.
    inline_response_200_69_data_providers:
      type: object
      properties:
        ips:
          $ref: "#/components/schemas/inline_response_200_69_data_ips"
      description: |-
        An object containing an object that contains the mail provider's IP address data.

        **Note:**

        The return's name is the mail provider's display name.
    inline_response_200_69_data:
      type: object
      properties:
        providers:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_69_data_providers"
          description: An object containing mail providers and their IP addresses.
        providers_failed:
          type: object
          additionalProperties:
            type: string
            description: |-
              The reason why the system failed to list IP addresses for the provider.

              **Note:**

              The return's name is the mail provider's display name.
          description: An object containing mail providers that the system failed
            to retrieve data for.
      example: "{\"providers\":{\"cpanel\":{\"ips\":[{\"create_time\":\"2015-07-28T08:16:52.000Z\"\
        ,\"host_ip\":\"208.115.214.0-208.115.214.255\",\"is_trusted\":1,\"provider_id\"\
        :7},{\"create_time\":\"2015-07-28T08:16:52.000Z\",\"host_ip\":\"74.63.202.0-74.63.202.255\"\
        ,\"is_trusted\":1,\"provider_id\":7}]}},\"providers_failed\":{\"dpanel\":\"\
        Unknown mail provider: dpanel\"}}"
    inline_response_200_69_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cpgreylist_list_entries_for_common_mail_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_70_data_common_mail_providers:
      type: object
      properties:
        autoupdate:
          type: integer
          description: |-
            Whether Greylisting automatically trusts new IP addresses that WebPros International, LLC adds for this mail provider.
            * `1` - New IP addresses are automatically trusted.
            * `0` - New IP addresses are **not** automatically trusted.
          example: 1
          enum:
          - 0
          - 1
        display_name:
          type: string
          description: The mail provider's name.
          example: cPanel
        is_trusted:
          type: integer
          description: |-
            Whether Greylisting trusts this mail provider's IP addresses.
            * `1` - The provider is trusted.
            * `0` - The provider is **not** trusted.
          example: 1
          enum:
          - 0
          - 1
      description: |-
        An object containing the provider's data.

        **Note:**

          The object's name is the provider's key name.
    inline_response_200_70_data:
      properties:
        autotrust_new_common_mail_providers:
          type: integer
          description: |-
            Whether Greylisting automatically trusts new mail providers that WebPros International, LLC adds to the common mail providers list.
            * `1` - New mail providers are automatically trusted.
            * `0` - New mail providers are **not** automatically trusted.
          example: 1
          enum:
          - 0
          - 1
        common_mail_providers:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_70_data_common_mail_providers"
          description: An object containing common mail provider settings.
          example:
            cpanel:
              autoupdate: 1
              display_name: cPanel
              is_trusted: 1
            sectigo:
              autoupdate: 1
              display_name: Comodo/Sectigo
              is_trusted: 1
    inline_response_200_70_metadata:
      type: object
      properties:
        command:
          type: string
          description: The method name called.
          example: cpgreylist_load_common_mail_providers_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_71_data_common_mail_providers:
      type: object
      properties:
        autoupdate:
          type: integer
          description: |-
            Whether Greylisting automatically trusts new IP addresses that WebPros International, LLC adds for this mail provider.

            * `1` - New IP addresses are automatically trusted.
            * `0` - New IP addresses are **not** automatically trusted.
          example: 1
          enum:
          - 0
          - 1
        display_name:
          type: string
          description: The mail provider's name.
          example: cPanel
        is_trusted:
          type: integer
          description: |-
            Whether Greylisting trusts this mail provider's IP addresses.

            * `1` - The provider is trusted.
            * `0` - The provider is **not** trusted.
          example: 1
          enum:
          - 0
          - 1
      description: |-
        An object containing the provider's data.

        **Note:**

          The object's name is the provider's key name.
    inline_response_200_71_data:
      properties:
        autotrust_new_common_mail_providers:
          type: integer
          description: |-
            Whether Greylisting automatically trusts new mail providers that WebPros International, LLC adds to the common mail providers list.

            * `1` - New mail providers are automatically trusted.
            * `0` - New mail providers are **not** automatically trusted.
          example: 1
          enum:
          - 0
          - 1
        common_mail_providers:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_71_data_common_mail_providers"
          description: An object containing common mail provider settings.
          example:
            cpanel:
              autoupdate: 1
              display_name: cPanel
              is_trusted: 1
            sectigo:
              autoupdate: 1
              display_name: Comodo/Sectigo
              is_trusted: 1
    inline_response_200_72_data:
      type: object
      properties:
        is_enabled:
          type: integer
          description: |-
            Whether Greylisting is enabled.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        is_exim_enabled:
          type: integer
          description: |-
            Whether Exim is enabled.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        service:
          type: string
          description: The name of the service.
          example: cPGreyList
    inline_response_200_72_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cpgreylist_status
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_73_data_providers_trusted:
      type: object
      properties:
        ips_trusted:
          minimum: 1
          type: integer
          description: The total number of the mail provider's IP addresses that Greylisting
            trusts.
          example: 21
      description: |-
        The providers whose configuration changes succeeded.

        **Note:**

        The property’s keys are the provider name.
    inline_response_200_73_data:
      type: object
      properties:
        providers_failed:
          type: object
          additionalProperties:
            type: string
            description: |-
              The reason for the provider’s failure.

              **Note:**

              The property’s keys are the provider name.
            example: This failed because it rained.
          description: The providers whose configuration changes failed.
        providers_trusted:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_73_data_providers_trusted"
          description: The mail providers that Greylisting trusts.
    inline_response_200_73_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cpgreylist_trust_entries_for_common_mail_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_74_data_providers_failed:
      type: object
      properties:
        ips_untrusted:
          type: integer
          description: The mail providers that failed to update.
          example: 21
      description: The mail provider's data.
    inline_response_200_74_data:
      type: object
      properties:
        providers_failed:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_74_data_providers_failed"
        providers_untrusted:
          type: object
          additionalProperties:
            type: string
            description: The reason why the change for a provider failed.
            example: Unknown mail provider.
            x-additionalPropertiesName: provider_key
          description: The mail providers that Greylisting does not trust.
    inline_response_200_74_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cpgreylist_untrust_entries_for_common_mail_provider
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result` field is `0`.
            This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_75_data:
      type: object
      properties:
        is_enabled:
          type: integer
          description: |-
            Whether the cPHulk service is enabled.
            * `1` - cPHulk is enabled.
            * `0` - cPHulk is disabled.
          example: 1
          enum:
          - 0
          - 1
        service:
          type: string
          description: The cPHulk service's name.
          example: cPHulk
    inline_response_200_75_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: cphulk_status
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_76_data:
      type: object
      properties:
        name:
          type: string
          description: The name of the newly-created account enhancement.
          example: featurename 5000
    inline_response_200_76_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_account_enhancement
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_77_data_ips_added:
      type: object
      properties:
        comment:
          maxLength: 255
          type: string
          description: Comment for the individual record.
          example: Fascinating
        create_time:
          type: string
          description: The date and time at which the function created the record.
          format: ISO-8601 Date Time (Space Separated)
          example: 2015-02-17T10:08:26.000Z
        host_ip:
          type: string
          description: The trusted host's IP address.
          format: ipv4
          example: 192.168.0.1
        id:
          minimum: 1
          type: integer
          description: The host's record number.
          example: 42
    inline_response_200_77_data_ips_failed:
      type: object
      properties:
        comment:
          type: string
          description: The reason for the failure.
          example: "Sorry, 192.168 is not a valid IP address."
      description: An object that contains the IP addresses that the function failed
        to add to the Trusted Hosts list.
    inline_response_200_77_data:
      type: object
      properties:
        comment:
          maxLength: 255
          type: string
          description: Comment for the batch.
          example: NoComment
        ips_added:
          type: array
          description: An array of objects that contains the IP addresses that the
            function added to the Trusted Hosts list.
          items:
            $ref: "#/components/schemas/inline_response_200_77_data_ips_added"
        ips_failed:
          $ref: "#/components/schemas/inline_response_200_77_data_ips_failed"
    inline_response_200_77_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_cpgreylist_trusted_host
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result` field is `0`.
            This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_78_data:
      type: object
      properties:
        comment:
          type: string
          description: The comment that you included when you called the function.
          example: George Wendt flying through the air.
        ip_blocks_removed:
          type: integer
          description: The number of IP address blocks that the function deleted.
          example: 1
        ips_added:
          type: array
          description: An array of IP addresses that the function added to the list.
          items:
            $ref: "#/components/schemas/ip-address"
        ips_failed:
          type: object
          additionalProperties:
            type: string
            description: |-
              The reason why the system failed to add an IP address to the list.

              **Note:**

              The IP address is the return's name.
          description: A object of IP addresses that the system failed to add to the
            list. This object contains one or more IP address returns.
          example:
            "192.168.0.1": "Invalid IP address or range: \"192.68.0.1\""
        iptable_bans_removed:
          minimum: 0
          type: integer
          description: The number of `iptables` temporary block rules that the function
            deleted.
          example: 0
        list_name:
          type: string
          description: |-
            The cPHulk list's name.
            * `black`
            * `white`
          example: white
          enum:
          - black
          - white
        requester_ip:
          description: The IP address of the user or system that requested the addition.
          example: 10.1.4.228
          anyOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        requester_ip_is_whitelisted:
          type: integer
          description: |-
            Whether the requester's IP address exists on cPHulk's whitelist.
            * `1` - Whitelisted.
            * `0` - Not whitelisted.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_78_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_cphulk_record
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_79_data:
      type: object
      properties:
        featurelist:
          type: string
          description: The feature list's name.
          example: Arthur
    inline_response_200_79_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_featurelist
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_80_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_integration_group
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_81_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_integration_link
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_82_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_parked_domain_for_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_83_data:
      type: object
      properties:
        analyze_rawout:
          type: string
          description: The HTML output from the analysis of the remote server connection.
          example: "Fetching information from remote host: \\u201c10.1.100.35\\u201d\
            \ \\u2026 \\u2026\\nDone\\nFetching information from remote host: \\u201c10.1.100.35\\\
            u201d \\u2026 \\u2026\\nDone\\n\","
        create_rawout:
          type: string
          description: The HTML output from the creation of the remote server connection.
          example: "Basic credential check \\u2026 \\u2026\\nDone\\nFetching information\
            \ from remote host: \\u201c10.1.100.35\\u201d \\u2026 \\u2026\\nDone\\\
            nFetching WHM Version \\u2026\\nDone\\nTesting \\u201cvm5.docs.cpanel.net\\\
            u201d for transfer streaming support with password authentication....<strong>Streaming\
            \ Supported</strong>\\nRemote Server Type: \\u201cWHM1130\\u201d\\n\","
        transfer_session_id:
          type: string
          description: The transfer session's ID.
          example: vm5docscpanelcopya20140430200606V06z
    inline_response_200_83_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_remote_root_transfer_session
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_84_data:
      type: object
      properties:
        transfer_session_id:
          type: string
          description: The transfer session's ID.
          example: vm5docscpanelnoroo201402251939519hmy
    inline_response_200_84_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_remote_user_transfer_session
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_85_data:
      type: object
      properties:
        username:
          type: string
          description: |-
            The cPanel account username.

            **Note:**

             This return **only** appears if the function succeeds.
          format: username
          example: example
    inline_response_200_85_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_subdomain
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_86_data:
      type: object
      properties:
        cp_security_token:
          type: string
          description: The session's security token.
          example: /cpsess1234567890
        expires:
          type: integer
          description: "When the security token expires, in Unix time format."
          format: unix_timestamp
          example: 1401993893
        service:
          type: string
          description: The security token's service.
          example: cpaneld
        session:
          type: string
          description: |-
            The session ID.

            **Note:**

            If the `app` parameter contains a valid application, the URL **also**
            contains the application information.
          example: username:RFw6MUp9S8sRwTSgqaUJWUCq8ZQg2Zkopx5KaTHRNQXBfT3n8xvfBEF9JJC3iiwa
        url:
          type: string
          description: |-
            The security token's URL. The URL contains the values of
            the `preferred_domain`, `session`, and `app` parameters.
          example: https://example.com:2083/cpsess1234567890/login/?session=username:RFw6MUp9S8sRwTSgqaUJWUCq8ZQg2Zkopx5KaTHRNQXBfT3n8xvfBEF9JJC3iiwa&locale=fr
    inline_response_200_86_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: create_user_session
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Created session
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_87_data:
      type: object
      properties:
        ip:
          type: string
          description: The account's primary nameserver's IP address.
          format: ipv4
          example: 192.0.2.0
        nameserver:
          type: string
          description: The account's primary nameserver.
          example: ns1.example.com
        nameserver2:
          type: string
          description: The account's secondary nameserver.
          example: ns2.example.com
        nameserver3:
          type: string
          description: The account's tertiary nameserver.
          example: ns3.example.com
        nameserver4:
          type: string
          description: The account's quaternary nameserver.
          example: ns4.example.com
        nameservera:
          type: string
          description: The account's primary nameservers' IP address.
          format: ipv4
          nullable: true
          example: 192.0.2.1
        nameservera2:
          type: string
          description: The account's secondary nameservers' IP address.
          format: ipv4
          nullable: true
          example: 192.0.2.2
        nameservera3:
          type: string
          description: The account's tertiary nameservers' IP address.
          format: ipv4
          nullable: true
          example: 192.0.2.3
        nameservera4:
          type: string
          description: The account's quaternary nameservers' IP address.
          format: ipv4
          nullable: true
          example: 192.0.2.4
        nameserverentry:
          type: string
          description: The primary nameserver's DNS name.
          nullable: true
          example: dnsentry1
        nameserverentry2:
          type: string
          description: The secondary nameserver's DNS name.
          nullable: true
          example: dnsentry2
        nameserverentry3:
          type: string
          description: The tertiary nameserver's DNS name.
          nullable: true
          example: dnsentry3
        nameserverentry4:
          type: string
          description: The quaternary nameserver's DNS name.
          nullable: true
          example: dnsentry4
        package:
          type: string
          description: The account's plan (package) name.
          example: my_new_package
    inline_response_200_87_metadata_output:
      type: object
      properties:
        raw:
          type: string
          description: The raw output from the account creation operation. This return
            may contain HTML code.
          example: "Checking input data...Forced Dns is enabled.\\nValidating Username......Done\\\
            nValidating IP......Done\\nValidating Contact Email......Done\\n...Done\\\
            nValidating system setup......Done\\nChecking for database conflicts......Done\\\
            nWWWAcct 12.6.0 (c) 2024 WebPros International, LLC...\\n\\n+===================================+\\\
            n| New Account Info |\\n+===================================+\\n| Domain:\
            \ example.com\\n| Ip: 192.0.2.0 (n)\\n| HasCgi: y\\n| UserName: username\\\
            n| PassWord: 123456luggage\\n| CpanelMod: jupiter\\n| HomeRoot: /home\\\
            n| Quota: 1 GB\\n| NameServer1: ns1.example.com\\n| NameServer2: ns2.example.com\\\
            n| NameServer3:\\n| NameServer4:\\n| Contact Email: username@example.com\\\
            n| Package: my_new_package\\n| Feature List: feature_list\\n| Language:\
            \ en\\n+===================================+\\n...Done\\nCustom Account\
            \ Data Provided: no\\nRunning pre creation script (/usr/local/cpanel/scripts/prewwwacct)......Done\\\
            nAdding User...Removing Shell Access (n)\\nSuccess...Done\\nAdding Entries\
            \ to userdata......Done\\nSetting up Mail & Local Domains...localdomains...valiases\
            \ ...vdomainaliases ...vfilters ......Done\\nConfiguring DNS...Zone example.com\
            \ has been successfully added\\n...Done\\nVerifying MX Records and Setting\
            \ up Databases...Reconfiguring Mail Routing:\\nLOCAL MAIL EXCHANGER: This\
            \ server will serve as a primary mail exchanger for example.com's mail.:\\\
            n This configuration has been automatically detected based on your mx\
            \ entries.\\n\\n...Done\\nSetting up Service Subdomains......Done\\nUpdating\
            \ Authentication Databases......Done\\nSetting passwords......Done\\nUpdating\
            \ the userdata cache......Done\\n\\nCreating bandwidth datastore......Done\\\
            nUpdating the dedicated IP address usage cache......Done\\nGenerating\
            \ and installing DKIM keys......Done\\nEnabling Apache SpamAssassin......Done\\\
            nEnabling Apache SpamAssassin Spam Box......Done\\nSending Account Information......Done\\\
            nRunning post creation scripts (/usr/local/cpanel/scripts/legacypostwwwacct,\
            \ /usr/local/cpanel/scripts/postwwwacct, /usr/local/cpanel/scripts/postwwwacctuser)......Done\\\
            nwwwacct creation finished\\nAccount Creation Complete!!!...Account Creation\
            \ Ok...Done\\n"
      description: An object that contains the function's raw output information.
    inline_response_200_87_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: createacct
        output:
          $ref: "#/components/schemas/inline_response_200_87_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Account Creation Ok
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_88_data:
      type: object
      properties:
        server:
          type: string
          description: |-
            The server's database engine.
            * `mysql`
            * `mariadb`
          example: mysql
          default: mysql
          enum:
          - mysql
          - mariadb
        version:
          type: string
          description: "The version number, in `major`.`minor` format."
          example: "8.0"
    inline_response_200_88_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: current_mysql_version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_89_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: deactivate_zone_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_90_metadata_output:
      type: object
      properties:
        messages:
          type: array
          description: An array of status messages.
          items:
            type: string
            example: "Found archive: /home/example/example.tar.gz"
        warnings:
          type: array
          description: An array of warning messages.
          items:
            type: string
            example: This is a warning message.
    inline_response_200_90_metadata:
      type: object
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_account_archives
        output:
          $ref: "#/components/schemas/inline_response_200_90_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_91_metadata:
      properties:
        command:
          type: string
          description: The name of the method called.
          example: delete_account_enhancement
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_92_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_configclusterserver
        name:
          type: string
          description: The remote configuration cluster server's name.
          example: example.com
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_93_data:
      type: object
      properties:
        ips_failed:
          type: object
          additionalProperties:
            type: string
            description: A failed IP address and the error message.
          description: An object that contains the IP addresses that the function
            failed to remove from the _Trusted Hosts_ list.
          example:
            "5.5": "Invalid IP address or range: “5.5”"
        ips_removed:
          type: array
          description: An array of IP addresses that the function removed from the
            _Trusted Hosts_ list.
          example:
          - 192.168.0.1
          - 2001:db8::1
          items:
            type: string
    inline_response_200_93_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_cpgreylist_trusted_host
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_94_data:
      type: object
      properties:
        ips_failed:
          type: object
          additionalProperties:
            type: string
            description: |-
              The reason why the system failed to add the IP address to the list.

              **Note:**

               The IP address is the property name.
            example: Invalid IP address or range "192.68.0.1"
          description: Information about IP addresses that the system failed to add
            to the list.
          example:
            "192.168.0.1": "This is why, alpha."
            "192.168.9.1": "This is why, beta."
        ips_removed:
          type: array
          description: The IP addresses that the function removed from the list.
          items:
            type: string
            format: ipv4
            example: 192.168.0.1
        list_name:
          type: string
          description: |-
            The cPHulk list's name.
            * `black`
            * `white`
          example: white
          enum:
          - black
          - white
        requester_ip:
          type: string
          description: The requester's IP address.
          format: ipv4
          example: 192.168.0.1
        requester_ip_is_whitelisted:
          type: integer
          description: |-
            Whether the requester's IP address exists on cPHulk's whitelist.
            * `1` - Whitelisted.
            * `0` - **Not** whitelisted.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_94_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_cphulk_record
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_95_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_customizations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_96_data:
      type: object
      properties:
        type:
          type: string
          description: |-
            The type of domain that the function deleted.
            * `addon` — An addon domain.
            * `parked` — A parked (alias) domain.
            * `sub` — A subdomain.
            * `null` — The domain does not exist on the server.
          nullable: true
          example: addon
          enum:
          - addon
          - parked
          - sub
        username:
          type: string
          description: |-
            The cPanel user that owned the domain.
            * A cPanel account username.
            * `null` — The function did **not** find a cPanel account that owns the given domain.
          format: domain
          example: username
    inline_response_200_96_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_domain
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_97_data:
      type: object
      properties:
        deleted_featurelist:
          type: string
          description: The deleted feature list's name.
          example: TestList
    inline_response_200_97_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_featurelist
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_98_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_hook
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_99_data:
      type: object
      properties:
        status:
          type: integer
          description: |-
            Whether the function was successful.

            * `1` — Success.
            * `0` — Failure.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_99_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_rpm_version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_100_data_removed_vhost_data:
      type: object
      properties:
        ip_port:
          type: array
          description: The IP address where the virtual host data resided and its
            port number.
          example:
          - 192.0.2.0
          - "443"
          items:
            type: string
        is_ssl:
          type: integer
          description: |-
            Whether the virtual host was SSL.
            * `1` — The host was SSL.
            - `0` — The host was **not** SSL.
          example: 1
          enum:
          - 0
          - 1
        primary_on_ip_port:
          type: string
          description: The domain name that the removed virtual host used.
          format: domain
          example: example.net
        servername:
          type: string
          description: The name of the deleted domain.
          format: domain
          example: example.com
        vhost_entry:
          type: string
          description: The output text.
          example: |
            <VirtualHost 192.0.2.0 :443>
            ServerName example.com
            ServerAlias [...]
    inline_response_200_100_data:
      type: object
      properties:
        output:
          type: array
          description: Shows the status of the deletion.
          example:
          - Deleting the SSL host for example.com
          - Done.
          items:
            type: string
        removed_vhost_data:
          type: array
          description: The virtual host data that the script removed.
          items:
            $ref: "#/components/schemas/inline_response_200_100_data_removed_vhost_data"
    inline_response_200_100_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delete_ssl_vhost
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_101_data:
      type: object
      properties:
        file:
          type: string
          description: The SSH key file's name.
          example: /root/.ssh/test
    inline_response_200_101_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: deletesshkey
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_102_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delip
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: "eth0:cp2 is now down, 10.1.1.1 has been removed"
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_103_data:
      type: object
      properties:
        pkg:
          type: string
          description: The deleted hosting plan's name.
          example: package1
    inline_response_200_103_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: delpkgext
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_104_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: disable_authentication_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_105_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: disable_autossl
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_106_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: disable_cpgreylist
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_107_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: disable_cphulk
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_108_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system removed the DKIM record.
          example: example.com
        msg:
          type: string
          description: Information about the removed DKIM record.
          example: "[REMOVE:TXT@default._domainkey:v=DKIM1; k=rsa; p=MIGfMAOGCSqGSIb3DQEBAQUAA4GNADCBiLMNOpQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO/xJtrPZKskZF8/sU0zWGTqKUOErlyJfoJzMDUv3/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB;]"
        status:
          type: integer
          description: |-
            Whether the system removed the domain's DKIM record on the DNS server.
            - `1`  — The system removed the domain's DKIM record.
            - `0`  — The system did *not* remove the domain's DKIM record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_108_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contains information about the removal
            of a domain's DKIM record on the DNS server.
          items:
            $ref: "#/components/schemas/inline_response_200_108_data_payload"
    inline_response_200_108_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: disable_dkim
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_109_data_domains:
      type: object
      properties:
        disabled:
          type: integer
          description: |-
            Whether the system disabled DNSSEC.
            * `1` - Disabled.
            * `0` - The system failed to disable DNSSEC.
          example: 1
          enum:
          - 0
          - 1
        domain:
          type: string
          description: The domain for which the system disabled DNSSEC.
          format: domain
          example: example.com
    inline_response_200_109_data:
      type: object
      properties:
        domains:
          type: array
          description: An array of objects that contains information about each domain.
          items:
            $ref: "#/components/schemas/inline_response_200_109_data_domains"
    inline_response_200_109_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: disable_dnssec_for_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_110_data_failures_to_disable:
      type: object
      properties:
        failure:
          type: string
          description: A description of the failure to disable the identity provider
            module for that module.
          example: An informative failure message.
        service_name:
          type: string
          description: A cPanel service for which the system failed to disable the
            external authentication identity provider.
          example: whostmgrd
    inline_response_200_110_data_payload:
      type: object
      properties:
        disabled_services:
          type: array
          description: An array of the cPanel services for which the external authentication
            identity provider was previously disabled.
          example:
          - cpaneld
          - webmaild
          items:
            type: string
        failures_to_disable:
          type: array
          description: An array of objects containing the cPanel services for which
            the system fails to disable the module.
          items:
            $ref: "#/components/schemas/inline_response_200_110_data_failures_to_disable"
        provider_failure:
          type: string
          description: A description of the failure.
          example: |
            (ERR mcddbv) The system failed to load the module “Cpanel::Security::Authn::Provider::Facebook“ because of an error: Can't locate Cpanel/Security/Authn/Provider/Facebook.pm in @INC (@INC contains: /usr/local/cpanel /usr/local/cpanel/3rdparty/perl/514/lib/perl5/cpanel_lib/i386-linux-64int /usr/local/cpanel/3rdparty/perl/514/lib/perl5/cpanel_lib /usr/local/cpanel/3rdparty/perl/514/lib/perl5/5.14.4/i386-linux-64int /usr/local/cpanel/3rdparty/perl/514/lib/perl5/5.14.4 /opt/cpanel/perl5/514/site_lib/i386-linux-64int /opt/cpanel/perl5/514/site_lib /var/cpanel/perl) at (eval 143) line 1.
            BEGIN failed--compilation aborted at (eval 143) line 1.
        provider_name:
          type: string
          description: The external authentication identity provider to disable.
          example: facebook
        provider_namespace:
          type: string
          description: The external authentication identity provider module's namespace.
          example: Cpanel::Security::Authn::Provider::Facebook
    inline_response_200_110_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about the external
            authentication identity provider module failures.
          items:
            $ref: "#/components/schemas/inline_response_200_110_data_payload"
    inline_response_200_110_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: disable_failing_authentication_providers
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_111_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: disable_market_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_112_data_userdata_customlog:
      type: object
      properties:
        format:
          type: string
          description: The custom log's format. A valid Apache log format.
          example: combined
        target:
          type: string
          description: An Apache custom log's location. The absolute path to the log
            file.
          example: /usr/local/apache/domlogs/example.com
    inline_response_200_112_data_userdata_scriptalias:
      type: object
      properties:
        path:
          type: string
          description: The path to Apache's CGI scripts. The url alias redirects to
            this location. A valid URL or absolute file path.
          example: /home/user/public_html/cgi-bin/
        url:
          type: string
          description: The alias URL. This URL redirects to the path URL. A valid
            URL or file path.
          example: /cgi-bin/
    inline_response_200_112_data_userdata:
      type: object
      properties:
        customlog:
          type: array
          description: A list of objects of Apache log information.
          items:
            $ref: "#/components/schemas/inline_response_200_112_data_userdata_customlog"
        documentroot:
          type: string
          description: The path to the domain's document root. A valid filepath.
          example: /home/username/public_html
        group:
          type: string
          description: The account's group name. A valid group name.
          example: reseller_username
        hascgi:
          type: integer
          description: |-
            Whether CGI is enabled for the account.
            - 1  Enabled.
            - 0  Disabled.
          example: 1
          enum:
          - 0
          - 1
        homedir:
          type: string
          description: The path to the domain's home directory. The absolute path
            to the domain's home directory.
          example: /home/username
        ip:
          type: string
          description: The domain's IP address. A valid IP address.
          example: 10.0.0.1
        owner:
          type: string
          description: The WHM user who owns the cPanel account. A valid WHM username.
          example: root
        phpopenbasedirprotect:
          type: integer
          description: |-
            Whether the PHP open_basedir tweak is enabled.
            - 1  Enabled.
            - 0  Disabled.
          example: 1
          enum:
          - 0
          - 1
        port:
          type: integer
          description: Apache's port to access the domain. A valid port number.
          example: 80
        scriptalias:
          type: array
          description: an object containing Apache ScriptAlias information.
          items:
            $ref: "#/components/schemas/inline_response_200_112_data_userdata_scriptalias"
        serveradmin:
          type: string
          description: The account owner's contact email address. A valid email address.
          example: owner@example.com
        serveralias:
          type: string
          description: The domain's aliases. A space-separated list of domain aliases.
          example: parkeddomain.com www.parkeddomain.com seconddomain.com
        servername:
          type: string
          description: The main domain on the domain's account. A valid domain name.
          example: example.com
        usecanonicalname:
          type: string
          description: |-
            The domain's setting for canonical names (CNAMEs).
            - On
            - Off
          example: "Off"
        user:
          type: string
          description: The cPanel account username. A valid cPanel username.
          example: user
        userdirprotect:
          type: string
          description: |-
            The domain's setting for the Apache mod_userdir Tweak.
            - On
            - Off
          example: "Off"
      description: The domain information.
    inline_response_200_112_data:
      type: object
      properties:
        userdata:
          $ref: "#/components/schemas/inline_response_200_112_data_userdata"
    inline_response_200_112_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: domainuserdata
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Obtained userdata.
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_113_data:
      type: object
      properties:
        zone:
          type: array
          description: An array of objects of zone information. This array contains
            the `record` array of objects.
          items:
            anyOf:
            - $ref: "#/components/schemas/a"
            - $ref: "#/components/schemas/a6"
            - $ref: "#/components/schemas/aaaa"
            - $ref: "#/components/schemas/asfdb"
            - $ref: "#/components/schemas/caa"
            - $ref: "#/components/schemas/cname"
            - $ref: "#/components/schemas/dname"
            - $ref: "#/components/schemas/ds"
            - $ref: "#/components/schemas/hinfo"
            - $ref: "#/components/schemas/loc"
            - $ref: "#/components/schemas/mx"
            - $ref: "#/components/schemas/ns"
            - $ref: "#/components/schemas/ptr"
            - $ref: "#/components/schemas/rp"
            - $ref: "#/components/schemas/soa"
            - $ref: "#/components/schemas/srv"
            - $ref: "#/components/schemas/sshfp"
            - $ref: "#/components/schemas/txt"
    inline_response_200_113_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: dumpzone
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Zone Serialized
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_114_data:
      type: object
      properties:
        additional_pkg_prefixes:
          type: array
          description: "A list of any additional package prefixes, beyond `ea`, that\
            \ the server is using."
          items:
            type: string
            example: altea
    inline_response_200_114_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ea4_get_additional_pkg_prefixes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_115_data:
      type: object
      properties:
        packages:
          type: array
          description: A list of the currently installed packages.
          items:
            type: string
            example: ea-apache24
    inline_response_200_115_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ea4_get_currently_installed_packages
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_116_data_validation_data:
      type: object
      properties:
        not_on_server:
          type: array
          description: An array of packages in the profile that do not exist in any
            of the server's yum repositories.
          example:
          - ea-apache24
          - ea-php74
          items:
            type: string
    inline_response_200_116_data_cpanel:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the cPanel & WHM-provided EasyApache 4 profile's settings are active.
            * `1` - Active.
            * `0` - Inactive.
          example: 1
          enum:
          - 0
          - 1
        desc:
          type: string
          description: A description of the profile.
          example: The currently installed packages on the server.
        name:
          type: string
          description: The profile name.
          example: No PHP
        pkgs:
          type: array
          description: An array of RPM packages that the profile includes.
          example:
          - ea-apache24
          - ea-php74
          items:
            type: string
        tags:
          type: array
          description: Labels that highlight key attributes of a profile.
          example:
          - ea-apache24
          - ea-php74
          items:
            type: string
        validation_data:
          $ref: "#/components/schemas/inline_response_200_116_data_validation_data"
        version:
          type: string
          description: The profile's current version ID.
          example: "1.2"
    inline_response_200_116_data_custom:
      type: object
      properties:
        desc:
          type: string
          description: A description of the profile.
          example: The currently installed packages on the server.
        name:
          type: string
          description: The profile name.
          example: No PHP
        path:
          type: string
          description: The file name of the profile.
          example: default.json
        pkgs:
          type: array
          description: An array of RPM packages that the profile includes.
          example:
          - ea-apache24
          - ea-php74
          items:
            type: string
        tags:
          type: array
          description: Labels that highlight key attributes of a profile.
          example:
          - Apache 2.4
          - PHP 7.4
          items:
            type: string
        validation_data:
          $ref: "#/components/schemas/inline_response_200_116_data_validation_data"
        version:
          type: string
          description: The profile's current version ID.
          example: "1.2"
    inline_response_200_116_data:
      type: object
      properties:
        cpanel:
          type: array
          description: An array of cPanel & WHM-provided EasyApache 4 profile settings
            objects.
          items:
            $ref: "#/components/schemas/inline_response_200_116_data_cpanel"
        custom:
          type: array
          description: |-
            An array of custom settings objects.

            **Note:**

            This function returns the custom array when a system administrator-created profile exists.
          items:
            $ref: "#/components/schemas/inline_response_200_116_data_custom"
      additionalProperties:
        type: array
        description: |-
          **Note:**

          * This function returns this array when a third-party vendor-created profile exists.
          * The function may return this array multiple times.
        items:
          type: object
          properties:
            desc:
              type: string
              description: A description of the profile.
              example: The currently installed packages on the server.
            name:
              type: string
              description: The profile name.
              example: No PHP
            path:
              type: string
              description: The file name of the profile.
              example: default.json
            pkgs:
              type: array
              description: An array of RPM packages that the profile includes.
              example:
              - ea-apache24
              - ea-php74
              items:
                type: string
            tags:
              type: array
              description: Labels that highlight key attributes of a profile.
              example:
              - ea-apache24
              - ea-php74
              items:
                type: string
            validation_data:
              type: object
              properties:
                not_on_server:
                  type: array
                  description: An array of packages in the profile that do not exist
                    in any of the server's yum repositories.
                  example:
                  - ea-apache24
                  - ea-php74
                  items:
                    type: string
            version:
              type: string
              description: The profile's current version ID.
              example: "1.2"
    inline_response_200_116_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ea4_list_profiles
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_117_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ea4_metainfo
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_118_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ea4_recommendations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success.
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_119_data:
      type: object
      properties:
        already_exists:
          type: integer
          description: |-
            Whether the filename value already exists.

            **Note**:

             The function only returns this field if the `overwrite` value is `0`, and the specified `filename` value already exists.
            - `1` — Exists.
            - `0` — Does **not** exist.
          example: 1
          enum:
          - 0
          - 1
        path:
          type: string
          description: |-
            The new profile's path.

            **Note**:

             The function only returns this field if it succeeds.
          example: /etc/cpanel/ea4/profiles/custom/new_profile.json
    inline_response_200_119_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ea4_save_profile
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_120_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: edit_hook
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_121_data:
      type: object
      properties:
        status:
          type: integer
          description: |-
            Whether the function succeeded.

            * `1` — Success.
            * `0` — Failure.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_121_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: edit_rpm_version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_122_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: editpkg
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_123_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: editquota
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Set quota for user.
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_124_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: editzonerecord
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: |
            Bind reloading on hostname using rndc zone: [example.com]
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_125_data_records:
      type: object
      properties:
        actiontime:
          type: string
          description: When the delivery attempt happened in `YYYY-MM-DD HH-mm-SS`
            format.
          example: 2012-02-06T14:17:51.000Z
        actionunixtime:
          type: integer
          description: When the delivery attempt happened.
          format: unix_timestamp
          example: 1328559471
        deliveredto:
          type: string
          description: |-
            The delivery attempt's final end point.

            **Note:**

             If the message went to a mailing list, the address will be the mailing list member's address.
          nullable: true
        deliverydomain:
          type: string
          description: The recipient's domain.
          format: domain
          nullable: true
        deliveryuser:
          type: string
          description: The recipient's username.
          nullable: true
        domain:
          type: string
          description: The sender's domain.
          format: domain
          example: example.com
        host:
          type: string
          description: The hostname that received the message.
          format: hostname
          nullable: true
        ip:
          type: string
          description: The recipient's IP address.
          format: ipv4
          nullable: true
        message:
          type: string
          description: The action taken.
          example: Domain example.com has exceeded the max defers and failures per
            hour (5/5 (100%)) allowed. Message discarded.
        msgid:
          type: string
          description: The message ID.
          example: 1RuV0Z-0005NR-BN
        recipient:
          type: string
          description: The recipient's mail address.
          format: email
          example: user@example.com
        router:
          type: string
          description: The mail server's internal router name.
          example: enforce_mail_permissions
        sender:
          type: string
          description: The sender's full email address.
          example: user@example.com
        senderauth:
          type: string
          description: The user authentication.
          format: hostname
          example: localuser
        senderhost:
          type: string
          description: The sender's hostname.
          format: hostname
          example: localhost
        senderip:
          type: string
          description: The sender's IP address.
          example: 127.0.0.1
        sendunixtime:
          type: integer
          description: When the message was sent.
          format: unix_timestamp
          example: 1328559471
        size:
          minimum: 1
          type: integer
          description: The message's size.
          format: bytes
          example: 1653
        spamscore:
          minimum: 0
          type: integer
          description: |-
            The message's spam score.

            **Note:**

            If the spam prevention engine uses a result range from `0` to `1` , the system multiplies the result by `10`.
          example: 5
        transport:
          type: string
          description: The mail transfer agent (MTA).
          nullable: true
        transport_is_remote:
          type: integer
          description: |-
            Whether the mail transfer agent (MTA) is remote.
            * `1` — Remote.
            * `0` — Not remote.
          example: 0
          enum:
          - 0
          - 1
        type:
          type: string
          description: |-
            The delivery status.
            * `success`
            * `defer`
            * `failure`
            * `inprogress`
          example: success
          enum:
          - success
          - defer
          - failure
          - inprogress
        user:
          type: string
          description: The sender's username.
          example: cpanel1
    inline_response_200_125_data:
      type: object
      properties:
        records:
          type: array
          description: An array of objects containing the delivery record.
          items:
            $ref: "#/components/schemas/inline_response_200_125_data_records"
    inline_response_200_125_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: emailtrack_search
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_126_data_records:
      type: object
      properties:
        DEFERCOUNT:
          minimum: 0
          type: integer
          description: The number of deferral events.
          example: 0
        DEFERFAILCOUNT:
          minimum: 0
          type: integer
          description: The number of messages that the system deferred and failed
            to deliver.
          example: 0
        FAILCOUNT:
          minimum: 0
          type: integer
          description: |-
            The number of delivery failures.

            **Note:**

             If a message has three recipients, it can have a total of three failed deliveries.
          example: 0
        INPROGRESSCOUNT:
          minimum: 0
          type: integer
          description: The number of messages currently in progress.
          example: 0
        SENDCOUNT:
          minimum: 0
          type: integer
          description: The number of sent messages.
          example: 14
        SUCCESSCOUNT:
          type: integer
          description: |-
            The number of successful deliveries.

            **Note:**

             If a message has three recipients, it can have a total of three successful deliveries.
          example: 14
        TOTALSIZE:
          minimum: 0
          type: integer
          description: The total size of messages that the server sent.
          format: bytes
          example: 27444
    inline_response_200_126_data:
      type: object
      properties:
        records:
          type: array
          description: An array of objects containing the message information.
          items:
            $ref: "#/components/schemas/inline_response_200_126_data_records"
    inline_response_200_126_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: emailtrack_stats
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_127_data_records:
      type: object
      properties:
        DEFERCOUNT:
          minimum: 0
          type: integer
          description: The number of deferral events.
          example: 0
        DEFERFAILCOUNT:
          minimum: 0
          type: integer
          description: The number of messages that the system deferred and failed
            to deliver.
          example: 0
        DOMAIN:
          type: string
          description: The mailbox's domain.
          format: domain
          example: example.com
        FAILCOUNT:
          minimum: 0
          type: integer
          description: |-
            The number of delivery failures.

            **Note:**

             If you assign a message three recipients, the system can fail to deliver the message three times.
          example: 0
        OWNER:
          type: string
          description: The mailbox's account owner.
          example: root
        PRIMARY_DOMAIN:
          type: string
          description: The mailbox account's primary domain.
          format: domain
          example: example.com
        REACHED_MAXDEFERFAIL:
          type: integer
          description: |-
            Whether the mailbox reached the maximum number of failed deferred messages.
            * `1` — Reached.
            * `0` — Has **not** reached.
          example: 1
          enum:
          - 0
          - 1
        REACHED_MAXEMAILS:
          type: integer
          description: |-
            Whether the mailbox has reached the maximum number of messages allowed per hour.
            * `1` — Reached.
            * `0` — Has **not** reached.
          example: 1
          enum:
          - 0
          - 1
        SENDCOUNT:
          minimum: 0
          type: integer
          description: The number of sent messages.
          example: 14
        SUCCESSCOUNT:
          minimum: 0
          type: integer
          description: |-
            The number of successful deliveries.

            **Note:**

             If you assign a message three recipients, the system can successfully deliver the message three times.
          example: 14
        TOTALSIZE:
          type: integer
          description: The total size of messages sent by the server.
          format: bytes
          example: 27444
        USER:
          type: string
          description: The mailbox's owner.
          example: example
    inline_response_200_127_data:
      type: object
      properties:
        records:
          type: array
          description: An array of objects containing the message information.
          items:
            $ref: "#/components/schemas/inline_response_200_127_data_records"
    inline_response_200_127_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: emailtrack_user_stats
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_128_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enable_authentication_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_129_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enable_cpgreylist
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_130_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enable_cphulk
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_131_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system enabled the DKIM record.
          format: domain
          example: example.com
        msg:
          type: string
          description: The domain's DKIM record status message.
          example: Installed Keys
        status:
          type: integer
          description: |-
            Whether the system enabled the domain's DKIM record on the DNS server.
            * `1` — The system enabled the domain's DKIM record.
            * `0` — The system did **not** enable the domain's DKIM record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_131_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about the enabled
            state of a domain's DKIM records on the DNS server.
          items:
            $ref: "#/components/schemas/inline_response_200_131_data_payload"
    inline_response_200_131_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enable_dkim
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_132_data_domains:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system enabled DNSSEC.
          format: domain
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether the system enabled DNSSEC.
            * `1` - Enabled.
            * `0` - The system failed to enable DNSSEC.

            **Note:**

            This function will **not** return the `nsec_version` and `new_key_id` returns if this return is a `0` value.
          example: 1
          enum:
          - 0
          - 1
        new_key_id:
          type: string
          description: The assigned security key ID. A valid ID.
          example: "2"
        nsec_error:
          type: string
          description: |-
            The domain has a NSEC3 configuration error.

            **Note:**

            The function **only** displays this return if there is a NSEC3 configuration error. An error message.
          example: Error message.
        nsec_version:
          type: string
          description: |-
            The version of DNSSEC the system used.
            * `NSEC3`
            * `NSEC`

            **Note:**

            The function only displays this return if there is a NSEC3 configuration error. The system also returns the error in the `nsec_error` return.
          example: NSEC3
          enum:
          - NSEC3
          - NSEC
    inline_response_200_132_data:
      type: object
      properties:
        domains:
          type: array
          description: An array of objects that contains information about each domain.
          items:
            $ref: "#/components/schemas/inline_response_200_132_data_domains"
    inline_response_200_132_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enable_dnssec_for_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_133_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enable_market_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_134_data_services:
      type: object
      properties:
        monitored:
          type: integer
          description: |-
            Whether the system monitors the service.
            - `1` - Monitored.
            - `0` - Not monitored.
          example: 1
          enum:
          - 0
          - 1
        service:
          type: string
          description: The service's name. A valid service name.
          example: cphulkd
    inline_response_200_134_data:
      type: object
      properties:
        services:
          type: array
          description: An array of objects that contains information about a service
            and its monitoring status.
          items:
            $ref: "#/components/schemas/inline_response_200_134_data_services"
    inline_response_200_134_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enable_monitor_all_enabled_services
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_135_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enqueue_deferred_ssl_installations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_136_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: enqueue_transfer_item
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_137_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system confirmed that a valid DKIM
            key exists.
          format: domain
          example: example.com
        msg:
          type: string
          description: The domain's DKIM key status message.
          example: created new key
        status:
          type: integer
          description: |-
            Whether the system verified that the domain's DKIM key exists.
            * `1` — The system verified the existence of the domain's DKIM key.
            * `0` — The system did **not** verify the existence of the domain's DKIM key.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_137_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about the domain's
            DKIM key validity.
          items:
            $ref: "#/components/schemas/inline_response_200_137_data_payload"
    inline_response_200_137_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ensure_dkim_keys_exist
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed: Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_138_data:
      type: object
      properties:
        app:
          type: array
          items:
            type: string
        key-name*:
          type: string
          description: |-
            The function's output.

            **Note:**

             The system uses the remote function's return name. A valid possible values.
          example: system
    inline_response_200_138_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: execute_remote_whmapi1_with_password
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_139_data:
      type: object
      properties:
        message:
          type: string
          description: |-
            The reason why the configuration check failed.

            **Note:**

             The function **only** returns this parameter if the configuration file contains errors.
          example: "cPanel was unable to automatically merge your Exim configuration\
            \ with the new settings that shipped\nwith the build you have installed\
            \ (11.38.0 (build 9999)) because you have a custom or broken configuration\
            \ which\ncannot be automatically configured.\n    Since this configuration\
            \ update is not critical, we left your previous configuration intact until\n\
            the new configuration can be properly installed.  In order to complete\
            \ this configuration update, you will \nneed to manually merge your configuration\
            \ with the new configuration settings.\n\n\nPlease follow the steps below\
            \ to complete this update:\n\n\t1. <a href='javascript:select_exim_backup();'>Backup\
            \ your existing configuration</a>\n\t2. <a href='javascript:select_exim_advanced();'>Notate\
            \ any custom changes  you have made in the ACL section in the 'Advanced\
            \ Editor  Tab'.</a>\n\t3. <a href='javascript:select_exim_reset();'>Choose\
            \ 'Reset cPanel & WHM Exim configuration files, one option at a time,\
            \ until the installed Exim configuration is valid' under the 'Reset Tab'.</a>\n\
            \t4. <a href='javascript:select_exim_advanced();'>Reinstall your customizations\
            \ in the 'Advanced Editor Tab'.</a>\n\n\nCurrent  Config Version: 10.320000\n\
            New Config Version: 10.330000"
    inline_response_200_139_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: exim_configuration_check
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Configuration Update Failed
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_140_data:
      type: object
      properties:
        dnskey:
          type: string
          description: The DNSKEY record value.
          example: AwEAAch8SGW4vE6PjFWA9rbUm0AfTq+gJ0HC/nLu+2axdWHBIStt9lsOzKDorAr4vlmhlJzEzA62s96xp6mZ7XHUyWnkFwLs8obo6upL2in4h1ToOxzVl3lTs8O+kWtDq5/h1nwFlPDs9zpLJhlkTCtx2OTGbvimEYeqwPolUuSQR/Yb
        key_id:
          minimum: 1
          type: integer
          description: The security key's ID.
          example: 12345
    inline_response_200_140_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: export_zone_dnskey
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_141_data_payload:
      type: object
      properties:
        text_b64:
          type: string
          description: The DNS zone’s text representation.
          format: base64
        zone:
          type: string
          description: The DNS zone’s name.
          format: domain
    inline_response_200_141_data:
      properties:
        payload:
          type: array
          description: The requested DNS zone texts.
          example:
          - text_b64: AAAABBCCDdshjke==
            zone: example.com
          - text_b64: BBBBCCDDDdshjke==
            zone: example.net
          items:
            $ref: "#/components/schemas/inline_response_200_141_data_payload"
    inline_response_200_141_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: export_zone_files
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_142_data:
      type: object
      properties:
        key_tag:
          type: integer
          description: The security key's integer value.
          example: 40481
        key_type:
          type: string
          description: |-
            The type of security key.

            * `CSK` — Combined Signing Key.
            * `KSK` — Key Signing Key.
            * `ZSK` — Zone Signing Key.
          example: CSK
    inline_response_200_142_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: export_zone_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_143_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: expunge_mailbox_messages
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_144_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: expunge_messages_for_mailbox_guid
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_145_data_data:
      type: object
      properties:
        jwt:
          type: object
          additionalProperties: {}
          description: "The contents of a JSON Web Token used during registration,\
            \ or updates."
          example:
            callback_url: "https://application-1.com/api/si/servers/registrations/callback,"
            challenge: "ddd13a92-d55e-4818-a960-9776ede6cd74,"
            email: "john.doe@email.example,"
            exp: "1401912171,"
            ips:
            - 1.1.1.1
            - 2.2.2.2
            iss: https://application-1.com
            iss_desc: Sample application
            name: "John Doe,"
            redirect_url: "https://application-1/redirect,"
            scope:
            - "admin:users,"
            - admin:resellers
            - admin:domains
            state: xyz
        private_key:
          type: string
          description: "The name of the private key, if any, used by encryption, signing,\
            \ or other security schemes used when communicating with this connected\
            \ application."
          example: FEF6253E6A122532430D
        privileges_granted:
          type: array
          description: The actual privileges granted by the user.
          example:
          - list-accts
          - list-resellers
          - create-user-session
          - acct-summary
          - connected-applications
          items:
            type: string
        public_key:
          type: string
          description: "The name of the public key, if any, sent to the connected\
            \ application during registration."
          example: AAF6253E6A1225324305623EE
        token_name:
          type: string
          description: "The name of the API token, if any, sent to the connected application\
            \ to allow that application to make API calls on this server."
          example: Application 1 API Token
      additionalProperties: {}
      description: "Data associated with the connected application. There are a few\
        \ predefined elements, but any additional data may be stored here as well."
    inline_response_200_145_data:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_145_data_data"
        name:
          type: string
          description: The name of the connected application.
          example: application-1
    inline_response_200_145_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_connected_application
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_146_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The queried domain.
          example: example.com
        pem:
          type: string
          description: "The domain's DKIM private key, in PEM format."
          example: |
            -----BEGIN RSA PRIVATE KEY-----
            MIICLDCCAdKgAwIBAgIBADAKBggqhkjOPQQDAjB9MQswCQYDVQQGEwJCRTEPMA0G
            A1UEChMGR251VExTMSUwIwYDVQQLExxHbnVUTFMgY2VydGlmaWNhdGUgYXV0aG9y
            aXR5MQ8wDQYDVQQIEwZMZXV2ZW4xJTAjBgNVBAMTHEdudVRMUyBjZXJ0aWZpY2F0
            ZSBhdXRob3JpdHkwHhcNMTEwNTIzMjAzODIxWhcNMTIxMjIyMDc0MTUxWjB9MQsw
            CQYDVQQGEwJCRTEPMA0GA1UEChMGR251VExTMSUwIwYDVQQLExxHbnVUTFMgY2Vy
            dGlmaWNhdGUgYXV0aG9yaXR5MQ8wDQYDVQQIEwZMZXV2ZW4xJTAjBgNVBAMTHEdu
            dVRMUyBjZXJ0aWZpY2F0ZSBhdXRob3JpdHkwWTATBgcqhkjOPQIBBggqhkjOPQMB
            BwNCAARS2I0jiuNn14Y2sSALCX3IybqiIJUvxUpj+oNfzngvj/Niyv2394BWnW4X
            uQ4RTEiywK87WRcWMGgJB5kX/t2no0MwQTAPBgNVHRMBAf8EBTADAQH/MA8GA1Ud
            DwEB/wQFAwMHBgAwHQYDVR0OBBYEFPC0gf6YEr+1KLlkQAPLzB9mTigDMAoGCCqG
            SM49BAMCA0gAMEUCIDGuwD1KPyG+hRf88MeyMQcqOFZD0TbVleF+UsAGQ4enAiEA
            l4wOuDwKQa+upc8GftXE2C//4mKANBC6It01gUaTIpo==
            -----END RSA PRIVATE KEY-----
    inline_response_200_146_data:
      type: object
      properties:
        payload:
          type: array
          description: An array containing information about the domain's DKIM private
            key.
          items:
            $ref: "#/components/schemas/inline_response_200_146_data_payload"
    inline_response_200_146_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_dkim_private_keys
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_147_data_ds_records_digests:
      type: object
      properties:
        algo_desc:
          type: string
          description: A description of the algorithm that the DS record uses.
          example: SHA-1
        algo_num:
          minimum: 1
          type: integer
          description: The IETF-recognized DNSSEC Algorithm Number.
          example: 1
        digest:
          type: string
          description: The actual digest in the DS record.
          example: 2808a14b89118256119d93d24b9e6b673dca092b
    inline_response_200_147_data_ds_records_keys:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the DS key is active.
            * `1` - Active.
            * `0` - Inactive.
          example: 1
          enum:
          - 0
          - 1
        algo_desc:
          type: string
          description: A description of the algorithm that the DS key uses.
          example: RSA/SHA-256
        algo_num:
          type: integer
          description: |-
            The [Internet Engineering Task Force](https://www.ietf.org/) (IETF)-recognized DNSSEC Digest Algorithm Number.
            * `5` - RSA/SHA-1
            * `6` - DSA-NSEC3-SHA1
            * `7` - RSASHA1-NSEC3-SHA1
            * `8` - RSA/SHA-256
            * `10` - RSA/SHA-512
            * `13` - ECDSA Curve P-256 with SHA-256
            * `14` - ECDSA Curve P-384 with SHA-384
          example: 8
          enum:
          - 5
          - 6
          - 7
          - 8
          - 10
          - 13
          - 14
        algo_tag:
          type: string
          description: The short-form reference to the algorithm.
          example: RSASHA256
        bits:
          type: integer
          description: "The DS key's size, in bits."
          format: bits
          example: 2048
        created:
          type: integer
          description: |-
            The key's creation time, in [Unix time format](https://en.wikipedia.org/wiki/Unix_time).
            * `0` - The creation time is unknown.
            * A valid timestamp, in Unix epoch time.
          format: unix_timestamp
          example: 1575395316
        digests:
          type: array
          description: An array of objects of information the registrar uses to populate
            DS records.
          items:
            $ref: "#/components/schemas/inline_response_200_147_data_ds_records_digests"
        flags:
          type: integer
          description: |-
            An integer that determines the `key_type` value.
            * `256` - A Zone Signing Key (ZSK).
            * `257` - A Combined Signing Key (CSK) or Key Signing Key (KSK).
          example: 257
          enum:
          - 256
          - 257
        key_id:
          minimum: 1
          type: integer
          description: PowerDNS's internal identifier.
          example: 1
        key_tag:
          minimum: 1
          type: integer
          description: The DS key's integer value.
          example: 40481
        key_type:
          type: string
          description: |-
            The DS key's signing type.
            * `CSK` - Combined Signing Key.
            * `KSK` - Key Signing Key.
            * `ZSK` - Zone Signing Key.
          example: KSK
          enum:
          - CSK
          - KSK
          - ZSK
        privatekey:
          type: string
          description: The private key in ISC format.
          example: |
            Private-key-format: v1.2
            Algorithm: 8 (RSASHA256)
            Modulus: syUlztxieV1aOtuYAGGA4VBxgquwqPTWQXcDVY1VRFcPgFmLMWYr6dDnN4OUhu2yIulK3KMeZmAc/DmwM+yNdCdYc9y84gw5OyONKduuPGYXfwCiJfOJ+NpGaFomK6fVFN8BMi6LUBytdA4gotPw45Uz8FIbl1KsEOnV4/ZpjiM=
            PublicExponent: AQAB
            PrivateExponent: LxIfsQ7vQPxqbPSuJ8t21b0RVkhOjtZmRaVD1wLf2KkXhZ4BmOVDvJgLaObF6/4gxFOQPBEQN84hT5TI25vYPrAwRAlP/yGmQ4Z2aPIYeEawoqqNoYEa5Xjs1X90i6/+Y8mJSZpGvr4/Y4ElothZTUw+LCYb6o9ulg53yya8KUE=
            Prime1: 4od92Rbx9fSXRIk6eSSdTYN/Do3zgDiCuxmuZaCrrEAlkiK11iz/s4aZGj9+Yk4NfusjXr3NqU1OMfBiIp67Sw==
            Prime2: ynOJdz/E4/B6iBtuz/4y0kasljMtiJnaNIxPr4LG+hByx7WWCnaPm6p8g1pz3FC/w7HAdWq9xzR1VnbRPGcZiQ==
            Exponent1: KUKmkIEWZ0c6ujgIl4IsyK6X2O3QGV2xqiSeWFJwknpInZqG5lDh7jAo+NfxzDQNTz3C/oGx0RGMmZoANfAViw==
            Exponent2: ZcFkmpdmstqv+7EuJUSy7pWvMV9Px5Ts4/SSKLkmoZGa314Zp/CnhapPIwZXrai4effhsCKSeImZYHgf+qgnYQ==
            Coefficient: PBQUQquZB0kG//cy8oVA6nHvKkvVJ8zV4GVlkXHTDylbjoWBTuNWwQ93t5SM7Rz3JePHImWdOVMYNIXpPlp56g==
      description: Each key/value property includes information related the domain's
        DNSSEC record.
    inline_response_200_147_data_ds_records_nsec_details:
      type: object
      properties:
        nsec3_hash_algo_desc:
          type: string
          description: description of the NSEC3 key's algorithm.
          example: SHA-1
        nsec3_hash_algo_num:
          minimum: 1
          type: integer
          description: "The DNSSEC ([Domain Name Security Extensions](https://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions))\
            \ Digest Algorithm Number."
          example: 1
        nsec3_iterations:
          minimum: 1
          type: integer
          description: The number of times that the system rehashes the first hash
            operation.
          example: 7
        nsec3_narrow:
          type: integer
          description: |-
            Whether NSEC3 will operate in Narrow or Inclusive mode.

            **Note:**

            For more information about these modes, read [PowerDNS's DNSSEC documentation](https://doc.powerdns.com/authoritative/dnssec/intro.html).
            * `1` - Narrow mode.
            * `0` - Inclusive mode.
          example: 1
          enum:
          - 0
          - 1
        nsec3_opt_out:
          type: integer
          description: |-
            Whether NSEC3 will create records for all delegations or only for secure delegations.
            * `1` - Create records for all delegations.
            * `0` - Create records **only** for secure delegations.
          example: 0
          enum:
          - 0
          - 1
        nsec3_salt:
          type: string
          description: |-
            The salt value that PowerDNS uses in the hashes.

            **Note:**

            For more information about salt values, read [RFC 5155](https://tools.ietf.org/html/rfc5155#section-3.1.5).
          example: 1a2b3c4d5e6f
        nsec_version:
          type: string
          description: "Whether the domain uses NSEC or NSEC3 ([Next Secure Record\
            \ version 3](https://tools.ietf.org/html/rfc5155)) DNSSEC semantics."
          example: NSEC3
          enum:
          - NSEC
          - NSEC3
      description: |-
        An object with of the domain's [Next Secure Record](https://tools.ietf.org/html/rfc4470) (NSEC) information.

        **Note:**

        If the domain uses NSEC semantics, only the `nsec_version` return appears in this object.
    inline_response_200_147_data_ds_records:
      type: object
      properties:
        keys:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_147_data_ds_records_keys"
          description: An object containing the DS keys on the requested domain.
        nsec_details:
          $ref: "#/components/schemas/inline_response_200_147_data_ds_records_nsec_details"
      description: |-
        An object that contains domain's DS records.

        **Note:**

        If the domain does **not** have a DS record, this function returns an empty object.
      example: "{\"keys\":{\"40481\":{\"active\":1,\"algo_desc\":\"RSA/SHA-256\",\"\
        algo_num\":8,\"algo_tag\":\"RSASHA256\",\"bits\":2048,\"created\":1575395316,\"\
        digests\":[{\"algo_desc\":\"SHA-1\",\"algo_num\":1,\"digest\":\"2808a14b89118256119d93d24b9e6b673dca092b\"\
        },{\"algo_desc\":\"SHA-256\",\"algo_num\":2,\"digest\":\"02a57812deb952438382ed8dd20f00d4af844a55b5324d28bb\"\
        },{\"algo_desc\":\"SHA-384\",\"algo_num\":4,\"digest\":\"4569a6fcfe9e151ec6a163307e67eaa3a9547f16cd80751b0d46eb498bd96743bd4ff7c4f6fd5f76cc780aeb979cd08d\"\
        }],\"flags\":257,\"key_id\":1,\"key_tag\":40481,\"key_type\":\"KSK\",\"privatekey\"\
        :\"Private-key-format: v1.2\\nAlgorithm: 8 (RSASHA256)\\nModulus: syUlztxieV1aOtuYAGGA4VBxgquwqPTWQXcDVY1VRFcPgFmLMWYr6dDnN4OUhu2yIulK3KMeZmAc/DmwM+yNdCdYc9y84gw5OyONKduuPGYXfwCiJfOJ+NpGaFomK6fVFN8BMi6LUBytdA4gotPw45Uz8FIbl1KsEOnV4/ZpjiM=\\\
        nPublicExponent: AQAB\\nPrivateExponent: LxIfsQ7vQPxqbPSuJ8t21b0RVkhOjtZmRaVD1wLf2KkXhZ4BmOVDvJgLaObF6/4gxFOQPBEQN84hT5TI25vYPrAwRAlP/yGmQ4Z2aPIYeEawoqqNoYEa5Xjs1X90i6/+Y8mJSZpGvr4/Y4ElothZTUw+LCYb6o9ulg53yya8KUE=\\\
        nPrime1: 4od92Rbx9fSXRIk6eSSdTYN/Do3zgDiCuxmuZaCrrEAlkiK11iz/s4aZGj9+Yk4NfusjXr3NqU1OMfBiIp67Sw==\\\
        nPrime2: ynOJdz/E4/B6iBtuz/4y0kasljMtiJnaNIxPr4LG+hByx7WWCnaPm6p8g1pz3FC/w7HAdWq9xzR1VnbRPGcZiQ==\\\
        nExponent1: KUKmkIEWZ0c6ujgIl4IsyK6X2O3QGV2xqiSeWFJwknpInZqG5lDh7jAo+NfxzDQNTz3C/oGx0RGMmZoANfAViw==\\\
        nExponent2: ZcFkmpdmstqv+7EuJUSy7pWvMV9Px5Ts4/SSKLkmoZGa314Zp/CnhapPIwZXrai4effhsCKSeImZYHgf+qgnYQ==\\\
        nCoefficient: PBQUQquZB0kG//cy8oVA6nHvKkvVJ8zV4GVlkXHTDylbjoWBTuNWwQ93t5SM7Rz3JePHImWdOVMYNIXpPlp56g==\\\
        n\"}},\"nsec_details\":{\"nsec3_hash_algo_desc\":\"SHA-1\",\"nsec3_hash_algo_num\"\
        :1,\"nsec3_iterations\":7,\"nsec3_narrow\":1,\"nsec3_opt_out\":0,\"nsec3_salt\"\
        :\"1a2b3c4d5e6f\",\"nsec_version\":\"NSEC3\"}}"
    inline_response_200_147_data_domains:
      type: object
      properties:
        domain:
          type: string
          description: The domain name.
          format: domain
          example: example.com
        ds_records:
          $ref: "#/components/schemas/inline_response_200_147_data_ds_records"
    inline_response_200_147_data:
      type: object
      properties:
        domains:
          type: array
          description: An array of objects that contains information about each domain.
          items:
            $ref: "#/components/schemas/inline_response_200_147_data_domains"
    inline_response_200_147_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_ds_records_for_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_148_data_records:
      type: object
      properties:
        frozen:
          type: integer
          description: |-
            Whether the mail message is frozen.
            * `1` — Frozen.
            * `0` — **Not** frozen.
          example: 0
          enum:
          - 0
          - 1
        msgid:
          type: string
          description: The mail message's ID.
          example: 1UotX3-0002HX-Lr
        recipients:
          type: array
          description: An array of the mail message's recipients.
          items:
            type: string
            format: email
            example: pricilla@graceland.com
        sender:
          type: string
          description: The mail message's sender.
          format: email
          example: elvis@graceland.com
        size:
          minimum: 0
          type: integer
          description: The mail message's size in bytes.
          format: bytes
          example: 14336
        time:
          type: integer
          description: The mail message's timestamp.
          format: unix_timestamp
          example: 1371552781
        user:
          type: string
          description: The mail message's owner.
          nullable: true
    inline_response_200_148_data:
      type: object
      properties:
        records:
          type: array
          description: An array of objects that contain of the message information.
          items:
            $ref: "#/components/schemas/inline_response_200_148_data_records"
    inline_response_200_148_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_mail_queue
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_149_data:
      type: object
      properties:
        log:
          type: string
          description: The master log file's contents.
          example: |-
            {"contents":"pkgacct started.\n","partial":0,"timestamp":"2020-03-23 10:43:28 -0500","pid":4073,"indent":0,"type":"out"}
            {"pid":4073,"timestamp":"2020-03-23 10:43:28 -0500","partial":0,"contents":"pkgacct version 10 - user : username - tarball: 1 - target mysql : 5.7 - split: 1 - incremental: 0 - homedir: 0 - mailman: 1 - backup: 0 - archive version: 4 - running with uid 0\n","indent":0,"type":"out"}
            {"type":"out","indent":0,"pid":4073,"timestamp":"2020-03-23 10:43:28 -0500","partial":0,"contents":"pkgacct using ''/usr/local/cpanel/3rdparty/bin/pigz -6 --processes 1 --blocksize 4096 --rsyncable'' to compress archives\n"}
            {"type":"out","indent":0,"partial":0,"timestamp":"2020-03-23 10:43:28 -0500","contents":"pkgacct -- attempting to use daily backup to create an account package\n","pid":4073}
            {"indent":0,"contents":"pkgacct -- could not use daily backup because no daily incremental backup for user username can be found ( check if daily incremental backups are enabled )\n","partial":0,"timestamp":"2020-03-23 10:43:28 -0500","pid":4073,"type":"out"}
            {"type":"out","pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:28 -0500","contents":"pkgacct working dir : /home/cpmove-username","indent":0}
            {"type":"out","indent":0,"pid":4073,"contents":"Copying Reseller Config...","timestamp":"2020-03-23 10:43:28 -0500","partial":1}
            {"indent":0,"pid":4073,"timestamp":"2020-03-23 10:43:28 -0500","partial":0,"contents":"Done\n","type":"out"}
            {"type":"out","indent":0,"pid":4073,"partial":1,"timestamp":"2020-03-23 10:43:28 -0500","contents":"Copying Suspension Info (if needed)..."}
            {"type":"out","timestamp":"2020-03-23 10:43:28 -0500","partial":0,"contents":"Done\n","pid":4073,"indent":0}
            {"type":"out","indent":0,"pid":4073,"contents":"Copying installed SSL certificates and keys...","partial":1,"timestamp":"2020-03-23 10:43:28 -0500"}
            {"type":"out","partial":0,"timestamp":"2020-03-23 10:43:28 -0500","contents":"Performing ApacheTLS component....","pid":4073,"indent":0}
            {"type":"out","indent":0,"contents":"Completed ApacheTLS component.\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073}
            {"type":"out","pid":4073,"contents":"Done\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","indent":0}
            {"indent":0,"contents":"Copying DKIM keys....","partial":1,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"type":"out"}
            {"type":"out","indent":0,"contents":"Done\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073}
            {"type":"out","timestamp":"2020-03-23 10:43:29 -0500","partial":1,"contents":"Copying Bandwidth Data....","pid":4073,"indent":0}
            {"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Performing Bandwidth component....","pid":4073,"indent":0,"type":"out"}
            {"type":"out","contents":"Summary databases ","partial":1,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"indent":0}
            {"type":"out","contents":" done!\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"indent":0}
            {"indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Completed Bandwidth component.\n","type":"out"}
            {"indent":0,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Done\n","pid":4073,"type":"out"}
            {"type":"out","timestamp":"2020-03-23 10:43:29 -0500","partial":1,"contents":"Copying Dns Zones....","pid":4073,"indent":0}
            {"indent":0,"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":1,"contents":"...username.tld...","type":"out"}
            {"indent":0,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Done\n","pid":4073,"type":"out"}
            {"type":"out","indent":0,"pid":4073,"contents":"Copying Mail files....","timestamp":"2020-03-23 10:43:29 -0500","partial":1}
            {"indent":0,"contents":"Done\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"type":"out"}
            {"contents":"Copying proftpd file....","partial":1,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"indent":0,"type":"out"}
            {"indent":0,"pid":4073,"contents":"Done\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"type":"out"}
            {"indent":0,"contents":"Performing Logs component....","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"type":"out"}
            {"type":"out","indent":0,"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":1,"contents":"...log file sizes [0 byte(s)]..."}
            {"type":"out","indent":0,"pid":4073,"contents":"...username.tld-ssl_log...","timestamp":"2020-03-23 10:43:29 -0500","partial":1}
            {"contents":"...username.tld...","timestamp":"2020-03-23 10:43:29 -0500","partial":1,"pid":4073,"indent":0,"type":"out"}
            {"indent":0,"pid":4073,"contents":"Completed Logs component.\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","type":"out"}
            {"type":"out","indent":0,"contents":"Copy userdata...","timestamp":"2020-03-23 10:43:29 -0500","partial":1,"pid":4073}
            {"contents":"Done\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"indent":0,"type":"out"}
            {"indent":0,"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":1,"contents":"Copy custom virtualhost templates...","type":"out"}
            {"type":"out","indent":0,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Done\n","pid":4073}
            {"type":"out","contents":"Copying mailman lists and archives....","partial":1,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"indent":0}
            {"type":"out","indent":0,"pid":4073,"contents":"Done copying mailman lists and archives.\n","timestamp":"2020-03-23 10:43:29 -0500","partial":1}
            {"indent":0,"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Performing Postgresql component....","type":"out"}
            {"indent":0,"pid":4073,"contents":"Completed Postgresql component.\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","type":"out"}
            {"type":"out","pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Performing Mysql component....","indent":0}
            {"contents":"Determining mysql dbs...","timestamp":"2020-03-23 10:43:29 -0500","partial":1,"pid":4073,"indent":0,"type":"out"}
            {"type":"out","pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":1,"contents":"...mysqldump version: 5.7.27...","indent":0}
            {"type":"out","contents":"...mysql version: 5.7...","partial":1,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"indent":0}
            {"type":"out","indent":0,"contents":"Saving mysql privs...","timestamp":"2020-03-23 10:43:29 -0500","partial":1,"pid":4073}
            {"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Done\n","pid":4073,"indent":0,"type":"out"}
            {"indent":0,"contents":"Storing MySQL databases...\n","partial":1,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"type":"out"}
            {"indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Done\n","type":"out"}
            {"type":"out","indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"...Done\n"}
            {"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"...Done\n","indent":0,"type":"out"}
            {"type":"out","indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Completed Mysql component.\n"}
            {"indent":0,"contents":"Performing MysqlRemoteNotes component....","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"type":"out"}
            {"indent":0,"contents":"Completed MysqlRemoteNotes component.\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"type":"out"}
            {"pid":4073,"partial":1,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Copying cpuser file.......","indent":0,"type":"out"}
            {"type":"out","indent":0,"contents":"Done\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073}
            {"partial":1,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Copying crontab file.......","pid":4073,"indent":0,"type":"out"}
            {"indent":0,"pid":4073,"contents":"Done\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"type":"out"}
            {"type":"out","pid":4073,"contents":"Performing Quota component....","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","indent":0}
            {"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Completed Quota component.\n","indent":0,"type":"out"}
            {"type":"out","indent":0,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Performing Integration component....","pid":4073}
            {"pid":4073,"contents":"Completed Integration component.\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","indent":0,"type":"out"}
            {"indent":0,"contents":"Performing AuthnLinks component....","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"type":"out"}
            {"type":"out","pid":4073,"contents":"Completed AuthnLinks component.\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","indent":0}
            {"type":"out","indent":0,"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Performing APITokens component...."}
            {"indent":0,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Completed APITokens component.\n","pid":4073,"type":"out"}
            {"indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Performing DNSSEC component....","type":"out"}
            {"type":"out","indent":0,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Completed DNSSEC component.\n","pid":4073}
            {"type":"out","indent":0,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Performing Custom component....","pid":4073}
            {"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"No custom components to perform.\n","indent":0,"type":"out"}
            {"contents":"Completed Custom component.\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"indent":0,"type":"out"}
            {"type":"out","indent":0,"pid":4073,"contents":"Performing AutoSSL component....","timestamp":"2020-03-23 10:43:29 -0500","partial":0}
            {"indent":0,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Completed AutoSSL component.\n","pid":4073,"type":"out"}
            {"type":"out","pid":4073,"contents":"Storing Subdomains....\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"indent":0}
            {"type":"out","indent":0,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Done\n","pid":4073}
            {"indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Storing Parked Domains....\n","type":"out"}
            {"type":"out","pid":4073,"contents":"Done\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","indent":0}
            {"indent":0,"contents":"Storing Addon Domains....\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"type":"out"}
            {"contents":"Performing Password component....","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"indent":0,"type":"out"}
            {"type":"out","indent":0,"contents":"Completed Password component.\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073}
            {"type":"out","pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Performing DigestShadow component....","indent":0}
            {"type":"out","indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Completed DigestShadow component.\n"}
            {"type":"out","indent":0,"contents":"Copying shell.......","partial":1,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073}
            {"type":"out","indent":0,"pid":4073,"contents":"Done\n","timestamp":"2020-03-23 10:43:29 -0500","partial":0}
            {"indent":0,"pid":4073,"contents":"Performing PublicContact component....","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","type":"out"}
            {"indent":0,"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Completed PublicContact component.\n","type":"out"}
            {"contents":"Performing MailLimits component....","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"indent":0,"type":"out"}
            {"indent":0,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"Completed MailLimits component.\n","pid":4073,"type":"out"}
            {"contents":"Performing LinkedNodes component....","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"pid":4073,"indent":0,"type":"out"}
            {"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Completed LinkedNodes component.\n","pid":4073,"indent":0,"type":"out"}
            {"pid":4073,"contents":"Creating Archive ....","timestamp":"2020-03-23 10:43:29 -0500","partial":1,"indent":0,"type":"out"}
            {"indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"\n","type":"out"}
            {"contents":"splitpkgacctfile is: /home/cpmove-username-split/cpmove-username.tar.gz.part00001\n","partial":0,"timestamp":"2020-03-23 10:43:29 -0500","pid":4073,"indent":0,"type":"out"}
            {"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"\nsplitmd5sum is: e06a2d1f0cb499cb1d5ff15116f02df4\n","indent":0,"type":"out"}
            {"type":"out","pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"\nsplitsize is: 7275\n","indent":0}
            {"type":"out","timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"Done\n","pid":4073,"indent":0}
            {"pid":4073,"timestamp":"2020-03-23 10:43:29 -0500","partial":0,"contents":"\nmysqlsize is: 0\n","indent":0,"type":"out"}
            {"indent":0,"pid":4073,"partial":0,"timestamp":"2020-03-23 10:43:29 -0500","contents":"pkgacct completed\n","type":"out"}
    inline_response_200_149_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_pkgacct_master_log
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_150_data_advice:
      type: object
      properties:
        key:
          type: string
          description: A unique check identifier in the module that returns a status
            message.
          example: ClamAV_not_installed
        suggestion:
          type: string
          description: A message that suggests how to resolve the security issue.
          format: HTML
          nullable: true
          example: Install ClamAV within "<a target=\"_blank\" href=\"https://example.com:2087/scripts2/manage_plugins\">Manage
            Plugins</a>".
        summary:
          type: string
          description: A summary about the module's current security status.
          format: HTML
          example: ClamAV is not installed.
        type:
          type: string
          description: |-
            The level at which the module returns a specific security message.
            * `ADVISE_BAD` - The object contains a security issue.
            * `ADVISE_GOOD` - There are no security issues.
            * `ADVISE_INFO` - The object contains an informational message.
            * `ADVISE_WARN` - The object contains a warning.
          example: ADVISE_BAD
          enum:
          - ADVISE_BAD
          - ADVISE_GOOD
          - ADVISE_INFO
          - ADVISE_WARN
      description: |-
        **Note:**

          This function only returns this object when the `type` return is the `mod_advice` value.
    inline_response_200_150_data_payload:
      type: object
      properties:
        advice:
          $ref: "#/components/schemas/inline_response_200_150_data_advice"
        message:
          type: string
          description: |-
            A message that describes an error.

            **Note:**

              This function only returns this value for the `type` return's `mod_load` and `mod_run` values.
          example: Can't call method "get_raw_conf" on an undefined value at /usr/local/cpanel/Whostmgr/Services/SSH/Config.pm
            line 160.
        module:
          type: string
          description: The name of a module that the Security Advisor checked.
          example: Cpanel::Security::Advisor::Assessors::ClamAV
        type:
          type: string
          description: |-
            The type of security message.

            * `mod_advice` - There is a message from the Security Advisor module.
            * `mod_load` - There was an error preventing the loading of the module.
            * `mod_run` - There was an error preventing the system from completing one of the module's checks.
          example: mod_advice
          enum:
          - mod_advice
          - mod_load
          - mod_run
    inline_response_200_150_data:
      type: object
      properties:
        payload:
          type: array
          description: |-
            **Note:**

             * This function only returns the the `advice` array of objects when the `type` return is the `mod_advice` value.
             * This function only returns the `message` return when the `type` return is the `mod_load` or `mod_run` value.
          items:
            $ref: "#/components/schemas/inline_response_200_150_data_payload"
    inline_response_200_150_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_security_advice
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_151_data_certificate_info:
      type: object
      properties:
        domains:
          type: array
          description: The domains that correspond to the certificate.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` — Self-signed.
            * `0` — **Not** self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The certificate's Common Name.
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's Organization Name.
          example: Writer's Guild of America
        issuer_text:
          type: string
          description: Information about the issuer.
          example: |-
            countryName
            US
            stateOrProvinceName
            Unknown
            localityName
            Unknown
            organizationName
            Unknown
            organizationalUnitName
            Unknown
            commonName
            example.com
            emailAddress
            test@example.com
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` — RSA.
            * `id-ecPublicKey` — ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
        modulus_length:
          type: integer
          description: |-
            The certificate's modulus size.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
        not_after:
          type: integer
          description: The date the certificate expires.
          format: unix_timestamp
          example: 1601467200
        not_before:
          type: integer
          description: The certificate's validation date.
          format: unix_timestamp
          example: 1569844800
      description: An object containing certificate information data.
    inline_response_200_151_data_services:
      type: object
      properties:
        cabundle:
          type: string
          description: |-
            The Certificate Authority (CA) information.

            This function returns an empty string if no CA bundle exists
            for the certificate.
          example: ""
        certificate:
          type: string
          description: The SSL certificate's contents.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIECjCCAvKgAwIBAgIEW7p6xzANBgkqhkiG9w0BAQUFADCBnTELMAkGA1UEBhMC
            VVMxEDAOBgNVBAgMB1Vua25vd24xEDAOBgNVBAcMB1Vua25vd24xEDAOBgNVBAoM
            B1Vua25vd24xEDAOBgNVBAsMB1Vua25vd24xHTAbBgNVBAMMFGphc29uLmRldi5j
            cGFuZWwubmV0MScwJQYJKoZIhvcNAQkBFhhzc2xAamFzb24uZGV2LmNwYW5lbC5u
            ZXQwHhcNMTMwNDI5MjEwNDU5WhcNMTQwNDI5MjEwNDU5WjCBnTELMAkGA1UEBhMC
            VVMxEDAOBgNVBAgMB1Vua25vd24xEDAOBgNVBAcMB1Vua25vd24xEDAOBgNVBAoM
            B1Vua25vd24xEDAOBgNVBAsMB1Vua25vd24xHTAbBgNVBAMMFGphc29uLmRldi5j
            cGFuZWwubmV0MScwJQYJKoZIhvcNAQkBFhhzc2xAamFzb24uZGV2LmNwYW5lbC5u
            ZXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmc8Oxc0RmSzX4eR9W
            LTrqa/TY+qOuP8ClGTgP1FOWSjZnfDTUhnfst/XtA13wJvXw+Pv+IXReUtrx87nl
            jHPwuu/bcJMg4iAufQUlCwUaWbMP8f7yLYPXFAwcgc6jFKCJDOjSImeZhyGBxYp0
            AWx6qiz/WscrV1zs3o8wSqVyouoD2LFzq3bG6M2539DageERnO/UuLTb++DkbH8e
            4v6LX9VQTljMvA0TtPpB7Mnr0Nq+HR/sXHJPdIFn58BVPpl/m3frNqvOcJc/Bt8V
            F0jUG3WN4+/Xr6byRkoVR/X/FYRp2W4ki+Rk357aDnzoVKiTMqLBJ4sXxCU2ipYE
            9FTbAgMBAAGjUDBOMB0GA1UdDgQWBBSiMwrIK+JMVx8ufKnfByp3V+ycoTAfBgNV
            HSMEGDAWgBSiMwrIK+JMVx8ufKnfByp3V+ycoTAMBgNVHRMEBTADAQH/MA0GCSqG
            SIb3DQEBBQUAA4IBAQAdL/oywZw+EMwNGf/e1JqjXull/fgoNMZHxsBwQb2smZuN
            KoTlkf2zDO7yTTIUnrBP1TveIlAejDLMMR7yqVgmDrVM/pl4WQjL/APbrWGExsE8
            JeEu+DjOIEveOVTTXCwaVo8ck2JO3QWZwPeRUZBwifZOfaYa8gwpdcUy8Tu/HX9T
            xsOLv/vQar8JC4Obh5eFrMBp87Obf1m/2Kmpaj9PGQQiiq+HU3r4dZf24bLGESr/
            vPXIfInwZ0Fr4G+OzwDqPgI9nCm13myZ+ZBybL64pp741ReRP1dHQGYnwtht/Dh4
            /vFZEL9Wv/18E4lUCJjMgBIknjWkyt6FtygmB1DS
            -----END CERTIFICATE-----
        certificate_info:
          $ref: "#/components/schemas/inline_response_200_151_data_certificate_info"
        key:
          type: string
          description: The certificate's private key.
          format: pem-private-key
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpQIBAAKCAQEA4FIdZcIKVK5+PtdzVm4CN45BXG5wX7KZ1/dP84MGIwtwxkkX
            hBqw7BawbHlexYXuarSnrHA8hm6RRxv/fRy+zOeg7y8v5CWG52m91GK7qSLxpruY
            gCJGJEK8fj6spbbLjxNd5XAmDwT80uMsq/3E9rGmg/ELY9X9vn5WlErRfi2Qjsiq
            x7AYUvcIkBHPOlRWzZgx2KjMjBU2U0w2RCUjgKgww/6xx2ccnTvn7HGvVjQMkh+1
            UYCdGvT8fR2qJBKHZ5Cjdfc9N304qZCqYMhcrHX2gJqc+9zLtLk7PoEYXu17l6nU
            O3C/IdzBXYWu+UoMzpZ5tc5jKRA3+I7ggKjJlwIDAQABAoIBAQDR4GI648qQolXh
            6+iws+qFGibTGU0wbET+SBjYx/0E6t5P1vEWm3Zu3WehhgkCm6WO1omOj9BBIs/w
            DSUEZNGrmwf64VZYijfm6gs+3EWiINyhWCF9uRORN5NuNquHvDhGHCOc2EnzgYIe
            uYgBP0R6X4phJjS26u8mvMO6qSnKd4wRrOf9ZU73L1VTmhMItshVxH2tuhKurkMV
            jWDAjWeJfycWe4JVgYxM4GA6g5kKi5nrkhpVEsklh1FJZn65U0aWXUpHAm2ihhKf
            Fq9FgC+8Xz8UAtf8JYbAW3D1E/0lRZuLt+5cosK8b2+9CIUNRjYMtyXlbI0RGwl9
            FO/9sv05AoGBAP0jfp8qUqf4u4pkE1W2SzzbQ6oYKYHTMiORVHi2qysgrxAZFKGj
            fW7c7UTpxlCaqqDBRQA+lZH16xVD3idwYvmw/9AKxSozxe3wKbQFRM+XYHc7la+2
            TiQiJgjflEadSa57FNgBB7SpeEzaIfmGBYWJXkM+6wuaGUz5qZs/SFJNAoGBAOLb
            Ouh7CWTk5oISVBfqxnwFEpaMHT5vpzNBwUWUVMhrxNZP3OVSN++qKxpJhCF/M2no
            OdxX7CYkrGvHFTvV9WKpa0kYQGms+ybyoMOYxJax8rV+Zq9gg2QKwaakoJljaAlX
            5yUuy32YhLxWodQhE7mlhAUyXIuNLVuYee0Y2ZVzAoGAaV6tBnQHlAPljOW7ZqJL
            Dzn2IIeOP4w6ArQsBVOETJ9+P6UxAVecjtlHqrfk5Qh8ng3VOxTSDb/f6yok/yW5
            DVawJVlWWQrUCQc/VMActIy+iuMym8G3JTNRwb/PaNVwJkD1nDRRkNI6UUM7gTJY
            eg2EP1mhXWL3xSLnhsgAwsECgYEAqnm2xfeXsqM0+bAOU77RE2e4dTuryjybeDBE
            riXupIIf9DElvYrQkCDfrSxrx8RP/ZlOyd+kjXFnxMJhmYqKkW7hOZeo6ADe54DT
            AMmvidMFog/v2ID9m9NdfP4f1cTW7JaLE+0bbDGOJf4wNDn7GbphAIq88v3PhRKL
            JXpUIDMCgYEA2P7D/oZu+dEPW8JhUsDDXY238ZDbQzWBi6n1uUnMJCnUABd/mvuV
            ILR/iSBHmt9UdH2YECwry58xFjhXwfTvPc155PiJddjENGFUqohjl0wh0VzLEyfF
            Vb6iVMIdrycD/O4U26I3Qco2lQYPoPgrBkAGJ5/GCjkTiL0JssoMXa4=
            -----END RSA PRIVATE KEY-----
        service:
          type: string
          description: |-
            The service that the certificate corresponds to.

            * `ftp`
            * `exim`
            * `dovecot`
            * `cpanel`
          example: ftp
          enum:
          - ftp
          - exim
          - dovecot
          - cpanel
    inline_response_200_151_data:
      type: object
      properties:
        services:
          type: array
          description: An array of objects containing the certificate information
            for each service.
          items:
            $ref: "#/components/schemas/inline_response_200_151_data_services"
    inline_response_200_151_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_service_ssl_components
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_152_data_payload:
      properties:
        cab:
          type: string
          description: The CA bundle's contents.
          format: pem-certificate
          nullable: true
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDYzCCAkugAwJBAgIFAamFDR8wDQYJKoZIhvcNAQELBQAwFDESMBAGA1UEAwwJ
            c2lza28udGxkMB4XDTE5MDYyNjE1MDYxNVoXDTIwMDYyNTE1MDYxNVowFDESMBAG
            A1UEAwwJc2lza28udGxkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
            q0wqPMMP8Q6RiRXe57UXExg3PeAAd00xxFRr6pMwPZtWrkcoYV0kfHEZ7nJmD6Bd
            UnuXrDqTb1z78CeqUFt5+ZQtjGt55CjPFaUkHbNErZm2l8bKB6sjnETZ7ee4AXx/
            maf/jhgZ0o4SMAS5h87NOoF5yg/Y0tnuncpu/RyzeXzJLxy0Mn0WMGm2w5sXSH4l
            4oaGLorGWyDUfQPjwAwcQsVi97FZ7zElRru//jJ/tqijVLELv1AWudJkuZnJJmKW
            CvkT6YpIIB8UVwbTgnFuZ86Us2Yfe17pMatAVJV8MAbRym3Z4rmWmZr1xrTdoS+L
            Swz4kCffBY5psDRp/WRqAQIDAQABo4G7MIG4MB0GA1UdDgQWBBT22CZM+khxmDvi
            F5LbZVtqm20y8TAfBgNVHSMEGDAWgBT22CZM+khxmDviF5LbZVtqm20y8TAJBgNV
            HRMEAjAAMGsGA1UdEQRkMGKCCXNpc2tvLnRsZIIObWFpbC5zaXNrby50bGSCDXd3
            dy5zaXNrby50bGSCEXdlYm1haWwuc2lza28udGxkghBjcGFuZWwuc2lza28udGxk
            ghF3ZWJkaXNrLnNpc2tvLnRsZDANBgkqhkiG9w0BAQsFAAOCAQEAWDXl/WRLHPxa
            nvziWJIcM8jkSxaaUKbRPsow1XVDj3HjpDYbKkYBLfZlmaDmeU6SnmGKFYi0wSDw
            +WkK97ja3+ONHFRlYHO2dHoQrxklrqOqyV2KB0HB6YgHCl9A2b6feC31Zly2i6jc
            3SWEpYIQHecRnELc6WKkfqm0oTJZH0h7Da4WgR10Myi3GE799g0xMO/KCxPF2mDS
            6Ukr/bez9a07zCODrf4o91PrCc7r85dZq8jt02wtGMPg+zvr3FfcVPFaPZ1Oppsx
            rUNVz5W/TqdtxZhr9J5PBpSMNiNnKq88KV1zqIJiNsk9qGJbt5mQQpK0enpKqkmr
            ETgwb3sSbw==
            -----END CERTIFICATE-----
        created:
          type: integer
          description: The date the certificate was created.
          format: unix_timestamp
          example: 1538308800
        crt:
          type: string
          description: The certificate's contents.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDYzCCAkugAwIBAgIFAamFDR8wDQYJKoZIhvcNAQELBQAwFDESMBAGA1UEAwwJ
            c2lza28udGxkMB4XDTE5MDYyNjE1MDYxNVoXDTIwMDYyNTE1MDYxNVowFDESMBAG
            A1UEAwwJc2lza28udGxkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
            q0wqPMMP8Q6RiRXe57UXExg3PeAAd00xxFRr6pMwPZtWrkcoYV0kfHEZ7nJmD6Bd
            UnuXrDqTb1z78CeqUFt5+ZQtjGt55CjPFaUkHbNErZm2l8bKB6sjnETZ7ee4AXx/
            maf/jhgZ0o4SMAS5h87NOoF5yg/Y0tnuncpu/RyzeXzJLxy0Mn0WMGm2w5sXSH4l
            4oaGLorGWyDUfQPjwAwcQsVi97FZ7zElRru//jJ/tqijVLELv1AWudJkuZnJJmKW
            CvkT6YpIIB8UVwbTgnFuZ86Us2Yfe17pMatAVJV8MAbRym3Z4rmWmZr1xrTdoS+L
            Swz4kCffBY5psDRp/WRqAQIDAQABo4G7MIG4MB0GA1UdDgQWBBT22CZM+khxmDvi
            F5LbZVtqm20y8TAfBgNVHSMEGDAWgBT22CZM+khxmDviF5LbZVtqm20y8TAJBgNV
            HRMEAjAAMGsGA1UdEQRkMGKCCXNpc2tvLnRsZIIObWFpbC5zaXNrby50bGSCDXd3
            dy5zaXNrby50bGSCEXdlYm1haWwuc2lza28udGxkghBjcGFuZWwuc2lza28udGxk
            ghF3ZWJkaXNrLnNpc2tvLnRsZDANBgkqhkiG9w0BAQsFAAOCAQEAWDXl/WRLHPxa
            nvziWJIcM8jkSxaaUKbRPsow1XVDj3HjpDYbKkYBLfZlmaDmeU6SnmGKFYi0wSDw
            +WkK97ja3+ONHFRlYHO2dHoQrxklrqOqyV2KB0HB6YgHCl9A2b6feC31Zly2i6jc
            3SWEpYIQHecRnELc6WKkfqm0oTJZH0h7Da4WgR10Myi3GE799g0xMO/KCxPF2mDS
            6Ukr/bez9a07zCODrf4o91PrCc7r85dZq8jt02wtGMPg+zvr3FfcVPFaPZ1Oppsx
            rUNVz5W/TqdtxZhr9J5PBpSMNiNnKq88KV1zqIJiNsk9qGJbt5mQQpK0enpKqkmr
            ETgwb3sSbw==
            -----END CERTIFICATE-----
        domains:
          type: array
          description: The domains that the CSR covers.
          example:
          - example.servername.com
          - example.com
          - mail.example.com
          - www.example.com
          - www.example.servername.com
          items:
            type: string
            format: domain
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: example.com
        id:
          type: string
          description: The certificate's identification.
          example: example_servername_com_ce52d_6e643_2813308004_119580f9b01960cjones72bc519206bc
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` — Self-signed.
            * `0` — **Not** self-signed.
          example: 0
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The certificate's Common Name.
          example: example.servername.com
        issuer.organizationName:
          type: string
          description: The certificate's Organization Name.
          example: Organization
        key:
          type: string
          description: The private key's text.
          format: pem-private-key
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEAq0wqPMMP8Q6RiRXe57UXExg3PeAAd00xxFRr6pMwPZtWrkco
            YV0kfHEZ7nJmD6BdUnuXrDqTb1z78CeqUFt5+ZQtjGt55CjPFaUkHbNErZm2l8bK
            B6sjnETZ7ee4AXx/maf/jhgZ0o4SMAS5h87NOoF5yg/Y0tnuncpu/RyzeXzJLxy0
            Mn0WMGm2w5sXSH4l4oaGLorGWyDUfQPjwAwcQsVi97FZ7zElRru//jJ/tqijVLEL
            v1AWudJkuZnJJmKWCvkT6YpIIB8UVwbTgnFuZ86Us2Yfe17pMatAVJV8MAbRym3Z
            4rmWmZr1xrTdoS+LSwz4kCffBY5psDRp/WRqAQIDAQABAoIBABR96A+cxitwMrjT
            hPbzEu+V1gXw5h1ffrSd5MsLEJpOGvB+UrZTDipU3WVJCiyUYpWbc2mHGFwaI4l3
            NUinqM/SiiBiOxKwTxWny8pBx9V8rfs6LLD+KCRpmCh9r+V9n0Yics/s0in+FO7p
            ocg9VQ/KrWcevjF7ILB/pwdgh5fgw3lFf1Dp3eRG2LLh+ZuY+Q2pYkMrJhSQ0H/f
            TpuYLtZ+6tGzDvnorDJZ4H6kj+7J4UXIXWSxQe0m+hkPe/YU9e9zt4vaiHSu21PC
            NKxnmBASgnLP/0lKPGzTNhc7G4HkssfqYJ1l2W+mH2sFiQKee45EQkyhcFInDzwu
            g47CIoECgYEA3/OPyAEb4WJ1NIC+1tUunUZLC18FDwO2EqoJ2adblRkG2q8DzUPg
            pzQpMEo07dwVXedN7TBehl8cN1sfBfmHdznCsW6zNbZ4481hucle1fXx0/05Hajj
            /A/w3NBxjPa45Zlu6Xcot/qy7mONz+xy/oubDI8BnXxJmHIywtsFhlcCgYEAw8+i
            EAhULx5B7hcmCBruuox6stNDleoAAxuaexylvQS5Q9Kse4cEA/ti7PF5b8kDmIH4
            b6JRenaiFmFNJTbAmwQY5iaobulpEA948H6uI7A2Al3NVJacLSmTod58I5ERsDhn
            JoBAtjZuVCZjAOalnyPC4gyFcPY4O7dJwmQDa2cCgYEAsxj6ZG2WmWF+7/UCKZal
            R7ueakKcLgy+wCBh7kFr+UnhdGPAe5iMAcuyIN9Hgu2d3NINPOGQxo8rZo2lusZ6
            cnur2u/3u73o4e0u+UA0apHcyrbYxYJ6iOtKqZy9IolxBpT04RqdYrzH+eN91sl2
            kWCeJ6X6GbL6vEKfm7tCqNMCgYALyW7e+jFfGLotQ9V1PXHLZvNn2lHCL3DKvxmg
            eYv8gdFJJOBfGzSBrNs6mhqOQRJnVsOGrMWs0oFVSYwkRlR3wFpjWEZhTsmVPukv
            yOBgo5XMtKrMgbhq+4q4frUISw4+hlanOacrkME5bYoeHsQvfS6Y/tn1f8zIw3K8
            MdsG1wKBgQCFPy/bzPSVV9PI+IVAlOYlbtfTCAQGQ3jG44e1b5wkwm6Di0p44kr4
            5wi4Bxy+NuCDEIksTuo2/ZtjFlrBu233mQImqZp6b5uTeB27vwAxiX55pqsU4gme
            eFdttHhA6s5/wOx9E3JRFI1ucerieUROQC+bt6NLvSu7V+amdgn7bw==
            -----END RSA PRIVATE KEY-----
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` — RSA.
            * `id-ecPublicKey` — ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
          example: ab4c2a3cc30ff10e918915dee7b5171318373de000774d31c4546bea93303d9b56ae4728615d247c7119ee72660fa05d527b97ac3a936f5cfbf027aa505b79f9942d8c6b79e428cf15a5241db344ad99b697c6ca07ab239c44d9ede7b8017c7f99a7ff8e1819d28e123004b987cecd3a8179ca0fd8d2d9ee9dca6efd1cb3797cc92f1cb4327d163069b6c39b17487e25e286862e8ac65b20d47d03e3c00c1c42c562f7b159ef312546bbbffe327fb6a8a354b10bbf5016b9d264b999c92662960af913e98a48201f145706d382716e67ce94b3661f7b5ee931ab4054957c3006d1ca6dd9e2b996999af5c6b4dda12f8b4b0cf89027df058e69b03469fd646a01
        modulus_length:
          type: integer
          description: |-
            The certificate's key's modulus length.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The date the certificate expired.
          format: unix_timestamp
          example: 1569844800
        not_before:
          type: integer
          description: The date the certificate started.
          format: unix_timestamp
          example: 1538308800
        signature_algorithm:
          type: string
          description: The certificate's OID hash algorithm signature.
          example: sha256WithRSAEncryption
        subject.commonName:
          type: string
          description: The certificate's Common Name.
          example: example.com
        users:
          type: array
          description: A list of cPanel account owners.
          example:
          - username
          items:
            type: string
            format: username
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `ev` — Extended Validation.
            * `ov` — Organization Validated.
            * `dv` — Domain Validated.
            * `null` — The system could **not** parse and determine the
            certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
        verify_error:
          type: string
          description: An error message that explains the reason for a verification
            error.
          example: DEPTH_ZERO_SELF_SIGNED_CERT
    inline_response_200_152_data:
      type: object
      properties:
        payload:
          type: array
          description: Information about the certificate.
          items:
            $ref: "#/components/schemas/inline_response_200_152_data_payload"
    inline_response_200_152_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_ssl_certificates_for_fqdns
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_153_data_crt_subject.commonName:
      type: object
      properties:
        commonName:
          type: string
          description: The certificate's Common Name.
          example: example.com
      description: An object containing the certificate's Common Name.
    inline_response_200_153_data_crt:
      type: object
      properties:
        created:
          type: integer
          description: The date the certificate was created.
          format: unix_timestamp
          example: 1538308800
        domains:
          type: array
          description: A list of the certificate's associated domains.
          example:
          - example.com
          - subdomain.example.com
          items:
            type: string
            format: domain
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
        encryption_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` — RSA.
            * `id-ecPublicKey` — ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        id:
          type: string
          description: The certificate's ID.
          example: example1_com_e353a_5bc13_1408033388_9a1d40aff655f98fed7206e5af466065
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` — Self-signed.
            * `0` — Not self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The certificate's issuer.
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's Organization Name.
          example: Organization
        issuer_text:
          type: string
          description: The full text of issuer information.
          example: |-
            commonName
            subdomain.example.com
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
          example: e353aa25cc8ad05d3225611e4410c0270c11b2d46f88705d3d179a23102ab24ee167c1a9070b9f554e83bade1b84256e11c5a0cb2ac96b96f28e802b11c721d73fbfe61dd9839974a6fce4e17915c0fbf885056f18656041cf70db460b22cab5fd2502491e4ab9f0d2cb727480e0ebd62e83870acda31bfa2d4625efd82234f9729f351ea02fb162609c1654c11b5dec468539a3bb83073a85f78bcf577cd8b718501145cccd89d7adb0bb18c872e7303a15e2c75a6ab315c7fa099e4351a4f0ff126c2693f71d9f21d9f798b94bb689277083fea8dcc01b6af268d0ad8b7a481f8a179d07639cdf3290c93723937a767c400a8ce4b1ca19f0a7117084d5bc13
        modulus_length:
          type: integer
          description: |-
            The certificate's key's modulus length.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The date the certificate expires.
          format: unix_timestamp
          example: 1601467200
        not_before:
          type: integer
          description: The date the certificate became active.
          format: unix_timestamp
          example: 1569844800
        public_exponent:
          type: string
          description: The certificate's exponent.
          example: "010001"
        signature_algorithm:
          type: string
          description: The certificate's OID hash algorithm.
          example: sha256WithRSAEncryption
        subject.commonName:
          $ref: "#/components/schemas/inline_response_200_153_data_crt_subject.commonName"
        subject_text:
          type: string
          description: The certificate's subject text.
          example: |-
            commonName
            subdomain.example.com
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `dv` — Domain validation.
            * `ev` — Extended validation.
            * `ov` — Organizational validation.
            * `null` — Self-signed certificate.
          nullable: true
          example: dv
          enum:
          - dv
          - ev
          - ov
      description: Information about the certificate.
    inline_response_200_153_data_vhosts:
      type: object
      properties:
        crt:
          $ref: "#/components/schemas/inline_response_200_153_data_crt"
        docroot:
          type: string
          description: The absolute directory path of the primary domain's document
            root.
          format: path
          example: /home/example/public_html
        domains:
          type: array
          description: A list of the virtual host's domains.
          example:
          - example.com
          items:
            type: string
            format: domain
        ip:
          type: string
          description: The virtual host's IP address.
          format: ipv4
          example: 192.168.0.20
        iptype:
          type: string
          description: |-
            The type of IP address.

            * `shared`
            * `dedicated`
          example: dedicated
          enum:
          - shared
          - dedicated
        ipv6:
          type: string
          description: The virtual host's IPv6 address.
          format: ipv6
          example: 2001:0db8:0:0:1:0:0:1
        is_primary_on_ip:
          type: integer
          description: |-
            Whether the certificate's domain is the IP address's primary domain.

            * `1` — Primary domain.
            * `0` — **Not** the primary domain.
          example: 1
          enum:
          - 1
          - 0
        mail_sni_status:
          type: integer
          description: |-
            Whether SNI for mail is enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        needs_sni:
          type: integer
          description: |-
            Whether the virtual host requires SNI to function properly for
            SSL certificates.

            * `1` — Requires SNI.
            * `0` — Does **not** require SNI.
          example: 0
          enum:
          - 1
          - 0
        servername:
          type: string
          description: The virtual host's primary domain.
          format: domain
          example: example.com
        type:
          type: string
          description: |-
            The virtual host's domain type.

            * `addon` — Addon domain.
            * `main` — Main domain on account.
            * `parked` — Parked domain.
            * `sub` — Subomain.
          example: sub
          enum:
          - addon
          - main
          - parked
          - sub
        user:
          type: string
          description: The virtual host's username.
          format: username
          example: example
    inline_response_200_153_data:
      type: object
      properties:
        vhosts:
          type: array
          description: An array of objects containing virtual host information.
          items:
            $ref: "#/components/schemas/inline_response_200_153_data_vhosts"
    inline_response_200_153_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_ssl_vhosts
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_154_data:
      properties:
        log:
          type: string
          description: The logfile's contents.
          format: json
          example: |
            {"contents":{"action":"start","time":1598991042,"child_number":0},"pid":12789,"type":"control","indent":0,"partial":0}
            {"partial":0,"indent":0,"type":"control","pid":12789,"contents":{"time":1598991042,"action":"initiator","child_number":0,"msg":"norootcopy"}}
            {"partial":0,"indent":0,"pid":12789,"type":"control","contents":{"msg":2.3,"child_number":0,"time":1598991042,"action":"version"}}
            {"type":"control","pid":12789,"contents":{"time":1598991042,"queue":"TRANSFER","action":"queue_count","msg":1,"child_number":0},"partial":0,"indent":0}
            {"contents":{"time":1598991042,"action":"queue_size","queue":"TRANSFER","child_number":0,"msg":1},"type":"control","pid":12789,"indent":0,"partial":0}
            {"type":"control","pid":12789,"contents":{"time":1598991042,"queue":"RESTORE","action":"queue_count","child_number":0,"msg":1},"partial":0,"indent":0}
            {"partial":0,"indent":0,"pid":12789,"type":"control","contents":{"child_number":0,"msg":1,"time":1598991042,"action":"queue_size","queue":"RESTORE"}}
            {"partial":0,"indent":0,"pid":12789,"type":"control","contents":{"action":"remotehost","time":1598991042,"msg":"10.1.32.200","child_number":0}}
            {"partial":0,"indent":0,"type":"control","pid":12790,"contents":{"item":"root","time":1598991042,"child_number":1,"action":"start","queue":"TRANSFER","logfile":"item-TRANSFER_AccountRemoteUser_root","local_item":"root","item_name":"Account","item_type":"AccountRemoteUser"}}
            {"indent":0,"partial":0,"contents":{"action":"process-item","queue":"TRANSFER","logfile":"item-TRANSFER_AccountRemoteUser_root","item_type":"AccountRemoteUser","item_name":"Account","local_item":"root","msg":"item-TRANSFER_AccountRemoteUser_root","item":"root","time":1598991042,"child_number":1},"pid":12790,"type":"control"}
            {"indent":0,"partial":0,"contents":{"logfile":"item-TRANSFER_AccountRemoteUser_root","item_name":"Account","item_type":"AccountRemoteUser","local_item":"root","msg":{"size":1},"queue":"TRANSFER","action":"start-item","child_number":1,"item":"root","time":1598991042},"pid":12790,"type":"control"}
            {"contents":{"child_number":1,"item":"root","time":1598991042,"logfile":"item-TRANSFER_AccountRemoteUser_root","local_item":"root","msg":{"dangerous_items":0,"skipped_items":0,"altered_items":0,"failure":"The account “root” already exists on “control.box.new”.","size":1,"warnings":0,"contents":{"warnings":null,"skipped_items":null,"dangerous_items":null,"altered_items":null}},"item_name":"Account","item_type":"AccountRemoteUser","queue":"TRANSFER","action":"failed-item"},"type":"control","pid":12790,"indent":0,"partial":0}
            {"indent":0,"partial":0,"contents":{"item_type":"AccountRemoteUser","item_name":"Account","msg":{"size":1},"local_item":"root","logfile":"item-RESTORE_AccountRemoteUser_root","action":"start-item","queue":"RESTORE","child_number":1,"time":1598991042,"item":"root"},"type":"control","pid":12790}
            {"pid":12790,"type":"control","contents":{"item_type":"AccountRemoteUser","item_name":"Account","msg":{"size":1,"failure":"The account “root” already exists on “control.box.new”."},"local_item":"root","logfile":"item-RESTORE_AccountRemoteUser_root","action":"failed-item","queue":"RESTORE","child_number":1,"time":1598991042,"item":"root"},"partial":0,"indent":0}
            {"contents":{"time":1598991042,"action":"complete","queue":"TRANSFER","child_number":1},"pid":12790,"type":"control","indent":0,"partial":0}
            {"type":"control","pid":12791,"contents":{"queue":"RESTORE","action":"complete","time":1598991043,"child_number":1},"partial":0,"indent":0}
            {"pid":12789,"type":"control","contents":{"child_number":0,"action":"complete","time":1598991043},"partial":0,"indent":0}
    inline_response_200_154_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_transfer_session_log
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_155_data_components:
      type: object
      properties:
        cabundle:
          type: string
          description: The certificate's certificate authority (CA) bundle.
          nullable: true
        cabundle_id:
          type: string
          description: The ID of the certificate's CA bundle.
          nullable: true
        certificate:
          type: string
          description: The certificate's text.
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDcTCCAlmgAwIBAgIFAc/XZhswDQYJKoZIhvcNAQELBQAwFTETMBEGA1UEAwwK
            cmVzZWxsLmNvbTAeFw0xOTEyMjMxNjEwMDNaFw0yMDEyMjIxNjEwMDNaMBUxEzAR
            BgNVBAMMCnJlc2VsbC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
            AQDs/rUGLbn4z7PeU7jMH1LeOYGc9omIATsxFwkRJUr7khxDZd59MYm2NzwLf1X2
            7ccYqYGbqjlwwpCWTrWvS9vAmrFqAr+5xp30w3bVhKrE9K+tYfUb4MbY0N/Cu0Hf
            OiSDbo07SAoOrGMHVVaPINNs1+eQ5sRxsJYBz//tOUYEJlrQAPttiHb3sk6J13Vv
            WArtk5+Q7L4lLKSxtPjQmwy/1hU2SRr0tmVkIaH77iOOMWvwB2pIYsRYjKujp0eE
            go7FdhUIBCJ7+ZqabZHGGpm/UQ+jveI83qqB/xHD4ZxAX7GKUyHGzp8XyIPTFLNq
            AaGWN8Kv80+DZk2my78vFcjfAgMBAAGjgccwgcQwHQYDVR0OBBYEFHIsjBLssrvL
            +K0pebUQE3HYyIxFMAkGA1UdEwQCMAAwQQYDVR0jBDowOIAUciyMEuyyu8v4rSl5
            tRATcdjIjEWhGaQXMBUxEzARBgNVBAMMCnJlc2VsbC5jb22CBQHP12YbMB0GA1Ud
            JQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA2BgNVHREELzAtggpyZXNlbGwuY29t
            gg9tYWlsLnJlc2VsbC5jb22CDnd3dy5yZXNlbGwuY29tMA0GCSqGSIb3DQEBCwUA
            A4IBAQAP6DKtvvr5SQGqxPTaYraq3PU6AWJGSJwFEI4LiUauyNnXMrox4a5Mi3Bl
            OoxEoyW9Br9S6HQ7Ta0kLppcPl6RTuvJljady5feMiCSYaz59XYB5Bo8vTl7Qn7u
            q2UsLqo9qroCpF+qdmbsqR8kFUltjycnVZ8g21Hu2QoeyOKEbuzohy5mtffchoV8
            zsifokwid0f+Zd88oYPQNNPib2P9Ef06DUHy2hBBe0Wunh2McjYckRTdYgIPVANj
            0DhtCcD76Q1VtmjkReirj4CY63/8wcQ2wk37qtUI5x2SzMIAuv49HAwD7atwQKgZ
            03hIrdHhFSIwTJMG1nqyO+h3X5En
            -----END CERTIFICATE-----
        certificate_id:
          type: string
          description: The certificate's ID.
          example: example_com_ecfeb_5c8df_1608653403_1de5d524f287f7ec75531239a2f4a133
        key:
          type: string
          description: The certificate's private key.
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpgIBAAKCAQEA7P61Bi25+M+z3lO4zB9S3jmBnPaJiAE7MRcJESVK+5IcQ2Xe
            fTGJtjc8C39V9u3HGKmBm6o5cMKQlk61r0vbwJqxagK/ucad9MN21YSqxPSvrWH1
            G+DG2NDfwrtB3zokg26NO0gKDqxjB1VWjyDTbNfnkObEcbCWAc//7TlGBCZa0AD7
            bYh297JOidd1b1gK7ZOfkOy+JSyksbT40JsMv9YVNkka9LZlZCGh++4jjjFr8Adq
            SGLEWIyro6dHhIKOxXYVCAQie/mamm2RxhqZv1EPo73iPN6qgf8Rw+GcQF+xilMh
            xs6fF8iD0xSzagGhljfCr/NPg2ZNpsu/LxXI3wIDAQABAoIBAQDEBRA5YgzWDQVa
            uKi6vJXQFIRuDURH56zLt5/aPJw+Y+VYoaNarWSYACt73wB9UsJAVcNLu4nzCBqL
            F+MScI38Sna/ljJ6OBth3WImzKpqaW/82m7fdhVCM9E/wZ6EQhT9WK0cAUPASzlF
            UYJcs+vrtNBle1m0JziLmzy1O4/70R4Iongi6pnMbsXopA9zypKvkhQoxAEtb1i7
            JOsFKh0EDuo4tJWkbLaKmoe8CKPr+I9lRonR6q5mwwealhuvtKvPdrz1ckYwizBn
            JIAkY5s7OXbrBe4qYd/FboNem7ExuTqGWiO7oYs/RpdOGWst3Dq7l1oC/ePxbHWK
            jcL5DG6hAoGBAPdQOFPQfLrI/UOTNOnghJ4xdfEPpElMOEtWZY02Oz4cZremXfhi
            +ZLOuww6f/Qey9uKH34Umi9ugszTFREEyukJJQ+nG04GkC6EmDgNcwn4lCR6iOMN
            Jc8fsnRO3zZmFC9deEbfKkUWWYaVzzBEzqZpS0+DFbPrqz/NoS0WeBtJAoGBAPVR
            tN9Q8LyTA+HjT0h3tAtyLsxPlI8GAb3t89YjSkVNAAMCrUjbOx9g2cLdSIRdoKhj
            6cwRFB2OATne5E1PfyWiw5LLgUf7aGqhDhe4xOHQyN3NhBs1p1W+XNuCJJnLxnpF
            d3NnF8VUkrphlftBzYGCbtFfgzq0W6GxcSiksdrnAoGBAJEAltYFgmwdlei98aNC
            wV7jDwy0qBVVvBfn4wjFiDyleFArGiOdHElILoE/92+RcuMYe9h3ieNPfx9Kj6p3
            zeSOOQ2RY7/+tyCfG4SZ1h49gdZVhdbiCY4EPqRU7ii99w3CVtfu1qDFNt5jDaR2
            Y1dMmxxWdi4UekahcOO3rdoJAoGBAMrIAGf8QxLNv47QU/AGKsivWOm/+oADKhty
            f3WJ9FG2pYTXiJ/JwGRerYJ7Yf8wWaX3+QGbOHJ5uJ+6lCMnzGUy1tEX8USsF5LU
            kI6hR/WVnQRjZokLX8frtFwqhtCudeEKXQQCus5960+vbMeljBc61xmxBwvWnEvb
            HjvHb9EPAoGBAMXpIOZPONaOZFpAnxkHMMpE8BSyCCBOYi22JiECcXQusWiI8PIT
            yxRAxIGZ6PY6ks3AEQhb9/oWSd9RVuXsflx01SFkpRIbSNwVWhLqr9HvfmpsZw2S
            5TTdqv/VaEByFDKJSIKnKk4e6rxa2XF6YxUEvZ59Bw3iP2fpksBG/nTu
            -----END RSA PRIVATE KEY-----
        key_id:
          type: string
          description: The ID of the certificate's key.
          example: ecfeb_5c8df_35927dbac0386ff253c269a9cda4c6f3
        servername:
          type: string
          description: The domain or domains that the certificate covers.
          format: domain
          example: example.com
    inline_response_200_155_data:
      type: object
      properties:
        components:
          type: array
          description: An array of objects containing the certificate information.
          items:
            $ref: "#/components/schemas/inline_response_200_155_data_components"
    inline_response_200_155_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetch_vhost_ssl_components
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_156_data:
      type: object
      properties:
        cabundle:
          type: string
          description: The certificate authority (CA) bundle certificate.
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/MSQwIgYDVQQK
            ExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMTDkRTVCBSb290IENBIFgzMB4X
            DTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0NlowSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxl
            dCdzIEVuY3J5cHQxIzAhBgNVBAMTGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkq
            hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4
            S0EFq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8SMx+yk13
            EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0Z8h/pZq4UmEUEz9l6YKH
            y9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWAa6xK8xuQSXgvopZPKiAlKQTGdMDQMc2P
            MTiVFrqoM7hD8bEfwzB/onkxEz0tNvjj/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQAB
            o4IBfTCCAXkwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEE
            czBxMDIGCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNvbTA7
            BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9kc3Ryb290Y2F4My5w
            N2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAwVAYDVR0gBE0wSzAIBgZngQwBAgEw
            PwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcCARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNy
            eXB0Lm9yZzA8BgNVHR8ENTAzMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9P
            VENBWDNDUkwuY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF
            AAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJouM2VcGfl96S8
            TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr/1wXKtx8/wApIvJSwtmVi4MFU5aMqrSDE
            6ea73Mj2tcMyo5jMd6jmeWUHK8so/joWUoHOUgwuX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPM
            TZ+sOPAveyxindmjkW8lGy+QsRlGPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M
            +X+Q7UNKEkROb3N6KOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==
            -----END CERTIFICATE-----
        certificate:
          type: string
          description: The certificate's text.
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIGeDCCBWCgAwIBAgISAxs2uBW3Q2TrGS/aRjTFh90EMA0GCSqGSIb3DQEBCwUAMEoxCzAJBgNV
            BAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQDExpMZXQncyBFbmNyeXB0IEF1
            dGhvcml0eSBYMzAeFw0xNzA0MTcwNzU1MDBaFw0xNzA3MTYwNzU1MDBaMCUxIzAhBgNVBAMTGm9u
            ZWFkYXl1bnRpbHRoZWRheWlkaWUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
            v2OGaQw5oeg2hy0LqfYlBoncBPqElkTfZGqY/2WHoKr5TawPqOlsrLzx17946KGxLs0A3J1rRpi9
            OqrHdv69tj2pFRFC1USjlQmWnUi3h//aTYFNrfDmG+lNWZQ3ALCveTQXYIAvbmwLSPxh6wdtEmU0
            GjbqDNxsI8GSrZcJ543PSTXYFvp7S1yBNSn64S5QB8WeNkLGyF0G+ieXbCJo5neJrNh6+6U+x7mT
            /VBsQDOFOMIskjKo1q56+/elzgSi6lZ5w9IXuQRB3YbbWzCC/kFmzEB/NTe9R5v1AEzdcNwWXpfi
            vlrNIktLQDYIRyHqtyrXl3uR8fvmoYf0ll+BrwIDAQABo4IDezCCA3cwDgYDVR0PAQH/BAQDAgWg
            MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQW
            s0hUTrAJo+db1I2D9K2Aa2O3STAfBgNVHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBwBggr
            BgEFBQcBAQRkMGIwLwYIKwYBBQUHMAGGI2h0dHA6Ly9vY3NwLmludC14My5sZXRzZW5jcnlwdC5v
            cmcvMC8GCCsGAQUFBzAChiNodHRwOi8vY2VydC5pbnQteDMubGV0c2VuY3J5cHQub3JnLzCCAYMG
            A1UdEQSCAXowggF2giFjcGFuZWwub25lYWRheXVudGlsdGhlZGF5aWRpZS5jb22CH21haWwub25l
            YWRheXVudGlsdGhlZGF5aWRpZS5jb22CHm1wMy5vbmVhZGF5dW50aWx0aGVkYXlpZGllLmNvbYIa
            b25lYWRheXVudGlsdGhlZGF5aWRpZS5jb22CIXJhbmRvbS5vbmVhZGF5dW50aWx0aGVkYXlpZGll
            LmNvbYIid2ViZGlzay5vbmVhZGF5dW50aWx0aGVkYXlpZGllLmNvbYIid2VibWFpbC5vbmVhZGF5
            dW50aWx0aGVkYXlpZGllLmNvbYIed2htLm9uZWFkYXl1bnRpbHRoZWRheWlkaWUuY29tgiJ3d3cu
            bXAzLm9uZWFkYXl1bnRpbHRoZWRheWlkaWUuY29tgh53d3cub25lYWRheXVudGlsdGhlZGF5aWRp
            ZS5jb22CJXd3dy5yYW5kb20ub25lYWRheXVudGlsdGhlZGF5aWRpZS5jb20wgf4GA1UdIASB9jCB
            8zAIBgZngQwBAgEwgeYGCysGAQQBgt8TAQEBMIHWMCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxl
            dHNlbmNyeXB0Lm9yZzCBqwYIKwYBBQUHAgIwgZ4MgZtUaGlzIENlcnRpZmljYXRlIG1heSBvbmx5
            IGJlIHJlbGllZCB1cG9uIGJ5IFJlbHlpbmcgUGFydGllcyBhbmQgb25seSBpbiBhY2NvcmRhbmNl
            IHdpdGggdGhlIENlcnRpZmljYXRlIFBvbGljeSBmb3VuZCBhdCBodHRwczovL2xldHNlbmNyeXB0
            Lm9yZy9yZXBvc2l0b3J5LzANBgkqhkiG9w0BAQsFAAOCAQEAbfVset/dZ+ru/K2DMa2Od4pCnRYa
            LDREL7TyAWHjHq2fHK1WbzlO9zHis+C0ezB6QBPMnrGDZns/v1njGp1gASly1pqgAsytbQdPbfHv
            /Bx1HRWywniAKSRYFxrc3k3ThrSZxDj+A9mt0znNDNUvRNuP5dGFmQzFACykgNJ58yCeUJZkD78p
            7UjpbpzxWW2m6MHlHu7dDcCwSXpCa6uE4V9TeVs3OSo42C+ZlGH2x3GeZYlOZENmG2nFw0mQFSIW
            ATyQuv1Jlc7tiUGmY9o13teTN4YLColMk037Rrwb/mne3ORCPB0k7QtPtzHnCdnRio2NvwZkPXzL
            bioRoW0dQg==
            -----END CERTIFICATE-----
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` — Self-signed.
            * `0` — **Not** self-signed.
          example: 0
          enum:
          - 1
          - 0
        key:
          type: string
          description: The private key's text.
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEAv2OGaQw5oeg2hy0LqfYlBoncBPqElkTfZGqY/2WHoKr5TawP
            qOlsrLzx17946KGxLs0A3J1rRpi9OqrHdv69tj2pFRFC1USjlQmWnUi3h//aTYFN
            rfDmG+lNWZQ3ALCveTQXYIAvbmwLSPxh6wdtEmU0GjbqDNxsI8GSrZcJ543PSTXY
            Fvp7S1yBNSn64S5QB8WeNkLGyF0G+ieXbCJo5neJrNh6+6U+x7mT/VBsQDOFOMIs
            kjKo1q56+/elzgSi6lZ5w9IXuQRB3YbbWzCC/kFmzEB/NTe9R5v1AEzdcNwWXpfi
            vlrNIktLQDYIRyHqtyrXl3uR8fvmoYf0ll+BrwIDAQABAoIBAG6cIm5LtnMwNXNi
            QT91Fmj0+8eU0VPXchQi11GjaAMfTP3q1xIT9c7PVCYQbtxjtncJ29mk0P73/0UM
            tkK7bwEIGdQnKa0AAlp8NCOqhwd+grgQZsiEVTkEWMPQuQkZFBDEXk5TRxZWMx93
            XU/r9smO29HasuHD8mun0BGrHPpJJm6JE8iMT9wIrr4pYb5TLtXtO/yQ5rxsT5uB
            bmuXAHZ51brj+aIdjrYNAVYHPvVDAjs7aHgKjbLvJ7DJPJKSbkbAEYKqT7lyQO5x
            GtLk1K5qKNHc1sFyybBF/LO1Tn7xTMbSuKce/AUvgE76RZ0nkvCD/kY1l3WBH2ns
            YFsojsECgYEA7UgMJgoKnerhmG/mnZqPUXb78PVgZmt0zmlAYRAcLc8K19xPKVOK
            z4HcDmfkPdkpsdp1YXJ6K/ueJOXq0aCFh2E+uYyqvsMQDFp72poxUPPlJ5zoj3jG
            6N9owoV2CuWX0QbhsE4/Hu5sVjBdE8WuqBBUqKp6602YV8YrA018bSkCgYEAznyq
            LhQujrpeqlN/HRhpNne5r5D8F4wQSZmFP9eRP1pnO2TQqY/wXJgOMKT20CcqwiiY
            oVuOmQs1W3dz/MlWHanRKL5cIcF26Pgsp1jimD13JwPU/7nH4+CzJmkXGSHbNmQf
            2wvjv+jni2PbTZ5sotESziaJAdbcRAdg39KnexcCgYEAj086dycNbn9ULZs4L+wP
            r2YrmEa7KGCyNZCAH595RXmM1P7smMsqRVXrMJAy29/zPMXyqx5XB4V66FIs1tsa
            ir+DANIitgBeCvgDYe5K5tfHiXtNQonxqOh1/zZYKxCr9sUvPiqkGOxrZkrjjHOS
            n1Ltrsj4YHGHF0xK4j3EbrECgYB403ANqJeZwyqTxmoST295hNNuDYvGB5qcRq43
            Ll/6z16q3ZJQNj7zH7Ll+hHGubSGipTNjrLBkVJ2pE6FtBalIvKWQdXNltSK/HW8
            swFdDlKDzPU9cquqB5ktN79hYHNSv4H4fluVt6aN5S+1mqd9GpRDdz8iiWS4lgy0
            zCJenwKBgQC61u/GsjGx4yv0c3KJHgrpIroo3HYsamAdjJBfgBGKxrxVO5J7dbvd
            84UYzp+a0XNjazMxx5rEbU3HjKV5nsHjU+Eoqpz/vwfRqbC7mqINrRQoBKtEhuOY
            +xd6W+i58dOPv7PmgxPegmZ4Fo+jHx+mNLv9L+27JPMBRwRWUxH5TQ==
            -----END RSA PRIVATE KEY-----
        subject.commonName_ip:
          type: string
          description: The certificate's IP address.
          format: ipv4
          example: 192.0.2.0
    inline_response_200_156_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetchcrtinfo
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_157_data:
      type: object
      properties:
        cab:
          type: string
          description: The certificate's certificate authority (CA) bundle.
          example: '-----BEGIN CERTIFICATE-----\nMIIDdzCCAl+gAwIBAgIFAhQDowAwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL\nZXhhbXBsZS5jb20wHhcNMTkxMTExMjAzNzUzWhcNMjAxMTEwMjAzNzUzWjAWMRQw\nEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAK31N5qqd4BhMRm318tt7CP3thvJ9nXv5j3Hks8bfNggAgBmWwh/iGEoyB0e\nmKmFkomXYQejSCkFmwI5/I+H53LA1UrnWURAHaY8UCJMMeCe22E9fbmASNMhcnov\n/AOYBl3kEWEkKVBN3dQZFsWzj+PTTui1zHl8nrr1POPLZMS+t8D3HppNoUBwBkKR\nQ/MetqCaQ3HlgbknMi0/5DbuaV0GJNbXNX9uhnGqQFUI21sEVU4xcvtEDN88dT1d\nx5EhLXobDV/brXgFm85QK/lZt3aWlIJLs/WJJSK+152PO3HhfoHpkx+JflMYoev5\nLauXhZGYXCEG8sBLa2PPH9WlpgcCAwEAAaOByzCByDAdBgNVHQ4EFgQU/Vx4Cer1\nmY3SaijxdCsA2Jo7q84wCQYDVR0TBAIwADBCBgNVHSMEOzA5gBT9XHgJ6vWZjdJq\nKPF0KwDYmjurzqEapBgwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb22CBQIUA6MAMB0G\nA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA5BgNVHREEMjAwggtleGFtcGxl\nLmNvbYIQbWFpbC5leGFtcGxlLmNvbYIPd3d3LmV4YW1wbGUuY29tMA0GCSqGSIb3\nDQEBCwUAA4IBAQCneJA732g7srfydkgG0XJ8b1RS3ffVlnG1ahCDfIpBTx2M7Oco\n0oa4QK4fEJnyh5Zc861aNrRHecLk4KV4QmDmLJVxTKNv3QXqgPJu+zN49x9ESwRs\nbqiaD+K6MYmlyRukxY+v8jyOhTKvZTOjuuGKhDRcNNgn/kPIjZw3v37vY4o1pUPL\nP1YBw2Caa01HstzouaVZlw05Viwo2AHJE5u7zW+VcA4VR8WAD/2SqdyWZIo+chwd\nr3hWlRyHephLCBhOLb1wPk3E+mOIyryXjLpGdVnWewMSEY8AGvv7IORkO5ufCz/c\n5UlG1r1+l5AhnFQPGoREI49hXVAETVInW9Uk\n-----END
            CERTIFICATE-----'
        crt:
          type: string
          description: The certificate's text.
          example: '-----BEGIN CERTIFICATE-----\nMIIDdzCCAl+gAwIBAgIFAhQDowAwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL\nZXhhbXBsZS5jb20wHhcNMTkxMTExMjAzNzUzWhcNMjAxMTEwMjAzNzUzWjAWMRQw\nEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAK31N5qqd4BhMRm318tt7CP3thvJ9nXv5j3Hks8bfNggAgBmWwh/iGEoyB0e\nmKmFkomXYQejSCkFmwI5/I+H53LA1UrnWURAHaY8UCJMMeCe22E9fbmASNMhcnov\n/AOYBl3kEWEkKVBN3dQZFsWzj+PTTui1zHl8nrr1POPLZMS+t8D3HppNoUBwBkKR\nQ/MetqCaQ3HlgbknMi0/5DbuaV0GJNbXNX9uhnGqQFUI21sEVU4xcvtEDN88dT1d\nx5EhLXobDV/brXgFm85QK/lZt3aWlIJLs/WJJSK+152PO3HhfoHpkx+JflMYoev5\nLauXhZGYXCEG8sBLa2PPH9WlpgcCAwEAAaOByzCByDAdBgNVHQ4EFgQU/Vx4Cer1\nmY3SaijxdCsA2Jo7q84wCQYDVR0TBAIwADBCBgNVHSMEOzA5gBT9XHgJ6vWZjdJq\nKPF0KwDYmjurzqEapBgwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb22CBQIUA6MAMB0G\nA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA5BgNVHREEMjAwggtleGFtcGxl\nLmNvbYIQbWFpbC5leGFtcGxlLmNvbYIPd3d3LmV4YW1wbGUuY29tMA0GCSqGSIb3\nDQEBCwUAA4IBAQCneJA732g7srfydkgG0XJ8b1RS3ffVlnG1ahCDfIpBTx2M7Oco\n0oa4QK4fEJnyh5Zc861aNrRHecLk4KV4QmDmLJVxTKNv3QXqgPJu+zN49x9ESwRs\nbqiaD+K6MYmlyRukxY+v8jyOhTKvZTOjuuGKhDRcNNgn/kPIjZw3v37vY4o1pUPL\nP1YBw2Caa01HstzouaVZlw05Viwo2AHJE5u7zW+VcA4VR8WAD/2SqdyWZIo+chwd\nr3hWlRyHephLCBhOLb1wPk3E+mOIyryXjLpGdVnWewMSEY8AGvv7IORkO5ufCz/c\n5UlG1r1+l5AhnFQPGoREI49hXVAETVInW9Uk\n-----END
            CERTIFICATE-----'
        crt_origin:
          type: string
          description: The username of the certificate's creator.
          format: username
          example: example
        domain:
          type: string
          description: The domain name on the certificate.
          format: domain
          example: example.com
        ip:
          type: string
          description: The certificate's IP address.
          format: ipv4
          example: 192.168.0.20
        key:
          type: string
          description: The certificate's private key.
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEArfU3mqp3gGExGbfXy23sI/e2G8n2de/mPceSzxt82CACAGZb
            CH+IYSjIHR6YqYWSiZdhB6NIKQWbAjn8j4fncsDVSudZREAdpjxQIkwx4J7bYT19
            uYBI0yFyei/8A5gGXeQRYSQpUE3d1BkWxbOP49NO6LXMeXyeuvU848tkxL63wPce
            mk2hQHAGQpFD8x62oJpDceWBuScyLT/kNu5pXQYk1tc1f26GcapAVQjbWwRVTjFy
            +0QM3zx1PV3HkSEtehsNX9uteAWbzlAr+Vm3dpaUgkuz9YklIr7XnY87ceF+gemT
            H4l+Uxih6/ktq5eFkZhcIQbywEtrY88f1aWmBwIDAQABAoIBAD9rmDMOFPU7+d+r
            c8QZti7Cv6TP88e5h5JccTyKg/BzcudcabHmdP0fFh3vqq6bIPqCswBK2iMChSnB
            pD9bx9jBTsG5KIVGbsjNUlW+u6xtngOMnIqFp4c5uXesiM9ynFecr21f9qPtT4Nl
            BjVbqojf3/PdW8eq1F/KysEtxPYpC/RI35iL0zl8EBZ5Ydn0Yb6ftr2e72mf8JDx
            N6SgQt3E7vviRSmivuURmN9KjD+grf94fiL7PDONL/ectOWrvXnD7ppmngNuae2m
            34OHraSM46QzOp/egFc0yyNQC2PKb4YxYMq7U2ijU2rM4d809HI9jG2BXmB1I2YO
            o5vZK4kCgYEA2mggZsJs7L67NXryrDNm82RnoPEjoTT2zdzl92BvMYVmu2cRyi/m
            2X5HDzTlc3l8fqFERSSc/Vc/hjluaDT+vbJzNa1tFklMbb3rXW1Z6fhqadQf34jz
            AXjeUU90aCIgAcFyTVdiz12pS1ESNCeGlRFIBF5Z3nK3MV/JmUNjEBsCgYEAy+Z/
            AtRAc6YcYseVEyo0wq2NNfDStYNp7+GhcA8qp4+1pZ8dk7n9VfkSUem0WEoi7F7g
            lUVDsWr62XiFtkV3dv77CUTlXcjmReykTzvPclT9wqyj84F09FdPZ5XusiQ0GKPe
            wLUWv+NPFlarZSxvRedlwPnC3O7FrN9TAV0/WIUCgYEAwpa/N47GKXANr6ppB8+M
            TBIK2jO+QOTFd8j2Ax8iMobebt131iIzlVeSzBOe0vFMYC4ie1ARpw3TBS2qFqIQ
            zMZvK0XmyVJpC+WIC+dfkrvHY56g/zIvAALGYL9fwV+WELpfslTHLmYObZI/m8QT
            fkC1X18Ixs6CNTVYknqdij0CgYA+btZnJFyTzMIWUOxJkPvUvFVntdSe9Z0jcWAA
            MvSpl+xTyTPCPwneIETGxhuNiS3GWIrFyg6fLZWfrzKqC/03d32gafMdU12G/Z2W
            EUdEx9dnm3scHYCVLILIwfTzoPg+rzaOpSRRHyXhPip+8SslKWRTwWY0RfxLIZqF
            6WpzDQKBgQDIFver+WSw/LTHt8LvYWyWi7pOIu6Df0ff1AYYSTMzsz9UewfRlSFw
            /ASp0dR6Po84oxIYRERxbu1ZoDhQxnGb5M1i+iFsOYBIRVmbWs4k7A0kghjGqciA
            yIbJNfSVmgNTXN4VqXW1rAqYDGDgE+huGEpnD08bPfEQm9tp0Mss5w==
            -----END RSA PRIVATE KEY-----
        key_origin:
          type: string
          description: The username of the key's creator.
          format: username
          example: example
        searched_users:
          type: array
          description: A list of users that the system searched to find certificate
            information.
          example:
          - root
          - example
          items:
            type: string
            format: username
        user:
          type: string
          description: The certificate's owner.
          format: username
          example: example
    inline_response_200_157_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: fetchsslinfo
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_158_data:
      type: object
      properties:
        records_removed:
          minimum: 0
          type: integer
          description: |-
            The number of entries that the function deleted
            from the cPHulk database.
          example: 10
    inline_response_200_158_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: flush_cphulk_login_history
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_159_data:
      type: object
      properties:
        iptable_bans_removed:
          minimum: 0
          type: integer
          description: The number of `iptables` temporary block rules that the function
            deleted.
          example: 1
        records_removed:
          minimum: 0
          type: integer
          description: The number of entries that the function deleted.
          example: 1
    inline_response_200_159_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: flush_cphulk_login_history_for_ips
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_160_data_log:
      type: object
      properties:
        contents:
          type: string
          description: The message content.
          example: Converting “username1” …
        indent:
          minimum: 0
          type: integer
          description: The log message’s indent level.
          example: 0
        type:
          type: string
          description: |-
            The log level of the message.

            * `success` – A success message.
            * `out` – An informational message.
            * `warn` – A warning message.
            * `error` – An error message.
          example: success
          enum:
          - success
          - out
          - warn
          - error
    inline_response_200_160_data_user_info:
      type: object
      properties:
        username:
          type: string
          description: The cPanel account’s username.
          format: username
          example: username1
    inline_response_200_160_data:
      type: object
      properties:
        log:
          type: array
          description: Log entries that indicate the conversion’s progress.
          items:
            $ref: "#/components/schemas/inline_response_200_160_data_log"
        user_info:
          type: array
          description: Information about each newly-converted cPanel account.
          items:
            $ref: "#/components/schemas/inline_response_200_160_data_user_info"
    inline_response_200_160_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: force_dedistribution_from_node
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_161_data:
      type: object
      properties:
        updated:
          type: array
          description: A list of usernames that the system will force to change their
            passwords. One or more valid usernames.
          items:
            type: string
            example: user
    inline_response_200_161_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: forcepasswordchange
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_162_data:
      type: object
      properties:
        payload:
          type: string
          description: "The function's raw output. This function returns this value\
            \ as a binary of an Apple mobile configuration file containing a series\
            \ of sub-tags and keys. For more information, read [Apple's key reference](https://developer.apple.com/business/documentation/Configuration-Profile-Reference.pdf)."
          format: base64
          example: |
            MIIcIwYJKoZIhvcNAQcCoIIcFDCCHBACAQExDzANBglghkgBZQMEAgEFADCCFS4GCSqGSIb3DQEH
            AaCCFR8EghUbPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQ
            RSBwbGlzdCBQVUJMSUMgIi0vL0FwcGxlLy9EVEQgUExJU1QgMS4wLy9FTiIgImh0dHA6Ly93d3cu
            YXBwbGUuY29tL0RURHMvUHJvcGVydHlMaXN0LTEuMC5kdGQiPg0KPHBsaXN0IHZlcnNpb249IjEu
            MCI+DQo8ZGljdD4NCiAgPGtleT5QYXlsb2FkQ29udGVudDwva2V5Pg0KICA8YXJyYXk+DQogICAg
            PGRpY3Q+DQogICAgICAgIDxrZXk+Q2FsREFWQWNjb3VudERlc2NyaXB0aW9uPC9rZXk+DQogICAg
            ICAgIDxzdHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDwvc3Ry
            aW5nPg0KICAgICAgICA8a2V5PkNhbERBVkhvc3ROYW1lPC9rZXk+DQogICAgICAgIDxzdHJpbmc+
            aG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDwvc3RyaW5nPg0KICAgICAgICA8a2V5PkNh
            bERBVlBvcnQ8L2tleT4NCiAgICAgICAgPGludGVnZXI+ODQ0MzwvaW50ZWdlcj4NCiAgICAgICAg
            PGtleT5DYWxEQVZQcmluY2lwYWxVUkw8L2tleT4NCiAgICAgICAgPHN0cmluZz4vcHJpbmNpcGFs
            cy9fX3VpZHNfXy8vPC9zdHJpbmc+DQogICAgICAgIDxrZXk+Q2FsREFWVXNlU1NMPC9rZXk+DQog
            ICAgICAgIDx0cnVlLz4NCiAgICAgICAgPGtleT5DYWxEQVZVc2VybmFtZTwva2V5Pg0KICAgICAg
            ICA8c3RyaW5nPnVzZXJuYW1lPC9zdHJpbmc+DQogICAgICAgIDxrZXk+UGF5bG9hZERlc2NyaXB0
            aW9uPC9rZXk+DQogICAgICAgIDxzdHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYtMS0xMS5hc2hs
            ZXk4MnNiLnRsZCBTZWN1cmUgQ2FsZW5kYXIgU2V0dXA8L3N0cmluZz4NCiAgICAgICAgPGtleT5Q
            YXlsb2FkRGlzcGxheU5hbWU8L2tleT4NCiAgICAgICAgPHN0cmluZz51c2VybmFtZUBob3N0LTE3
            Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkIFNlY3VyZSBDYWxlbmRhciBTZXR1cDwvc3RyaW5nPg0K
            ICAgICAgICA8a2V5PlBheWxvYWRJZGVudGlmaWVyPC9rZXk+DQogICAgICAgIDxzdHJpbmc+Y3Bh
            bmVsLm1haWwub3JnLnVzZXJuYW1lLmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQ8L3N0
            cmluZz4NCiAgICAgICAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9uPC9rZXk+DQogICAgICAgIDxz
            dHJpbmc+aG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDwvc3RyaW5nPg0KICAgICAgICA8
            a2V5PlBheWxvYWRUeXBlPC9rZXk+DQogICAgICAgIDxzdHJpbmc+Y29tLmFwcGxlLmNhbGRhdi5h
            Y2NvdW50PC9zdHJpbmc+DQogICAgICAgIDxrZXk+UGF5bG9hZFVVSUQ8L2tleT4NCiAgICAgICAg
            PHN0cmluZz4wNWQ3OTBjMS03MjVlLTIxODUtMDM1YS0yODNiZGJkMDUxMWQ8L3N0cmluZz4NCiAg
            ICAgICAgPGtleT5QYXlsb2FkVmVyc2lvbjwva2V5Pg0KICAgICAgICA8aW50ZWdlcj4xPC9pbnRl
            Z2VyPg0KICAgIDwvZGljdD4NCiAgICA8ZGljdD4NCiAgICAgICAgPGtleT5DYXJkREFWQWNjb3Vu
            dERlc2NyaXB0aW9uPC9rZXk+DQogICAgICAgIDxzdHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYt
            MS0xMS5hc2hsZXk4MnNiLnRsZCBTZWN1cmUgQ29udGFjdHMgU2V0dXA8L3N0cmluZz4NCiAgICAg
            ICAgPGtleT5DYXJkREFWSG9zdE5hbWU8L2tleT4NCiAgICAgICAgPHN0cmluZz5ob3N0LTE3Mi0x
            Ni0xLTExLmFzaGxleTgyc2IudGxkOjg0NDM8L3N0cmluZz4NCiAgICAgICAgPGtleT5DYXJkREFW
            VXNlU1NMPC9rZXk+DQogICAgICAgIDx0cnVlLz4NCiAgICAgICAgPGtleT5DYXJkREFWVXNlcm5h
            bWU8L2tleT4NCiAgICAgICAgPHN0cmluZz51c2VybmFtZTwvc3RyaW5nPg0KICAgICAgICA8a2V5
            PlBheWxvYWREZXNjcmlwdGlvbjwva2V5Pg0KICAgICAgICA8c3RyaW5nPnVzZXJuYW1lQGhvc3Qt
            MTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQgU2VjdXJlIENvbnRhY3RzIFNldHVwPC9zdHJpbmc+
            DQogICAgICAgIDxrZXk+UGF5bG9hZERpc3BsYXlOYW1lPC9rZXk+DQogICAgICAgIDxzdHJpbmc+
            Q2FyZERBVjwvc3RyaW5nPg0KICAgICAgICA8a2V5PlBheWxvYWRJZGVudGlmaWVyPC9rZXk+DQog
            ICAgICAgIDxzdHJpbmc+Y3BhbmVsLm1haWwub3JnLnVzZXJuYW1lLmhvc3QtMTcyLTE2LTEtMTEu
            YXNobGV5ODJzYi50bGQ8L3N0cmluZz4NCiAgICAgICAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9u
            PC9rZXk+DQogICAgICAgIDxzdHJpbmc+aG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDwv
            c3RyaW5nPg0KICAgICAgICA8a2V5PlBheWxvYWRUeXBlPC9rZXk+DQogICAgICAgIDxzdHJpbmc+
            Y29tLmFwcGxlLmNhcmRkYXYuYWNjb3VudDwvc3RyaW5nPg0KICAgICAgICA8a2V5PlBheWxvYWRV
            VUlEPC9rZXk+DQogICAgICAgIDxzdHJpbmc+Y2U0YTRiYjEtODQ3Yi1hYWQ0LWVkMTUtNzIyMDY2
            MzA5YzIyPC9zdHJpbmc+DQogICAgICAgIDxrZXk+UGF5bG9hZFZlcnNpb248L2tleT4NCiAgICAg
            ICAgPGludGVnZXI+MTwvaW50ZWdlcj4NCiAgICA8L2RpY3Q+DQogICAgPGRpY3Q+DQogICAgICA8
            a2V5PkVtYWlsQWNjb3VudERlc2NyaXB0aW9uPC9rZXk+DQogICAgICA8c3RyaW5nPnVzZXJuYW1l
            QGhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQ8L3N0cmluZz4NCiAgICAgIDxrZXk+RW1h
            aWxBY2NvdW50TmFtZTwva2V5Pg0KICAgICAgPHN0cmluZz51c2VybmFtZUBob3N0LTE3Mi0xNi0x
            LTExLmFzaGxleTgyc2IudGxkPC9zdHJpbmc+DQogICAgICA8a2V5PkVtYWlsQWNjb3VudFR5cGU8
            L2tleT4NCiAgICAgIDxzdHJpbmc+RW1haWxUeXBlSU1BUDwvc3RyaW5nPg0KICAgICAgPGtleT5F
            bWFpbEFkZHJlc3M8L2tleT4NCiAgICAgIDxzdHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYtMS0x
            MS5hc2hsZXk4MnNiLnRsZDwvc3RyaW5nPg0KICAgICAgPGtleT5JbmNvbWluZ01haWxTZXJ2ZXJB
            dXRoZW50aWNhdGlvbjwva2V5Pg0KICAgICAgPHN0cmluZz5FbWFpbEF1dGhQYXNzd29yZDwvc3Ry
            aW5nPg0KICAgICAgPGtleT5JbmNvbWluZ01haWxTZXJ2ZXJIb3N0TmFtZTwva2V5Pg0KICAgICAg
            PHN0cmluZz5ob3N0LTE3Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkPC9zdHJpbmc+DQogICAgICA8
            a2V5PkluY29taW5nTWFpbFNlcnZlclBvcnROdW1iZXI8L2tleT4NCiAgICAgIDxpbnRlZ2VyPjk5
            MzwvaW50ZWdlcj4NCiAgICAgIDxrZXk+SW5jb21pbmdNYWlsU2VydmVyVXNlU1NMPC9rZXk+DQog
            ICAgICA8dHJ1ZS8+DQogICAgICA8a2V5PkluY29taW5nTWFpbFNlcnZlclVzZXJuYW1lPC9rZXk+
            DQogICAgICA8c3RyaW5nPnVzZXJuYW1lPC9zdHJpbmc+DQogICAgICA8a2V5Pk91dGdvaW5nTWFp
            bFNlcnZlckF1dGhlbnRpY2F0aW9uPC9rZXk+DQogICAgICA8c3RyaW5nPkVtYWlsQXV0aFBhc3N3
            b3JkPC9zdHJpbmc+DQogICAgICA8a2V5Pk91dGdvaW5nTWFpbFNlcnZlckhvc3ROYW1lPC9rZXk+
            DQogICAgICA8c3RyaW5nPmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQ8L3N0cmluZz4N
            CiAgICAgIDxrZXk+T3V0Z29pbmdNYWlsU2VydmVyUG9ydE51bWJlcjwva2V5Pg0KICAgICAgPGlu
            dGVnZXI+NDY1PC9pbnRlZ2VyPg0KICAgICAgPGtleT5PdXRnb2luZ01haWxTZXJ2ZXJVc2VTU0w8
            L2tleT4NCiAgICAgIDx0cnVlLz4NCiAgICAgIDxrZXk+T3V0Z29pbmdNYWlsU2VydmVyVXNlcm5h
            bWU8L2tleT4NCiAgICAgIDxzdHJpbmc+dXNlcm5hbWU8L3N0cmluZz4NCiAgICAgIDxrZXk+T3V0
            Z29pbmdQYXNzd29yZFNhbWVBc0luY29taW5nUGFzc3dvcmQ8L2tleT4NCiAgICAgIDx0cnVlLz4N
            CiAgICAgIDxrZXk+UGF5bG9hZERlc2NyaXB0aW9uPC9rZXk+DQogICAgICA8c3RyaW5nPnVzZXJu
            YW1lQGhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQgU2VjdXJlIEVtYWlsIFNldHVwPC9z
            dHJpbmc+DQogICAgICA8a2V5PlBheWxvYWREaXNwbGF5TmFtZTwva2V5Pg0KICAgICAgPHN0cmlu
            Zz51c2VybmFtZUBob3N0LTE3Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkIFNlY3VyZSBFbWFpbCBT
            ZXR1cDwvc3RyaW5nPg0KICAgICAgPGtleT5QYXlsb2FkSWRlbnRpZmllcjwva2V5Pg0KICAgICAg
            PHN0cmluZz5jcGFuZWwubWFpbC5vcmcudXNlcm5hbWUuaG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4
            MnNiLnRsZDwvc3RyaW5nPg0KICAgICAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9uPC9rZXk+DQog
            ICAgICA8c3RyaW5nPmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQ8L3N0cmluZz4NCiAg
            ICAgIDxrZXk+UGF5bG9hZFR5cGU8L2tleT4NCiAgICAgIDxzdHJpbmc+Y29tLmFwcGxlLm1haWwu
            bWFuYWdlZDwvc3RyaW5nPg0KICAgICAgPGtleT5QYXlsb2FkVVVJRDwva2V5Pg0KICAgICAgPHN0
            cmluZz5hNmIzZTAxMC0wMGMxLWIyZjAtYWU4Mi03ZmIzZjllODkzM2Y8L3N0cmluZz4NCiAgICAg
            IDxrZXk+UGF5bG9hZFZlcnNpb248L2tleT4NCiAgICAgIDxpbnRlZ2VyPjE8L2ludGVnZXI+DQog
            ICAgICA8a2V5PlByZXZlbnRBcHBTaGVldDwva2V5Pg0KICAgICAgPGZhbHNlLz4NCiAgICAgIDxr
            ZXk+UHJldmVudE1vdmU8L2tleT4NCiAgICAgIDxmYWxzZS8+DQogICAgICA8a2V5PlNNSU1FRW5h
            YmxlZDwva2V5Pg0KICAgICAgPGZhbHNlLz4NCiAgICAgIDxrZXk+SW5jb21pbmdNYWlsU2VydmVy
            SU1BUFBhdGhQcmVmaXg8L2tleT4NCiAgICAgIDxzdHJpbmc+SU5CT1g8L3N0cmluZz4NCiAgICA8
            L2RpY3Q+DQogIDwvYXJyYXk+DQogIDxrZXk+UGF5bG9hZERlc2NyaXB0aW9uPC9rZXk+DQogIDxz
            dHJpbmc+dXNlcm5hbWVAaG9zdC0xNzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZCBTZWN1cmUgRW1h
            aWwgU2V0dXA8L3N0cmluZz4NCiAgPGtleT5QYXlsb2FkRGlzcGxheU5hbWU8L2tleT4NCiAgPHN0
            cmluZz51c2VybmFtZUBob3N0LTE3Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkIFNlY3VyZSBFbWFp
            bCBTZXR1cDwvc3RyaW5nPg0KICA8a2V5PlBheWxvYWRJZGVudGlmaWVyPC9rZXk+DQogIDxzdHJp
            bmc+Y3BhbmVsLm1haWwub3JnLnVzZXJuYW1lLmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50
            bGQtZW1haWw8L3N0cmluZz4NCiAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9uPC9rZXk+DQogIDxz
            dHJpbmc+Y3BhbmVsLm1haWwub3JnLnVzZXJuYW1lLmhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJz
            Yi50bGQ8L3N0cmluZz4NCiAgPGtleT5QYXlsb2FkUmVtb3ZhbERpc2FsbG93ZWQ8L2tleT4NCiAg
            PGZhbHNlLz4NCiAgPGtleT5QYXlsb2FkVHlwZTwva2V5Pg0KICA8c3RyaW5nPkNvbmZpZ3VyYXRp
            b248L3N0cmluZz4NCiAgPGtleT5QYXlsb2FkVVVJRDwva2V5Pg0KICA8c3RyaW5nPjRmMzI4YTVm
            LWIzMzctODZmZS03Zjk4LTVhOWMyNzFlNzY0MTwvc3RyaW5nPg0KICA8a2V5PlBheWxvYWRWZXJz
            aW9uPC9rZXk+DQogIDxpbnRlZ2VyPjE8L2ludGVnZXI+DQo8L2RpY3Q+DQo8L3BsaXN0Pg0KoIIE
            STCCBEUwggMtoAMCAQICBQG7jhEyMA0GCSqGSIb3DQEBCwUAMF4xMjAwBgkqhkiG9w0BCQEWI3Nz
            bEBob3N0LTE3Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkMSgwJgYDVQQDDB9ob3N0LTE3Mi0xNi0x
            LTExLmFzaGxleTgyc2IudGxkMB4XDTE5MTExOTEzMDk1OFoXDTIwMTExODEzMDk1OFowXjEyMDAG
            CSqGSIb3DQEJARYjc3NsQGhvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQxKDAmBgNVBAMM
            H2hvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
            ggEKAoIBAQDLTf43fqQJu57fAyGSBD+B/Zc3zVri44KCz/Oi9NlHCtmxET12+mE0TFkWGhjX+tzO
            fom+6Hj5KnGwr8K7qZoXq8zmiKGGvhvg11Ta6I3SJQL7VzU+wTBPXkAl+bWLBqoswzefA7A7jBZE
            v0c8W+wUAosjvmotUtiyeRsNbThTVBht7LwmHyCaAvHfIFkXkS96O6qqx0iZRlXZvahDjw6kiKOB
            e/kDpwl0YxMc3dEx2WCQyIZimtYOxNxglKKZ7UAnuKdy2we3AfOzhq3yKyDXsNyNrQghEn1aB1Ny
            Y+/bYZYA/Mhlhk1jjMowEGsjLfJr1Kx6JhtBWzBPfUIkb4q7AgMBAAGjggEIMIIBBDAdBgNVHQ4E
            FgQUlzHaKABlXF/4KWQ7ZrNQij5iE/4wCQYDVR0TBAIwADCBjAYDVR0jBIGEMIGBgBSXMdooAGVc
            X/gpZDtms1CKPmIT/qFipGAwXjEyMDAGCSqGSIb3DQEJARYjc3NsQGhvc3QtMTcyLTE2LTEtMTEu
            YXNobGV5ODJzYi50bGQxKDAmBgNVBAMMH2hvc3QtMTcyLTE2LTEtMTEuYXNobGV5ODJzYi50bGSC
            BQG7jhEyMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAqBgNVHREEIzAhgh9ob3N0LTE3
            Mi0xNi0xLTExLmFzaGxleTgyc2IudGxkMA0GCSqGSIb3DQEBCwUAA4IBAQCft6fX2NB0Lg3IM7UU
            w7eltKjsZOX3sCX/UQpwYdB8PcafoQ2Ddpb7H+CeyxW5tPk+qLpapnUWoIJBRahAQ+Xn3YWrJDfC
            FriWIdJH0Rk2Gwhydf7XM+yVm2HYBsAzfZWkF5EAjBJpgLN/28kAWdCv1p362nq79A/jrdKgpZdj
            z6fVb4aNMepJCcwIHivy7HN/PwmbXjqedwAMYsj/XEqw7aJX7+hI3VjFwkQxEbpyObVhcBhh+itt
            1O7t/MMWzg7mmJBnyTt+IbblYYEQoWvZXJgSGWT4U55mWF5arpjL9+NjFsbzvXl6TLEMzbVbpvxH
            tidgoiEpyBgzKFJ9p8TNMYICeTCCAnUCAQEwZzBeMTIwMAYJKoZIhvcNAQkBFiNzc2xAaG9zdC0x
            NzItMTYtMS0xMS5hc2hsZXk4MnNiLnRsZDEoMCYGA1UEAwwfaG9zdC0xNzItMTYtMS0xMS5hc2hs
            ZXk4MnNiLnRsZAIFAbuOETIwDQYJYIZIAWUDBAIBBQCggeQwGAYJKoZIhvcNAQkDMQsGCSqGSIb3
            DQEHATAcBgkqhkiG9w0BCQUxDxcNMjAwODE0MjAwMjAwWjAvBgkqhkiG9w0BCQQxIgQguoXcvM7S
            h+TCpzAkazdEcoVI9NI91whPFvfJHZd9x4oweQYJKoZIhvcNAQkPMWwwajALBglghkgBZQMEASow
            CwYJYIZIAWUDBAEWMAsGCWCGSAFlAwQBAjAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYI
            KoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEggEACr8R
            Pbw5CymW4Eep61SNsQzH54LXWbaS68mxF+Z8roOSLZTVYhBKP14bGJcUMhsS7c8zGYlOdwXWTA87
            4VQ0O4WIoWOsydxLVgHJ52ZDstN2iXsuW56Cm/Mk7Zow1MFdCJJ/ZX/oKOpnzm/t38kSvTXYyT/X
            LxGnTUYt+QbgUrqrxYZMbZeaAvGXkFTjTSi1kklZdnd7ndvashv5OhQ6zf6y831/c2M7mrn8vJKv
            e44Inb5NRBoK0MAc3f0vmAXrF087ayyNy6E1DqpdPWAGpCKYfIzWtIccrxKcguoIM4mWZ/Lp6mrZ
            I/2K6npCz9Wlm7iYASSsP3NMO8JWk7EWPA==
    inline_response_200_162_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: generate_mobileconfig
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_163_data:
      type: object
      properties:
        fingerprint:
          type: string
          description: "The key's [MD5](https://en.wikipedia.org/wiki/MD5) fingerprint."
          format: md5
          nullable: true
        name:
          type: string
          description: The key's filename.
          example: KeyFile
    inline_response_200_163_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: generatesshkeypair
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_164_data:
      type: object
      properties:
        cert:
          type: string
          description: The certificate's text.
          format: base64 certificate
          example: |
            -----BEGIN CERTIFICATE-----
            MIIDVDCCAjygAwIBAgIFANMbQ1IwDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwL
            ZXhhbXBsZS5jb20wHhcNMjAwMzE2MTg1OTU4WhcNMjEwMzE2MTg1OTU4WjAWMRQw
            EgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
            ggEBALnif/SIEE3xfi7iXCI3Kk7yNFrKw9b3SbCwTFEV4HZZpX+gK0ZkwT1vkkT6
            IFs68DVJI9KxXycCY8ZVI64TeD5Hqqy3p9NAkALyfC9OJlDP/mAKjgUZYISMci4K
            juf252rrtox5I5DgbWfXGe12HAjOnQrNjJMvscU9DstXMjDtzrlpwHZ/PH+v/Rcw
            t1WwpcAVOFNxQq6Z0CDwKW/JsHu7tVRa57QMlLTm2BEMIPlTHHoHRJk0zOQuHP3x
            87eYpnCiE/WbC5xlfm912fnFvvECb/6OGtAsw7GC0KnovS1W+rPfZHAdbbA61ukU
            Mh+U5VJaNot/kqfbJYpkMD1VRu8CAwEAAaOBqDCBpTAdBgNVHQ4EFgQUSU78eVCc
            JPFAzdImFwAufRu+2WEwCQYDVR0TBAIwADBCBgNVHSMEOzA5gBRJTvx5UJwk8UDN
            0iYXAC59G77ZYaEapBgwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb22CBQDTG0NSMB0G
            A1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAWBgNVHREEDzANggtleGFtcGxl
            LmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAf9dzrKj4LGvkBN3q0VHvPsKicl8tABxK
            uv4vKoiAXuh7R9k2bnFqpfvDa7j2qbBd5Gh4ctjdwTv7eA/E0sELgxlezcx9grgX
            Ck//GRieAoEj6ZOx1AdKw/Pj6jQyMpU9mQi7+nbpcl1CmQlBc9c2OiayjAAwxm1s
            +Uj7C9+OOkFXeLt/adurcKHhDO3tVD9fqr+pFiVjJOyuIr+T/84gAUAK4RxipaDg
            f35OapjaVQesolECPEP9l/ajf5e2C33JBDwoVqa3b7wwhStN4YpF+7SAd74K1QRz
            rPum8QKnzZjwtx0OBRJl/CHQBz4u0LJGBH4vXhgzzoAcdlGouKf8RA==
            -----END CERTIFICATE-----
        cert_id:
          type: string
          description: The certificate's ID.
          example: example_com_a2459_9d253_1405012775_521f3620ac92180d24a74813a921b23e
        certfile:
          type: string
          description: The absolute file path to the certificate's location.
          format: path
          example: /var/cpanel/ssl/system/certs/example_com_e0054_da789_1405012513_401c27501f5e0dd8d1b1d9caa902a0c8.crt
        csr:
          type: string
          description: The CSR's text.
          format: base64 certificate
          example: |
            -----BEGIN CERTIFICATE REQUEST-----
            MIIChDCCAWwCAQAwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb20wggEiMA0GCSqGSIb3
            DQEBAQUAA4IBDwAwggEKAoIBAQC54n/0iBBN8X4u4lwiNypO8jRaysPW90mwsExR
            FeB2WaV/oCtGZME9b5JE+iBbOvA1SSPSsV8nAmPGVSOuE3g+R6qst6fTQJAC8nwv
            TiZQz/5gCo4FGWCEjHIuCo7n9udq67aMeSOQ4G1n1xntdhwIzp0KzYyTL7HFPQ7L
            VzIw7c65acB2fzx/r/0XMLdVsKXAFThTcUKumdAg8ClvybB7u7VUWue0DJS05tgR
            DCD5Uxx6B0SZNMzkLhz98fO3mKZwohP1mwucZX5vddn5xb7xAm/+jhrQLMOxgtCp
            6L0tVvqz32RwHW2wOtbpFDIflOVSWjaLf5Kn2yWKZDA9VUbvAgMBAAGgKTAnBgkq
            hkiG9w0BCQ4xGjAYMBYGA1UdEQQPMA2CC2V4YW1wbGUuY29tMA0GCSqGSIb3DQEB
            CwUAA4IBAQCEPc5HD2KRQpqqm7aG6Y/oOnbGALi7GcOsr/vo+voWRDhC/nTAC9vp
            DXEjWY4FfA7N1VSgH5f04k40SBWlfvgCzQAB2AfLEo6LReNv1oCpojvKZVbJq+pq
            KTEMhkFzj4CBTG2gt9rAhKmNai7AnvDWdrnulsVShAsQMYsEeVmCxfGE9w3IEmLP
            JSvUB6/RSPF8zB5yP6/tZy00k+Mt/959yPAxDicrNASbCA2/TkuaBEaP+2v9lJY7
            zg2Z1js/Nv/5DE+1sqp+7GI26M6ZCSNzSyTVs2MOl6ecJTxhRCbVTYFy9SDRtsGE
            VOpPe2+XTcBM/mGIIRJharQNgy7S8kZ0
            -----END CERTIFICATE REQUEST-----
        csr_id:
          type: string
          description: The CSR's ID.
          example: example_com_e0054_da789_96b6625681492b7c43844b6ec37764de
        csrfile:
          type: string
          description: The absolute file path to the CSR.
          format: path
          example: /var/cpanel/ssl/system/csrs/example_com_a2459_9d253_d5edb563abb8dd426099bbb358c8f2bc.csr
        key:
          type: string
          description: The private key's text.
          format: base64 certificate
          example: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEAueJ/9IgQTfF+LuJcIjcqTvI0WsrD1vdJsLBMURXgdlmlf6Ar
            RmTBPW+SRPogWzrwNUkj0rFfJwJjxlUjrhN4PkeqrLen00CQAvJ8L04mUM/+YAqO
            BRlghIxyLgqO5/bnauu2jHkjkOBtZ9cZ7XYcCM6dCs2Mky+xxT0Oy1cyMO3OuWnA
            dn88f6/9FzC3VbClwBU4U3FCrpnQIPApb8mwe7u1VFrntAyUtObYEQwg+VMcegdE
            mTTM5C4c/fHzt5imcKIT9ZsLnGV+b3XZ+cW+8QJv/o4a0CzDsYLQqei9LVb6s99k
            cB1tsDrW6RQyH5TlUlo2i3+Sp9slimQwPVVG7wIDAQABAoIBAGIHgzdwcjjIvKT5
            F2Gr+hH8RYQEHtfFPgWCVB0HDoMbr93omCndhNNjfZ4G0v2JzZgsZEn+5JFr/zZf
            PBvXhLhDj0za5hTQnaIQQ1GnQymnJx17M36Y7X+5mZWSV98ZJN4MRQ8763fCA7CZ
            jcDfYtV6MPO7hwEwS+4azyyJZZzLRUP2Z8kpXv3PFlXUeddZHwQgyKRdLcQWXE/w
            iFClYSfsk10y8Nm6BKzI6TkZS32zIGt3FdJ8+kARJteV0sg6hjPpZMH0223Cbn+h
            lq9eU5b8N5xq7FBmmrfpJcaPdkmo8nUzEGQszyHHjF3N3p78065T+PEb+Jlirsl/
            Qf48ssECgYEA9o5wPmAtP8/tdDtdUSHJDbvERq0i2SeEmlrc/82mw82WlHA//sg8
            pqeT3EtH8QdvZqSVSw74Yr4TNOLMwLt8T5Rg+gPYsdoqc++d8hB/ru6nvRBwJ437
            ZN2JeoEObvNv4QgnfFpeKGxgaX49Yx6u0DJsABWpWsAppCUTXtxP2D8CgYEAwQEo
            Q0tFhwKz4e2gSyOSkuWUJi+tbY//+ouZEGlIYCzObXsZ/bM/AIEZKiAVTdyY5h91
            nAXLFRgcP3z0+h0XeiTcSZN4oEiMwL1/mPmx4uBMZijV54+ABjUFbVStlzxh4KLN
            zf0HUOPAA1biCNDn1yY+a8C+hKky2Ec+Nx//ZVECgYBqD5v5OSY97RQYi/D4lbAH
            WF52iMQU5gsE21F2OOEkGaxM7nyY/UoZ5ryUZ03rQWeKoAIY57exwlJAzc+GmSBA
            m3OcGUt+NntMpCctmitS9RbzHb8hRNJ/8UzShfHPiKj4BKn3tGgMu5I9zzBZEzng
            FdCfuLHBeChxlAFhLSSrwQKBgQCUUsxbcvRavmP5Y8HFHPBevdotwoQ4Z+rj4/Zc
            m1yItMZrcqhVxTPMsmnhasiUjsxeRZz/q6AXdPD4hZJKyKKrNrqoPJH+M+MfmEIA
            ERx468Eq3YUNsMVFf+fMzr+dM0VQ+izJegPuUSjWKCYLemhBet2Lt5NypgkyFwYk
            HQ4MEQKBgCeQOxNn2exJj0B6wt0Ts+tHdQlreLv+7zMB+CWODnkaXAiRqB8mr1O1
            mFZApPHnx3HUrxRsiHfvf9m2N2gpzyVcK86zbQSti5PB9sqEMw5eHd1qtlPSOV31
            JUG9qpLL/Jf6+AsZCNGOrjMQD99Sh3x/tPZVbK49OyOe6HxV5Ht0
            -----END RSA PRIVATE KEY-----
        key_id:
          type: string
          description: The private key's ID.
          example: e0054_da789_101721a053024156a34e0df8a9c388d4
        keyfile:
          type: string
          description: The absolute file path to the private key.
          format: path
          example: /var/cpanel/ssl/system/keys/e0054_da789_101721a053024156a34e0df8a9c388d4.key
        sender:
          type: string
          description: The username that generated the request.
          example: admin
        sender_host:
          type: string
          description: The host that generated the request.
          format: domain
          example: hostname.example.com
    inline_response_200_164_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: generatessl
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: "Key, Certificate, and CSR generated OK"
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_165_data_products:
      type: object
      properties:
        base_name:
          type: string
          description: "The base name, if one exists."
        billing_type:
          type: string
          description: The billing type.
          example: one-time
        description:
          type: string
          description: The product's description.
          example: Get an SSL Certificate today.
        display_name:
          type: string
          description: The product's display name.
          example: Extended Validated cPanel SSL Certificate
        enabled:
          type: integer
          description: |-
            Whether the product is enabled.

            * `0` - Disabled.
            * `1` - Enabled.
          example: 1
          enum:
          - 0
          - 1
        icon:
          type: string
          description: The icon to display in the product list.
          format: base64 image
          example: |-
            iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAKq2lDQ1BJQ0MgUHJvZmlsZQAASImV
            lgdQU+kWx7970xstAQEpoffeQUroofcmKiGhhBJiICDYEXEFVhQRacqCrjQFV6XIKiIWRFkUG/YF
            WRTUdbFgQ+Vd4BHee/N23rwzc3J/c+Z8/3vul++b+QNAvsfi81NgCQBSeRmCIA9nekRkFB33O8AC
            JUAC2kCFxU7nMwICfMDfxoe7AJp73jKY0/r7vv8akpy4dDYAUADCsZx0dirCp5DsZvMFGQCgkARq
            WRn8OS5HmCZABkT46BwnLHDPHMcu8O35npAgF4QnAMCTWSxBAgCk90idnslOQHTINISNeRwuD2FX
            hB3YiSwOwnkI66emps3xcYS1Y/9FJ+HfNGNFmixWgogXvmU+8K7cdH4KK/v/3I7/HakpwsV3qCJJ
            ThR4BiFPGWTPGpLTvEXMi/XzX2QuZ75/nhOFnqGLzE53iVpkDsvVe5GFyaGMRWYJltZyM5ghiyxI
            CxLpx6W7BYv045g+ohlS/EQcz3VnLnJOYkj4Imdyw/wWOT052Hupx0VUFwiDRDPHC9xF35iavjQb
            m7U0Q0ZiiOfSbBGiGThxrm6iOi9U1M/PcBZp8lMCRP1xKR6ienpmsGhtBnLAFjmJ5RWwpBMg2h/A
            AMEgFEk6CAOewBSYI4lMlRG3bu5MA5c0fraAm5CYQWcgtyaOzuSxDfXppsYmFgDM3cGFv/jd9fm7
            BcnGLtWykPUrviNnkbBUi3gKwDGkJs9aqmluBkAaBUBbL1soyFyooed+MIAIxAENyCF3XA254wbI
            ZJbADjgBN+AF/EEIiASrARskglQgAFlgA9gK8kEh2A32gUpQAw6BBnAMnAAd4Aw4Dy6Da+AGuAMe
            ghEwDl6CKfABzEAQhIMoEBWSg5QhDUgPMoWsIQfIDfKBgqBIKAZKgHiQENoAbYMKoRKoEqqFGqFf
            oNPQeagfGoLuQ6PQJPQW+gKjYDJMgxVhTdgItoYZsDccAq+CE+C1cA6cB++Cy+E6+CjcDp+Hr8F3
            4BH4JTyNAigSSgalgjJAWaNcUP6oKFQ8SoDahCpAlaHqUC2oLlQf6hZqBPUK9RmNRVPRdLQB2g7t
            iQ5Fs9Fr0ZvQRehKdAO6HX0RfQs9ip5Cf8dQMAoYPYwthomJwCRgsjD5mDLMEUwb5hLmDmYc8wGL
            xcpgtbBWWE9sJDYJux5bhD2AbcX2YIewY9hpHA4nh9PD2eP8cSxcBi4fV4E7ijuHu4kbx33Ck/DK
            eFO8Oz4Kz8Pn4svwTfhu/E38c/wMQYKgQbAl+BM4hGxCMeEwoYtwnTBOmCFKErWI9sQQYhJxK7Gc
            2EK8RHxEfEcikVRJNqRAEpe0hVROOk66QholfSZLkXXJLuRospC8i1xP7iHfJ7+jUCiaFCdKFCWD
            sovSSLlAeUL5JEYVMxRjinHENotVibWL3RR7LU4Q1xBniK8WzxEvEz8pfl38lQRBQlPCRYIlsUmi
            SuK0xLDEtCRV0kTSXzJVskiySbJfckIKJ6Up5SbFkcqTOiR1QWqMiqKqUV2obOo26mHqJeo4DUvT
            ojFpSbRC2jHaIG1KWkraXDpMep10lfRZ6REZlIymDFMmRaZY5oTMXZkvyxSXMZbFLdu5rGXZzWUf
            ZZfLOsnGyRbItsrekf0iR5dzk0uW2yPXIfdYHi2vKx8onyV/UP6S/KvltOV2y9nLC5afWP5AAVbQ
            VQhSWK9wSGFAYVpRSdFDka9YoXhB8ZWSjJKTUpJSqVK30qQyVdlBmatcqnxO+QVdms6gp9DL6Rfp
            UyoKKp4qQpValUGVGVUt1VDVXNVW1cdqRDVrtXi1UrVetSl1ZXVf9Q3qzeoPNAga1hqJGvs1+jQ+
            ampphmvu0OzQnNCS1WJq5Wg1az3Spmg7aq/VrtO+rYPVsdZJ1jmgc0MX1rXQTdSt0r2uB+tZ6nH1
            DugN6WP0bfR5+nX6wwZkA4ZBpkGzwaihjKGPYa5hh+FrI3WjKKM9Rn1G340tjFOMDxs/NJEy8TLJ
            NekyeWuqa8o2rTK9bUYxczfbbNZp9sZczzzO/KD5PQuqha/FDotei2+WVpYCyxbLSSt1qxiraqth
            a5p1gHWR9RUbjI2zzWabMzafbS1tM2xP2P5lZ2CXbNdkN7FCa0XcisMrxuxV7Vn2tfYjDnSHGIef
            HEYcVRxZjnWOT53UnDhOR5yeM3QYSYyjjNfOxs4C5zbnjy62LhtdelxRrh6uBa6DblJuoW6Vbk/c
            Vd0T3JvdpzwsPNZ79HhiPL0993gOMxWZbGYjc8rLymuj10Vvsnewd6X3Ux9dH4FPly/s6+W71/eR
            n4Yfz6/DH/gz/ff6Pw7QClgb8GsgNjAgsCrwWZBJ0IagvmBq8JrgpuAPIc4hxSEPQ7VDhaG9YeJh
            0WGNYR/DXcNLwkcijCI2RlyLlI/kRnZG4aLCoo5ETa90W7lv5Xi0RXR+9N1VWqvWrepfLb86ZfXZ
            NeJrWGtOxmBiwmOaYr6y/Fl1rOlYZmx17BTbhb2f/ZLjxCnlTMbZx5XEPY+3jy+Jn0iwT9ibMJno
            mFiW+Irrwq3kvknyTKpJ+pjsn1yfPJsSntKaik+NST3Nk+Il8y6mKaWtSxvi6/Hz+SNrbdfuWzsl
            8BYcSYfSV6V3ZtAQszMg1BZuF45mOmRWZX7KCss6uU5yHW/dQLZu9s7s5znuOT+vR69nr+/doLJh
            64bRjYyNtZugTbGbejerbc7bPL7FY0vDVuLW5K2/5RrnluS+3xa+rStPMW9L3th2j+3N+WL5gvzh
            HXY7an5A/8D9YXCn2c6Knd8LOAVXC40Lywq/FrGLrv5o8mP5j7O74ncNFlsWH9yN3c3bfXeP456G
            EsmSnJKxvb5720vppQWl7/et2ddfZl5Ws5+4X7h/pNynvLNCvWJ3xdfKxMo7Vc5VrdUK1TurPx7g
            HLh50OlgS41iTWHNl5+4P92r9ahtr9OsKzuEPZR56NnhsMN9P1v/3HhE/kjhkW/1vPqRhqCGi41W
            jY1NCk3FzXCzsHnyaPTRG8dcj3W2GLTUtsq0Fh4Hx4XHX/wS88vdE94nek9an2w5pXGquo3aVtAO
            tWe3T3Ukdox0RnYOnfY63dtl19X2q+Gv9WdUzlSdlT5b3E3szuuePZdzbrqH3/PqfML5sd41vQ8v
            RFy4fTHw4uAl70tXLrtfvtDH6Dt3xf7KmX7b/tNXra92XLO81j5gMdD2m8VvbYOWg+3Xra533rC5
            0TW0Yqj7puPN87dcb12+zbx97Y7fnaG7oXfvDUcPj9zj3Ju4n3L/zYPMBzMPtzzCPCp4LPG47InC
            k7rfdX5vHbEcOTvqOjrwNPjpwzH22Ms/0v/4Op73jPKs7Lny88YJ04kzk+6TN16sfDH+kv9y5lX+
            n5J/Vr/Wfn3qL6e/BqYipsbfCN7Mvi16J/eu/r35+97pgOknH1I/zHws+CT3qeGz9ee+L+Ffns9k
            fcV9Lf+m863ru/f3R7Ops7N8loA1bwUQZwDg+HgA3tYDQIkEgHoDAKLYgkeeD2jB188T+Dte8NHz
            YQnA4R4A5qwa0wmACoS1EKZuAWDOIiHWCDYzE+U/Iz3ezHRBiyyPWJOe2dm3swDgYgD4Njg7O1M+
            O/utDBkW8dfn/Ba8+byP4QKg/g7AOjX9jXVbwH/EPwCGGQVDbR7I2wAAAAlwSFlzAAALEwAACxMB
            AJqcGAAAAgRpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRv
            YmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6
            cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAg
            PHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0
            cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnRpZmY9Imh0dHA6
            Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9u
            PjM5MzwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWERpbWVuc2lv
            bj41MTU8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4x
            PC90aWZmOk9yaWVudGF0aW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRG
            Pgo8L3g6eG1wbWV0YT4KxfVkQAAACgpJREFUWAmNV1lvG9cZPTMcLsN9EUmJlCzJ+9oEaZAu6WIU
            CVD0pb+lr31x3/oL8hKgaOOiQVugRV10SZG2dlGntqPElmzZliWLEimJkkhxEfchh5ye71LMQ2Cg
            HXI4w5k793zL+c53R3McZ4T/Y+M4NUrTNHUcjYYYDm11brgMaLpLnTtwoPHzv7YJrPHliV/1oIyZ
            AA/6XTx//CmKu3nYgyH6/QEE78rrb+HC5dehiZ3jn1dN9aVrGnSZeDK5AE32ycgJeHHnJSqlAtwe
            E51mHceVffQ6NTTqFRQL27j1y/ewuvIZwTWMRuNoTeZ41VECKsHUD4q76HbbaszEmIlBo9FIGbeb
            38CtX/wUrUZFjZs5dRr+oB8ejwfBkIlIPIFgfA4f/eG3KB3uQdd15cirgCfXxpnU4Dozl7mR29zA
            Pg1pt5oYjmy4XC643W410WBg4Y8fvodWs4OF8+cxlV5QwAd7GzSoBZfhQnwqBq/P5PMWnj1+gFgy
            icRU+gsjJg5NwCdHuW643F40jluoVmp4uvoUhttAOBJBPJHA/OIi2rVDHOS34I/GGe4an+0TzIDH
            68dxowCfPwgzOMSFqxe4X8L6sw38+oMP8KMf/wTBQFBhSRplm6RT/ZH//Bg2may5NLgNLzyayUtA
            q9VBu9PFxtoKuod59G0X6kUJv0PiDWhkALMLZ7D29KlKkdc0MbB6+Oc//o3l53v4zpuXUC5uwz1/
            bhxJTVeYr4qEIXdUroXK2gjMOgxDg1ezkMu9RK9tMRKz+Nb3vst7OnIvPsfC6TOYnklhevYUKpUq
            U+bmuA5e5Kr45EUZ0zE/0o/v4b33f4ZAOIZsJouZ6TTS6TRi0RiCwSCjE4DP9MEYDGzmdJzvISVB
            rCwVC9h8toqdwwbOz6cxf3oej5ZX0Kx38e73r2Nl6QEuXbuKuYV5HB830LcsVkUVn9+7j93NEqw3
            stg/alEbdOXM/sEunj9/hkq1gS7H+v0mkskEMplpGH/501+Ryc4gNZ1CNB5HIBjA6vOXOCqUkT01
            i7m5Gdy9ex+f5i28/do5FHLb8IfCrJwen5vFTn4HAf5vVOpYnI4AzTJqlQpWn72ESQ4kOGf2VAap
            qZTihEGC2/aQz3dRrzfg8jj6jZer63jy6Cm2clsolcowmYJTmSnYFJlINIBHT9ZhUW9WN/IIDDs4
            e+40UjMM59QUmo0mfD4fRiRaMkrSuU3uHhgs0Xari4P9A2yu57C2to7t7QKqtSqEd5KGbDYDw8s8
            mAG/IsnAtrWVpcfOO+98jWXEXMWGWq8/cEL+APJPt5XAtFuzrJpjlp+blRBFeiaDWrVMHYjCzYq4
            du0iljfyGlPruGmEyzDg9XhVuXY7PWxsbDEdG5TxIdOja/poOCKzbQgXmH4nkghj/7CCkdvFHM84
            NZaox+dHLGLira9eQIq5K1fr6Pb6NJq5TKdU5TSbTbhIrMpxE8f1uiNixLqDQzGzbVvt/MOqcCEU
            DmAqEUc0GnMMqUUpr5HDKmBbklotHpRx9z99xONhjJgvP6O0eO4s5skHw+OCTo8GtgVn2ACVS+V6
            UKqhzxK9/MZrqLR76PVtiszYiJEzlAJTBMdQg+3YPJDwOnuBAPKrrBULpSSFKM1Gh9qew1GFHtEr
            h5M0qA9dhk60/rjWQP1oh2NHiJLVsWgUnY6lyOVnSvd29tCllgw5dlz/DC+Bxl1U5hjvrlQ8foO+
            QwLA+9KZVJuVUtE9hkZeiEKgUathmhGYSsaVuHg8BlLRCCKJGDQaFaAU23Sk37dQKOzig5sfolNr
            oUxSt6kRkgZp08IJg7vIvUaBUkI0JICgy5f4TAfoTRce0+cM+n006bmb0bSsvpLqKIGlEbXqdSQS
            EQST5+ANVfEV3cB6bgtrlPQgQrB6HVSKh1hfXqaEAeFYCkk6kWTJx6YS5EBUDKDbdF/CI+eOhIJW
            WATuk5hyTdJyjVq/ub6FK1cvYo51PTs7gw7Fp16tIBHJwGHTSqcSFJsqlj7+F+KZOWbUgS8SIFVZ
            nlwjCJ92Xmxi7fEjoRvi3giYgtgN3lVA45XMybmUBI3SGapyqY4LFxYRCQVUiNOsFL/XgOn1KRJG
            kmGs3L4NG26kZ7MUFzd+/+ePkGbFdFttusCokqzs/jB8HopdmDoQhsY0koQTcN7nKWOgTuQoBsjd
            TqevJHeBkpyjGH3y8R0Ut/NIZrPokPHN4gGqrR5uvv9zHLCCrr97nU+BXTMArxkg+JBz0QhZxjEK
            0tAGFLkheaEiMAGVhwRepUOWVSot7A0Mc4rCdO3qeaSnkySfH8lMho0miifLT3Dnb7dZuhVs7JSw
            VThk81pAkVXw6dIjhMMhpQVDgo+XamMMqTjBMtSv8pM3CKowxXtVtzo6vR5CpheF7T2l4abfhxBJ
            GI5PsVsWcO+zxziotGhMCKn5OeS2d2Dee4jM3Cmm5A4FzlLSSyw1pxIEpkKcFh+FnGqTC/JRFvAg
            obcZujZzGGRJFkoHVMgjyrwPJapjqXKM7fwu1pgSf8BUHbXB5mJ3W9jObamKCZF+smISLZCoisfi
            oEJS/7kgcUSiFA8IOhISqGGKpV1670glcHkm205+D4uLc2rxsbu7rxqRTcUrU7qbzQaOKNE7+SLe
            +uabFKEeTK4XRzZXEeLNiQECr7KrrjECCk9NLz8CLhvlkmSRRYZouiZPcOuzNK12F/IG0OL60SGz
            q/Um7t5/iFxhDy222KNGGVeunOGiZQalZlUq+gRc/JZKkBAw/yxtkWhyQCbnKMk/zyaWihBpDJ0u
            5o/xWUKiYroy5JjipDkuZGen8WB5HSOOYwPE21//Bi5fPoNc3iuzcbnHfIuyjcOg4E6mU/Oy88vG
            S2Icj5INa0ARojeqmchVGilkabLkNOqCpEVC17O6XNWk8cMffFtx5ezZWVykXkQpPpFIiE/wjUlW
            11xzDhkt6QnKzS8sUCQUwSHISZglPF0VZnlroXCI5SRjOhbHk2ebBO1DI7Es8kOiIxGZyyRx9dJp
            zGeTFBifCm+AxIVBIwjqD/uVECnckx8xRD66m8vwkdTcyQ0BGHL54+bEkmu+OinS+Px+VI4OsXtQ
            Yo/g5Lwr7BYDfaJuAR9Ljrxh5ERocly6wa6pdaE/HOH0KsQKRqBU5Hmim14vJ1LtiI46ir0Crlqo
            jDoZqR4y/Li/tIIBx8diIZYe1wbMsURClRkHieqVyxXcuXOfD5toNNtclh1xHOlG4k1IILQQr3Uv
            u5pcFJweV6w0X02osBX4eKCLQCm24pWVJ0zFBvXeBS/zyzdBjNcdLDcSRafxD6iAS9xnZuIq9/LO
            MM7+JPCCLhFhmoVo8no9YNlZJ8RT6jQB51idr94Wjev2LIRCEfzmd3/H9s6hYrjX64bJpiIeyLRL
            D5/j5q9ucd0wTTKPu6mLTkqEtBNHxRj15f//Ah9jPXoBZ9CgAAAAAElFTkSuQmCC
        icon_mime_type:
          type: string
          description: The icon's image format.
          example: image/svg+xml
        license_term:
          type: integer
          description: The license term.
          example: 0
        max_users:
          minimum: 1
          type: integer
          description: The maximum number of users.
          nullable: true
        maximum_server_price:
          minimum: 0
          type: number
          description: |2-

            The product's maximum price.

            * null - The produce does **not** possess a maximum price.
          format: currency
          nullable: true
          example: 888.88
        minimum_server_price:
          minimum: 0
          type: number
          description: |2-

            The product's minimum price.

            * null - The product does **not** possess a minimum price.
          format: currency
          nullable: true
          example: 3
        price:
          minimum: 0
          type: number
          description: |-
            The product's price.

            * null - The product does **not** possess a static price.
          format: currency
          nullable: true
          example: 6
        price_unit:
          type: string
          description: "The currency code of the product's price, in [ISO-4217 format](https://en.wikipedia.org/wiki/ISO_4217)\
            \ format."
          example: USD
        product:
          type: string
          description: The product's display name.
          example: cPanel EV Certificate
        product_category:
          type: string
          description: The product's category.
          nullable: true
          example: N/A
        product_group:
          type: string
          description: The product's group.
          example: ssl_certificate
        product_id:
          minimum: 1
          type: integer
          description: The product ID.
          example: 209
        provider_display_name:
          type: string
          description: The cPanel Market provider's display name.
          example: cPanel Store
        provider_name:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
        recommended:
          type: integer
          description: |-
            Whether we recommend the product.
            * `1` - We recommend the product.
            * `0` - We do **not** recommend the product.
          example: 1
          enum:
          - 0
          - 1
        requires_ip:
          type: integer
          description: |-
            Whether the product requires an IP.
            * `1` - Requires an IP address.
            * `0` - Does **not** require an IP address.
          example: 1
          enum:
          - 0
          - 1
      additionalProperties:
        description: Any product-specific additional properties. Each additional property
          value begins with the `x_` prefix.
        x-additionalPropertiesName: x_properties
    inline_response_200_165_data:
      type: object
      properties:
        products:
          type: array
          description: An array of objects that contains information about the products
            in the cPanel Market.
          items:
            $ref: "#/components/schemas/inline_response_200_165_data_products"
    inline_response_200_165_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_adjusted_market_providers_products
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_166_data_importances:
      type: object
      properties:
        app:
          type: string
          description: The cPanel & WHM module's name.
          example: wwwacct
        event:
          type: string
          description: |-
            The event's name.

            **Note:**

            An asterisk character (`*`) represents all events in the module.
          example: '*'
        importance:
          type: integer
          description: |-
            The importance of the contact event:

            * `1` — High.
            * `2` — Medium.
            * `3` — Low.
            * `0` — Disabled.
          example: 0
        name:
          type: string
          description: |-
            The contact event's name:

            * `High`
            * `Medium`
            * `Low`
            * `Disabled`
          example: High
    inline_response_200_166_data:
      type: object
      properties:
        importances:
          type: array
          description: An array of objects containing event importance information.
          items:
            $ref: "#/components/schemas/inline_response_200_166_data_importances"
    inline_response_200_166_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_all_contact_importances
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_167_data_result:
      properties:
        count:
          type: integer
          description: |-
            The total number of times that the system called
            the function on the day in the `timestamp` return.
          example: 200000
        entry:
          type: string
          description: |-
            The cPanel API 1 module and function that the system executed.

            For a complete list of cPanel API 1 functions, read our
            [Guide to cPanel API 1](https://go.cpanel.net/cpanelapi1)
            documentation.
          example: Email::printdomainoptions
        timestamp:
          type: integer
          description: |-
            The date that the system called the function, in
            [Unix time format](https://wikipedia.org/wiki/Unix_time).
          format: unix_timestamp
          example: 1548828000
    inline_response_200_167_data:
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_167_data_result"
    inline_response_200_167_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_api_calls
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_168_data:
      type: object
      properties:
        count:
          minimum: 1
          type: integer
          description: The total number of times that the system called the function
            on the day in the `timestamp` return.
          example: 200000
        entry:
          type: string
          description: The path to the file where the function executes.
          example: /usr/local/cpanel/base/frontend/jupiter/plugin1/index.html.tt
        timestamp:
          type: integer
          description: |-
            The date that the system called the function.

            **Note:**

              The time portion of this value is arbitrary. Only the date is valid.
          format: unix_timestamp
          example: 1548828000
    inline_response_200_168_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_api_pages
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_169_data:
      type: object
      properties:
        cpanel:
          type: array
          description: An array of objects representing the values set for application
            installed for cPanel.
          items:
            $ref: "#/components/schemas/AppConfig"
        webmail:
          type: array
          description: An array of objects representing the values set for application
            installed for Webmail.
          items:
            $ref: "#/components/schemas/AppConfig"
        whostmgr:
          type: array
          description: An array of objects representing the values set for application
            installed for WHM.
          items:
            $ref: "#/components/schemas/AppConfig"
    inline_response_200_169_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_appconfig_application_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Got application list
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_170_data:
      type: object
      properties:
        importance:
          type: integer
          description: |-
            The importance level at which to send the notification.
            * `1` - High.
            * `2` - Medium.
            * `3` - Low.
            * `0` - Disabled.
          example: 0
          enum:
          - 1
          - 2
          - 3
          - 0
        name:
          type: string
          description: |-
            The text version of the importance.
            - `High`
            - `Medium`
            - `Low`
            - `Disabled`
          example: Disabled
          enum:
          - High
          - Medium
          - Low
          - Disabled
    inline_response_200_170_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_application_contact_event_importance
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_171_data:
      type: object
      properties:
        importance:
          type: integer
          description: |-
            The importance level at which to send the notification.
            * `1` — High.
            * `2` — Medium.
            * `3` — Low.
            * `0` — Disabled.
          example: 0
          enum:
          - 1
          - 2
          - 3
          - 0
        name:
          type: string
          description: |-
            The text version of the importance setting.
            * `High`
            * `Medium`
            * `Low`
            * `Disabled`
          example: Disabled
          enum:
          - High
          - Medium
          - Low
          - Disabled
    inline_response_200_171_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_application_contact_importance
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_172_data:
      type: object
      properties:
        cron:
          type: array
          description: "A list of the time elements of a cron entry that schedules\
            \ when the script will run. For more information about each element in\
            \ a cron entry, read the [Cron Wikipedia article](https://en.wikipedia.org/wiki/Cron)."
          items:
            type: string
            example: 54 1 * * *
        next_time:
          type: string
          description: "The next time that the script will run. A time value, in [ISO-8601](http://www.iso.org/iso/home/standards/iso8601.htm)\
            \ format."
          format: ISO-8601 Date Time
          example: 2016-06-09T06:00:00.000Z
    inline_response_200_172_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_autossl_check_schedule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_173_data_payload:
      type: object
      properties:
        contents:
          type: string
          description: The contents of an entry.
          example: This system has AutoSSL set to use cPanel (powered by Sectigo).
        indent:
          minimum: 0
          type: integer
          description: The level of indentation to display.
          example: 0
        partial:
          type: integer
          description: We do not currently use this return.
          example: 0
          enum:
          - 0
        pid:
          minimum: 1
          type: integer
          description: The AutoSSL process’s ID.
          example: 29189
        timestamp:
          type: string
          description: When the system created the log file entry.
          format: ISO-8601 Date Time
          example: 2016-06-09T14:25:37.000Z
        type:
          type: string
          description: |-
            The type of log file entry.

            * `out` (WHM's _Manage AutoSSL_ interface represents this type as `info`.)
            * `warn`
            * `success`
            * `failure`
          example: out
          enum:
          - out
          - warn
          - success
          - failure
    inline_response_200_173_data:
      type: object
      properties:
        payload:
          type: array
          description: Entries from an AutoSSL log.
          items:
            $ref: "#/components/schemas/inline_response_200_173_data_payload"
    inline_response_200_173_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_autossl_log
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_174_data_payload:
      type: object
      properties:
        in_progress:
          type: integer
          description: |-
            Whether AutoSSL is in progress.
            * `1` — AutoSSL is in progress.
            * `0` — AutoSSL is **not** in progress.
          example: 1
          enum:
          - 0
          - 1
        provider:
          type: string
          description: The AutoSSL provider's name.
          example: cPanel
        start_time:
          type: string
          description: When the system created the log file.
          format: ISO-8601 Date Time
          example: 2016-06-09T14:25:37.000Z
        username:
          type: string
          description: |-
            The user that corresponds to the AutoSSL log entry.
            * The username of a cPanel user that the account owns.
            * `*` — All users.
          example: username
    inline_response_200_174_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contain information about an AutoSSL
            log file.
          items:
            $ref: "#/components/schemas/inline_response_200_174_data_payload"
    inline_response_200_174_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_autossl_logs_catalog
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_175_data_payload:
      type: object
      properties:
        clobber_externally_signed:
          type: integer
          description: |-
            This option will allow AutoSSL to replace certificates that none of this systems AutoSSL modules issued.
            When you enable this option, AutoSSL will install certificates that replace users Certificate Authority (CA) issued certificates if they are invalid or expire within three days.
            * `1` - Replace the certificate.
            * `0` - Do **not** replace the certificate.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_expiry:
          type: integer
          description: |-
            This option will send a notification when an AutoSSL certificate expires. This occurs when AutoSSL cannot request a new certificate.

            **Note:**

            This can happen if all of a websites domains fail Domain Control Validation (DCV), or if the AutoSSL provider has not issued a certificate in response to a request.
            * `1` -  Notify.
            * `0` -  Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_expiry_coverage:
          type: integer
          description: |-
            This option will send a notification if at least one currently-secured domain will lose coverage when the certificate renews.

            * `1` -  Notify.
            * `0` -  Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_expiry_coverage_user:
          type: integer
          description: |-
            This option will send a notification if at least
            one of a user's currently-secured domains will lose
            coverage when the certificate renews.

            * `1` - Notify.
            * `0` - Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_expiry_user:
          type: integer
          description: |-
            This option will send a notification when a
            user's AutoSSL certificate expires. This occurs when
            AutoSSL cannot request a new certificate for a user.

            * `1` - Notify.
            * `0` - Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal:
          type: integer
          description: |-
            This option will send a notification when AutoSSL
            successfully renews a certificate.

            * `1` - Notify.
            * `0` - Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_coverage:
          type: integer
          description: |-
            This option will send a notification if a currently-secured
            domain fails DCV and the certificate has not reached its
            renewal period.

            * `1` -  Notify.
            * `0` -  Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_coverage_reduced:
          type: integer
          description: |-
            This option will send a notification when AutoSSL
            has renewed a certificate and the new certificate lacks
            at least one domain that the previous certificate secured.


            * `1` - Notify.
            * `0` - Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_coverage_reduced_user:
          type: integer
          description: |-
            This option will send a notification when AutoSSL
            has renewed a certificate for a user and the new certificate
            lacks at least one domain that the previous certificate
            secured.

            * `1` - Notify.
            * `0` - Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_coverage_user:
          type: integer
          description: |-
            This option will send a notification if a currently-secured
            domain fails DCV and the certificate has not reached its
            renewal period.

            * `1` - Notify.
            * `0` - Do **not** notify.
        notify_autossl_renewal_uncovered_domains:
          type: integer
          description: |-
            This option will send a notification when AutoSSL
            has renewed a certificate and the new certificate lacks
            one or more of the websites domains.

            * `1` - Notify.
            * `0` - Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_uncovered_domains_user:
          type: integer
          description: |-
            This option will send a notification when AutoSSL
            has renewed a certificate for a user and the new certificate
            lacks one or more of the websites domains.

            * `1` - Notify.
            * `0` - Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
        notify_autossl_renewal_user:
          type: integer
          description: |-
            This option will send a notification when AutoSSL
            successfully renews a certificate for a user.

            * `1` - Notify
            * `0` - Do **not** notify.
          example: 1
          enum:
          - 0
          - 1
      description: An object containing the user's AutoSSL metadata key values.
    inline_response_200_175_data:
      type: object
      properties:
        payload:
          $ref: "#/components/schemas/inline_response_200_175_data_payload"
    inline_response_200_175_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_autossl_metadata
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_176_data_problems_by_domain:
      type: object
      properties:
        domain:
          type: string
          description: The domain queried for problems.
          format: domain
          example: example.tld
        log:
          type: string
          description: The name of the directory containing the log files for this
            problem. This directory is located under `/var/cpanel/logs/autossl/`.
          format: ISO-8601 Date Time
          example: 2017-08-19T13:41:04.000Z
        problem:
          type: string
          description: The problem the domain encountered during DCV.
          example: The domain does not resolve to any IPv4 addresses on the internet.
        time:
          type: string
          description: The time that the problem occurred.
          format: ISO-8601 Date Time
          example: 2017-08-19T13:41:04.000Z
      description: An object containing information about a DCV problem for a domain.
    inline_response_200_176_data:
      properties:
        problems_by_domain:
          type: array
          description: An array of objects that contains DCV problems for a domain.
          items:
            $ref: "#/components/schemas/inline_response_200_176_data_problems_by_domain"
    inline_response_200_176_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_autossl_problems_for_domain
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_177_data_problems_by_domain:
      type: object
      properties:
        domain:
          type: string
          description: The domain's name
          format: domain
          example: doesnotexist.example.com
        log:
          type: string
          description: The log folder of the last run in the `/var/cpanel/logs/autossl/`
            directory.
          format: ISO-8601 Date Time
          example: 2017-09-07T03:51:01.000Z
        problem:
          type: string
          description: |-
            The human readable explanation of the DCV problem.

            **Note**

            The system does **not** localize this return.
          example: doesnotexist.example.com does not resolve to any IPv4 addresses
            on the internet.
        time:
          type: string
          description: The last run time of the AutoSSL queue.
          format: ISO-8601 Date Time
          example: 2017-08-12T21:02:56.000Z
    inline_response_200_177_data:
      type: object
      properties:
        problems_by_domain:
          type: array
          description: An array of objects that contain information about DCV problems
            for each domain.
          items:
            $ref: "#/components/schemas/inline_response_200_177_data_problems_by_domain"
    inline_response_200_177_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_autossl_problems_for_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_178_data_specs:
      type: object
      properties:
        AVERAGE_DELIVERY_TIME:
          type: integer
          description: The amount of time in seconds that the provider requires to
            issue a certificate.
          example: 120
        DCV_METHODS:
          type: array
          description: |-
            The methods that the provider uses
            to validate the domain.

            * `dns` - DNS Validation Method.
            * `http` - HTTP Validation Method.
          items:
            type: string
            example: http
            enum:
            - dns
            - http
        DELIVERY_METHOD:
          type: string
          description: |-
            The method that the provider uses
            to issue the certificate.

            * `queue` - The provider delivers certificates through a download queue.
            * `api` - The provider delivers certificates through API calls.
          example: queue
          enum:
          - queue
          - api
        HTTP_DCV_MAX_REDIRECTS:
          type: integer
          description: The maximum number of redirections a domain can use and still
            pass an HTTP-based DCV.
          example: 10
        MAX_DOMAINS_PER_CERTIFICATE:
          minimum: 1
          type: integer
          description: The number of unique domains each certificate can contain.
          example: 100
        RATE_LIMIT_CERTIFICATES_PER_REGISTERED_DOMAIN_PER_WEEK:
          type: integer
          description: The maximum number of certificates that the provider will allow
            per domain in a week.
          example: 50
        SUPPORTS_ANCESTOR_DCV:
          type: integer
          description: |-
            Whether the successful Domain Control
            Validation (DCV) of a parent domain implies the
            success of a subdomain.

            * `1` - The provider supports DCV.
            * `0` - The provider does **not** support DCV."
          example: 1
          enum:
          - 0
          - 1
        SUPPORTS_WILDCARD:
          type: integer
          description: |-
            Whether the provider supports wildcard
            domains on an SSL certificate.

            * `1` - The provider supports wildcard domains.
            * `0` - The provider does **not** support wildcard domains.
          example: 1
          enum:
          - 0
          - 1
        VALIDITY_PERIOD:
          type: integer
          description: |-
            The amount of time before the certificate expired, in seconds.

            **Note:**


             A valid integer.
          example: 7776000
      description: The provider's specifications.
    inline_response_200_178_data_payload:
      type: object
      properties:
        display_name:
          type: string
          description: The AutoSSL provider module's display name.
          example: Sectigo
        enabled:
          type: integer
          description: |-
            Whether the AutoSSL provider is enabled.
            * `1` - The provider is enabled.
            * `0` - The provider is disabled.
          example: 1
          enum:
          - 0
          - 1
        module_name:
          type: string
          description: The AutoSSL provider module's name.
          example: cPanel
        specs:
          $ref: "#/components/schemas/inline_response_200_178_data_specs"
        x_account_id:
          type: string
          description: The user's account profile URL at the provider.
          example: https://acme-v01.api.letsencrypt.org/acme/reg/12345678
        x_terms_of_service:
          type: string
          description: |-
            The URL of the provider's current terms of service.

            **Note:**

            If the terms of service available at the `x_terms_of_service` location is newer than the `x_terms_of_service_accepted` location, the system administrator will need to accept the new terms of service.
          format: url
          example: https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf
        x_terms_of_service_accepted:
          type: integer
          description: |-
            Whether the AutoSSL provider is Enabled.

            * `1` - The AutoSSL provider is enabled.
            * `0` - The AutoSSL provider is **not** enabled.
          example: 1
          enum:
          - 0
          - 1
      additionalProperties:
        description: Additional returns specific to the AutoSSL provider module. The
          name of the property will always start with `x_`.
    inline_response_200_178_data:
      type: object
      properties:
        payload:
          type: array
          description: This array of objects contains information about available
            AutoSSL providers.
          example:
          - display_name: Sectigo
            enabled: 1
            module_name: cPanel
            specs:
              AVERAGE_DELIVERY_TIME: 120
              DCV_METHODS:
              - http
              - dns
              DELIVERY_METHOD: queue
              HTTP_DCV_MAX_REDIRECTS: 0
              MAX_DOMAINS_PER_CERTIFICATE: 1000
              RATE_LIMIT_CERTIFICATES_PER_REGISTERED_DOMAIN_PER_WEEK: 0
              SUPPORTS_ANCESTOR_DCV: 1
              SUPPORTS_WILDCARD: 0
              VALIDITY_PERIOD: 7776000
          - display_name: Let’s Encrypt™
            enabled: 0
            module_name: LetsEncrypt
            specs:
              AVERAGE_DELIVERY_TIME: 5
              DCV_METHODS:
              - http
              - dns
              DELIVERY_METHOD: api
              HTTP_DCV_MAX_REDIRECTS: 10
              MAX_DOMAINS_PER_CERTIFICATE: 100
              RATE_LIMIT_CERTIFICATES_PER_REGISTERED_DOMAIN_PER_WEEK: 50
              SUPPORTS_ANCESTOR_DCV: 0
              SUPPORTS_WILDCARD: 1
              VALIDITY_PERIOD: 7776000
            x_account_id: https://acme-v01.api.letsencrypt.org/acme/reg/12345678
            x_terms_of_service: https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf
            x_terms_of_service_accepted: 1
          items:
            $ref: "#/components/schemas/inline_response_200_178_data_payload"
    inline_response_200_178_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_autossl_providers
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_179_data_payload:
      type: object
      properties:
        excluded_domain:
          type: string
          description: A list of domains excluded from AutoSSL.
          format: domain
          example: cpcalendars.example.com
    inline_response_200_179_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contain a list of domains excluded
            from AutoSSL.
          items:
            $ref: "#/components/schemas/inline_response_200_179_data_payload"
    inline_response_200_179_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_autossl_user_excluded_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_180_data:
      type: object
      properties:
        groups:
          type: array
          description: An array of objects containing the file's contents.
          items:
            $ref: "#/components/schemas/Group"
        raw:
          type: array
          description: An array of objects containing the file's raw data for template
            directives.
          items:
            $ref: "#/components/schemas/Raw"
    inline_response_200_180_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_available_applications
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_181_data_providers:
      type: object
      properties:
        color:
          type: string
          description: The background color of the button on the cPanel interface.
            A valid RGB hexadecimal color value.
          example: dd4b39
        configured:
          type: integer
          description: |-
            Whether the identity provider is configured on the server.
            - 1  The provider is configured.
            - 0  The provider is not configured.
          example: 1
          enum:
          - 0
          - 1
        cpaneld_enabled:
          type: integer
          description: |-
            Whether the identity provider is enabled for the cpaneld service.
            - 1  The provider is enabled for the cpaneld service..
            - 0  The provider is not enabled for the cpaneld service.
          example: 1
          enum:
          - 0
          - 1
        cpaneld_link:
          type: string
          description: link to the identity provider's configuration for the cpaneld
            service on the system. A valid URL .
          example: https://hostname.example.com:2083/openid_connect/cpanelid
        display_name:
          type: string
          description: The display name of the identity provider. A valid string.
          example: cPanel
        documentation_url:
          type: string
          description: The URL to the identity provider's documentation. A valid URL.
          example: https://go.cpanel.net/cpanelidmanage
        icon:
          type: string
          description: "The icon file to display in the button on the cPanel login\
            \ interface. A valid Base64-encoded, JPG or PNG-formatted image file."
          example: Click to view...iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAV1JREFUeNrsVtGNwjAMJegGYIRucBmhtwEjdAMyQjYoG2SEG6HcBGUDugFskHOQg1zTlFaN\/\/KkqMh2yYvt53S3KygomIZaE+y9P8BDJ9xXpdSDxT9jwX7dxDJsDMvCuvl33GF1sBwS5O8GX7eVgCabGyRkGJF25v0sJHrcyDH7iMhWEl9zWSD1\/xs1klJn8J\/gZ4WxNdgu8KyiDXGIfmJ7LO6R8CI5rJnwO+Kv0Wb9Z7xlZr+wMt8f\/ANmyCoCMF3CUmP8rOmHip1AM\/8tdbLcjfnL5NigYmIp+ilp5iYRJNkmajtLIBuJiUZ1S+aDKGDjI8tGk+N\/9yuy0ODcGIjL8UEmcXKLDelRDQ5tHcuIkSLQE1WYhIRfMRIEmiV1Z7NES5Rh9nIisRGVWGOyyyflC5fSkDsTmk1KnVBMbForqQw+IVtUCP3KEpdojffHnRGKcq3LZ3pBgST+BRgANXt+WPKE7tYAAAAASUVORK5CYII=
        icon_type:
          type: string
          description: The icon file's MIME type. A valid image format's MIME type.
          example: image/svg+xml
        id:
          type: string
          description: The ID of the identity provider. A valid string.
          example: cpanelid
        label:
          type: string
          description: The text label that will appear on the cPanel login interface.
            A valid string.
          example: Log in with a cPanelID Account
        provider_name:
          type: string
          description: The name of the identity provider. A valid string.
          example: cpanel
        textcolor:
          type: string
          description: The color of the text label on the cPanel login interface.
            A valid RGB hexadecimal color value.
          example: FFFFFF
        webmaild_enabled:
          type: integer
          description: |-
            Whether the identity provider is enabled for the webmaild service.
            - 1  The provider is enabled for the webmaild service.
            - 0  The provider is not enabled for the webmaild service.
          example: 1
          enum:
          - 0
          - 1
        webmaild_link:
          type: string
          description: link to the identity provider's configuration for the webmaild
            service on the system. A valid URL .
          example: https://hostname.example.com:2096/openid_connect/cpanelid
        whostmgr_enabled:
          type: integer
          description: |-
            Whether the identity provider is enabled for the whostmgr service.
            - 1  The provider is enabled for the whostmgr service.
            - 0  The provider is not enabled for the whostmgr service.
          example: 1
          enum:
          - 0
          - 1
        whostmgrd_link:
          type: string
          description: link to the identity provider's configuration for the whostmgrd
            service on the system. A valid URL.
          example: https://hostname.example.com:2087/openid_connect/cpanelid
    inline_response_200_181_data:
      type: object
      properties:
        providers:
          type: array
          description: "An array of available identity provider names and settings.\
            \ Each hash in the array includes the cpaneld_link , whostmgrd_link ,\
            \ webmaild_link , icon , icon_type , provider_name , display_name , documentation_url\
            \ , color , configured , id , label , textcolor , whostmgr_enabled , cpaneld_enabled\
            \ , and webmaild_enabled returns."
          items:
            $ref: "#/components/schemas/inline_response_200_181_data_providers"
    inline_response_200_181_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_available_authentication_providers
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_182_data_disabled_roles:
      type: object
      properties:
        description:
          type: string
          description: The role's description.
          example: File Storage allows users to access the File Manager and Git™ Version
            Control features.
        module:
          type: string
          description: The role's module name.
          example: FileStorage
        name:
          type: string
          description: The role's name.
          example: File Storage
    inline_response_200_182_data_enabled_roles:
      type: object
      properties:
        description:
          type: string
          description: The role's description.
          example: "Receive Mail allows users to receive email, as well as create\
            \ and manage their email accounts."
        module:
          type: string
          description: The role's module name.
          example: MailReceive
        name:
          type: string
          description: The role's name.
          example: Receive Mail
    inline_response_200_182_data_optional_roles:
      type: object
      properties:
        description:
          type: string
          description: The role's description.
          example: DNS allows users to create and edit Domain Name System zone files.
        module:
          type: string
          description: The role's module name.
          example: DNS
        name:
          type: string
          description: The role's name.
          example: DNS
    inline_response_200_182_data_profiles:
      type: object
      properties:
        code:
          type: string
          description: The profile's ID.
          example: MAILNODE
        description:
          type: string
          description: The profile's description.
          example: This profile provides only services and cPanel features that allow
            the system to serve mail.
        disabled_roles:
          type: array
          description: The roles that this profile disables. The function returns
            an empty array if no disabled roles exist.
          items:
            $ref: "#/components/schemas/inline_response_200_182_data_disabled_roles"
        enabled_roles:
          type: array
          description: The roles that this profile enables.
          items:
            $ref: "#/components/schemas/inline_response_200_182_data_enabled_roles"
        experimental:
          type: integer
          description: |-
            Whether the profile is experimental.
            * `1` - Experimental.
            * `0` - **Not** experimental.
          example: 0
          enum:
          - 1
          - 0
        name:
          type: string
          description: The profile's name.
          example: Mail
        optional_roles:
          type: array
          description: The optional roles that this profile enables. The function
            returns an empty array if no optional roles exist.
          items:
            $ref: "#/components/schemas/inline_response_200_182_data_optional_roles"
    inline_response_200_182_data:
      type: object
      properties:
        profiles:
          type: array
          description: An array of objects that contains the available server profiles.
          example:
          - code: STANDARD
            description: The Standard Node profile provides all services and access
              to every cPanel feature.
            enabled_roles:
            - description: Calendars and Contacts provides CalDAV and CardDAV services.
              module: CalendarContact
              name: Calendars and Contacts
            - description: DNS allows users to create and edit Domain Name System
                zone files.
              module: DNS
              name: DNS
            - description: FTP allows users to manage the files associated with their
                site with an FTP client.
              module: FTP
              name: FTP
            - description: File Storage allows users to access the File Manager and
                Git™ Version Control features.
              module: FileStorage
              name: File Storage
            - description: "Receive Mail allows users to receive email, as well as\
                \ create and manage their email accounts."
              module: MailReceive
              name: Receive Mail
            - description: Send Mail allows users to send email.
              module: MailSend
              name: Send Mail
            - description: Local Mail allows the system to process email.
              module: MailLocal
              name: Local Mail
            - description: MySQL®/MariaDB allows users to create and manage MySQL/MariaDB
                databases.
              module: MySQL
              name: MySQL/MariaDB
            - description: PostgreSQL allows users to create and manage PostgreSQL
                databases.
              module: Postgres
              name: PostgreSQL
            - description: "Spam Filter allows users to use Apache SpamAssassin™ to\
                \ identify, sort, and delete unsolicited mail."
              module: SpamFilter
              name: Spam Filter
            - description: Webmail provides access to webmail services.
              module: Webmail
              name: Webmail
            - description: Web Disk allows users to manage and manipulate files on
                the server with multiple types of devices.
              module: WebDisk
              name: Web Disk
            - description: Web Server allows users to create and manage websites for
                their domains.
              module: WebServer
              name: Web Server
            experimental: 0
          items:
            $ref: "#/components/schemas/inline_response_200_182_data_profiles"
    inline_response_200_182_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_available_profiles
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_183_data:
      type: object
      properties:
        current:
          type: string
          description: The version of cPanel & WHM that is currently on the CURRENT
            tier.
        edge:
          type: string
          description: The version of cPanel & WHM that is currently on the EDGE tier.
        lts:
          type: string
          description: The version of cPanel & WHM that is currently on the LTS tier.
        release:
          type: string
          description: The version of cPanel & WHM that is currently on the RELEASE
            tier.
        stable:
          type: string
          description: The version of cPanel & WHM that is currently on the STABLE
            tier.
      additionalProperties:
        type: string
        description: The latest maintenance release for a cPanel & WHM version number.
      description: A list of the latest available version of cPanel & WHM.
      example: "{\"11.30\":\"11.30.8.0\",\"11.32\":\"11.32.7.3\",\"11.34\":\"11.34.2.8\"\
        ,\"11.36\":\"11.36.2.12\",\"11.38\":\"11.38.2.23\",\"11.40\":\"11.40.1.22\"\
        ,\"11.42\":\"11.42.1.31\",\"11.44\":\"11.44.3.5\",\"11.46\":\"11.46.4.0\"\
        ,\"11.48\":\"11.48.5.3\",\"11.50\":\"11.50.6.2\",\"11.52\":\"11.52.6.6\",\"\
        11.54\":\"11.54.0.36\",\"11.56\":\"11.56.0.52\",\"11.58\":\"11.58.0.52\",\"\
        11.60\":\"11.60.0.48\",\"11.62\":\"11.62.0.48\",\"11.64\":\"11.64.0.42\",\"\
        11.66\":\"11.66.0.35\",\"11.68\":\"11.68.0.39\",\"11.70\":\"11.70.0.69\",\"\
        11.72\":\"11.72.0.12\",\"11.74\":\"11.74.0.12\",\"11.76\":\"11.76.0.22\",\"\
        11.78\":\"11.78.0.49\",\"11.80\":\"11.80.0.24\",\"11.82\":\"11.82.0.19\",\"\
        11.84\":\"11.84.0.22\",\"11.86\":\"11.86.0.24\",\"11.88\":\"11.88.0.13\",\"\
        11.90\":\"11.90.0.3\",\"current\":\"11.90.0.3\",\"edge\":\"11.90.0.3\",\"\
        lts\":\"11.86.0.24\",\"release\":\"11.88.0.13\",\"stable\":\"11.88.0.13\"}"
    inline_response_200_183_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_available_tiers
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Got tiers list
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_184_data:
      type: object
      properties:
        cert_match_method:
          type: string
          description: |-
            The method that the system used to match the domain with the certificate.
            * `none` — No domain matches the certificate.
            * `exact` — The domain exactly matches the certificate.
            * `exact-wildcard` — The domain exactly matches the domain of a wildcard certificate.
            * `mail-wildcard` — The mail subdomain of the domain matches the domain of the wildcard certificate.
            * `www-wildcard` — The `www` subdomain of the domain matches the domain of the wildcard certificate.
            * `hostname-wildcard` — The hostname's domain matches the domain of the wildcard certificate.
            * `hostname` — The hostname matches the domain of the certificate.
            * `localdomain_on_cert-mail-wildcard` — Any `mail` subdomain of any domain on the server matches the certificate.
            * `localdomain_on_cert-www-wildcard` — Any `www` subdomain of any domain on the server matches the certificate.
            * `localdomain_on_cert` — Any domain on the server matches the certificate.
          example: none
          enum:
          - none
          - exact
          - exact-wildcard
          - mail-wildcard
          - www-wildcard
          - hostname-wildcard
          - hostname
          - localdomain_on_cert-mail-wildcard
          - localdomain_on_cert-www-wildcard
          - localdomain_on_cert
        cert_valid_not_after:
          type: integer
          description: The expiration date of the certificate.
          format: unix_timestamp
          example: 1457452989
        is_currently_valid:
          type: integer
          description: |-
            Whether the certificate is currently valid.

            * `1` — The certificate is valid.
            * `0` — The certificate is **not** valid.

            **Note:**

            If the certificate is valid, the following statements are true:

            * The certificate is **not** self-signed (the `is_self_signed` value is `0`).
            * The certificate matches the SSL domain (the `ssldomain_matches_cert` value is `1`).
            * The certificate is within its validity period (the `cert_valid_not_after` value is less than the current time and date).
          example: 0
          enum:
          - 0
          - 1
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` — The certificate is self-signed.
            * `0` — The certificate is **not** self-signed.

            **Note:**

            For legacy reasons, if the `ssldomain_matches_cert` value is `0`, then the function will **always** return a value
            of `1` for the `is_self_signed return` return, regardless of whether the certificate is actually self-signed.
          example: 1
          enum:
          - 0
          - 1
        is_wild_card:
          type: integer
          description: |-
            Whether the service uses a wildcard certificate.
            * `1` — The service uses a wildcard certificate.
            * `0` — The service does **not** use a wildcard certificate.
          example: 0
          enum:
          - 0
          - 1
        ssldomain:
          type: string
          description: The domain of the service's SSL certificate.
          format: domain
          example: hostname.example.com
        ssldomain_matches_cert:
          type: integer
          description: |-
            Whether an SSL-encrypted domain matches the certificate.
            * `1` — Matches.
            * `0` — Does **not** match.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_184_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_best_ssldomain_for_service
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_185_data:
      properties:
        is_enabled:
          type: integer
          description: |-
            * `1` - Sitejet Commerce is enabled.
            * `0` - Sitejet Commerce is disabled.
          example: 1
          enum:
          - 0
          - 1
        storeurl:
          type: string
          description: The current URL of the storefront for purchasing the Sitejet
            Commerce upgrade.
          format: url
          example: http://www.example-store.com/shop
    inline_response_200_185_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_commerce
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_186_data_countries:
      type: object
      properties:
        code:
          pattern: "^[A-Z]{2}$"
          type: string
          description: "A valid [ISO 3166-1 alpha-2 country code](https://www.iso.org/iso-3166-country-codes.html)."
          format: ISO-3166-1 (alpha-2)
          example: US
        name:
          type: string
          description: The country's name.
          example: United States
    inline_response_200_186_data:
      type: object
      properties:
        countries:
          type: array
          description: |-
            A list of the [ISO 3166-1 alpha-2 country codes](https://www.iso.org/iso-3166-country-codes.html).
            You can enter these codes to whitelist or blacklist a country's
            range of IP addresses in the WHM API 1 function `set_cphulk_config_key`.
          items:
            $ref: "#/components/schemas/inline_response_200_186_data_countries"
    inline_response_200_186_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_countries_with_known_ip_ranges
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - `1` — Success.
            - `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_187_data_brutes:
      type: object
      properties:
        exptime:
          type: string
          description: When the login request will time out.
          format: ISO-8601 Date Time (Space Separated)
          example: 2014-12-07T00:00:00.000Z
        ip:
          description: The IP address of the login attempt.
          example: 192.168.0.1
          anyOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        logintime:
          type: string
          description: When the login attempt occurred.
          format: ISO-8601 Date Time (Space Separated)
          example: 2014-11-20T00:00:00.000Z
        notes:
          type: string
          description: The login entry's notes.
          example: this was a triumph
        timeleft:
          minimum: 1
          type: integer
          description: The number of minutes that remain before cPHulk removes the
            block.
          example: 14
    inline_response_200_187_data:
      type: object
      properties:
        brutes:
          type: array
          description: An array of information about each brute force attack.
          items:
            $ref: "#/components/schemas/inline_response_200_187_data_brutes"
    inline_response_200_187_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_cphulk_brutes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_188_data_excessive_brutes:
      type: object
      properties:
        exptime:
          type: string
          description: When the login request will time out.
          format: ISO-8601 Date Time (Space Separated)
          example: 2014-12-07T00:00:00.000Z
        ip:
          description: The IP address of the login attempt.
          example: 192.168.0.1
          anyOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        logintime:
          type: string
          description: When the login attempt occurred.
          format: ISO-8601 Date Time (Space Separated)
          example: 2014-11-20T00:00:00.000Z
        notes:
          type: string
          description: The login entry's notes.
          example: this was a triumph
        timeleft:
          minimum: 1
          type: number
          description: The number of minutes that remain before cPHulk removes the
            block.
          example: 14
    inline_response_200_188_data:
      type: object
      properties:
        excessive_brutes:
          type: array
          description: Information about each brute force attack.
          items:
            $ref: "#/components/schemas/inline_response_200_188_data_excessive_brutes"
    inline_response_200_188_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_cphulk_excessive_brutes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_189_data_failed_logins:
      type: object
      properties:
        authservice:
          type: string
          description: The name of the authentication service that the login attempt
            used.
          example: dovecot
        exptime:
          type: string
          description: When the login request will time out.
          format: ISO-8601 Date Time (Space Separated)
          example: 2014-12-07T00:00:00.000Z
        ip:
          description: The login attempt's IP address.
          example: 192.168.0.1
          anyOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        logintime:
          type: string
          description: When the login attempt occurred.
          format: ISO-8601 Date Time (Space Separated)
          example: 2014-11-20T00:00:00.000Z
        service:
          type: string
          description: The login attempt's service. name.
          example: ftp
        timeleft:
          minimum: 1
          type: integer
          description: The number of minutes that remain before cPHulk removes the
            block.
          example: 14
        user:
          type: string
          description: The login attempt's username.
          example: example
    inline_response_200_189_data:
      type: object
      properties:
        failed_logins:
          type: array
          description: Information about each failed login attempt.
          items:
            $ref: "#/components/schemas/inline_response_200_189_data_failed_logins"
    inline_response_200_189_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_cphulk_failed_logins
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_190_data_user_brutes:
      type: object
      properties:
        authservice:
          type: string
          description: The authentication service on which the login attempt occurred.
          example: dovecot
        exptime:
          type: string
          description: When the login request will time out.
          format: ISO-8601 Date Time (Space Separated)
          example: 2014-12-07T00:00:00.000Z
        ip:
          description: The IP address of the login attempt.
          example: 192.168.0.1
          anyOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        logintime:
          type: string
          description: When the login attempt occurred.
          format: ISO-8601 Date Time (Space Separated)
          example: 2014-11-20T00:00:00.000Z
        service:
          type: string
          description: The name of the service on which the login attempt occurred.
          example: ftp
        timeleft:
          type: integer
          description: The number of minutes that remain before cPHulk removes the
            block.
          example: 14
        user:
          type: string
          description: The username for which login attempt occurred.
          example: example
    inline_response_200_190_data:
      type: object
      properties:
        user_brutes:
          type: array
          description: Information about each brute force attempt.
          items:
            $ref: "#/components/schemas/inline_response_200_190_data_user_brutes"
    inline_response_200_190_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_cphulk_user_brutes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_191_data:
      type: object
      properties:
        expiration:
          type: integer
          description: When support for the build version expires.
          format: unix_timestamp
          example: 1585612801
        expires_in_next_three_months:
          type: integer
          description: |-
            Whether the LTS version expires within the next three months.
            - `1` — LTS expires within the next three months.
            - `0` — LTS does **not** expire within the next three months.
          example: 0
          enum:
          - 0
          - 1
        full_version:
          type: string
          description: The full version number.
          example: 11.88.1.11
    inline_response_200_191_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_current_lts_expiration_status
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_192_data_disabled_roles:
      type: object
      properties:
        description:
          type: string
          description: The role's description.
        module:
          type: string
          description: The role's module name.
        name:
          type: string
          description: The role's name.
    inline_response_200_192_data:
      type: object
      properties:
        code:
          type: string
          description: The code ID of the current profile.
          example: MAILNODE
        description:
          type: string
          description: A description about the current profile.
          example: This profile provides only services and cPanel features that allow
            the system to serve mail.
        disabled_roles:
          type: array
          description: The disabled roles of the current profile.
          example:
          - description: FTP allows users to manage the files associated with their
              site with an FTP client.
            module: FTP
            name: FTP
          - description: File Storage allows users to access the File Manager and
              Git™ Version Control features.
            module: FileStorage
            name: File Storage
          - description: MySQL®/MariaDB allows users to create and manage MySQL/MariaDB
              databases.
            module: MySQL
            name: MySQL/MariaDB
          - description: PostgreSQL allows users to create and manage PostgreSQL databases.
            module: Postgres
            name: PostgreSQL
          - description: Web Disk allows users to manage and manipulate files on the
              server with multiple types of devices.
            module: WebDisk
            name: Web Disk
          - description: Web Server allows users to create and manage websites for
              their domains.
            module: WebServer
            name: Web Server
          items:
            $ref: "#/components/schemas/inline_response_200_192_data_disabled_roles"
        enabled_roles:
          type: array
          description: The current profile's enabled roles.
          example:
          - description: Calendars and Contacts provides CalDAV and CardDAV services.
            module: CalendarContact
            name: Calendars and Contacts
          - description: "Receive Mail allows users to receive email, as well as create\
              \ and manage their email accounts."
            module: MailReceive
            name: Receive Mail
          - description: Send Mail allows users to send email.
            module: MailSend
            name: Send Mail
          - description: Local Mail allows the system to process email.
            module: MailLocal
            name: Local Mail
          - description: Webmail provides access to webmail services.
            module: Webmail
            name: Webmail
          items:
            $ref: "#/components/schemas/inline_response_200_192_data_disabled_roles"
        experimental:
          type: integer
          description: |-
            Whether the profile is experimental.

            * `1` — Experimental.
            * `0` — Not experimental.

            **Important:**

            We do **not** recommend using experimental profiles on production environments.
          example: 1
          enum:
          - 1
          - 0
        name:
          type: string
          description: The name of the system's current server profile.
          example: Mail
        optional_roles:
          type: array
          description: The optional roles of the current server profile.
          example:
          - description: DNS allows users to create and edit Domain Name System zone
              files.
            module: DNS
            name: DNS
          - description: "Spam Filter allows users to use Apache SpamAssassin™ to\
              \ identify, sort, and delete unsolicited mail."
            module: SpamFilter
            name: Spam Filter
          items:
            $ref: "#/components/schemas/inline_response_200_192_data_disabled_roles"
    inline_response_200_192_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_current_profile
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_193_data:
      type: object
      properties:
        users:
          minimum: 0
          type: integer
          description: The number of cPanel accounts.
          example: 100
    inline_response_200_193_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_current_users_count
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_194_data_payload:
      type: object
      properties:
        name:
          type: string
          description: The name of the option.
          example: innodb_sort_buffer_size
        reason:
          type: string
          description: A justification for why the option should be adjusted.
          example: Your system's peak theoretical memory allocation is too high and
            may cause instability.
        value:
          type: string
          description: The recommended option value.
          example: 2M
    inline_response_200_194_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contain my.cnf options and their recommended
            values.
          items:
            $ref: "#/components/schemas/inline_response_200_194_data_payload"
    inline_response_200_194_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_database_optimizations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_195_data_accounts:
      type: object
      properties:
        blocks_limit:
          minimum: 0
          type: integer
          description: |-
            The account's disk space quota, in kibibytes (KiB).
            * `null` - The account has unlimited disk space.
          nullable: true
        blocks_used:
          minimum: 0
          type: integer
          description: "The account's current disk space usage, in kibibytes (KiB)."
          example: 2632
        inodes_limit:
          minimum: 0
          type: integer
          description: |-
            The account's inode quota.
            * `null` - The account has an unlimited number of inodes.
          nullable: true
          example: 9999
        inodes_used:
          minimum: 0
          type: integer
          description: The account's current inode usage.
          example: 340
        user:
          type: string
          description: The cPanel or Reseller account username.
          example: username
    inline_response_200_195_data:
      type: object
      properties:
        accounts:
          type: array
          description: A list of objects containing the disk usage data for all accounts
            on the server.
          items:
            $ref: "#/components/schemas/inline_response_200_195_data_accounts"
    inline_response_200_195_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_disk_usage
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_196_data_domains:
      type: object
      properties:
        docroot:
          type: string
          description: The document root for the addon domain. An absolute file path.
          example: /home/user1/public_html/example.com
        domain:
          type: string
          description: The account's main domain. A valid domain.
          example: example.com
        domain_type:
          type: string
          description: The domain's type.
          example: addon
        ipv4:
          type: string
          description: The domain's IPv4 address. A valid IPv4 address.
          example: 192.0.2.255
        ipv4_ssl:
          type: string
          description: The domain's secure IPv4 address. A valid IPv4 address.
          example: 192.0.2.255
        ipv6:
          type: string
          description: |-
            The domain's IPv6 address.
            * A valid IPv6 address.
            * `null` An IPv6 address does not exist for this domain.
          nullable: true
          example: 2001:DB8:g1m:0N3y::1
        ipv6_is_dedicated:
          type: integer
          description: |-
            The domain possesses an IPv6 address.
            * `1` An IPv6 address exists for this domain.
            * `0` An IPv6 address does not exist for this domain.
          example: 1
          enum:
          - 0
          - 1
        modsecurity_enabled:
          type: integer
          description: |-
            Whether ModSecurity is enabled on the server.
            * `1` ModSecurity is enabled.
            * `0` ModSecurity is not enabled.
          example: 1
          enum:
          - 0
          - 1
        parent_domain:
          type: string
          description: The parent domain. A valid domain name.
          example: example.com
        php_version:
          type: string
          description: The installed PHP versions.
          example: ea-php54
        port:
          type: integer
          description: The server's port number.
          example: 80
        port_ssl:
          type: integer
          description: The server's secure port number.
          example: 443
        user:
          type: string
          description: The account username. A cPanel account or reseller username
            on the server.
          example: username
        user_owner:
          type: string
          description: The domain's owner.
          example: user1
    inline_response_200_196_data:
      type: object
      properties:
        domains:
          type: array
          description: |-
            array of objects representing the domain's data.

            **Note:**

             This return only includes domains that you manually created. This does not include service subdomain (proxy subdomains) or automatically-created domains.
          items:
            $ref: "#/components/schemas/inline_response_200_196_data_domains"
    inline_response_200_196_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_domain_info
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` Success
            * `0` Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_197_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_ecommerce
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_198_data_features:
      type: object
      properties:
        id:
          type: string
          description: The feature's ID.
          example: addondomains
        is_cpaddon:
          type: integer
          description: |-
            Whether the feature is a
            [cPAddon](https://docs.cpanel.net/cpanel/software/site-software/).

            * `1` — cPAddon.
            * `0` — **Not** a cPAddon.
          example: 0
          enum:
          - 1
          - 0
        is_plugin:
          type: integer
          description: |-
            Whether the feature is a plugin.

            * `1` — Plugin.
            * `0` — **Not** a plugin.
          example: 0
          enum:
          - 1
          - 0
        name:
          type: string
          description: The feature's name.
          example: Addon Domain Manager
    inline_response_200_198_data:
      type: object
      properties:
        features:
          type: array
          description: An array of objects containing information about a feature.
          items:
            $ref: "#/components/schemas/inline_response_200_198_data_features"
    inline_response_200_198_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_feature_metadata
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_199_data_feature:
      type: object
      properties:
        id:
          type: string
          description: The feature's ID.
          example: sslmanager
        name:
          type: string
          description: The feature's name.
          example: SSL Manager
    inline_response_200_199_data:
      type: object
      properties:
        feature:
          type: array
          description: An array of objects that contain a list of available features.
          items:
            $ref: "#/components/schemas/inline_response_200_199_data_feature"
    inline_response_200_199_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_feature_names
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_200_data_features:
      type: object
      properties:
        id:
          type: string
          description: The feature's ID.
          example: email_trace
        is_disabled:
          type: integer
          description: |-
            Whether the feature is disabled.

            * `1` — Disabled.
            * `0` — **Not** disabled.

            **Note:**

            * The `disabled` feature list does **not** use this return.
            * Users on your server can't access disabled features. For more
            information, read our
            [Feature Manager](https://go.cpanel.net/whmdocsFeatureManager)
            documentation.
          example: 0
          enum:
          - 1
          - 0
        value:
          type: integer
          description: |-
            Whether the feature list includes the feature.

            * `1` — The feature list includes this feature.
            * `0` — The feature list does **not** include this feature.

            **Note:**

            The `disabled` feature list uses the **opposite** logic for this return.

            * `1` — The `disabled` feature list does **not** include this feature.
            * `0` — The `disabled` feature list includes this feature.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_200_data:
      type: object
      properties:
        featurelist:
          type: string
          description: The feature list's name.
          example: Mail Only
        features:
          type: array
          description: An array of objects containing the feature's information.
          items:
            $ref: "#/components/schemas/inline_response_200_200_data_features"
    inline_response_200_200_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_featurelist_data
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_201_data:
      type: object
      properties:
        featurelists:
          type: array
          description: An array of available feature lists.
          example:
          - default
          - disabled
          - reseller1_test1
          - reseller1_test2
          items:
            type: string
            example: default
    inline_response_200_201_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_featurelists
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_202_data:
      properties:
        domains_to_be_enabled:
          minimum: 0
          type: integer
          description: The number of domains that you will enable with PHP-FPM when
            you run the `/scripts/php_fpm_config_convert` script.
          example: 2
        domains_using_fpm:
          minimum: 0
          type: integer
          description: The number of domains with PHP-FPM enabled.
          example: 20
        memory_needed:
          minimum: 0
          type: integer
          description: The approximate number of megabytes of memory that your system
            will require to convert the remaining domains to PHP-FPM.
          format: megabytes
          example: 90000
        number_of_new_fpm_accounts_we_can_handle:
          minimum: 0
          type: integer
          description: The approximate number of domains on which you can enable PHP-FPM
            without a server overload.
          example: 8
        show_warning:
          type: integer
          description: |-
            Whether you **may** overload your server when you convert all domains
            to PHP-FPM.

            * `1` — **High** risk of server overload when you enable PHP-FPM.
            * `0` — **Low** risk of server overload when you enable PHP-FPM.
          example: 0
          enum:
          - 1
          - 0
        total_domains:
          minimum: 0
          type: integer
          description: The total number of domains on the server.
          example: 22
    inline_response_200_202_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_fpm_count_and_utilization
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_203_data_payload:
      type: object
      properties:
        path:
          type: string
          description: directory where the system can store users' home directories.
            A valid directory path.
          format: local_path
          example: /home
    inline_response_200_203_data:
      type: object
      properties:
        payload:
          type: array
          description: An array containing data for each home parent directory. This
            array contains the path return.
          items:
            $ref: "#/components/schemas/inline_response_200_203_data_payload"
    inline_response_200_203_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_homedir_roots
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_204_data_userconfig:
      type: object
      properties:
        app:
          type: string
          description: The application to link.
          example: WHMCS_billing
        autologin_token_url:
          type: string
          description: |-
            A publicly-available URL to which the server will send the
            `app`, `token`, `user`, and `subscriber_unique_id` values through
            an HTTP POST request. The destination server will respond
            with a JSON-encoded object with either a `redirect_url`
            key or the `retry` and `attempt` keys.

            * If the response contains `redirect_url`, the system will redirect
            the user to that URL (for example, `{"redirect_url":"http://www.whmcs.com/client_area/login/?one_time_user_token_that_expires_in_120_seconds=d41d8cd98f00}`
            will send the user to that URL).
            * If the response contains `retry` and `attempt`, the system will wait for
            the `retry` value in seconds for a maximum of 60 seconds
            and then attempt the call again. The `attempt` value indicates
            the number of attempts that the system tried. The system
            will stop after three attempts (for example, `{"retry":30,
            "attempt":2}` represents the second attempt to connect,
            and the system will pause the user for 30 seconds before
            it tries again).
          format: url
          example: http://www.example.com/login.cgi
        base64_png_image:
          type: string
          description: The image to display for the application on the cPanel *Home*
            interface.
          format: base64 image
          example: iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA%2fwD%2fAP%2bgvaeTAAAACXBIWXMAAABIAAAASABGyWs%2bAAALVUlEQVRo3sWZe3BU1R3HP79z793dZAPkBYIg4RUSBKkIEfCNog5WbaWOHevUWttOVXxVtFWctmpb2xGptVOt1ken1bbSVsVSxVba8UkrsRIxYhbRJEqRVxJCErK7d%2b89%2fePcTW6WTdj4mH5nLuTunj3n%2b%2f2d3%2fn9fucc4f%2bAbdu2ISJkMhmxbXupiMwH0lrr33qet7W6uhoRKaivwlp9TCQSCQAFVAEdwL7gqxLgCeB0wAOuSqVSvywvLyeZTIrWeqLWukdrvVcpRXV19UF9q0%2bbeEC%2bEvgOsA74EVAaNBkP1AR%2fW0BdNBq1enp68Dyvzvf9P2qtVwNn%2bb5vh%2frrg%2f1JEP3hG0ehROFpt8qW2CLAymRceax7aXeHv2PtFSM3LtD4NwNxYAqQAn4CnAwcFupqLjADiAG%2fAOqCz2PAq0Bb7tjDFrC8Pj7gfVVdD%2b3p9xAUoJcCKzGuKUCHhWyPSWmiV7fvCQQ4wGXAKcAEIBrqbibweMBrSujzt4HOfHwKEhAiXR5YqQHYs6quJ%2fSdHwGOxbgCGg8NZQp7zhGxyvu39rY3AJOCxkXAnDxDWcD0nM9c4AUgA1BTUzPgyyEFhIhHgcXA1cBC4DHgxuX18fZQ89HALNBEZRRTnDPo8rdLt79r4aaelx%2bLqzHJ%2fKMIAmjo%2bzePAA8oBiYlEok6YNf06dP%2f1tTUpAeNQiHyDnAT8C36F18G%2bBWwgv6pPQVYo9GjjopcxMLYcjxSpPzO9mI1%2bg1BzQ9IBLQVGk1ad%2bFyAIfiroiUKIyb5aIFeAeoBQ4HtsZisQs6OzsbC3EhDUwMkc%2fO3DeAJPCDYOoXa%2fTImIximrMECxtBcFRRuUYvClscNHu8LWxzn2Gn9wZJ3ZGptI788ZLiu193de%2fZwNKAaBaT6Hc%2fgFrP886ePXt2YyEzAPAV4EEOdrle4EWgDBM9RgiKGudc5seuJSalaPwca3i8nX6CTakH6dY7s6J2CNaSmJRtvnjEehs4HrgDs6YOgoisi0QiV2%2fdunXboHlgVV1P%2bPU1YGeeZkXAmcFAIwxBnyZ3DRuSK%2bnVbYRzpSAk3LX8O3UX3XoXgpV93qpQ1c0%2bKTDu%2bQJwObAlD%2flnIpHIsmQyuW3u3LkFJ7IWYHMhDTUaH49t7jr2eFtQwRCCYp%2ffQkPqYVx9IAi7Bgr7lRV7NnWNsWbj6TTj7em0%2bTteV9h3YnJGFp7jOGu6urqaa2trqaioMC4RcpdRmOy4HeiiPyz0AE3AWUORFxRFUspIdQSHWUdTYdUOcKGWzPN0%2bu8PII9xwzevLIe4jOXp3m8y0T3Bakg9UjbZXtxyYtGN7yjsWUFby%2fO8C%2bPx%2bIetra2NjuPsskPkFbAMuCIg%2b0rwvAXMAs4e2vI%2bY61jOD72bUaq8ThS0jcjAB5pdmU2o9G5BVjMx%2f16qapqas48l3b1gTm7M1tO8MksTLhrKqY4i9RE%2b8Q%2bQ3iet8jzvAWu625Pp9OvhRflvMDvxgfPqYHlWzERaPyhXKdYjabCmg6hyJ6dG1%2b7JPW%2bfNWjAGcmdftUjW8D4zV%2b1PTp0eE36ypOys0QRUC17%2fsVWQGxgPyEnI5LMOn9UOgE%2fVpMStuA00GPYkChqBGxsCWGJm8JrDR%2bbgZGUDgUDRYpXRFpywqIMzDuFooU8HfgXl%2b7G%2bZELvFdfWCuEmeuhXMccAZBdLKJUmnVpj7IvGwTlBtDQ%2bNInDJrygDrK6UaReRZy7I2KaW2ZK3Uhil3XxkG%2bX3AbcDFwLO2FO0%2fZsZJ3TEpewH4KfA1TAUZ0IGZkS82l8i4J0GnDtW5j88Y6ygqVE04EHiWZd3V2Nh4w6RJk35fVVXVoELxvgFTJb5QAPku4LuYynPfqrqeUN7QaDIIMh0YF7ZoiYydtLTkd42C%2fQDozOC29ymSCj4T%2bTIRKSG0nsTzvCPr6upKWltb0VobPw2JaAxE%2fHNI48B9wAOAm%2f3t9fUjeP6tPzDtzclYRI7TcD8560fjx4pl9GXnl6xuUTjrNV6YXF8OKZZKFsSu1RPs43IzufJ9%2f8re3t7bo9FoZSKR6F9oIRFNwBoGKQ2BTZjNxkFuMNk5jddnvlSpsG8Hna9cRuOPLVfTVpxVfE%2fZYdacdERGoLBROMRlNNOcM1lcfAc1zrmDLd6o53lX9Pb2XlpbW9tf24TyQTFwDPn3yz7wKPB%2bvp5TuoudXkPnFLV4k6BODozQhalYD6dvr%2bCXH24fO3%2bJVUOn%2fz69ug2Fwwg1jhFqAjbRXMt3iUiH1nosEBGRNqVU%2fcaNG5Hl9fEYZltXGxA%2fFrPVK8vDcTsmG7%2bZM2sALNsIN5R%2bSI%2b%2fZ5otsZtAvw%2b8hAkSq4DTBnYnCKrPUjpwoly7AN%2bLRCJPicg8z%2fNOFZF3y8rKVrqu69qYzUktJgcUM%2fRJxTuYxJYXcSmlyhlLqyvveiQvd%2fUBV7B0YPn%2f5nOoYOc2FHwgkU6nE8XFxYnKysrVqVRK2tra3KlTp2IDn6NwbMdk57y4o24fdxj9GkiHThAOx2T6MKn99O%2bRw%2bgJfl8SvBcBJ6TT6adEhO7u7syMGTP6Gis4lAEGoBuzvRsuZjFwQ%2fIc8HngZwR73QCtwCWYemxH6PP5kUikVGt90IGXzfAOt%2bIYdxiuiGbMmdASTHK7CuOOXZjN0pigXT2wVpC0RvuYdeMCT5Mn6mUFPI5ZAxMx0zaUoAmBiP3DFNAEXIoJDu8ET9bi74UEbBypJqT2egksia62sHcL0pEhtUlQnq0ieQVchDlRqMEcmdRhKtHyPESmB0IbC2GdcwSyH1gL0JRoQuOhsDs87f4ZdA%2bQFFEvZnSKh%2fefxF3HdmcwrjYk%2bqwdygNFwD3AV%2fO094DrgJ9nP8gNpYXipS2rcaSSlL%2fbsSTiaLT2dCoF%2bKfMvKjgfga4S0jEVcDd5HenesypwfaPI%2bCTQr5MfGRAcLC1MBezc%2fs%2bkB7ugME45cA5mFI7XxQUTPZ%2bGmgfylCSQ%2f4oTJ1z0iF47MeU3w8CmUJnIRhnJHArJlQ6Qwhwgd8IskKj9w4qIET%2bGIxvH1%2bgMTswJ8z3BYIGtVJojAnAzZiIFDnkCCZHPGpJ0Y31bXt33bdgPdUjF6Gkfz%2bUFVABrOagWuWQSAHPAPdi4ntXWEjQt2DuB04HrgTmM7x7CQ1q5Sljr1nx2t5HvFuObkak%2f%2bfZNdCFSTbDRRQ4D3MuWo%2fZ0TUtr493BsRHA7OBE4P%2fiz7CGK4Sq%2fmcv%2f7Qe%2bi089F6oMeFXWgeJqlN7FdONybRlGKuhwpBOngkEFjI%2bauHOYWLBOPEQuZ%2fTkn0wm63ve3eBT5KBk5euPP%2fYBbwMsyFwobgacTUMvfQfx00FCIU5t8hjqwFrg%2bEzMGsw4VAhSCrtN7fticJuw%2b0HPTj3Cg0ArOP3UF%2fVZjFncDyYRArFL2YauBJgJHOOErs0WpncktZxu%2bt8NEtvs6kF429lqVVd%2bUXMBhCwuLAnzDF2KeBW4Fbsi%2fDSY6FRoPJmEX4aeF4gvOj4WJQATn3A%2fMYeJuYRS%2bmTP4XQ1eouzAHYBvg4D0jJvtPBgbE%2bI8lIAQbk5lzo0kaE%2f8vBD6LqZ3yZdVOTNY9D%2bPr6%2fK0OYxBLjM%2bCQGCCaXhCz0XE5VuCwh2AP8g%2fyy0YCx%2fIPj7GmB9TptmYI8Su%2b80%2b2MLCC0kF3Pd8yVMcbUfeAiz8MKEtwEf5OmqAdgben8XU%2b0%2bD%2bzGXBZ%2bAfiLr93gzrJwFNQ6tB7KMHF6M7B34D0xEeDXgdAs%2fIDsvVmjhNpXY0qYTUDqo5blw72p7yB07Li8Ps6quh6uqy9GUGngVQ0X0D%2bz7YJuAOk77wkRDW8tPzIKEnAo60RVORErhq%2b9dUrsKIgjIL722l0%2fucVSDh2pDwoZatj4H%2bRdIAdHBVWZAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE1LTA5LTAyVDEyOjM5OjQ4LTA1OjAwppVa9QAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNS0wOS0wMlQxMjozOTo0OC0wNTowMNfI4kkAAAAASUVORK5CYII%3d
        implements:
          type: string
          description: |-
            The service for which to implement authentication. The `implements` value is a string from the WHM API 1 `get_users_links` function. Typically, this function returns one of the following values:
            * `billing` — This link appears in the user menu.
            * `customer_service` — This link appears in the user menu.
            * `support` — This link appears in the user menu.
            * `upgrade` — This link appears in the user menu and context-sensitive areas when the user may require more of a resource.
          example: billing
        label:
          type: string
          description: The label to display for the application on the cPanel *Home*
            interface.
          example: WHMCS Billing
        subscriber_unique_id:
          type: string
          description: The subscriber's unique ID that the system will present to
            the URL in the `autologin_token_url` endpoint.
          example: "1234"
        url:
          type: string
          description: |-
            A publicly-available URL to which to send the user if the
            location in the `autologin_token_url` parameter does not
            respond.
          format: url
          example: http://www.example.com
        user:
          type: string
          description: The cPanel account name.
          format: username
          example: username
      description: An object with information about the user's integration link.
    inline_response_200_204_data:
      type: object
      properties:
        userconfig:
          $ref: "#/components/schemas/inline_response_200_204_data_userconfig"
    inline_response_200_204_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_integration_link_user_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_205_data:
      type: object
      properties:
        enabled_services:
          type: array
          description: The services enabled on the linked remote server node.
          items:
            type: string
            example: apache_php_fpm
        hostname:
          type: string
          description: The remote server node's hostname.
          format: domain
          example: example.com
        last_check:
          type: integer
          description: The last time that the server queried the current status of
            the remote server node.
          format: unix_timestamp
          example: 1556576165
        system_settings:
          type: object
          additionalProperties:
            type: object
          description: |-
            A list of the `worker_capabilities` return's system settings.
            The key is a role name and the value is an object with system settings for the role.
          example:
            Mail:
              globalspamassassin: 0
        tls_verified:
          type: integer
          description: |-
            Whether the remote server node has a valid SSL certificate.
            * `1` - The remote server node has a valid SSL certificate.
            * `0` - The remote server node does not have a valid SSL certificate.
          example: 1
          enum:
          - 0
          - 1
        username:
          type: string
          description: The username required to make API calls to the linked remote
            server node.
          format: username
          example: root
        version:
          type: string
          description: The version of cPanel & WHM installed on the remote server
            node.
          example: 11.86.0.0
        worker_capabilities:
          type: object
          additionalProperties:
            type: object
          description: |-
            A group of services required for a remote server node to perform a specific task. The key is a role name
            and the value is an object with required options for the role.
          example:
            Mail: {}
    inline_response_200_205_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_linked_server_node
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_206_data:
      type: object
      properties:
        payload:
          type: string
          description: The URL to which to redirect the browser after login.
          format: url
          example: https://account.cpanel.net/oauth2/auth/login?client_id=d5eff4a09e29d5b20752674c0ab2c799c428eb23df4db2df10a5c9d96c37472c76013a41e9a0c714e852965ceaed2e8e05e2f738bc27ee562cfb683fbfc75a01&email=&redirect_uri=http%3A%2F%2Fhostname.example.com%2Fredirectionlocation.cgi%3Fstate&response_type=token
    inline_response_200_206_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_login_url
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_207_data:
      properties:
        branch:
          type: object
          additionalProperties:
            type: array
            description: The branch.
            items:
              type: object
              properties:
                build:
                  type: string
                  description: The build version number.
                  example: 11.90.0.5
                is_main:
                  type: integer
                  description: |-
                    Whether the build represents the main build of the branch.
                    * `1` - The build is the main build of the branch.
                    * `0` - The build is **not** the main build of the branch.

                    **Note:**

                    This will be `1` for exactly one of the entries in this array.
                  example: 0
                  enum:
                  - 0
                  - 1
          description: An object that lists information about available branch builds.
          example:
            "11.78.0":
            - build: 11.78.0.49
              is_main: 1
            "11.80.0":
            - build: 11.80.0.24
              is_main: 1
            "11.82.0":
            - build: 11.82.0.19
              is_main: 1
            "11.84.0":
            - build: 11.84.0.22
              is_main: 1
            "11.86.0":
            - build: 11.86.0.25
              is_main: 1
            "11.88.0":
            - build: 11.88.0.14
              is_main: 1
            "11.90.0":
            - build: 11.90.0.5
              is_main: 1
        flags:
          type: object
          additionalProperties:
            type: integer
            description: |-
              Feature or flag in the output format.

              * `1` - Feature is present in the returned data.
              * `0` - Feature is **not** present in the returned data.
            enum:
            - 0
            - 1
          description: An object containing Features or flags supported by this output.
          example:
            is_main: 1
        tiers:
          type: object
          additionalProperties:
            type: array
            description: The release tier.
            items:
              type: object
              properties:
                build:
                  type: string
                  description: The build version number.
                expires:
                  type: string
                  description: |-
                    When WebPros International, LLC support for the build version expires.
                    Encoded as a Unix Timestamp.

                    **Note:**

                    This item is only present when the version is LTS.
                  example: "1617148801"
                is_lts:
                  type: integer
                  description: |-
                    Whether cPanel offers this version as LTS.
                    * `1` — Long-term support.
                    * `0` — No Long-term support.

                    **Note:**

                    This item is only present when the version is LTS.
                  example: 1
                  enum:
                  - 1
                is_main:
                  type: integer
                  description: |-
                    Whether the build represents the main build of the tier.
                    * `1` - The build is the main build of the tier.
                    * `0` - The build is **not** the main build of the tier.

                    **Note:**

                    This will be `1` for exactly one of the entries in this array.
                  example: 1
                  enum:
                  - 0
                  - 1
                named:
                  type: array
                  description: |-
                    The release tier or tiers which currently offer this branch, if applicable.

                    **Note:**

                    This item is only present when the version is part of a named tier.
                  example:
                  - edge
                  - current
                  - release
                  items:
                    type: string
                    enum:
                    - edge
                    - current
                    - release
                    - stable
                    - lts
          description: An object that lists information about build versions in release
            tiers.
          example:
            "11.78":
            - build: 11.78.0.49
              expires: "1588636799"
              is_lts: 1
              is_main: 1
            "11.80":
            - build: 11.80.0.24
              is_main: 1
            "11.82":
            - build: 11.82.0.19
              is_main: 1
            "11.84":
            - build: 11.84.0.22
              is_main: 1
            "11.86":
            - build: 11.86.0.25
              expires: "1617148801"
              is_lts: 1
              is_main: 1
              named:
              - lts
            "11.88":
            - build: 11.88.0.13
              is_main: 0
              named:
              - stable
            - build: 11.88.0.14
              is_main: 1
            "11.90":
            - build: 11.90.0.5
              is_main: 1
              named:
              - current
              - edge
              - release
    inline_response_200_207_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_lts_wexpire
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_208_data:
      type: object
      properties:
        guid:
          type: string
          description: The mailbox globally unique identifier (GUID).
          example: 1234560f0c58d158c92a000044f0d230
        messages:
          minimum: 0
          type: integer
          description: The total number of messages in the mailbox.
          example: 0
        vsize:
          minimum: 0
          type: integer
          description: The total virtual size of the mailbox's contents with `CRLF`
            line terminators.
          format: bytes
          example: 0
      description: |-
        An object containing information about the mailbox's contents.

        **Note:**

        The mailbox name is the return's name.
    inline_response_200_208_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_mailbox_status
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_209_data_mailboxes:
      type: object
      properties:
        guid:
          type: string
          description: The alpha-numeric 32-byte mailbox GUID.
          example: 1234560f0c58d158c92a000044f0d230
        mailbox:
          type: string
          description: The mailbox name.
          example: INBOX.marla_singer@example_com
        messages:
          minimum: 0
          type: integer
          description: The total number of messages in the mailbox.
          example: 0
        vsize:
          minimum: 0
          type: integer
          description: "The total virtual size of the mailbox's contents, computed\
            \ with CRLF line terminators."
          format: bytes
          example: 0
    inline_response_200_209_data:
      type: object
      properties:
        mailboxes:
          type: array
          description: An array that contains information about the mailbox's contents.
          items:
            $ref: "#/components/schemas/inline_response_200_209_data_mailboxes"
    inline_response_200_209_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_mailbox_status_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_210_data_payload:
      type: object
      properties:
        local_commission_id:
          type: string
          description: The locally-cached commission ID that the server owner uses
            for the cPanel Market provider.
          format: email
          example: user@example.com
        provider_display_name:
          type: string
          description: The cPanel Market provider's display name.
          example: cPanel Store
        provider_name:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
        remote_commission_id:
          type: string
          description: The commission ID that the server owner uses for the cPanel
            Market provider.
          format: email
          example: user@example.com
    inline_response_200_210_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contains commission ID information
            about a cPanel Market provider.
          items:
            $ref: "#/components/schemas/inline_response_200_210_data_payload"
    inline_response_200_210_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_market_providers_commission_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_211_data_payload:
      type: object
      properties:
        display_name:
          type: string
          description: The cPanel Market provider's display name.
          example: cPanel Store
        enabled:
          type: integer
          description: |-
            Whether the cPanel Market provider is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        even_commission_divisor:
          type: integer
          description: |-
            The price of the Market provider's products must be a multiple of this value.

            **Note:**

             This function returns the even_commission_divisor value only if the `supports_commission` value is `1`.
          example: 6
        name:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
        supports_commission:
          type: integer
          description: |-
            Whether the cPanel Market provider supports sales commissions.
            * `1` - The provider supports commissions.
            * `0` - The provider does **not** support commissions.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_211_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects with information about each cPanel Market
            provider.
          items:
            $ref: "#/components/schemas/inline_response_200_211_data_payload"
    inline_response_200_211_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_market_providers_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_212_data_product_metadata:
      type: object
      properties:
        attributes:
          oneOf:
          - $ref: "#/components/schemas/MarketProviderMetaData"
          - $ref: "#/components/schemas/SSLMarketProviderMetaData"
        product_id:
          type: string
          description: The product's ID.
          example: "123"
        provider_display_name:
          type: string
          description: The cPanel Market provider's display name.
          example: cPanel Store
        provider_name:
          type: string
          description: The cPanel Market provider's name.
          example: cPStore
    inline_response_200_212_data:
      type: object
      properties:
        product_metadata:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_212_data_product_metadata"
    inline_response_200_212_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_market_providers_product_metadata
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_213_data:
      type: object
      properties:
        products:
          type: array
          description: |-
            A list of the products in the cPanel Market.

            **Note:**

            Additional returns that correspond to each product may appear.
          example:
          - base_name: ""
            billing_type: one-time
            description: An extended-validated (EV) SSL certificate signed by COMODO.
            display_name: Comodo EV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: Comodo EV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "155"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "1"
            - year
            x_identity_verification:
            - label: Organization Name
              name: organizationName
            - is_optional: 1
              label: Department Name
              name: organizationalUnitName
            - description: 9 consecutive digits or “##-###-####” (More information
                (https://go.cpanel.net/get_duns))
              is_optional: 1
              label: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
              name: duns_number
              pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
            - label: Street Address
              name: streetAddress
            - label: City
              name: localityName
            - label: State or Province
              name: stateOrProvinceName
            - label: Postal Code
              name: postalCode
            - label: Country Code
              name: countryName
              type: country_code
            - label: Representative’s Given (First) Name
              name: rep_forename
            - label: Representative’s Surname (Last Name)
              name: rep_surname
            - label: Representative’s Email Address
              name: rep_email_address
              type: email
            - description: This should be one of the organization’s publicly-listed
                telephone numbers.
              is_optional: 1
              label: Representative’s Telephone Number
              name: rep_telephone
              type: tel
            - description: Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/)
                for more information about this field’s options.
              label: Business Category
              name: business_category
              options:
              - - b
                - Incorporated Business (“Private Organization”)
              - - d
                - Non-incorporated Business (“Business Entity”)
              - - c
                - Government Entity (“Government Entity”)
              type: choose_one
            - is_optional: 1
              label: City Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_locality_name
            - is_optional: 1
              label: State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_state_or_province_name
            - label: Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_country_name
              type: country_code
            - is_optional: 1
              label: Date of Incorporation
              name: date_of_incorporation
              type: date
            - is_optional: 1
              label: Assumed Name (DBA (Doing Business As))
              name: assumed_name
            x_max_http_redirects: 0
            x_payment_trigger: checkout
            x_price_per_domain: 108
            x_price_per_domain_maximum: 1080
            x_price_per_domain_minimum: 108
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: ev
            x_warn_after: 604800
          - base_name: ""
            billing_type: one-time
            description: A 2-year extended-validated (EV) SSL certificate signed by
              Comodo.
            display_name: 2-Year Comodo EV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: Comodo EV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "261"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "2"
            - year
            x_identity_verification:
            - label: Organization Name
              name: organizationName
            - is_optional: 1
              label: Department Name
              name: organizationalUnitName
            - description: 9 consecutive digits or “##-###-####” (More information
                (https://go.cpanel.net/get_duns))
              is_optional: 1
              label: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
              name: duns_number
              pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
            - label: Street Address
              name: streetAddress
            - label: City
              name: localityName
            - label: State or Province
              name: stateOrProvinceName
            - label: Postal Code
              name: postalCode
            - label: Country Code
              name: countryName
              type: country_code
            - label: Representative’s Given (First) Name
              name: rep_forename
            - label: Representative’s Surname (Last Name)
              name: rep_surname
            - label: Representative’s Email Address
              name: rep_email_address
              type: email
            - description: This should be one of the organization’s publicly-listed
                telephone numbers.
              is_optional: 1
              label: Representative’s Telephone Number
              name: rep_telephone
              type: tel
            - description: Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/)
                for more information about this field’s options.
              label: Business Category
              name: business_category
              options:
              - - b
                - Incorporated Business (“Private Organization”)
              - - d
                - Non-incorporated Business (“Business Entity”)
              - - c
                - Government Entity (“Government Entity”)
              type: choose_one
            - is_optional: 1
              label: City Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_locality_name
            - is_optional: 1
              label: State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_state_or_province_name
            - label: Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_country_name
              type: country_code
            - is_optional: 1
              label: Date of Incorporation
              name: date_of_incorporation
              type: date
            - is_optional: 1
              label: Assumed Name (DBA (Doing Business As))
              name: assumed_name
            x_max_http_redirects: 0
            x_payment_trigger: checkout
            x_price_per_domain: 216
            x_price_per_domain_maximum: 2160
            x_price_per_domain_minimum: 216
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: ev
            x_warn_after: 604800
          - base_name: ""
            billing_type: one-time
            description: An organization-validated (OV) SSL certificate signed by
              COMODO.
            display_name: Comodo OV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: Comodo OV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "217"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "1"
            - year
            x_identity_verification:
            - label: Organization Name
              name: organizationName
            - is_optional: 1
              label: Department Name
              name: organizationalUnitName
            - description: 9 consecutive digits or “##-###-####” (More information
                (https://go.cpanel.net/get_duns))
              is_optional: 1
              label: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
              name: duns_number
              pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
            - label: Street Address
              name: streetAddress
            - label: City
              name: localityName
            - label: State or Province
              name: stateOrProvinceName
            - label: Postal Code
              name: postalCode
            - label: Country Code
              name: countryName
              type: country_code
            - label: Representative’s Given (First) Name
              name: rep_forename
            - label: Representative’s Surname (Last Name)
              name: rep_surname
            - label: Representative’s Email Address
              name: rep_email_address
              type: email
            - description: This should be one of the organization’s publicly-listed
                telephone numbers.
              is_optional: 1
              label: Representative’s Telephone Number
              name: rep_telephone
              type: tel
            x_max_http_redirects: 0
            x_payment_trigger: checkout
            x_price_per_domain: 36
            x_price_per_domain_maximum: 360
            x_price_per_domain_minimum: 36
            x_price_per_wildcard_domain: "150.00"
            x_price_per_wildcard_domain_maximum: "1500.00"
            x_price_per_wildcard_domain_minimum: "150.00"
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: ov
            x_warn_after: 604800
            x_wildcard_parent_domain_free: 1
          - base_name: ""
            billing_type: one-time
            description: A 2-year organization-validated (OV) SSL certificate signed
              by Comodo.
            display_name: 2-Year Comodo OV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: Comodo OV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "253"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "2"
            - year
            x_identity_verification:
            - label: Organization Name
              name: organizationName
            - is_optional: 1
              label: Department Name
              name: organizationalUnitName
            - description: 9 consecutive digits or “##-###-####” (More information
                (https://go.cpanel.net/get_duns))
              is_optional: 1
              label: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
              name: duns_number
              pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
            - label: Street Address
              name: streetAddress
            - label: City
              name: localityName
            - label: State or Province
              name: stateOrProvinceName
            - label: Postal Code
              name: postalCode
            - label: Country Code
              name: countryName
              type: country_code
            - label: Representative’s Given (First) Name
              name: rep_forename
            - label: Representative’s Surname (Last Name)
              name: rep_surname
            - label: Representative’s Email Address
              name: rep_email_address
              type: email
            - description: This should be one of the organization’s publicly-listed
                telephone numbers.
              is_optional: 1
              label: Representative’s Telephone Number
              name: rep_telephone
              type: tel
            x_max_http_redirects: 0
            x_payment_trigger: checkout
            x_price_per_domain: 72
            x_price_per_domain_maximum: 720
            x_price_per_domain_minimum: 72
            x_price_per_wildcard_domain: "300.00"
            x_price_per_wildcard_domain_maximum: "3000.00"
            x_price_per_wildcard_domain_minimum: "300.00"
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: ov
            x_warn_after: 604800
            x_wildcard_parent_domain_free: 1
          - base_name: ""
            billing_type: one-time
            description: A domain-validated (DV) SSL certificate signed by cPanel.
            display_name: cPanel DV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: cPanel DV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "159"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "1"
            - year
            x_max_http_redirects: 0
            x_payment_trigger: issuance
            x_price_per_domain: 9
            x_price_per_domain_maximum: 30
            x_price_per_domain_minimum: 3
            x_price_per_wildcard_domain: "75.00"
            x_price_per_wildcard_domain_maximum: "750.00"
            x_price_per_wildcard_domain_minimum: "75.00"
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: dv
            x_warn_after: 604800
            x_wildcard_parent_domain_free: 1
          - base_name: ""
            billing_type: one-time
            description: A 2-year domain-validated (DV) SSL certificate signed by
              cPanel.
            display_name: 2-Year cPanel DV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: cPanel DV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "225"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "2"
            - year
            x_max_http_redirects: 0
            x_payment_trigger: issuance
            x_price_per_domain: 18
            x_price_per_domain_maximum: 60
            x_price_per_domain_minimum: 6
            x_price_per_wildcard_domain: "150.00"
            x_price_per_wildcard_domain_maximum: "1500.00"
            x_price_per_wildcard_domain_minimum: "150.00"
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: dv
            x_warn_after: 604800
            x_wildcard_parent_domain_free: 1
          - base_name: ""
            billing_type: one-time
            description: An organization-validated (OV) SSL certificate signed by
              cPanel.
            display_name: cPanel OV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: cPanel OV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "213"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "1"
            - year
            x_identity_verification:
            - label: Organization Name
              name: organizationName
            - is_optional: 1
              label: Department Name
              name: organizationalUnitName
            - description: 9 consecutive digits or “##-###-####” (More information
                (https://go.cpanel.net/get_duns))
              is_optional: 1
              label: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
              name: duns_number
              pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
            - label: Street Address
              name: streetAddress
            - label: City
              name: localityName
            - label: State or Province
              name: stateOrProvinceName
            - label: Postal Code
              name: postalCode
            - label: Country Code
              name: countryName
              type: country_code
            - label: Representative’s Given (First) Name
              name: rep_forename
            - label: Representative’s Surname (Last Name)
              name: rep_surname
            - label: Representative’s Email Address
              name: rep_email_address
              type: email
            - description: This should be one of the organization’s publicly-listed
                telephone numbers.
              is_optional: 1
              label: Representative’s Telephone Number
              name: rep_telephone
              type: tel
            x_max_http_redirects: 0
            x_payment_trigger: checkout
            x_price_per_domain: 30
            x_price_per_domain_maximum: 300
            x_price_per_domain_minimum: 30
            x_price_per_wildcard_domain: "99.00"
            x_price_per_wildcard_domain_maximum: "990.00"
            x_price_per_wildcard_domain_minimum: "99.00"
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: ov
            x_warn_after: 604800
            x_wildcard_parent_domain_free: 1
          - base_name: ""
            billing_type: one-time
            description: A 2-year organization-validated (OV) SSL certificate signed
              by cPanel.
            display_name: 2-Year cPanel OV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: cPanel OV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "233"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "2"
            - year
            x_identity_verification:
            - label: Organization Name
              name: organizationName
            - is_optional: 1
              label: Department Name
              name: organizationalUnitName
            - description: 9 consecutive digits or “##-###-####” (More information
                (https://go.cpanel.net/get_duns))
              is_optional: 1
              label: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
              name: duns_number
              pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
            - label: Street Address
              name: streetAddress
            - label: City
              name: localityName
            - label: State or Province
              name: stateOrProvinceName
            - label: Postal Code
              name: postalCode
            - label: Country Code
              name: countryName
              type: country_code
            - label: Representative’s Given (First) Name
              name: rep_forename
            - label: Representative’s Surname (Last Name)
              name: rep_surname
            - label: Representative’s Email Address
              name: rep_email_address
              type: email
            - description: This should be one of the organization’s publicly-listed
                telephone numbers.
              is_optional: 1
              label: Representative’s Telephone Number
              name: rep_telephone
              type: tel
            x_max_http_redirects: 0
            x_payment_trigger: checkout
            x_price_per_domain: 60
            x_price_per_domain_maximum: 600
            x_price_per_domain_minimum: 60
            x_price_per_wildcard_domain: "198.00"
            x_price_per_wildcard_domain_maximum: "1980.00"
            x_price_per_wildcard_domain_minimum: "198.00"
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: ov
            x_warn_after: 604800
            x_wildcard_parent_domain_free: 1
          - base_name: ""
            billing_type: one-time
            description: A domain-validated (DV) SSL certificate signed by COMODO.
            display_name: Comodo DV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: Comodo DV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "151"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "1"
            - year
            x_max_http_redirects: 0
            x_payment_trigger: issuance
            x_price_per_domain: 12
            x_price_per_domain_maximum: 120
            x_price_per_domain_minimum: 12
            x_price_per_wildcard_domain: "99.00"
            x_price_per_wildcard_domain_maximum: "990.00"
            x_price_per_wildcard_domain_minimum: "99.00"
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: dv
            x_warn_after: 604800
            x_wildcard_parent_domain_free: 1
          - base_name: ""
            billing_type: one-time
            description: A 2-year domain-validated (DV) SSL certificate signed by
              Comodo.
            display_name: 2-Year Comodo DV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNTUwIiB3aWR0aD0iNDE3LjE2Ij48ZyBmaWxsPSIjMzViNTZjIj48cGF0aCBkPSJNNDE0LjM5NiAyNmM3LTExIDAtMjYtMTMtMjZIMTg3LjM5NWMtNDUgMC04MSAxMi0xMDcgMzZzLTQyIDU4LTQ2IDEwM2wtMTAgMTE2Yy00IDQ1IDUgNzkgMjggMTAzIDIyIDI0IDU2IDM2IDEwMSAzNmg0OXYtMWM5LjAwMS0xIDE1LjAwMS03IDE2LjAwMS0xN2w1LTU3YzAtMTEtNy0xOS0xOC4wMDEtMTloLTI3Yy0xNyAwLTMwLTQtMzctMTItNy03LTEwLTIwLTgtMzlsOS0xMDRjMi0xOCA3LTMxIDE1LTM5czIxLTEyIDM5LTEyaDE0NC4wMDFjMTcgMCAzNC05IDQ0LTIzbDMwLTQ1Ii8+PHBhdGggZD0iTTMuMzk1IDUyNGMtOCAxMS0xIDI2IDEyIDI2aDIxNy4wMDFjNDUgMCA4MS0xMiAxMDgtMzYgMjYtMjQgNDEtNTggNDUtMTAybDExLTExN2MzLTQ1LTYtNzktMjgtMTAzLTIzLTI0LTU2LTM2LTEwMS0zNmgtNDl2MWMtMTAuMDAxIDEtMTUuMDAxIDctMTYuMDAxIDE3bC01IDU4Yy0xIDEwIDcgMTggMTcuMDAxIDE4aDI3YzE4IDAgMzAgNCAzNyAxMnMxMCAyMSA5IDM5bC0xMCAxMDRjLTEgMTktNiAzMi0xNCAzOS05IDgtMjIgMTItNDAgMTJINzYuMzk1Yy0xNyAwLTMzIDktNDMgMjRsLTMwIDQ0Ii8+PC9nPjwvc3ZnPg==
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: Comodo DV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "245"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "2"
            - year
            x_max_http_redirects: 0
            x_payment_trigger: issuance
            x_price_per_domain: 24
            x_price_per_domain_maximum: 240
            x_price_per_domain_minimum: 24
            x_price_per_wildcard_domain: "198.00"
            x_price_per_wildcard_domain_maximum: "1980.00"
            x_price_per_wildcard_domain_minimum: "198.00"
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: dv
            x_warn_after: 604800
            x_wildcard_parent_domain_free: 1
          - base_name: ""
            billing_type: one-time
            description: An extended-validated (EV) SSL certificate signed by cPanel.
            display_name: cPanel EV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: cPanel EV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "209"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "1"
            - year
            x_identity_verification:
            - label: Organization Name
              name: organizationName
            - is_optional: 1
              label: Department Name
              name: organizationalUnitName
            - description: 9 consecutive digits or “##-###-####” (More information
                (https://go.cpanel.net/get_duns))
              is_optional: 1
              label: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
              name: duns_number
              pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
            - label: Street Address
              name: streetAddress
            - label: City
              name: localityName
            - label: State or Province
              name: stateOrProvinceName
            - label: Postal Code
              name: postalCode
            - label: Country Code
              name: countryName
              type: country_code
            - label: Representative’s Given (First) Name
              name: rep_forename
            - label: Representative’s Surname (Last Name)
              name: rep_surname
            - label: Representative’s Email Address
              name: rep_email_address
              type: email
            - description: This should be one of the organization’s publicly-listed
                telephone numbers.
              is_optional: 1
              label: Representative’s Telephone Number
              name: rep_telephone
              type: tel
            - description: Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/)
                for more information about this field’s options.
              label: Business Category
              name: business_category
              options:
              - - b
                - Incorporated Business (“Private Organization”)
              - - d
                - Non-incorporated Business (“Business Entity”)
              - - c
                - Government Entity (“Government Entity”)
              type: choose_one
            - is_optional: 1
              label: City Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_locality_name
            - is_optional: 1
              label: State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_state_or_province_name
            - label: Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_country_name
              type: country_code
            - is_optional: 1
              label: Date of Incorporation
              name: date_of_incorporation
              type: date
            - is_optional: 1
              label: Assumed Name (DBA (Doing Business As))
              name: assumed_name
            x_max_http_redirects: 0
            x_payment_trigger: checkout
            x_price_per_domain: 60
            x_price_per_domain_maximum: 600
            x_price_per_domain_minimum: 60
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: ev
            x_warn_after: 604800
          - base_name: ""
            billing_type: one-time
            description: A 2-year extended-validated (EV) SSL certificate signed by
              cPanel.
            display_name: 2-Year cPanel EV SSL Certificate
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNTlwdCIgaGVpZ2h0PSIzMjAiIHZpZXdCb3g9IjAgMCAzNTkgMjQwIj48ZGVmcz48Y2xpcFBhdGggaWQ9ImEiPjxwYXRoIGQ9Ik0xMjMgMGgyMzUuMzd2MjQwSDEyM3ptMCAwIi8+PC9jbGlwUGF0aD48L2RlZnM+PHBhdGggZD0iTTg5LjY5IDU5LjEwMmg2Ny44MDJsLTEwLjUgNDAuMmMtMS42MDUgNS42LTQuNjA1IDEwLjEtOSAxMy41LTQuNDAyIDMuNC05LjUwNCA1LjA5Ni0xNS4zIDUuMDk2aC0zMS41Yy03LjIgMC0xMy41NSAyLjEwMi0xOS4wNSA2LjMtNS41MDUgNC4yLTkuMzUzIDkuOTA0LTExLjU1MiAxNy4xMDMtMS40IDUuNDAzLTEuNTUgMTAuNS0uNDUgMTUuMzAyIDEuMDk4IDQuNzk2IDMuMDQ3IDkuMDUgNS44NTIgMTIuNzUgMi43OTcgMy43MDMgNi40IDYuNjUyIDEwLjc5NyA4Ljg1IDQuMzk3IDIuMiA5LjE5OCAzLjI5OCAxNC40IDMuMjk4aDE5LjJjMy42MDIgMCA2LjU0NyAxLjQ1MyA4Ljg1MiA0LjM1MiAyLjI5NyAyLjkwMiAyLjk0NSA2LjE0OCAxLjk1IDkuNzVsLTEyIDQ0LjM5OGgtMjFjLTE0LjQwMyAwLTI3LjY1My0zLjE0OC0zOS43NS05LjQ1LTEyLjEwMi02LjMtMjIuMTUzLTE0LjY0OC0zMC4xNTMtMjUuMDUtOC0xMC4zOTUtMTMuNDU0LTIyLjI0Ni0xNi4zNS0zNS41NDctMi45LTEzLjMtMi41NS0yNi45NSAxLjA1Mi00MC45NTNsMS4yLTQuNWMyLjU5Ny05LjYwMiA2LjY0OC0xOC40NSAxMi4xNDgtMjYuNTUgNS41LTguMDk4IDEyLTE1IDE5LjUtMjAuNyA3LjUtNS43IDE1Ljg1LTEwLjE0OCAyNS4wNS0xMy4zNTIgOS4yLTMuMTk1IDE4Ljc5Ny00Ljc5NiAyOC44LTQuNzk2IiBmaWxsPSIjZmY2YzJjIi8+PGcgY2xpcC1wYXRoPSJ1cmwoI2EpIj48cGF0aCBkPSJNMTIzLjg5IDI0MEwxODIuOTkgMTguNjAyYzEuNTk4LTUuNTk4IDQuNTk4LTEwLjA5OCA5LTEzLjVDMTk2LjM4OCAxLjcgMjAxLjQ4NCAwIDIwNy4yODggMGg2Mi43YzE0LjQwMyAwIDI3LjY1IDMuMTQ4IDM5Ljc1IDkuNDUgMTIuMTAyIDYuMyAyMi4xNTMgMTQuNjU1IDMwLjE1MyAyNS4wNSA3Ljk5NyAxMC40MDIgMTMuNSAyMi4yNTQgMTYuNSAzNS41NSAzIDEzLjMwNSAyLjU5NCAyNi45NTQtMS4yMDIgNDAuOTVsLTEuMiA0LjVjLTIuNTk3IDkuNjAyLTYuNTk3IDE4LjQ1LTEyIDI2LjU1LTUuMzk4IDguMDk4LTExLjg0NyAxNS4wNTItMTkuMzQ3IDIwLjg0OC03LjUgNS44MDUtMTUuODU1IDEwLjMwNS0yNS4wNSAxMy41LTkuMiAzLjIwNC0xOC44MDUgNC44MDUtMjguODA1IDQuODA1aC01NC4yOTdsMTAuOC00MC41YzEuNi01LjQwMiA0LjYtOS44IDktMTMuMjAzIDQuMzk2LTMuMzk4IDkuNDk3LTUuMTAyIDE1LjMwMi01LjEwMmgxNy4zOThjNy4yIDAgMTMuNjUzLTIuMiAxOS4zNTItNi41OTcgNS42OTUtNC4zOTggOS40NDUtMTAuMDk3IDExLjI1LTE3LjEgMS4zOTQtNC45OTcgMS41NDctOS45LjQ0NS0xNC43LTEuMS00LjgtMy4wNS05LjA0Ny01Ljg0OC0xMi43NS0yLjgtMy42OTUtNi40MDItNi42OTUtMTAuNzk2LTktNC40MDYtMi4yOTctOS4yMDYtMy40NS0xNC40MDItMy40NUgyMzMuMzlsLTQzLjggMTYyLjkwM2MtMS42MDYgNS40LTQuNjA2IDkuNzk3LTkgMTMuMTk1LTQuNDAzIDMuNDA3LTkuNDA2IDUuMTAyLTE1IDUuMTAyaC00MS43IiBmaWxsPSIjZmY2YzJjIi8+PC9nPjwvc3ZnPgo=
            icon_mime_type: image/svg+xml
            license_term: "0"
            price_unit: USD
            product: cPanel EV Certificate
            product_category: N/A
            product_group: ssl_certificate
            product_id: "241"
            provider_display_name: cPanel Store
            provider_name: cPStore
            requires_ip: "0"
            x_certificate_term:
            - "2"
            - year
            x_identity_verification:
            - label: Organization Name
              name: organizationName
            - is_optional: 1
              label: Department Name
              name: organizationalUnitName
            - description: 9 consecutive digits or “##-###-####” (More information
                (https://go.cpanel.net/get_duns))
              is_optional: 1
              label: Dun & Bradstreet D-U-N-S (Data Universal Numbering System) Number
              name: duns_number
              pattern: "^[0-9]{2}(?:-[0-9]{3}-[0-9]{4}|[0-9]{7})$"
            - label: Street Address
              name: streetAddress
            - label: City
              name: localityName
            - label: State or Province
              name: stateOrProvinceName
            - label: Postal Code
              name: postalCode
            - label: Country Code
              name: countryName
              type: country_code
            - label: Representative’s Given (First) Name
              name: rep_forename
            - label: Representative’s Surname (Last Name)
              name: rep_surname
            - label: Representative’s Email Address
              name: rep_email_address
              type: email
            - description: This should be one of the organization’s publicly-listed
                telephone numbers.
              is_optional: 1
              label: Representative’s Telephone Number
              name: rep_telephone
              type: tel
            - description: Consult the EV SSL Certificate Guidelines (https://cabforum.org/extended-validation/)
                for more information about this field’s options.
              label: Business Category
              name: business_category
              options:
              - - b
                - Incorporated Business (“Private Organization”)
              - - d
                - Non-incorporated Business (“Business Entity”)
              - - c
                - Government Entity (“Government Entity”)
              type: choose_one
            - is_optional: 1
              label: City Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_locality_name
            - is_optional: 1
              label: State or Province Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_state_or_province_name
            - label: Country Code Where Incorporated (JOI (Jurisdiction of Incorporation))
              name: joi_country_name
              type: country_code
            - is_optional: 1
              label: Date of Incorporation
              name: date_of_incorporation
              type: date
            - is_optional: 1
              label: Assumed Name (DBA (Doing Business As))
              name: assumed_name
            x_max_http_redirects: 0
            x_payment_trigger: checkout
            x_price_per_domain: 120
            x_price_per_domain_maximum: 1200
            x_price_per_domain_minimum: 120
            x_ssl_per_domain_pricing: 1
            x_supports_dns_dcv: 1
            x_validation_type: ev
            x_warn_after: 604800
          items:
            $ref: "#/components/schemas/MarketItemType"
    inline_response_200_213_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_market_providers_products
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result` field is `0`.
            This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_214_data:
      type: object
      properties:
        users:
          minimum: 0
          type: integer
          description: |-
            The maximum number of cPanel accounts that the server's license allows.
            * `0` - Unlimited
          example: 100
    inline_response_200_214_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_maximum_users
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_215_data:
      type: object
      properties:
        nameservers:
          type: array
          description: The currently-authenticated user's nameservers.
          example:
          - ns1.example.com
          - ns2.example.com
          items:
            type: string
    inline_response_200_215_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_nameserver_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_216_data:
      type: object
      properties:
        strength:
          maximum: 100
          minimum: 0
          type: integer
          description: The password's strength.
          example: 21
    inline_response_200_216_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_password_strength
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_217_data:
      type: object
      properties:
        state:
          type: string
          description: |-
            The `start_background_pkgacct` session's state.
            * `COMPLETED`
            * `FAILED`
            * `RUNNING`
          example: COMPLETED
          enum:
          - COMPLETED
          - FAILED
          - RUNNING
    inline_response_200_217_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_pkgacct_session_state
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_218_data_client_configurations:
      type: object
      properties:
        client_id:
          type: string
          description: The client ID for the identity provider.
          example: "1234567890"
        client_secret:
          type: string
          description: The secret for the client ID.
          example: victoria
        redirect_uris:
          type: array
          description: The redirection URIs for each interface that the identity provider
            uses.
          example:
          - https://hostname.example.com:2083/openid_connect_callback/cpanelid
          - https://hostname.example.com:2087/openid_connect_callback/cpanelid
          - https://hostname.example.com:2096/openid_connect_callback/cpanelid
          items:
            type: string
            format: url
      description: An object that contains the client configuration information.
    inline_response_200_218_data:
      type: object
      properties:
        client_configurations:
          $ref: "#/components/schemas/inline_response_200_218_data_client_configurations"
    inline_response_200_218_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_provider_client_configurations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_219_data_configuration_fields:
      type: object
      properties:
        description:
          type: string
          description: The description of the configuration field.
        display_order:
          minimum: 0
          type: integer
          description: The display order of the configuration field.
        field_id:
          type: string
          description: The name of the configuration field.
        label:
          type: string
          description: The label of the configuration field.
        value:
          type: string
          description: "The value of the configuration field, if available."
          nullable: true
    inline_response_200_219_data:
      type: object
      properties:
        configuration_fields:
          type: array
          description: An array of objects containing the configuration information
            for each field.
          example:
          - description: The Secret of the Client
            display_order: 1
            field_id: client_secret
            label: Client Secret
          - description: The ID of the Client.
            display_order: 0
            field_id: client_id
            label: Client ID
          items:
            $ref: "#/components/schemas/inline_response_200_219_data_configuration_fields"
    inline_response_200_219_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_provider_configuration_fields
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_220_data_configurations:
      type: object
      properties:
        color:
          type: string
          description: The background color of the button in the cPanel interface.
          format: RGB
        display_name:
          type: string
          description: The display name of the identity provider.
        documentation_url:
          type: string
          description: The URL to the identity provider's documentation.
          format: url
        icon:
          type: string
          description: The icon file in the button that the cPanel login interface
            displays.
          format: byte
        icon_type:
          type: string
          description: The icon file's MIME type.
        label:
          type: string
          description: The text label in the button that the cPanel login interface
            displays.
        link:
          type: string
          description: A reference URL to the identity provider's configuration for
            the system.
        provider_name:
          type: string
          description: The name of the identity provider.
        service:
          type: string
          description: |-
            The service's name.

            * `cpaneld`
            * `whostmgrd`
            * `webmaild`
          enum:
          - cpaneld
          - whostmgrd
          - webmaild
        textcolor:
          type: string
          description: The color of the text label in the button that the cPanel login
            interface displays.
          format: RGB
    inline_response_200_220_data:
      type: object
      properties:
        configurations:
          type: array
          description: An array of objects containing information about each service's
            external authentication display information.
          example:
          - color: dd4b39
            display_name: Google
            documentation_url: https://developers.google.com/identity/protocols/OpenIDConnect
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMiIgaGVpZ2h0PSIxNCIgdmlld0JveD0iMCAwIDIyIDE0Ij48ZyBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPjxwYXRoIGQ9Ik03IDZ2Mi40aDMuOTdjLS4xNiAxLjAzLTEuMiAzLjAyLTMuOTcgMy4wMi0yLjM5IDAtNC4zNC0xLjk4LTQuMzQtNC40MlM0LjYxIDIuNTggNyAyLjU4YzEuMzYgMCAyLjI3LjU4IDIuNzkgMS4wOGwxLjktMS44M0MxMC40Ny42OSA4Ljg5IDAgNyAwIDMuMTMgMCAwIDMuMTMgMCA3czMuMTMgNyA3IDdjNC4wNCAwIDYuNzItMi44NCA2LjcyLTYuODQgMC0uNDYtLjA1LS44MS0uMTEtMS4xNkg3ek0yMiA2aC0yVjRoLTJ2MmgtMnYyaDJ2MmgyVjhoMiIvPjwvZz48L3N2Zz4=
            icon_type: image/svg+xml
            label: Log in via Google
            link: /openid_connect/google
            provider_name: google
            service: cpaneld
            textcolor: FFFFFF
          - color: dd4b39
            display_name: Google
            documentation_url: https://developers.google.com/identity/protocols/OpenIDConnect
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMiIgaGVpZ2h0PSIxNCIgdmlld0JveD0iMCAwIDIyIDE0Ij48ZyBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPjxwYXRoIGQ9Ik03IDZ2Mi40aDMuOTdjLS4xNiAxLjAzLTEuMiAzLjAyLTMuOTcgMy4wMi0yLjM5IDAtNC4zNC0xLjk4LTQuMzQtNC40MlM0LjYxIDIuNTggNyAyLjU4YzEuMzYgMCAyLjI3LjU4IDIuNzkgMS4wOGwxLjktMS44M0MxMC40Ny42OSA4Ljg5IDAgNyAwIDMuMTMgMCAwIDMuMTMgMCA3czMuMTMgNyA3IDdjNC4wNCAwIDYuNzItMi44NCA2LjcyLTYuODQgMC0uNDYtLjA1LS44MS0uMTEtMS4xNkg3ek0yMiA2aC0yVjRoLTJ2MmgtMnYyaDJ2MmgyVjhoMiIvPjwvZz48L3N2Zz4=
            icon_type: image/svg+xml
            label: Log in via Google
            link: /openid_connect/google
            provider_name: google
            service: webmaild
            textcolor: FFFFFF
          - color: dd4b39
            display_name: Google
            documentation_url: https://developers.google.com/identity/protocols/OpenIDConnect
            icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMiIgaGVpZ2h0PSIxNCIgdmlld0JveD0iMCAwIDIyIDE0Ij48ZyBmaWxsPSIjZmZmIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPjxwYXRoIGQ9Ik03IDZ2Mi40aDMuOTdjLS4xNiAxLjAzLTEuMiAzLjAyLTMuOTcgMy4wMi0yLjM5IDAtNC4zNC0xLjk4LTQuMzQtNC40MlM0LjYxIDIuNTggNyAyLjU4YzEuMzYgMCAyLjI3LjU4IDIuNzkgMS4wOGwxLjktMS44M0MxMC40Ny42OSA4Ljg5IDAgNyAwIDMuMTMgMCAwIDMuMTMgMCA3czMuMTMgNyA3IDdjNC4wNCAwIDYuNzItMi44NCA2LjcyLTYuODQgMC0uNDYtLjA1LS44MS0uMTEtMS4xNkg3ek0yMiA2aC0yVjRoLTJ2MmgtMnYyaDJ2MmgyVjhoMiIvPjwvZz48L3N2Zz4=
            icon_type: image/svg+xml
            label: Log in via Google
            link: /openid_connect/google
            provider_name: google
            service: whostmgrd
            textcolor: FFFFFF
          items:
            $ref: "#/components/schemas/inline_response_200_220_data_configurations"
    inline_response_200_220_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_provider_display_configurations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_221_data:
      type: object
      properties:
        name:
          type: string
          description: The public contact name of the reseller.
          example: Bob's Hosting
        url:
          type: string
          description: The public contact URL.
          format: url
          example: https://bobshosting.net
    inline_response_200_221_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_public_contact
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_222_data:
      type: object
      properties:
        public_ip:
          type: string
          description: The public IP address.
          format: ipv4
          example: 192.0.2.0
    inline_response_200_222_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_public_ip
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_223_data:
      type: object
      properties:
        accesshash:
          type: string
          description: The account's remote access hash.
          example: 6b355856c00606648b803a7d896186632472d584eaf0dad878b8885e1f64edad24b31ff79f2675303a598ac211ad5188c589fb60c5786a3e8d85c2029ca4ea76edb62becff7e3f7c5421f51bb4896737c22eda761e2a6fd96404bf513ee9051480ea86c800ab9b45f5255590836c7b769816a8f7f5def1e0c6cb19c212f01f56bb3392854ce51178a943eab6d1ce5d44857e980f70724f50964d2fbe01cb076a119dc5bf421051c2a0882550cdc69872832167c91e11bbe5c95d98474096ebe14b6ca9da2d73faecea5ec37f208912f5da578d5f8ab7c257584002e1808614f9859dceae564e8f30a9790c232d005ebd44f912e20b72e731fc600156e5b9f2902b0dd913010022e6b0deb6a2fb0d38ff3fd005c53f321ec812d3be10643dce81c46e1b9e2abe8814d46ba49b8a173b3e01ec677ea182cabb55db6d9eab2240755be1bbb1d7094a155fd262934ec099fdba3b10f409dced62d3d570ab6478a269a95da1314a45a5916da07312bf7e5a53d57b090e9c24932776f7ffdcf90ba2fa5cd935995795348b67311185f54da6b90da8771585e78c5f587e427bead9198faaa631b8216099c25373c8d4c26a011f295188963840777d09d95b6385df8337098b7e231534323457b9388fe9ea8046
    inline_response_200_223_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_remote_access_hash
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_224_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_rpm_version_data
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_225_data:
      type: object
      properties:
        enabled_services:
          type: array
          description: An list of the remote server node's enabled services.
          items:
            type: string
            example: apache_php_fpm
        remote_node_linkages:
          type: array
          description: |-
            An array of objects of the remote server's [child nodes](https://go.cpanel.net/cPanelGlossary#child-node). This function returns this information via the `list_linked_server_nodes` function.

            **Note:**

            If you call this function on a parent node for its child node, this function returns an empty object.
          items:
            type: object
            example:
              alias: MailNode
              enabled_services:
              - apache_php_fpm
              - cpanellogd
              - cpdavd
              - cpgreylistd
              - cphulkd
              - cpsrvd
              - crond
              - dnsadmin
              - exim
              - imap
              - ipaliases
              - lmtp
              - mailman
              - mysql
              - named
              - nscd
              - pop
              - queueprocd
              - rsyslogd
              - spamd
              - sshd
              - tailwatchd
              hostname: mailnode.example.com
              last_check: 1583934071
              system_settings:
                Mail:
                  globalspamassassin: "1"
              tls_verified: 0
              username: root
              version: 11.90.0.0
              worker_capabilities:
                Mail: {}
        system_settings:
          type: object
          description: An object containing the remote server's child node system
            settings.
          example:
            Mail:
              globalspamassassin: 1
        tls_verified:
          type: integer
          description: |-
            Whether the remote server node has a valid [SSL certificate](https://go.cpanel.net/guidetoSSL).
            * `1` - The remote server node has a valid SSL certificate.
            * `0` - The remote server node does **not** have a valid SSL certificate.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: string
          description: The installed version of cPanel & WHM on the remote server
            node.
          example: 11.90.0.0
    inline_response_200_225_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_server_node_status
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_226_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_service_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_227_data:
      type: object
      properties:
        key name:
          type: string
          description: |-
            configuration key's current setting.

            **Note:**

             This return's name is the value that you pass in this function's key parameter. A valid setting.
          example: "512"
        mail_process_size: {}
    inline_response_200_227_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_service_config_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_228_data_payload:
      type: object
      properties:
        backend:
          type: string
          description: The name of the server to which the system will proxy requests
            for this service group.
          format: domain
          example: example.com
        service_group:
          type: string
          description: |-
            The name of the proxying service group, if applicable.
            * null — The account’s general service proxying backend.
          nullable: true
          example: Mail
    inline_response_200_228_data:
      properties:
        payload:
          type: array
          description: The account’s service proxying backends.
          items:
            $ref: "#/components/schemas/inline_response_200_228_data_payload"
    inline_response_200_228_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_service_proxy_backends
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_229_data:
      type: object
      properties:
        ip:
          type: string
          description: |-
            The IP address that the WHM user shares.

            **Note:**

             If the user does **not** have a shared IP address, the function returns the tilde ( `~` ) character.
          example: 192.168.0.1
    inline_response_200_229_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_shared_ip
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_230_data_payload:
      type: object
      properties:
        dport:
          type: integer
          description: The source port that the Linux kernel reports for the socket.
          example: 443
        dst:
          type: string
          description: The destination IPv4 address.
          format: ipv4
          example: 10.0.0.2
        inode:
          minimum: 1
          type: integer
          description: The inode number the Linux kernel assigned to the socket.
          example: 27171
        rqueue:
          type: integer
          description: The number of bytes in the socket's read buffer.
          format: bytes
          example: 0
        sport:
          type: integer
          description: The source port number.
          example: 2087
        src:
          type: string
          description: The source IPv4 address.
          format: ipv4
          example: 10.0.0.1
        state:
          minimum: 1
          type: integer
          description: "The socket's current state, in the Linux kernel's numeric\
            \ format."
          example: 10
        uid:
          minimum: 1
          type: integer
          description: The socket's user ID (UID).
          example: 102
        wqueue:
          type: integer
          description: The number of bytes the system is waiting to send.
          format: bytes
          example: 45
    inline_response_200_230_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contains the status of the system's
            TCP IPv4 sockets.
          items:
            $ref: "#/components/schemas/inline_response_200_230_data_payload"
    inline_response_200_230_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_tcp4_sockets
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_231_data_payload:
      type: object
      properties:
        dport:
          minimum: 1
          type: integer
          description: The source port that the Linux kernel reports for the socket.
          example: 443
        dst:
          type: string
          description: The destination IPv6 address.
          format: bytes
          example: 2001:0db8:0:0:1:0:0:1
        inode:
          minimum: 1
          type: integer
          description: The inode number the Linux kernel assigned to the socket.
          example: 27171
        rqueue:
          type: integer
          description: The number of bytes in the socket's read buffer.
          format: bytes
          example: 0
        sport:
          minimum: 1
          type: integer
          description: The source port number.
          example: 2087
        src:
          type: string
          description: The source IPv6 address.
          format: ipv6
          example: 2001:0db8:0:0:1:0:0:2
        state:
          minimum: 1
          type: integer
          description: "The socket's current state, in the Linux kernel's numeric\
            \ format."
          example: 10
        uid:
          minimum: 1
          type: integer
          description: The socket's user ID (UID).
          example: 102
        wqueue:
          type: integer
          description: The number of bytes that the system is waiting to send.
          format: bytes
          example: 45
    inline_response_200_231_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contains the status of the system's
            TCP IPv6 sockets.
          items:
            $ref: "#/components/schemas/inline_response_200_231_data_payload"
    inline_response_200_231_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_tcp6_sockets
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_232_data:
      type: object
      properties:
        state_name:
          type: string
          description: |-
            The transfer session's state.
            * `TRANSFER_PENDING`
            * `TRANSFER_INPROGRESS`
            * `RESTORE_PENDING`
            * `RESTORE_INPROGRESS`
            * `RUNNING`
            * `PAUSED`
            * `PENDING`
            * `COMPLETED`
            * `ABORTED`
            * `FAILED`
          example: TRANSFER_INPROGRESS
          enum:
          - TRANSFER_PENDING
          - TRANSFER_INPROGRESS
          - RESTORE_PENDING
          - RESTORE_INPROGRESS
          - RUNNING
          - PAUSED
          - PENDING
          - COMPLETED
          - ABORTED
          - FAILED
    inline_response_200_232_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_transfer_session_state
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_233_data_tweaksetting:
      type: object
      properties:
        key:
          type: string
          description: A key name in the `cpanel.config` file.
          example: defaultmailaction
        value:
          type: string
          description: The value. This value depends on the `key` value's requirements.
          example: localuser
      description: A list of the *Tweak Settings* option's information.
    inline_response_200_233_data:
      type: object
      properties:
        tweaksetting:
          $ref: "#/components/schemas/inline_response_200_233_data_tweaksetting"
    inline_response_200_233_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_tweaksetting
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_234_data_payload:
      type: object
      properties:
        dport:
          minimum: 1
          type: integer
          description: The source port that the Linux kernel reports for the socket.
          example: 443
        dst:
          type: string
          description: The destination IPv4 address.
          format: ipv4
          example: 10.0.0.2
        inode:
          minimum: 1
          type: integer
          description: The inode number the Linux kernel assigned to the socket.
          example: 27171
        rqueue:
          minimum: 1
          type: integer
          description: The number of bytes in the socket's read buffer.
          format: bytes
          example: 0
        sport:
          minimum: 1
          type: integer
          description: The source port number.
          example: 53
        src:
          type: string
          description: The source IPv4 address.
          format: ipv4
          example: 10.0.0.1
        state:
          minimum: 1
          type: integer
          description: "The socket's current state, in the Linux kernel's numeric\
            \ format."
          example: 10
        uid:
          minimum: 1
          type: integer
          description: The socket's user ID (UID).
          example: 25
        wqueue:
          minimum: 1
          type: integer
          description: The number of bytes that the system is waiting to send.
          format: bytes
          example: 45
    inline_response_200_234_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contains the status of the system's
            UDP IPv4 sockets.
          items:
            $ref: "#/components/schemas/inline_response_200_234_data_payload"
    inline_response_200_234_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_udp4_sockets
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_235_data_payload:
      type: object
      properties:
        dport:
          maximum: 65535
          minimum: 0
          type: integer
          description: The source port that the Linux kernel reports for the socket.
          example: 443
        dst:
          type: string
          description: The destination IPv6 address.
          format: ipv6
          example: 2001:0db8:0:0:1:0:0:2
        inode:
          minimum: 1
          type: integer
          description: The inode number the Linux kernel assigned to the socket.
          example: 27171
        rqueue:
          minimum: 0
          type: integer
          description: The number of bytes in the socket's read buffer.
          example: 0
        sport:
          maximum: 65535
          minimum: 0
          type: integer
          description: The source port number.
          example: 53
        src:
          type: string
          description: The source IPv6 address.
          format: ipv6
          example: 2001:0db8:0:0:1:0:0:1
        state:
          type: integer
          description: "The socket's current state, in the Linux kernel's numeric\
            \ format."
          example: 10
        uid:
          minimum: 0
          type: integer
          description: The socket's user ID (UID).
          example: 25
        wqueue:
          minimum: 0
          type: integer
          description: The number of bytes that the system is waiting to send.
          example: 45
    inline_response_200_235_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contains the status of the system's
            UDP IPv6 sockets.
          items:
            $ref: "#/components/schemas/inline_response_200_235_data_payload"
    inline_response_200_235_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_udp6_sockets
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_236_data_payload:
      type: object
      properties:
        sender:
          type: string
          description: The user's email address.
          example: username@example.com
        unique_recipient_count:
          minimum: 1
          type: integer
          description: The number of unique recipients that the email account sent
            mail to.
          example: 51
    inline_response_200_236_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contain a count of the number of unique
            recipients a system user sent mail to.
          items:
            $ref: "#/components/schemas/inline_response_200_236_data_payload"
    inline_response_200_236_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_unique_recipient_count_per_sender_for_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_237_data_payload:
      type: object
      properties:
        unique_sender_recipient_count:
          minimum: 1
          type: integer
          description: A count of the unique sender-recipient pairs for mail sent
            during a period of time.
          example: 120
        user:
          type: string
          description: A system user's username.
          example: username
    inline_response_200_237_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contain a count for all system users'
            unique email recipients.
          items:
            $ref: "#/components/schemas/inline_response_200_237_data_payload"
    inline_response_200_237_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_unique_sender_recipient_count_per_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_238_data:
      type: object
      properties:
        current_version:
          type: string
          description: The server's current version of cPanel & WHM.
          example: 88.0.12
        newest_version:
          type: string
          description: The available version of cPanel & WHM available for the server's
            support tier.
          example: 88.0.12
        tier:
          type: string
          description: |-
            The server's
            [support tier](https://docs.cpanel.net/knowledge-base/cpanel-product/product-versions-and-the-release-process/#release-tiers):

            * `edge` — EDGE.
            * `current` — CURRENT.
            * `release` — RELEASE.
            * `stable` — STABLE.
            * `lts` — Long-Term Support (LTS).
          example: current
          enum:
          - edge
          - current
          - release
          - stable
          - lts
        update_available:
          type: integer
          description: |-
            Whether a new version of cPanel & WHM is available for the server's support tier.

            - `1` — Available.
            - `0` — Not available.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_238_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_update_availability
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_239_data_bw_limit:
      type: object
      properties:
        last_month:
          allOf:
          - type: object
            description: Bandwidth usage for last month.
          - $ref: "#/components/schemas/nearReachedBaseSchema"
        messages:
          type: array
          description: An array of human-readable messages representing the facts
            listed in the other structured data in the `bw_limit` object.
          items:
            type: string
            example: This account has used 54% of its bandwidth quota for this month.
        this_month:
          allOf:
          - type: object
            description: Bandwidth usage for this month.
          - $ref: "#/components/schemas/nearReachedBaseSchema"
      description: Upgrade opportunities related to bandwidth limits.
    inline_response_200_239_data_disk_usage:
      type: object
      properties:
        messages:
          type: array
          description: An array of human-readable messages representing the facts
            listed in the other structured data in the `disk_usage` object.
          items:
            type: string
            example: This account has used 94% of its disk quota.
        relative_to_fixed_amount:
          allOf:
          - type: object
            description: Relative to a preset fixed amount (customizable).
          - $ref: "#/components/schemas/diskSchema"
        relative_to_quota:
          allOf:
          - type: object
            description: "Relative to the account's quota, if applicable."
          - $ref: "#/components/schemas/diskSchema"
      description: Upgrade opportunities related to disk usage.
    inline_response_200_239_data_upgrade_opportunities:
      properties:
        bw_limit:
          $ref: "#/components/schemas/inline_response_200_239_data_bw_limit"
        disk_usage:
          $ref: "#/components/schemas/inline_response_200_239_data_disk_usage"
        messages:
          type: array
          description: An array of human-readable messages representing the facts
            listed in the other structured data.
          example:
          - This account has used 54% of its bandwidth quota for this month.
          - This account has used 94% of its disk quota.
          items:
            type: string
      description: The property name is the cPanel account.
    inline_response_200_239_data:
      properties:
        upgrade_opportunities:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_239_data_upgrade_opportunities"
          description: The collection of accounts and information about their upgrade
            opportunities.
    inline_response_200_239_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_upgrade_opportunities
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_240_data:
      type: object
      properties:
        forward_to:
          type: array
          description: The system accounts or email addresses to which the system
            forwards the account's email.
          items:
            type: string
            example: user@example.com
    inline_response_200_240_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_user_email_forward_destination
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_241_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_users_and_domains_with_backup_metadata
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_242_data_username_linked_accounts:
      type: object
      properties:
        link_time:
          type: integer
          description: When the user linked the account.
          format: unix_timestamp
          example: 1443124003
        preferred_username:
          type: string
          description: The preferred username of the account on the identity provider
            that the interface will display.
          example: username@example.com
        provider_id:
          type: string
          description: The system's internal key for the identity provider.
          example: cpanelid
        provider_protocol:
          type: string
          description: The identity provider's protocol.
          example: openid_connect
        subject_unique_identifier:
          type: string
          description: The unique identifier for the user at the identity provider.
          example: "123456789012345678901"
        username:
          type: string
          description: The cPanel account's username.
          format: username
          example: username
    inline_response_200_242_data:
      type: object
      properties:
        username_linked_accounts:
          type: array
          description: An array of objects containing user accounts with their linked
            identity provider accounts.
          items:
            $ref: "#/components/schemas/inline_response_200_242_data_username_linked_accounts"
    inline_response_200_242_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_users_authn_linked_accounts
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_243_data_users_features_settings:
      type: object
      properties:
        cpuser_setting:
          type: integer
          description: |-
            The user's setting for the feature in their `cpuser` file, which overrides the `feature_list_setting` return.
            * `1` - Enabled.
            * `0` - Disabled.
            * `null` — The feature is **not** defined in the feature list.
          nullable: true
          example: 1
          enum:
          - 1
          - 0
        feature:
          type: string
          description: The feature name.
          example: autossl
        feature_list:
          type: string
          description: The feature list's name.
          example: autossl
        feature_list_setting:
          type: integer
          description: |-
            The user's feature list setting.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 1
          - 0
        user:
          type: string
          description: The user's username.
          format: username
          example: example
    inline_response_200_243_data:
      type: object
      properties:
        users_features_settings:
          type: array
          description: An array of objects that contain information about the feature
            list settings.
          items:
            $ref: "#/components/schemas/inline_response_200_243_data_users_features_settings"
    inline_response_200_243_metadata:
      type: object
      properties:
        command:
          type: string
          description: The method name called.
          example: get_users_features_settings
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_244_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_users_links
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_245_data:
      type: object
      properties:
        accounts:
          type: array
          description: The cPanel user accounts on the server that contain backup
            metadata.
          items:
            type: string
            format: username
            example: username
    inline_response_200_245_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: get_users_with_backup_metadata
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_246_data_partition:
      type: object
      properties:
        available:
          minimum: 1
          type: integer
          description: "The partition's unused disk space, measured in kilobytes."
          format: kilobytes
          example: 377856
        device:
          type: string
          description: The partition's device name.
          example: /dev/vda1
        disk:
          type: string
          description: The partition's label.
          example: vda1
        filesystem:
          type: string
          description: The partition's absolute directory path.
          example: /
        inodes_available:
          minimum: 1
          type: integer
          description: The number of unused inodes on the partition.
          example: 20575847
        inodes_ipercentage:
          minimum: 0
          type: integer
          description: The percentage of the partition's total
          example: 2
        inodes_total:
          minimum: 1
          type: integer
          description: The total number of inodes that the partition will allow.
          example: 20970944
        inodes_used:
          minimum: 1
          type: integer
          description: The number of inodes used on the partition.
          example: 395097
        mount:
          type: string
          description: The partition's mount point.
          example: /boot
        percentage:
          minimum: 1
          type: integer
          description: The percentage of the partition's total disk space used.
          example: 20
        total:
          minimum: 1
          type: integer
          description: "The partition's total allocated disk space, measured in kilobytes."
          format: kilobytes
          example: 495844
        used:
          minimum: 1
          type: integer
          description: "The partition's disk space used, measured in kilobytes."
          format: kilobytes
          example: 92388
    inline_response_200_246_data:
      type: object
      properties:
        partition:
          type: array
          description: An array of objects that contain drive partition information.
          items:
            $ref: "#/components/schemas/inline_response_200_246_data_partition"
    inline_response_200_246_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: getdiskusage
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Successfully retrieved disk usage
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_247_data:
      type: object
      properties:
        user:
          type: string
          description: |-
            The user who owns the domain.

            **Note:**

            This value returns `null` if the user calling the function does not own the account for the domain **or** the domain does not exist on the server.
          format: username
          nullable: true
          example: username
    inline_response_200_247_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: getdomainowner
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_248_data:
      type: object
      properties:
        hostname:
          type: string
          description: The server's hostname.
          example: hostname.example.com
    inline_response_200_248_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: gethostname
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_249_data:
      type: object
      properties:
        cpaddons:
          maximum: 100
          minimum: 1
          type: integer
          description: The minimum password strength for cPAddons.
          example: 50
        createacct:
          maximum: 100
          minimum: 1
          type: integer
          description: The minimum password strength for new cPanel accounts.
          example: 50
        default:
          maximum: 100
          minimum: 1
          type: integer
          description: The minimum password strength for **all** services.
          example: 50
        list:
          maximum: 100
          minimum: 1
          type: integer
          description: The minimum password strength for mailing lists.
          example: 50
        mysql:
          maximum: 100
          minimum: 1
          type: integer
          description: The minimum password strength for MySQL® database users.
          example: 50
        passwd:
          maximum: 100
          minimum: 1
          type: integer
          description: The minimum password strength for WHM user or system accounts.
          example: 50
        postgres:
          maximum: 100
          minimum: 1
          type: integer
          description: The minimum password strength for PostgreSQL database users.
          example: 50
        sshkey:
          maximum: 100
          minimum: 1
          type: integer
          description: The minimum password strength for SSH keys.
          example: 50
        virtual:
          maximum: 100
          minimum: 1
          type: integer
          description: "The minimum password strength for mail, FTP, Web Disk, and\
            \ WebDAV accounts."
          example: 50
    inline_response_200_249_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: getminimumpasswordstrengths
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_250_data_pkg:
      type: object
      properties:
        BWLIMIT:
          description: |-
            The hosting plan's bandwidth limit, in megabytes (MB).

            * `unlimited` — The hosting plan allows unlimited bandwidth.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - description: The hosting plan allows unlimited bandwidth.
          - type: string
          - type: string
            enum:
            - unlimited
        CGI:
          type: integer
          description: |-
            Whether CGI is enabled for the hosting plan.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        CPMOD:
          type: string
          description: The hosting plan's cPanel interface theme.
          example: jupiter
        DIGESTAUTH:
          type: string
          description: |-
            Whether the hosting plan enables Digest Authentication.

            * `y` — Enabled.
            * `n` — Disabled.
          example: "n"
        FEATURELIST:
          type: string
          description: "The hosting plan's [feature list](https://go.cpanel.net/whmdocsFeatureManager)."
          example: myfeaturelist
        FRONTPAGE:
          type: integer
          description: |-
            Whether Microsoft® FrontPage Extensions are enabled for the account.

            **Note:**

            cPanel & WHM ignores all FrontPage settings and parameters.
          example: 0
          deprecated: true
          enum:
          - 1
          - 0
        HASSHELL:
          type: integer
          description: |-
            Whether shell access is enabled for the hosting plan.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        IP:
          type: integer
          description: |-
            Whether the hosting plan grants accounts a dedicated IP address.

            * `1` — Dedicated IP address.
            * `0` — Shared IP address.
          example: 1
          enum:
          - 1
          - 0
        LANG:
          type: string
          description: The hosting plan's locale.
          format: ISO-3166-1 (alpha-2)
          example: en
        MAXADDON:
          description: |-
            The hosting plan's maximum number of addon domains.

            * `unlimited` — The hosting plan allows unlimited addon domains.
          example: 1
          oneOf:
          - minimum: 0
            type: integer
          - description: The hosting plan allows unlimited addon domains.
          - type: string
          - type: string
            enum:
            - unlimited
        MAXFTP:
          description: |-
            The hosting plan's maximum number of FTP accounts.

            * `unlimited` — The hosting plan allows unlimited FTP accounts.
          example: 2
          oneOf:
          - minimum: 0
            type: integer
          - description: The hosting plan allows unlimited FTP accounts.
          - type: string
          - type: string
            enum:
            - unlimited
        MAXLST:
          description: |-
            The hosting plan's maximum number of mailing lists.

            * `unlimited` — The hosting plan allows unlimited mailing lists.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - description: The hosting plan allows unlimited mailing lists.
          - type: string
          - type: string
            enum:
            - unlimited
        MAXPARK:
          description: |-
            The hosting plan's maximum number of parked domains (aliases).

            * `unlimited` — The hosting plan allows unlimited parked domains.
          example: 1
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited parked domains.
            enum:
            - unlimited
        MAXPOP:
          description: |-
            The hosting plan's maximum number of email accounts.

            * `unlimited` — The hosting plan allows unlimited email accounts.
          example: 20
          oneOf:
          - minimum: 0
            type: integer
          - description: The hosting plan allows unlimited email accounts.
          - type: string
          - type: string
            enum:
            - unlimited
        MAXSQL:
          description: |-
            The hosting plan's maximum number of SQL databases.

            * `unlimited` — The hosting plan allows unlimited SQL databases.
          example: 1
          oneOf:
          - minimum: 0
            type: integer
          - description: The hosting plan allows unlimited SQL databases.
          - type: string
          - type: string
            enum:
            - unlimited
        MAXSUB:
          description: |-
            The hosting plan's maximum number of subdomains.

            * `unlimited` — The hosting plan allows unlimited subdomains.
          example: 5
          oneOf:
          - minimum: 0
            type: integer
          - description: The hosting plan allows unlimited subdomains.
          - type: string
          - type: string
            enum:
            - unlimited
        MAX_DEFER_FAIL_PERCENTAGE:
          description: |-
            The
            [percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam)
            that the hosting plan can send per hour before the system rate-limits
            outgoing mail.

            * `unlimited` — The hosting plan allows unlimited email messages.
          example: 10
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited email messages.
            enum:
            - unlimited
        MAX_EMAILACCT_QUOTA:
          description: |-
            The hosting plan's maximum email account quota size, in megabytes (MB).

            * `unlimited` — The hosting plan allows an unlimited email account quota size.
          example: unlimited
          oneOf:
          - minimum: 1
            type: integer
          - type: string
            description: The hosting plan allows an unlimited email account quota
              size.
            enum:
            - unlimited
        MAX_EMAIL_PER_HOUR:
          description: |-
            The [maximum number of emails](https://go.cpanel.net/howtopreventspam)
            that the hosting plan can send in one hour.

            * `unlimited` — The hosting plan allows unlimited emails per hour.
          example: 100
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited emails per hour.
            enum:
            - unlimited
        MAX_TEAM_USERS:
          maximum: 7
          minimum: 0
          type: integer
          description: The hosting plan's maximum number of Team users.
          nullable: true
          example: 7
        QUOTA:
          description: |-
            The hosting plan's disk space limit, in megabytes (MB).

             * `unlimited` — The hosting plan has unlimited disk space.
          example: 100
          oneOf:
          - minimum: 0
            type: integer
          - description: The hosting plan has unlimited disk space.
          - type: string
          - type: string
            enum:
            - unlimited
        _PACKAGE_EXTENSIONS:
          type: string
          description: "A list of one or more of the hosting plan's package extensions,\
            \ if any exist."
          example: ""
      description: |-
        A list of the hosting plan's settings.

        **Note:**

        * The function will only return the package's enabled resources and settings.
        * If the account or its hosting plan use package extensions, the list also
        includes the extension's variables.
    inline_response_200_250_data:
      type: object
      properties:
        pkg:
          $ref: "#/components/schemas/inline_response_200_250_data_pkg"
    inline_response_200_250_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: getpkginfo
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_251_data:
      type: object
      properties:
        all:
          type: integer
          description: |-
            Whether all of the reseller's IP addresses are available.
            * `1` — All of the reseller's IP addresses are available.
            * `0` — Some or all IP addresses are unavailable.
          example: 1
          enum:
          - 0
          - 1
        ip:
          type: array
          description: The reseller's available IP addresses.
          items:
            type: string
            format: ipv4
            example: 192.168.0.20
    inline_response_200_251_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: getresellerips
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_252_data:
      type: object
      properties:
        record:
          type: array
          description: An array of objects containing the domain's zone record data.
          items:
            $ref: "#/components/schemas/getzonerecordResponseBase"
    inline_response_200_252_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: getzonerecord
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Record obtained.
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_253_data:
      type: object
      properties:
        digestauth:
          type: integer
          description: |-
            Whether Digest Authentication support is enabled.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_253_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: has_digest_auth
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_254_data_records:
      type: object
      properties:
        domain:
          type: string
          description: The queried domain.
          example: example.com
        error:
          type: string
          description: |-
            A message that details the reason why the local server's authoritative check failed.

            **Note:**

             The function **only** returns this value when the check fails.
          example: (XID qdbmuk) DNS query (example3.com/SOA) timeout!
        local_authority:
          type: integer
          description: |-
            Whether the local server is authoritative for the domain's DNS records.
            * `1` — The local server is authoritative for the domain's DNS records.
            * `0` — The local server is **not** authoritative for the domain's DNS records.
          example: 1
          enum:
          - 0
          - 1
        nameservers:
          type: array
          description: "The domain's authoritative nameservers, if any exist."
          example:
          - ns1.example.com
          - ns2.example.com
          items:
            type: string
            format: domain
        zone:
          type: string
          description: "The DNS zone that contains the domain's DNS records, if one\
            \ exists."
          format: domain
          nullable: true
          example: example.com
    inline_response_200_254_data:
      type: object
      properties:
        records:
          type: array
          description: An array of objects that contains information about about the
            authoritative status of a domain's local DNS zone files.
          items:
            $ref: "#/components/schemas/inline_response_200_254_data_records"
    inline_response_200_254_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: has_local_authority
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_255_data:
      type: object
      properties:
        has_mycnf_for_cpuser:
          type: integer
          description: |-
            Whether a valid .my.cnf file exists in the account's home directory.
            - `1` -  Exists.
            - `0` -  Does not exist.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_255_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: has_mycnf_for_cpuser
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - `1` - Success
            - `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_256_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: hold_outgoing_email
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_257_data:
      type: object
      properties:
        import_key_id:
          minimum: 1
          type: integer
          description: The system's assigned ID for the imported security key.
          example: 1
    inline_response_200_257_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: import_zone_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_258_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: importsshkey
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_259_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The RSA private key's associated domain.
          format: domain
          example: example.com
        msg:
          type: string
          description: The RSA private key's installation status message.
          example: Installed Keys
        status:
          type: integer
          description: |-
            Whether the system installed the RSA private key to the local server's DKIM record.
            * `1` — The system installed the RSA private key.
            * `0` — The system **cannot** install the RSA private key.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_259_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about the RSA private
            key installation to the local server's DKIM record.
          items:
            $ref: "#/components/schemas/inline_response_200_259_data_payload"
    inline_response_200_259_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: install_dkim_private_keys
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_260_data:
      type: object
      properties:
        log_entry:
          type: string
          description: "The name of the RPM plugin log entry for this installation,\
            \ which includes a timestamp."
          example: 2017-01-01T19:39:27Z_plugin_name
        pid:
          minimum: 0
          type: integer
          description: The PID of the process that will install the RPM.
          example: 1234
    inline_response_200_260_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: install_rpm_plugin
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_261_data_certificate_info:
      type: object
      properties:
        domains:
          type: array
          description: A list of domains that correspond to the certificate.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` — Self-signed.
            * `0` — **Not** self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.commonName:
          type: string
          description: The certificate's Common Name.
          nullable: true
          example: example.com
        issuer.organizationName:
          type: string
          description: The certificate's Organization Name.
          example: Organization
        issuer_text:
          type: string
          description: The certificate's issuer information.
          example: |-
            localityName
            city
            emailaddress
            c.example@example.com
            stateOrProvinceName
            state
            countryName
            US
            commonName
            hostname
            organizationName
            cpanel
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` — RSA.
            * `id-ecPublicKey` — ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          type: integer
          description: |-
            The certificate's key's modulus size, in bits.

            * `null` — The certificate's key is **not** an RSA key.
          example: 2048
        not_after:
          type: integer
          description: The date the certificate expires.
          format: unix_timestamp
          example: 1601467200
        not_before:
          type: integer
          description: The certificate's validation date.
          format: unix_timestamp
          example: 1601467200
        signature_algorithm:
          type: string
          description: The certificate's OID hash algorithm signature.
          example: sha256WithRSAEncryption
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `ev` — Extended Validation.
            * `ov` — Organization Validation.
            * `dv` — Domain Validation.
            * `null` — The certificate does not match one of the system’s recognized validation types.
          nullable: true
          example: dv
          enum:
          - ev
          - ov
          - dv
      description: An object containing the service's certificate information.
    inline_response_200_261_data:
      type: object
      properties:
        certificate:
          type: string
          description: The SSL certificate's contents.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIE3f4g5h7j73f235gy54hvcNAQELBQAwgYYxEDAOBgNVBAcM
            B2hvd097342boi0w389w0BCQEWEmMubGFycnl8293rhqurpg9qfgm5ldDEOMAwG
            A1UECAwFdGV4YXMxCzAJBgNVBAYTAlVTMSEwHwYDVQQDDBhiaW5hcnlhZ2Fpbi5j
            cGFuZWwubmluamExDzANBgNVBAoMBmNwYW5lbDAeFw0yMDA1MTgxODQ3NTFaFw0y
            MTA1MTgxODQ3NTFaMIGGMRAwDgYDVQQHDAdob3VzdG9uMSEwHwYJKoZIhvcNAQkB
            FhJjLmxhcnJ5QGNwYW5lbC5uZXQxDjAMBgNVBAgMBXRleGFzMQswCQYDVQQGEwJV
            UzEhMB8GA1UEAwwYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMQ8wDQYDVQQKDAZj
            cGFuZWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3i1fOlIUoURJf
            4BkMgoVvCeq5GZjzuCl6WXzz5WsADYUl84UzgXJIWtwBoTc2l32zyeWkIAkM/eNR
            12YMb0kXbgihbZtEsH0XimqcXmtiicoM3tjBi6u0cDEFr8TMdI396oArnnTc0CAS
            fdXUGGtReZ6vOwxXOPPK5nYCvyFqBl1n0pQ2AV/Co9/WwhOCvV/Bm9aTzueZrbYB
            /9uW31LOpjs+0s1QNGHv6PTvH8HZFW/7Z9M3gSwUxfOOOQHEiiHRWfb/UqcTZZxj
            ZhfY/IN6/SOsc3Z2t2KmQ5XI6ijCrjjJeaZSQYsge8LpHskr8G3WeTV9M9+1YnI7
            GRqs3+GdAgMBAAGjggEsMIIBKDAdBgNVHQ4EFgQUYWWThQj2tRL5PNkdPhUJdqEI
            crswCQYDVR0TBAIwADCBtwYDVR0jBIGvMIGsgBRhZZOFCPa1Evk82R0+FQl2oQhy
            u6GBjKSBiTCBhjEQMA4GA1UEBwwHaG91c3RvbjEhMB8GCSqGSIb3DQEJARYSYy5s
            YXJyeUBjcGFuZWwubmV0MQ4wDAYDVQQIDAV0ZXhhczELMAkGA1UEBhMCVVMxITAf
            BgNVBAMMGGJpbmFyeWFnYWluLmNwYW5lbC5uaW5qYTEPMA0GA1UECgwGY3BhbmVs
            ggUCGG94JTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwIwYDVR0RBBww
            GoIYYmluYXJ5YWdhaW4uY3BhbmVsLm5pbmphMA0GCSqGSIb3DQEBCwUAA4IBAQBh
            Kmds+XDTycHc2bsSH+zDkWIw58+J26Re9Q9VnUcrSKtV3mmtW88r8FuEHEZdAOzF
            PTJ3Tdd1fha15wuS5dzOV+bCRrDTvJmD4vRPkQ5TSdyJgpIjpjwiOP1+ZwaF7xZ+
            FLMTcEl8SXM+lkoKEUQpHFKyQ0zGIaLCVt0QyXx16lesPMgPeb/KRXJPy7ZrUtyF
            0z0LgvOSDGNsGt4rD8FVgtdHRlMJf/XIoFeV5Zk+rHNoCXIQXh4nBzM8X2r3IrQ1
            Qh0Z3njN2Ld8ZUlxsWctlLzvzmjARzIzvbglO3wod5XoRLS+fU6oVyQ9yuQLGG6r
            6Y7iBYSHfAO8e0pLkp7G
            -----END CERTIFICATE-----
        certificate_info:
          $ref: "#/components/schemas/inline_response_200_261_data_certificate_info"
        service:
          type: string
          description: |-
            The service that the certificate corresponds to.

            * `ftp`
            * `exim`
            * `dovecot`
            * `cpanel`
          example: cpanel
          enum:
          - ftp
          - exim
          - dovecot
          - cpanel
        service_description:
          type: string
          description: The service's description.
          example: "Calendar, cPanel, WebDisk, Webmail, and WHM Services"
    inline_response_200_261_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: install_service_ssl_certificate
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_262_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The SPF record's associated domain on the DNS server.
          format: domain
          example: example.com
        msg:
          type: string
          description: The SPF record's installation status to the DNS server.
          example: "[REPLACE:TXT@example.com.:v=spf1 ip4:192.0.2.0 -all]"
        status:
          type: integer
          description: |-
            Whether the system installed the SPF record to the DNS server.
            * `1` — The system installed the SPF record on the DNS server.
            * `0` — The system **cannot** install the SPF record on the DNS server.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_262_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about the domain's
            SPF record installation to the DNS server.
          items:
            $ref: "#/components/schemas/inline_response_200_262_data_payload"
    inline_response_200_262_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: install_spf_records
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_263_data_versions:
      type: object
      properties:
        server:
          type: string
          description: |-
            The server's database engine.
            * `mysql`
            * `mariadb`
          example: mariadb
          enum:
          - mysql
          - mariadb
        version:
          type: string
          description: The version number in `major.minor` format.
          example: "10.0"
    inline_response_200_263_data:
      type: object
      properties:
        versions:
          type: array
          description: An array of objects that contain information about the database
            version information.
          items:
            $ref: "#/components/schemas/inline_response_200_263_data_versions"
    inline_response_200_263_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: installable_mysql_versions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_264_data:
      type: object
      properties:
        apache:
          description: |-
            The Apache® version.

            * `0` - Apache is **not** installed on the server.
          example: 2.4.12
          oneOf:
          - type: string
            description: A version of Apache.
          - type: integer
            description: Apache is **not** installed.
            enum:
            - 0
        apache_php_default_version:
          description: |-
            The default PHP version for Apache.

            * `0` - PHP for Apache is **not** installed on the server.
          example: 7.3.21-1.1.1
          oneOf:
          - type: string
            description: A version for Apache of default PHP.
          - type: integer
            description: default PHP is **not** installed.
            enum:
            - 0
        apache_php_versions:
          type: array
          description: |-
            An array of PHP versions that the system installs for Apache.

            If PHP for Apache is **not** installed, this will return an array containing `0`.

            **Note:**

            Unlike other keys in this object, this returns a `[0]` value when PHP for Apache is **not** installed.
          example:
          - 7.1.33-3.4.2
          - 7.2.33-1.1.1
          - 7.3.21-1.1.1
          items:
            oneOf:
            - type: string
              description: A version of PHP for Apache.
            - type: integer
              description: PHP for Apache is **not** installed on the server.
              enum:
              - 0
        bind:
          description: |-
            The BIND version.

            * `0` - BIND is **not** installed on the server.
          example: 9.9.4-29
          oneOf:
          - type: string
            description: A version of BIND.
          - type: integer
            description: BIND is **not** installed.
            enum:
            - 0
        clamav:
          description: |-
            The ClamAV version.

            * `0` - ClamAV is **not** installed on the server.
          example: 0.99.2-1
          oneOf:
          - type: string
            description: A version of ClamAV.
          - type: integer
            description: ClamAV is **not** installed.
            enum:
            - 0
        cpanel_and_whm:
          type: string
          description: The cPanel & WHM version.
          example: 11.64.0.9999
        cpanel_packages:
          type: array
          description: |-
            An array of cPanel-provided RPMs.

            **Note:**

            The function **only** returns this array if you set the `packages` parameter to `1`.
          example:
          - cpanel-ace-editor-1.1.9-1.cp1152.noarch
          - cpanel-analog-6.0-2.cp1136.x86_64
          - cpanel-angular-chosen-1.4.0-1.cp1158.noarch
          items:
            type: string
        cpanel_php:
          description: |-
            The system PHP version.

            * `0` - System PHP is **not** installed on the server.
          example: 7.2.7-4
          oneOf:
          - type: string
            description: A version of cPanel & WHM.
          - type: integer
            description: cPanel & WHM is **not** installed.
            enum:
            - 0
        cron:
          description: |-
            The version of the ISC / Vixie cron daemon. This is the default cron service installed on Ubuntu.

            * `0` - ISC / Vixie cron is **not** installed on the server.
          example: 3.0pl1-136ubuntu1
          oneOf:
          - type: string
            description: A version of the cron daemon.
          - type: integer
            description: ISC / Vixie cron is **not** installed.
            enum:
            - 0
        cronie:
          description: |-
            The version of the cronie cron daemon. This is the default cron service installed on CentOS, CloudLinux, AlmaLinux, and other systems running derivatives of Red Hat Enterprise Linux.

            * `0` - cronie is **not** installed on the server.
          example: 1.4.11-23
          oneOf:
          - type: string
            description: A version of the cron daemon.
          - type: integer
            description: cronie is **not** installed.
            enum:
            - 0
        dovecot:
          description: |-
            The Dovecot version.

            * `0` - Dovecot is **not** installed on the server.
          example: 2.2.31 (65cde28)
          oneOf:
          - type: string
            description: A version of Dovecot.
          - type: integer
            description: Dovecot is **not** installed.
            enum:
            - 0
        ea_4_packages:
          type: array
          description: |-
            An array of EasyApache 4 (EA4)-provided RPMs.

            **Note:**

            The function **only** returns this array if you set the `packages` parameter to `1`.
          example: []
          items:
            type: string
        easyapache:
          description: |-
            The EasyApache version.

            * `0` - EasyApache is **not** installed on the server.
          example: "4"
          oneOf:
          - type: string
            description: A version of EasyApache.
          - type: integer
            description: EasyApache is **not** installed.
            enum:
            - 0
        exim:
          description: |-
            The Exim version.

            * `0` - Exim is **not** installed on the server.
          example: 4.89-2
          oneOf:
          - type: string
            description: A version of Exim.
          - type: integer
            description: Exim is **not** installed.
            enum:
            - 0
        linux_kernel:
          type: string
          description: The Linux® kernel version.
          example: 3.10.0-327.18.2.e17.x86_64
        mailman:
          description: |-
            The Mailman version.

            * `0` - Mailman is **not** installed on the server.
          example: 2.1.23-9
          oneOf:
          - type: string
            description: A version of Mailman.
          - type: integer
            description: Mailman is **not** installed.
            enum:
            - 0
        mariadb:
          description: |-
            The MariaDB® version number.

            * `0` - MariaDB is **not** installed on the server.
          example: 5.5.65
          oneOf:
          - type: string
            description: A version number of MariaDB.
          - type: integer
            description: MariaDB is **not** installed.
            enum:
            - 0
        mariadb_build:
          description: |-
            The MariaDB RPM's version number.

            * `0` - MariaDB RPM's is **not** installed on the server.
          example: 5.5.65-1
          oneOf:
          - type: string
            description: A version number of MariaDB RPM's.
          - type: integer
            description: MariaDB RPM's is **not** installed.
            enum:
            - 0
        munin:
          description: |-
            The Munin version.

            * `0` - Munin is **not** installed on the server.
          example: 2.0.30
          oneOf:
          - type: string
            description: A version of Munin.
          - type: integer
            description: Munin is **not** installed.
            enum:
            - 0
        mysql:
          description: |-
            The MySQL® version number.

            * `0` - MySQL is **not** installed on the server.
          example: 5.7.61
          oneOf:
          - type: string
            description: A version number of MySQL.
          - type: integer
            description: MySQL is **not** installed.
            enum:
            - 0
        mysql_build:
          description: |-
            The MySQL RPM's version number.

            * `0` - MySQL RPM's is **not** installed on the server.
          example: 5.7.61-1
          oneOf:
          - type: string
            description: A version number of MySQL RPM's.
          - type: integer
            description: MySQL RPM's is **not** installed.
            enum:
            - 0
        nscd:
          description: |-
            The Name Service Cache Daemon version number.

            * `0` - Name Service Cache Daemon is **not** installed on the server.
          example: 2.17-222
          oneOf:
          - type: string
            description: A version number of Name Service Cache Daemon.
          - type: integer
            description: Name Service Cache Daemon is **not** installed.
            enum:
            - 0
        openssh-server:
          description: |-
            The OpenSSH version.

            * `0` - OpenSSH is **not** installed on the server.
          example: clients-6.6.1p1-25
          oneOf:
          - type: string
            description: A version of OpenSSH.
          - type: integer
            description: OpenSSH is **not** installed.
            enum:
            - 0
        operating_system_name:
          type: string
          description: The server's operating system (OS).
          example: centos
        operating_system_version:
          type: string
          description: The version of the server's OS.
          example: "7.2"
        os_packages:
          type: array
          description: |-
            An array of OS-provided RPMs.

            **Note:**

             The function **only** returns this array if you set the `packages` parameter to `1`.
          example:
          - GeoIP-1.5.0-11.el7.x86_64
          - ImageMagick-6.7.8.9-15.el7_2.x86_64
          - ModemManager-glib-1.6.0-2.el7.x86_64
          items:
            type: string
        p0f:
          description: |-
            The Passive OS Fingerprinting version number.

            * `0` - Passive OS Fingerprinting is **not** installed on the server.
          example: 3.09b-1
          oneOf:
          - type: string
            description: A version number of Passive OS Fingerprinting.
          - type: integer
            description: Passive OS Fingerprinting is **not** installed.
            enum:
            - 0
        postgresql:
          description: |-
            The PostgreSQL® version.

            * `0` - PostgreSQL is **not** installed on the server.
          example: "9.2"
          oneOf:
          - type: string
            description: A version of PostgreSQL.
          - type: integer
            description: PostgreSQL is **not** installed.
            enum:
            - 0
        postgresql_build:
          description: |-
            The PostgreSQL RPM's version number.

            * `0` - PostgreSQL RPM's is **not** installed on the server.
          example: "0"
          oneOf:
          - type: string
            description: A version number of PostgreSQL RPM's.
          - type: integer
            description: PostgreSQL RPM's is **not** installed.
            enum:
            - 0
        powerdns:
          description: |-
            The PowerDNS version.

            * `0` - PowerDNS is **not** installed on the server.
          example: 4.1.10-15
          oneOf:
          - type: string
            description: A version of PowerDNS.
          - type: integer
            description: PowerDNS is **not** installed.
            enum:
            - 0
        proftpd:
          description: |-
            The ProFTP version.

            * `0` - ProFTP is **not** installed on the server.
          example: 1.3.7d
          oneOf:
          - type: string
            description: A version of ProFTP.
          - type: integer
            description: ProFTP is **not** installed.
            enum:
            - 0
        pureftpd:
          description: |-
            The Pure-FTPd version.

            * `0` - Pure-FTPd is **not** installed on the server.
          example: 1.0.45
          oneOf:
          - type: string
            description: A version of Pure-FTPd.
          - type: integer
            description: Pure-FTPd is **not** installed.
            enum:
            - 0
        roundcube:
          description: |-
            The Roundcube version.

            * `0` - Roundcube is **not** installed on the server.
          example: 1.2.4-1
          oneOf:
          - type: string
            description: A version of Roundcube.
          - type: integer
            description: Roundcube is **not** installed.
            enum:
            - 0
        rsyslog:
          description: |-
            The Rsyslog version number.

            * `0` - Rsyslog is **not** installed on the server.
          example: 8.24.0-16
          oneOf:
          - type: string
            description: A version number of Rsyslog.
          - type: integer
            description: Rsyslog is **not** installed.
            enum:
            - 0
        spamd:
          description: |-
            The Apache SpamAssassin™ version number.

            * `0` - Apache SpamAssassin is **not** installed on the server.
          example: 3.4.2
          oneOf:
          - type: string
            description: A version number of Apache SpamAssassin.
          - type: integer
            description: Apache SpamAssassin is **not** installed.
            enum:
            - 0
      example: "{\"apache\":\"2.4.12\",\"apache_php_default_version\":0,\"apache_php_versions\"\
        :[0],\"bind\":\"9.9.4-29\",\"clamav\":\"0.99.2-1\",\"cpanel_and_whm\":\"11.64.0.9999\"\
        ,\"cpanel_packages\":[\"cpanel-ace-editor-1.2.6-1.cp1166.noarch\",\"cpanel-yui-2.9.0-5.cp1136.noarch\"\
        ],\"cpanel_php\":\"7.2.7-4\",\"cron\":0,\"cronie\":\"1.4.11-23\",\"dovecot\"\
        :\"2.2.31 (65cde28)\",\"ea_4_packages\":[],\"easyapache\":\"4\",\"exim\":\"\
        4.89-2\",\"linux_kernel\":\"3.10.0-327.18.2.el7.x86_64\",\"mailman\":\"2.1.23-9\"\
        ,\"mariadb\":0,\"mariadb_build\":0,\"munin\":0,\"mysql\":\"5.7.61\",\"mysql_build\"\
        :\"5.7.61-1\",\"nscd\":\"2.17-222\",\"openssh-server\":\"7.4p1-21\",\"operating_system_name\"\
        :\"centos\",\"operating_system_version\":\"7.2\",\"os_packages\":[\"ImageMagick-6.7.8.9-15.el7_2.x86_64\"\
        ,\"zsh-5.0.2-14.el7.x86_64\"],\"p0f\":\"3.09b-1\",\"postgresql\":0,\"postgresql_build\"\
        :0,\"powerdns\":0,\"proftpd\":0,\"pureftpd\":\"1.0.45\",\"roundcube\":\"1.2.4-1\"\
        ,\"rsyslog\":\"8.24.0-16\",\"spamd\":\"3.4.2\",\"squirrelmail\":0}"
    inline_response_200_264_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: installed_versions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_265_data:
      type: object
      properties:
        action:
          type: string
          description: The action for the function to execute.
          example: install
          enum:
          - install
        aliases:
          type: array
          description: A list of domain aliases on the account.
          example:
          - mail.example.com
          - subdomain.example.com
          items:
            type: string
            format: domain
        domain:
          type: string
          description: The domain on which the function installed the SSL certificate.
          format: domain
          example: example.com
        extra_certificate_domains:
          type: array
          description: A list of domains that possess additional SSL certificates.
          example:
          - mail.example.com
          - subdomain.example.com
          items:
            type: string
            format: domain
        html:
          type: string
          description: The function's raw HTML output.
          example: Certificate verification passed<br/> <br /> The Certificate for
            the domain example.com was installed on the IP 192.168.0.20. </html><br><b>Finished
            SSL Install Process for example.com (www.example.com).</b>
        ip:
          type: string
          description: The domain's IP address.
          format: ipv4
          example: 192.168.0.20
        message:
          type: string
          description: A message of success or a reason for failure.
          example: The SSL certificate is now installed onto the domain "example.com"
            using the IP address "192.168.0.20". Apache is restarting in the background.
        servername:
          type: string
          description: The server's hostname.
          format: hostname
          example: example.com
        status:
          type: integer
          description: |-
            Whether the function was successful.

            * `1` — Success.
            * `0` — Failure.
          example: 1
          enum:
          - 1
          - 0
        statusmsg:
          type: string
          description: A message of success or a reason for failure.
          example: The SSL certificate is now installed onto the domain "example.com"
            using the IP address "192.168.0.20". Apache is restarting in the background.
        user:
          type: string
          description: The username for the account on which the function installed
            the SSL certificate.
          format: username
          example: username
        warning_domains:
          type: array
          description: A list of domains associated with the main domain on which
            the function did **not** install the SSL certificate.
          items:
            type: string
            format: domain
            example: subdomain.example.com
        working_domains:
          type: array
          description: An list of domains on which the function installed the SSL
            certificates.
          example:
          - example.com
          - mail.example.com
          items:
            type: string
            format: domain
    inline_response_200_265_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: installssl
        output:
          type: string
          description: The function's raw HTML output.
          example: <br>The SSL certificate is now installed onto the domain “example.com“
            using the IP address“192.168 .0 .20“. < br / > Apache is restarting in
            the background.
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: The SSL certificate is now installed onto the domain “example.com“
            using the IP address “192.168.0.20“.Apache is restarting in the background.
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_266_data_failures:
      type: object
      properties:
        name:
          type: string
          description: The name of the account where IPv6 disable failed
          format: username
          example: user1
        reason:
          description: The reason for the IPv6 disable failure
          example: The “user1” account does not exist.
    inline_response_200_266_data:
      type: object
      properties:
        fail_cnt:
          minimum: 0
          type: integer
          description: |-
            The number of accounts that failed to disable IPv6.

            **Note**

            The function only returns this value if any failures exist.
          example: 0
        failures:
          type: array
          description: |-
            List of accounts where IPv6 disable failed

            **Note**

            The function only returns this value if any failures exist.
          items:
            $ref: "#/components/schemas/inline_response_200_266_data_failures"
    inline_response_200_266_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ipv6_disable_account
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_267_data:
      type: object
      properties:
        fail_cnt:
          minimum: 0
          type: integer
          description: The number of accounts that failed to enable IPv6.
          example: 0
        failures:
          type: object
          additionalProperties:
            type: string
            description: |-
              The account and the reason why IPv6 enable failed.

              **Note:**

              The function uses the account name as the return's name.
            example: Failed to enable IPv6
          description: List of accounts where IPv6 enable failed.
        ipv6:
          type: object
          additionalProperties:
            type: string
            description: |-
              The account and the IPv6 address assigned to the account.

              **Note:**

              The function uses the account name as the return's name.
          description: The IPv6 addresses that the system assigned to each account.
      example: "{\"fail_cnt\":2,\"failures\":{\"brain\":\"The “brain” account does\
        \ not exist.\",\"pinky\":\"The “pinky” account does not exist.\"},\"ipv6\"\
        :{\"chewie\":\"2001:0db8:1a34:56cf:0000:0000:0000:0000\",\"cptest\":\"2001:0db8:1a34:56cf:0000:0000:0000:0001\"\
        ,\"domain1\":\"2001:0db8:1a34:56cf:0000:0000:0000:0002\"}}"
    inline_response_200_267_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ipv6_enable_account
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_268_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ipv6_range_add
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_269_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ipv6_range_edit
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_270_data_range:
      type: object
      properties:
        CIDR:
          type: string
          description: "The IPv6 address range, in CIDR format."
          example: 2001:db8:100:6::/64
        enabled:
          type: integer
          description: |-
            Whether the IPv6 address range is available.
            * `1`  Available.
            * `0`  Reserved.
          example: 1
          enum:
          - 0
          - 1
        first:
          type: string
          description: The first IPv6 address in the range.
          format: ipv6
          example: 2001:db8:0100:0006:0000:0000:0000:0000
        last:
          type: string
          description: The last IPv6 address in the range.
          format: ipv6
          example: 2001:db8:0100:0006:ffff:ffff:ffff:ffff
        mostrecent:
          type: string
          description: The most recently assigned address from the IPv6 address range.
          format: ipv6
          example: 2001:db8:0100:0006:0000:0000:0002:00ce
        name:
          type: string
          description: |-
            The IPv6 address range's name.

            **Note:**

            `SHARED` represents the server's main IPv6 address.
          example: test_range
        note:
          type: string
          description: The IPv6 address range's note.
          example: This is used for development.
        owner:
          type: string
          description: The user who owns the IPv6 address range.
          format: username
          example: root
        range_users:
          type: array
          description: The user or users who use addresses in the IPv6 address range.
          items:
            type: string
            format: username
            example: user1
        reclaimed:
          type: array
          description: IPv6 addresses within the range which have become available.
          items:
            type: string
            format: ipv6
            example: 2001:db8:0100:0006:0000:0000:0000:0002
    inline_response_200_270_data:
      type: object
      properties:
        range:
          type: array
          description: An array of the IPv6 address ranges.
          items:
            $ref: "#/components/schemas/inline_response_200_270_data_range"
    inline_response_200_270_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ipv6_range_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_271_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ipv6_range_remove
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_272_data_usage:
      type: object
      properties:
        forbidden:
          minimum: 0
          type: integer
          description: The number of reserved IPv6 addresses.
          example: 65536
        free:
          minimum: 0
          type: integer
          description: The number of available IPv6 addresses.
          example: 1000000
        used:
          minimum: 0
          type: integer
          description: The number of assigned IPv6 addresses.
          example: 20
      description: The IPv6 address range's information.
    inline_response_200_272_data:
      type: object
      properties:
        usage:
          $ref: "#/components/schemas/inline_response_200_272_data_usage"
    inline_response_200_272_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ipv6_range_usage
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_273_data:
      type: object
      properties:
        alias:
          type: integer
          description: |-
            Whether `ALIAS` records are available.

            * `1` - Available.
            * `0` - Not available.

            When `ALIAS` records are enabled, they may work in API calls that accept `A` and `AAAA` records. However, the `ALIAS` record must use a fully qualified domain name (FQDN) rather than an IP address.
          example: 1
          enum:
          - 1
          - 0
        aname:
          type: integer
          description: |-
            Whether `ANAME` records are available.

            * `1` - Available.
            * `0` - Not available.

            **Note:**

            The `aname` value is always set to false (i.e. Not available). The `ANAME` record is currently not supported. It is included for completeness and future proofing.
          example: 0
          enum:
          - 1
          - 0
        resolver:
          type: string
          description: The value (if any) of the running PDNS’s `resolver` setting.
          example: 8.8.8.8
    inline_response_200_273_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: is_alias_available
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_274_data:
      type: object
      properties:
        inProgress:
          type: integer
          description: |-
            Whether the system's process to convert all of WHM's accounts to use PHP-FPM is in progress.
            * `1` — In progress.
            * `0` — **Not** currently in progress.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_274_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: is_conversion_in_progress
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_275_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether a role is enabled or disabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_275_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: is_role_enabled
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_276_data:
      type: object
      properties:
        sni:
          type: integer
          description: |-
            Whether the server supports SNI.
            - `1` — SNI supported.
            - `0` — SNI **not** supported.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_276_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: is_sni_supported
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_277_metadata_output:
      type: object
      properties:
        raw:
          type: string
          description: The raw response output.
          example: example.com => deleted from example.
    inline_response_200_277_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: killdns
        output:
          $ref: "#/components/schemas/inline_response_200_277_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Zones Removed
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_278_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: killpkg
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_279_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: latest_available_mysql_version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_280_data_bwlimits:
      type: object
      properties:
        bwlimit:
          minimum: 0
          type: integer
          description: |-
            The account's new bandwidth quota, in megabytes (MB).
            * `0` - The user has unlimited bandwidth.
          example: 0
        bwlimitenable:
          type: integer
          description: |-
            Whether bandwidth limiting is enabled for the account.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 0
          enum:
          - 0
          - 1
        domains:
          type: array
          description: An array of all of the cPanel account's domains.
          example:
          - example.com
          - addondomain.com
          - subdomain.example.com
          items:
            type: string
        human_bwlimit:
          pattern: ^(unlimited|\d+ MB)$
          type: string
          description: |-
            The account's bandwidth quota, in human-readable format.
            * `unlimited` - The user has unlimited bandwidth.
            * A positive integer that represents a maximum monthly bandwidth use, a space, and the string MB.
          example: 500 MB
        human_bwused:
          pattern: ^(none|\d+ MB)$
          type: string
          description: |-
            The account's current bandwidth usage, in human-readable format.
            * `none`
            * A positive integer that represents the amount of bandwidth used, a space, and the string MB.
          example: none
        unlimited:
          type: integer
          description: |-
            Whether the account's bandwidth quota is unlimited.
            * `1` - Unlimited.
            * `0` - Not unlimited.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_280_data:
      type: object
      properties:
        bwlimits:
          type: array
          description: An array of objects containing account information.
          items:
            $ref: "#/components/schemas/inline_response_200_280_data_bwlimits"
    inline_response_200_280_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: limitbw
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Bandwidth Limit for username has been set to unlimited megabytes
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_281_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: link_server_node_with_api_token
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_282_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: link_user_authn_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_283_data_enhancements:
      properties:
        id:
          type: string
          description: The id the account enhancement is for.
          example: sample-enhancement-id
        name:
          maxLength: 80
          type: string
          description: The name of the account enhancement.
          example: Sample Enhancement
    inline_response_200_283_data:
      properties:
        enhancements:
          $ref: "#/components/schemas/inline_response_200_283_data_enhancements"
    inline_response_200_283_metadata_output:
      type: object
      properties:
        warnings:
          type: array
          description: A list of warnings related to account enhancements.
          items:
            type: string
            example: "(XID svx4zp) The enhancement file “/var/cpanel/account_enhancements/enhancement\
              \ 5000.json” contains an invalid enhancement “id”: “bad-id”."
      description: Additional output related to the method called.
    inline_response_200_283_metadata:
      properties:
        command:
          type: string
          description: The name of the method called.
          example: list_account_enhancements
        output:
          $ref: "#/components/schemas/inline_response_200_283_metadata_output"
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_284_data_countries:
      type: object
      properties:
        country_code:
          type: string
          description: "The [ISO-3166-1 alpha-2 code](https://www.iso.org/iso-3166-country-codes.html)\
            \ of the blocked country."
          example: AD
    inline_response_200_284_data:
      type: object
      properties:
        countries:
          type: array
          description: An array of objects that contain each blocked country.
          items:
            $ref: "#/components/schemas/inline_response_200_284_data_countries"
    inline_response_200_284_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_blocked_incoming_email_countries
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_285_data_domains:
      type: object
      properties:
        domain:
          type: string
          description: The blocked domain.
          example: example.com
    inline_response_200_285_data:
      type: object
      properties:
        domains:
          type: array
          description: An array of objects that contains each blocked domain.
          items:
            $ref: "#/components/schemas/inline_response_200_285_data_domains"
    inline_response_200_285_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_blocked_incoming_email_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_286_data:
      type: object
      properties:
        signature:
          type: string
          description: A truncated version of the server's remote access key.
        user:
          type: string
          description: The `root`-level username for the server.
      description: Each return's name is the server name.
    inline_response_200_286_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_configclusterservers
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_287_data_list:
      type: object
      properties:
        jwt:
          type: object
          additionalProperties: {}
          description: The contents of a JSON Web Token used during registration or
            updates.
          example:
            callback_url: https://application-1.com/api/si/servers/registrations/callback
            challenge: ddd13a92-d55e-4818-a960-9776ede6cd74
            email: john.doe@email.example
            exp: 1401912171
            ips:
            - 1.1.1.1
            - 2.2.2.2
            iss: https://application-1.com
            iss_desc: Sample application
            name: John Doe
            redirect_url: https://application-1/redirect
            scope:
            - admin:users
            - admin:resellers
            - admin:domains
            state: xyz
        name:
          type: string
          description: The name of the connected application.
          example: application-1
        private_key:
          type: string
          description: "The name of the private key, if any, used by encryption, signing,\
            \ or other security schemes used when communicating with this connected\
            \ application."
          example: FEF6253E6A122532430D
        public_key:
          type: string
          description: "The name of the public key, if any, sent to the connected\
            \ application during registration."
          example: AAF6253E6A1225324305623EE
        token_name:
          type: string
          description: "The name of the API token, if any, sent to the connected application\
            \ to allow that application to make API calls on this server."
          example: Application 1 API Token
      additionalProperties: {}
      description: "Data associated with the connected application. There are a few\
        \ predefined elements, but any additional data may be stored here as well."
    inline_response_200_287_data:
      type: object
      properties:
        list:
          type: array
          description: The list of connected applications and their associated data.
          items:
            $ref: "#/components/schemas/inline_response_200_287_data_list"
    inline_response_200_287_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_connected_applications
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_288_data_quickrestore_files:
      type: object
      properties:
        file:
          type: string
          description: The backup file's name in one of the formats listed above.
          example: cpmove-username1.tar.gz
        path:
          type: string
          description: The backup file's directory in one of the locations listed
            above.
          example: /home
        user:
          type: string
          description: The backup file's account.
          example: username
    inline_response_200_288_data:
      type: object
      properties:
        quickrestore_files:
          type: array
          description: An array of objects that contains information about each `cparchive`
            file.
          items:
            $ref: "#/components/schemas/inline_response_200_288_data_quickrestore_files"
    inline_response_200_288_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_cparchive_files
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_289_data_payload:
      type: object
      properties:
        cpuser:
          type: string
          description: The database user's owner.
          example: example
        engine:
          type: string
          description: |-
            The database user's database engine.
            * `mysql`
            * `postgresql`
          example: postgresql
          enum:
          - mysql
          - postgresql
        name:
          type: string
          description: The database user's name.
          example: example_user1
    inline_response_200_289_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of database data objects.
          items:
            $ref: "#/components/schemas/inline_response_200_289_data_payload"
    inline_response_200_289_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_database_users
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_290_data_payload:
      type: object
      properties:
        cpuser:
          type: string
          description: The database's owner.
          format: username
          example: example
        engine:
          type: string
          description: |-
            The database's engine.
            - `mysql`
            - `postgresql`
          example: postgresql
          enum:
          - mysql
          - postgresql
        name:
          type: string
          description: The database's name.
          example: example_db0
    inline_response_200_290_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contain of database data.
          items:
            $ref: "#/components/schemas/inline_response_200_290_data_payload"
    inline_response_200_290_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_databases
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_291_data_limits:
      type: object
      properties:
        limit:
          type: integer
          description: The assignment limit amount.
          example: 15
        limited:
          type: integer
          description: Whether the assignment limit is unlimited.
          example: 1
          enum:
          - 1
          - 0
        usage:
          type: integer
          description: The total of cPanel accounts that have the specified Account
            Enhancement.
          example: 15
      description: The reseller's limit for the account enhancement.
    inline_response_200_291_data:
      properties:
        limits:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_291_data_limits"
    inline_response_200_291_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_enhancement_limits
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_292_data_actions:
      type: object
      properties:
        blocking:
          type: integer
          description: |-
            Whether the script hook has a blocking contest.

            * `1` — Blocking contest.
            * `0` — No blocking contest.
          example: 0
          enum:
          - 1
          - 0
        category:
          type: string
          description: The script hook's category.
          example: RPM::Versions
        check:
          type: string
          description: The absolute file path to the script that runs after the hook
            script to check the results.
          nullable: true
        description:
          type: string
          description: The hook script's description.
          nullable: true
          example: A script description.
        enabled:
          type: integer
          description: |-
            Whether the hook script is enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        escalateprivs:
          type: integer
          description: |-
            Whether the hook script will run with escalated root privileges.

            * `1` — Runs with escalated privileges.
            * `0` — Does not run with escalated privileges.
          example: 0
          enum:
          - 0
          - 1
        event:
          type: string
          description: The event that triggers the script hook.
          example: MariaDB-server
        exectype:
          type: string
          description: |-
            The type of function that the script hook launches.

            * `script` — A script function.
            * `module` — A Perl module function.
          example: script
          enum:
          - script
          - module
        hook:
          type: string
          description: The absolute file path to the hook script.
          example: /scripts/postcourier-authlibup
        id:
          type: string
          description: The script hook's ID.
          example: KQVO65K_8MWe__3JMPETn43S
        rollback:
          type: string
          description: The absolute file path to the script that can roll back the
            hook script.
          nullable: true
        stage:
          type: string
          description: |-
            When the hook script will execute.

            * `pre` — The script runs before the function.
            * `post` — The script runs after the function.
          example: post
        weight:
          minimum: 1
          type: integer
          description: "The priority of the script hook, where lower values run before\
            \ higher values."
          example: 100
    inline_response_200_292_data_attributes:
      type: object
      properties:
        blocking:
          type: integer
          description: |-
            Whether the script hook contains a blocking context.

            * `1` — Blocking context.
            * `0` — No blocking context.
          example: 0
          enum:
          - 1
          - 0
        escalateprivs:
          type: integer
          description: |-
            Whether the hook script will run with escalated root
            privileges.

            * `1` — Runs with escalated privileges.
            * `0` — Does not run with escalated privileges.
          example: 0
          enum:
          - 1
          - 0
      description: A list of hook script attributes.
    inline_response_200_292_data_stages:
      type: object
      properties:
        actions:
          type: array
          description: An array of objects containing information about hook script
            actions.
          items:
            $ref: "#/components/schemas/inline_response_200_292_data_actions"
        attributes:
          $ref: "#/components/schemas/inline_response_200_292_data_attributes"
        description:
          type: string
          description: The hook script's description.
          example: My hook script.
        stage:
          type: string
          description: |-
            When the hook script will execute.

            * `pre` — The script runs before the function.
            * `post` — The script runs after the function.
          example: post
    inline_response_200_292_data_events:
      type: object
      properties:
        event:
          type: string
          description: The event that triggers the script hook.
          example: MariaDB-server
        stage_order:
          type: array
          description: |-
            When the hook script will execute. It is possible for a hook script
            to have both values.

            * `pre` — The script runs before the function.
            * `post` — The script runs after the function.
          example:
          - pre
          - post
          items:
            type: string
        stages:
          type: array
          description: An array of objects containing stage information.
          items:
            $ref: "#/components/schemas/inline_response_200_292_data_stages"
    inline_response_200_292_data_categories:
      type: object
      properties:
        category:
          type: string
          description: The script hook's category.
          example: RPM::Versions
        events:
          type: array
          description: An array of objects containing events.
          items:
            $ref: "#/components/schemas/inline_response_200_292_data_events"
    inline_response_200_292_data:
      type: object
      properties:
        categories:
          type: array
          description: An array of objects containing hook categories.
          items:
            $ref: "#/components/schemas/inline_response_200_292_data_categories"
    inline_response_200_292_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_hooks
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_293_data_links:
      type: object
      properties:
        group:
          type: string
          description: The group ID.
          example: Group3
    inline_response_200_293_data:
      type: object
      properties:
        links:
          type: array
          description: An array of objects that contain the integration link groups.
          items:
            $ref: "#/components/schemas/inline_response_200_293_data_links"
    inline_response_200_293_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_integration_groups
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_294_data_links:
      type: object
      properties:
        app:
          type: string
          description: The integration link's app name.
          example: WHMCS_billing
    inline_response_200_294_data:
      type: object
      properties:
        links:
          type: array
          description: An array of objects that contain information about the integration
            links.
          items:
            $ref: "#/components/schemas/inline_response_200_294_data_links"
    inline_response_200_294_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_integration_links
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_295_data_payload:
      type: object
      properties:
        alias:
          type: string
          description: The name of a linked remote server node.
          example: example
        enabled_services:
          type: array
          description: An array of the services enabled on the linked remote server
            node.
          example:
          - apache_php_fpm
          - cpanellogd
          - cpdavd
          - cpgreylistd
          - cpsrvd
          - crond
          - dnsadmin
          - exim
          - ftpd
          - imap
          - ipaliases
          - lmtp
          - mailman
          - mysql
          - named
          - nscd
          - pop
          - postgresql
          - queueprocd
          - rsyslogd
          - spamd
          - sshd
          - tailwatchd
          items:
            type: string
        hostname:
          type: string
          description: The remote server node's hostname.
          format: domain
          example: example.com
        last_check:
          type: integer
          description: The last time that the server queried the current status of
            the remote server node.
          format: unix_timestamp
          example: 1556576165
        tls_verified:
          type: integer
          description: |-
            Whether the remote server node has a valid [SSL certificate](https://go.cpanel.net/guidetoSSL).
            * `1` — The remote server node has a valid SSL certificate.
            * `0` — The remote server does **not** have a valid SSL certificate.
          example: 1
          enum:
          - 0
          - 1
        username:
          type: string
          description: The username required to make API calls to the linked remote
            server node.
          format: username
          example: root
        version:
          type: string
          description: The version of cPanel & WHM installed on the remote server
            node.
          format: cPanel version
          example: 11.90.0.0
        worker_capabilities:
          type: object
          additionalProperties:
            type: object
            description: |-
              The current role of the linked remote server node. This will return the required options for the role, if any exist.

              **Note:**

              * If **no** options exist for the role, this function returns an empty hash.
              * The object's key is the remote server node's current role.
          description: An object containing groups of services required for a remote
            server node to fulfill a specific role.
          example:
            Mail: {}
    inline_response_200_295_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing linked remote server nodes data.
          items:
            $ref: "#/components/schemas/inline_response_200_295_data_payload"
    inline_response_200_295_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_linked_server_nodes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_296_data_mysql_config:
      type: object
      properties:
        mysql-version:
          type: string
          description: The MySQL version installed on the server.
          example: "5.5"
        prefix_length:
          type: integer
          description: The maximum number of characters allowed for the prefix on
            this server.
          example: 8
          enum:
          - 8
          - 16
        use_db_prefix:
          type: integer
          description: |-
            Whether database prefixing is enabled on the server.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains the user's MySQL database configuration
        settings.
    inline_response_200_296_data:
      type: object
      properties:
        mysql_config:
          $ref: "#/components/schemas/inline_response_200_296_data_mysql_config"
        mysql_databases:
          type: object
          additionalProperties:
            type: array
            description: The database's name is the key's name.
            items:
              type: string
              description: A database username with permissions on the database.
          description: An object that contains database names and users.
          example:
            user1_database1:
            - user1_user1
            user2_database2:
            - user2_user2
    inline_response_200_296_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_mysql_databases_and_users
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_297_data:
      type: object
      properties:
        pops:
          type: array
          description: An array of email accounts that the cPanel user owns.
          items:
            type: string
            format: email
            example: example1@example.com
    inline_response_200_297_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_pops_for
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_298_data:
      type: object
      properties:
        rpms:
          type: array
          description: A list of all RPM dependencies that the server owner has not
            yet installed.
          items:
            type: string
            example: cpanel-pcre
    inline_response_200_298_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_rpms
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_299_data_payload:
      type: object
      properties:
        alias:
          type: string
          description: The name (alias) of the linked cPanel & WHM server.
          example: MailServer1
        type:
          type: string
          description: |-
            The linked [cPanel & WHM server's profile](https://docs.cpanel.net/knowledge-base/general-systems-administration/how-to-use-server-profiles).
            * `Mail` - A server set as a mail node.
          example: Mail
          enum:
          - Mail
        user:
          type: string
          description: The cPanel account username.
          example: username1
    inline_response_200_299_data:
      type: object
      properties:
        payload:
          type: array
          description: A list of cPanel accounts and the linked cPanel & WHM servers
            on which they exist.
          items:
            $ref: "#/components/schemas/inline_response_200_299_data_payload"
    inline_response_200_299_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_user_child_nodes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_300_data:
      type: object
      properties:
        users:
          type: array
          description: |-
            A list of cPanel user accounts. The list may consist of the following types of accounts:

            * A valid cPanel username.
            * `root`
          example:
          - example
          - root
          items:
            type: string
    inline_response_200_300_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: list_users
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result` field is `0`.

            **Note:**

            This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_301_data_acct:
      type: object
      properties:
        backup:
          type: integer
          description: |-
            Whether backups are enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 0
          enum:
          - 0
          - 1
        child_nodes:
          type: array
          description: An array that contains the the workload and alias values for
            each of the child nodes.
          items:
            $ref: "#/components/schemas/inline_response_200_4_data_child_nodes"
        disklimit:
          description: |-
            The account's disk space quota.
            * `unlimited` — The account has unlimited disk space quota.
            * A maximum amount of disk space, in megabytes (MB).
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        diskused:
          type: string
          description: |-
            The account's current disk space usage, in megabytes (MB), appended with `M`.

            For example, `14M` represents 14 megabytes of current disk space usage.
          example: 14M
        domain:
          type: string
          description: The account's main domain.
          format: domain
          example: example.com
        email:
          type: string
          description: The account's contact email address.
          format: email
          example: username@example.com
        has_backup:
          type: integer
          description: |-
            Whether a backup of the account exists.
            * `1` - A backup of the account exists.
            * `0` - A backup of the account does **not** exist.
          example: 1
          enum:
          - 0
          - 1
        inodeslimit:
          description: |-
            The limit on the number of files that the account owns.
            * `unlimited` — The account can own an unlimited number files.
            * A positive integer.
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        inodesused:
          minimum: 0
          type: integer
          description: The number of files that the account owns.
          example: 1
        ip:
          type: string
          description: The IPv4 address of the account's main domain.
          format: ipv4
          example: 192.168.0.128
        ipv6:
          type: array
          description: The IPv6 address of the account's main domain.
          items:
            type: string
            format: ipv6
            example: 0101:ca75:0101:ca75:0101:ca75:0101:ca77
        is_locked:
          type: integer
          description: |-
            Whether the account is currently locked.
            * `1` - The account is locked.
            * `0` - The account is **not** locked.
          example: 0
          enum:
          - 0
          - 1
        legacy_backup:
          type: integer
          description: |-
            Whether legacy backups are enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 0
          enum:
          - 0
          - 1
        mailbox_format:
          type: string
          description: |-
            The type of mailbox the account uses.

            * `mdbox`
            * `maildir`
          example: mdbox
          enum:
          - mdbox
          - maildir
        max_defer_fail_percentage:
          description: |-
            The [percentage of failed or deferred email
            messages](https://go.cpanel.net/howtopreventspam)
            that the account can send per hour before outgoing
            mail is rate-limited.
            * `unlimited` — The account can send unlimited emails per hour.
            * An integer that represents a precentage of messages.
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        max_email_per_hour:
          description: |-
            The [maximum number of emails](https://go.cpanel.net/howtopreventspam)
            that the account can send in one hour.
            * `unlimited` — The account can send unlimited emails per hour.
            * An integer that represents a number of sent emails.
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        max_emailacct_quota:
          description: |-
            The maximum size, in megabytes (MB), that the account
            can define when it creates an email account.

            * `unlimited` — The account can set unlimited quotas.
            * A positive integer that represents the allowable maximum
            size of an email account, in megabytes (MB).
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxaddons:
          description: |-
            The account's maximum number of addon domains.
            * `unlimited` — The account can create unlimited addon domains.
            * `*unknown*` — The account cannot create addon domains.
            * An integer that represents a number of addon domains.
          oneOf:
          - type: string
            enum:
            - unlimited
            - '*unknown*'
          - minimum: 0
            type: integer
        maxftp:
          description: |-
            The account's maximum number of FTP accounts.
            * `unlimited` — The account can create unlimited FTP accounts.
            * An integer that represents a number of FTP accounts.
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxlst:
          description: |-
            The account's maximum number of mailing lists.
            * `unlimited` — The account can create unlimited mailing lists.
            * An integer that represents a number of mailing lists.
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxparked:
          description: |-
            The account's maximum number of parked domains (aliases).
            * `unlimited` — The account can create unlimited parked domains.
            * `*unknown*` — The account cannot use parked domains.
            * An integer that represents a number of parked domains.
          oneOf:
          - type: string
            enum:
            - unlimited
            - '*unknown*'
          - minimum: 0
            type: integer
        maxpop:
          description: |-
            The account's maximum number of email addresses.
            * `unlimited` — The account can create unlimited email addresses.
            * An integer that represents a number of email accounts.
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxsql:
          description: |-
            The account's maximum number of each available type of SQL database.

            For example, if you set this value to `5` and the system administrator allows MySQL® and PostgreSQL®
            databases, users can create up to five MySQL databases and up to five PostgreSQL databases.

            * `unlimited` — The account can create unlimited SQL databases.
            * An integer that represents a number of SQL databases.
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        maxsub:
          description: |-
            The account's maximum number of subdomains.
            * `unlimited` — The account can create unlimited subdomains.
            * `*unknown*` - The account cannot use subdomains.
            * An integer that represents a number of subdomains.
          oneOf:
          - type: string
            enum:
            - unlimited
            - '*unknown*'
          - minimum: 0
            type: integer
        min_defer_fail_to_trigger_protection:
          description: |-
            The [minimum number of failed or deferred messages](https://go.cpanel.net/howtopreventspam) that the
            account can send before outgoing mail is subject to rate-limiting.
            * `unlimited` — The account can send unlimited emails.
            * An integer that represents a number of failed or deferred messages.
          oneOf:
          - type: string
            enum:
            - unlimited
          - minimum: 0
            type: integer
        outgoing_mail_hold:
          type: integer
          description: |-
            Whether to retain outgoing mail in the mail queue for the account's users.
            * `1` - Hold outgoing email in the mail queue.
            * `0` - Do **not** hold outgoingemail in the mail queue.
          example: 1
          enum:
          - 1
          - 0
        outgoing_mail_suspended:
          type: integer
          description: |-
            Whether to suspend outgoing email from the account's users and force failure of any of their mail currently in the mail queue.
            * `1` - Suspend and forcefailure of outgoing email.
            * `0` - Do **not** suspend and forcefailure of outgoing email.

            **Note:**

            If mail for a cPanel user's account is suspended, the system will reject their email before the system puts it in the mail server queue.
          example: 0
          enum:
          - 0
          - 1
        owner:
          type: string
          description: The reseller account username or `root` user that owns the
            account.
          example: root
        partition:
          type: string
          description: The partition that contains the account's home directory.
          example: home
        plan:
          type: string
          description: The account's hosting package.
          example: packagename
        shell:
          type: string
          description: The absolute path of the account's shell location.
          example: /bin/bash
        startdate:
          type: string
          description: "The account creation date, in `YY Mon DD HH:mm` format."
          example: 13 May 22 16:03
        suspended:
          type: integer
          description: |-
            Whether the account is currently suspended.
            * `1` - Suspended.
            * `0` - **Not** suspended.
          example: 0
          enum:
          - 0
          - 1
        suspendreason:
          description: "The reason for account suspension, if one was provided."
          oneOf:
          - type: string
            description: "If the account is **not** suspended, `suspendreason` will\
              \ return `not suspended`."
            enum:
            - not suspended
          - type: string
            description: |-
              If the account is suspended, `suspendreason` will return either:
              * A blank value, if the suspender did not provide a reason.
              * A message that explains the suspension.
            nullable: true
            example: suspended for non-payment
        suspendtime:
          type: integer
          description: |-
            The time of suspension.
            * `null` - The account is not currently suspended.
            * The time at which the account became suspended.
          format: unix_timestamp
          nullable: true
          example: 1594040856
        temporary:
          type: integer
          description: |-
            Whether the Customer Support Ticket process created this user for temporary access to the system.
            * `1` - Temporary user.
            * `0` - Regular user.
          example: 0
          enum:
          - 0
          - 1
        theme:
          type: string
          description: The account's cPanel interface theme.
          example: jupiter
        uid:
          minimum: 0
          type: integer
          description: The account's user ID on the system.
          example: 1001
        unix_startdate:
          type: integer
          description: The account creation date.
          format: unix_timestamp
          example: 1369256589
        user:
          type: string
          description: The account username.
          format: username
          example: username
    inline_response_200_301_data:
      type: object
      properties:
        acct:
          type: array
          description: An array of objects containing account data.
          items:
            $ref: "#/components/schemas/inline_response_200_301_data_acct"
    inline_response_200_301_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listaccts
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_302_data_privileges:
      type: object
      properties:
        acct-summary:
          type: integer
          description: |-
            Whether to allow the reseller to view an account summary.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        add-pkg:
          type: integer
          description: |-
            Whether to allow the reseller to add and remove hosting plans
            (packages).

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        add-pkg-ip:
          type: integer
          description: |-
            Whether to allow the reseller to create packages with a
            dedicated IP address.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        add-pkg-shell:
          type: integer
          description: |-
            Whether to allow the reseller to create packages with shell
            access.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        all:
          type: integer
          description: |-
            Whether to grant the reseller **all** ACL privileges.

            **Warning:**

            A value of `1` grants `root`-level privileges to the reseller.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        allow-addoncreate:
          type: integer
          description: |-
            Whether to allow the reseller to create packages with addon
            domains.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        allow-emaillimits-pkgs:
          type: integer
          description: |-
            Whether to allow the reseller to create packages with email quotas
            that are **not** the default quotas.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        allow-parkedcreate:
          type: integer
          description: |-
            Whether to allow the reseller to create packages with parked
            domains (aliases).

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        allow-shell:
          type: integer
          description: |-
            Whether to allow the reseller to create accounts with shell
            access.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        allow-unlimited-bw-pkgs:
          type: integer
          description: |-
            Whether to allow the reseller to create packages with unlimited
            bandwidth.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        allow-unlimited-disk-pkgs:
          type: integer
          description: |-
            Whether to allow the reseller to create packages with unlimited
            disk space.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        allow-unlimited-pkgs:
          type: integer
          description: |-
            Whether to allow the reseller to create packages with unlimited
            features.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        basic-system-info:
          type: integer
          description: |-
            Whether to allow the user to retrieve basic system information.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        basic-whm-functions:
          type: integer
          description: |-
            Whether to allow the reseller to access basic cPanel & WHM
            options.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        clustering:
          type: integer
          description: |-
            Whether to allow the reseller to use DNS clusters.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        cors-proxy-get:
          type: integer
          description: |-
            Whether to allow the reseller to perform Cross-Origin Resource
            Sharing (CORS) HTTP requests.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        cpanel-api:
          type: integer
          description: |-
            Whether to allow the reseller to execute cPanel API 1, cPanel
            API 2 and UAPI functions via WHM.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        cpanel-integration:
          type: integer
          description: |-
            Whether to allow the reseller to manage cPanel integration
            links.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        create-acct:
          type: integer
          description: |-
            Whether to allow the reseller to create accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        create-dns:
          type: integer
          description: |-
            Whether to allow the reseller to add DNS zones.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        create-user-session:
          type: integer
          description: |-
            Whether to allow the reseller to create a new temporary user
            session for a specified service.

            * `1` — Allow.
            * `0` — Do not allow.

            **Note:**

            This ACL privilege allows an API token user to bypass any
            restrictions that you set on the API token. For more information,
            read our
            [Manage API Tokens](https://go.cpanel.net/ManageAPITokens)
            documentation.
          example: 1
          enum:
          - 1
          - 0
        demo-setup:
          type: integer
          description: |-
            Whether to allow the reseller to enable demo mode for accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        digest-auth:
          type: integer
          description: |-
            Whether to allow the reseller to manage Digest Authentication.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        edit-account:
          type: integer
          description: |-
            Whether to allow the reseller to edit accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        edit-dns:
          type: integer
          description: |-
            Whether to allow the reseller to edit DNS zones.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        edit-mx:
          type: integer
          description: |-
            Whether to allow the reseller to edit MX entries.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        edit-pkg:
          type: integer
          description: |-
            Whether to allow the reseller to edit hosting plans (packages).

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        frontpage:
          type: integer
          description: |-
            Whether to allow the reseller to manage Microsoft® FrontPage®
            Extensions.

            * `1` — Allow.
            * `0` — Do not allow.

            **Note:**

            cPanel & WHM ignores all Microsoft FrontPage settings and parameters.
          example: 1
          deprecated: true
          enum:
          - 1
          - 0
        generate-email-config:
          type: integer
          description: |-
            Whether to allow the reseller to generate a mobile configuration
            profile for an email account.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        kill-acct:
          type: integer
          description: |-
            Whether to allow the reseller to terminate accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        kill-dns:
          type: integer
          description: |-
            Whether to allow the reseller to remove DNS zones.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        limit-bandwidth:
          type: integer
          description: |-
            Whether to allow the reseller to modify bandwidth limits
            (quotas).

            * `1` — Allow.
            * `0` — Do not allow.

            **Warning:**

            If you do not use resource limits, a value of `1` allows
            resellers to circumvent package limits for disk space.
          example: 1
          enum:
          - 1
          - 0
        list-accts:
          type: integer
          description: |-
            Whether to allow the reseller to view the list of accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        list-pkgs:
          type: integer
          description: |-
            Whether to allow the reseller to view existing hosting plans.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        locale-edit:
          type: integer
          description: |-
            Whether to allow the reseller to create and modify locales on
            the server.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        mailcheck:
          type: integer
          description: |-
            Whether to allow the reseller to troubleshoot mail delivery.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        manage-api-tokens:
          type: integer
          description: |-
            Whether to allow the reseller to manage API tokens.

            * `1` — Allow.
            * `0` — Do not allow.

            **Note:**

            This ACL privilege allows an API token user to bypass any
            restrictions that you set on the API token. For more information,
            read our
            [Manage API Tokens](https://go.cpanel.net/ManageAPITokens)
            documentation.
          example: 1
          enum:
          - 1
          - 0
        manage-dns-records:
          type: integer
          description: |-
            Whether to allow the reseller to manage DNS records.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        manage-oidc:
          type: integer
          description: |-
            Whether to allow the reseller to manage external authentication
            for their accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        manage-styles:
          type: integer
          description: |-
            Whether to allow the reseller to manage their server's cPanel
            styles.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        mysql-info:
          type: integer
          description: |-
            Whether to allow the reseller to retrieve MySQL® database and
            user data.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        news:
          type: integer
          description: |-
            Whether to allow the reseller to modify the server's news.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        ns-config:
          type: integer
          description: |-
            Whether to allow the reseller to manage nameserver records.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        park-dns:
          type: integer
          description: |-
            Whether to allow the reseller to park DNS zones.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        passwd:
          type: integer
          description: |-
            Whether to allow the reseller to change passwords.

            * `1` — Allow.
            * `0` — Do not allow.

            **Note:**

            This privilege allows an API token user to change account
            passwords and log in with a new password. For more information,
            read our
            [Manage API Tokens](https://go.cpanel.net/ManageAPITokens)
            documentation.
          example: 1
          enum:
          - 1
          - 0
        quota:
          type: integer
          description: |-
            Whether to allow the reseller to modify quotas.

            * `1` — Allow.
            * `0` — Do not allow.

            **Warning:**

            If you do not use resource limits, a value of `1`
            allows resellers to circumvent package limits for disk space.
          example: 1
          enum:
          - 1
          - 0
        rearrange-accts:
          type: integer
          description: |-
            Whether to allow the reseller to rearrange accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        resftp:
          type: integer
          description: |-
            Whether to allow the reseller to resync FTP passwords.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        restart:
          type: integer
          description: |-
            Whether to allow the reseller to restart services.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        show-bandwidth:
          type: integer
          description: |-
            Whether to allow the reseller to view account bandwidth usage.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        ssl:
          type: integer
          description: |-
            Whether to allow the reseller to perform SSL site management.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        ssl-buy:
          type: integer
          description: |-
            Whether to allow the reseller to purchase SSL certificates.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        ssl-gencrt:
          type: integer
          description: |-
            Whether to allow the reseller to generate SSL certificates.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        ssl-info:
          type: integer
          description: |-
            Whether to allow the reseller to view their server's SSL
            information.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        stats:
          type: integer
          description: |-
            Whether to allow the reseller to view server information.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        status:
          type: integer
          description: |-
            Whether to allow the reseller to view the server's status.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        suspend-acct:
          type: integer
          description: |-
            Whether to allow the reseller to suspend or unsuspend accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        thirdparty:
          type: integer
          description: |-
            Whether to allow the reseller to manage third-party services.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        track-email:
          type: integer
          description: |-
            Whether to allow resellers to view reports about email message
            delivery attempts from their account.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        upgrade-account:
          type: integer
          description: |-
            Whether to allow the reseller to upgrade or downgrade accounts.

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
        viewglobalpackages:
          type: integer
          description: |-
            Whether to allow the reseller to use all
            [global packages](https://go.cpanel.net/resellerpackages).

            * `1` — Allow.
            * `0` — Do not allow.
          example: 1
          enum:
          - 1
          - 0
      description: |-
        A list of ACL privileges, including any third-party ACL privileges
        that exist for the user.
    inline_response_200_302_data_acl:
      type: object
      properties:
        name:
          type: string
          description: The ACL's name.
          example: acl1
        privileges:
          $ref: "#/components/schemas/inline_response_200_302_data_privileges"
    inline_response_200_302_data:
      type: object
      properties:
        acl:
          type: array
          description: An array of objects containing ACL settings.
          items:
            $ref: "#/components/schemas/inline_response_200_302_data_acl"
    inline_response_200_302_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listacls
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_303_data_crt:
      type: object
      properties:
        domain:
          type: string
          description: The certificate's primary domain.
          format: domain
          example: example.com
        domain_owners:
          type: array
          description: A list of the owners of the domain or domains that the certificate
            covers.
          example:
          - username
          items:
            type: string
            format: username
        domains:
          type: array
          description: A list of the domain or domains that the certificate covers.
          example:
          - example.com
          items:
            type: string
            format: domain
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        friendly_name:
          type: string
          description: The certificate's friendly name.
          example: TestCertificate
        id:
          type: string
          description: The certificate's ID.
          example: example._com_d13b4_362b9_1400343187_b05e5c3e443dda9a8869c4cf7457829e
        is_self_signed:
          type: integer
          description: |-
            Whether the certificate is self-signed.

            * `1` — Self-signed.
            * `0` — **Not** self-signed.
          example: 1
          enum:
          - 1
          - 0
        issuer.organizationName:
          type: string
          description: The certificate's Organization Name.
          example: Organization
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` — RSA.
            * `id-ecPublicKey` — ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus_length:
          type: integer
          description: |-
            The certificate's key's modulus length, in bits.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: The date the certificate expires.
          format: unix_timestamp
          example: 1601467200
        registered:
          type: integer
          description: |-
            Whether the certificate is registered with a CA.

            * `1` — Registered.
            * `0` — **Not** registered.
          example: 1
          enum:
          - 1
          - 0
        signature_algorithm:
          type: string
          description: The certificate's OID hash algorithm signature.
          example: sha256WithRSAEncryption
        validation_type:
          type: string
          description: |-
            The certificate's validation type.

            * `ev` — Extended Validation.
            * `ov` — Organization Validation.
            * `dv` — Domain Validated.
            * `null` — The system could **not** parse and determine the
            certificate's validation type.
          nullable: true
          example: dv
          enum:
          - ev
          - dv
          - ov
    inline_response_200_303_data:
      type: object
      properties:
        crt:
          type: array
          description: Information about the certificate.
          items:
            $ref: "#/components/schemas/inline_response_200_303_data_crt"
    inline_response_200_303_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listcrts
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_304_data_ip:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the IP address is active.
            * `1` — Active.
            * `0` — Inactive.
          example: 1
          enum:
          - 0
          - 1
        dedicated:
          type: integer
          description: |-
            Whether the IP address is dedicated.
            * `1` — Dedicated.
            * `0` — Shared.
          example: 0
          enum:
          - 0
          - 1
        if:
          type: string
          description: The IP address' network interface.
          example: eth0
        ip:
          type: string
          description: The IP address.
          format: ipv4
          example: 192.168.0.20
        mainaddr:
          type: integer
          description: |-
            Whether the IP address is the server's main IP address.
            * `1` — Main IP address.
            * `0` — **Not** the main IP address.
          example: 0
          enum:
          - 0
          - 1
        netmask:
          type: string
          description: The IP address' netmask.
          format: ipv4
          example: 255.255.0.0
        network:
          type: string
          description: The IP address' network value.
          format: ipv4
          example: 192.168.0.0
        public_ip:
          type: string
          description: The public IP for the IP address.
          format: ipv4
          example: 10.1.32.177
        removable:
          type: integer
          description: |-
            Whether the IP address can be removed.
            * `1` — Removable.
            * `0` — **Not** removable.
          example: 0
          enum:
          - 0
          - 1
        used:
          type: integer
          description: |-
            Whether the IP address is in use.
            * `1` — In use.
            * `0` — **Not** in use.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_304_data:
      type: object
      properties:
        ip:
          type: array
          description: An array of objects that contain IP address information.
          items:
            $ref: "#/components/schemas/inline_response_200_304_data_ip"
    inline_response_200_304_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listips
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_305_data_ip:
      properties:
        ip:
          type: string
          description: The IPv6 address.
          format: ipv6
          example: 2001:0db8:0:0:1:0:0:1
    inline_response_200_305_data:
      type: object
      properties:
        ip:
          type: array
          description: An array of objects that contain IPv6 address information.
          items:
            $ref: "#/components/schemas/inline_response_200_305_data_ip"
    inline_response_200_305_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listipv6s
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_306_data:
      type: object
      properties:
        account:
          type: array
          description: A list of locked accounts on the server.
          example:
          - account1
          - account2
          items:
            type: string
    inline_response_200_306_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listlockedaccounts
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - `1` — Success.
            - `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_307_data_record:
      type: object
      properties:
        Line:
          minimum: 1
          type: integer
          description: The zone record's line number.
          example: 1
        class:
          type: string
          description: The record's class.
          example: IN
        exchange:
          type: string
          description: The domain's mail exchanger.
          format: domain
          example: mail.example.com
        name:
          type: string
          description: The record's name.
          example: hostname.example.com
        preference:
          minimum: 1
          type: integer
          description: |-
            The MX record's priority order.

            **Note:**

            Lower values indicate a higher priority order.
          example: 20
        ttl:
          minimum: 1
          type: integer
          description: The record's Time To Live (TTL) in seconds.
          example: 86400
        type:
          type: string
          description: The DNS record's type.
          example: MX
    inline_response_200_307_data:
      type: object
      properties:
        record:
          type: array
          description: An array of zone record data objects.
          items:
            $ref: "#/components/schemas/inline_response_200_307_data_record"
    inline_response_200_307_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listmxs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Records obtained.
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_308_data_pkg:
      type: object
      properties:
        BWLIMIT:
          description: |-
            The hosting plan's bandwidth limit, in megabytes (MB).

            * `unlimited` — The hosting plan allows unlimited bandwidth.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited bandwidth.
            enum:
            - unlimited
        CGI:
          type: string
          description: |-
            Whether CGI is enabled for the hosting plan.

            * `y` — Enabled.
            * `n` — Disabled.
          example: "y"
          enum:
          - "y"
          - "n"
        CPMOD:
          type: string
          description: The hosing plan's cPanel interface theme.
          example: jupiter
        DIGESTAUTH:
          type: string
          description: |-
            Whether the hosting plan enables Digest Authentication.

            * `y` — Enabled.
            * `n` — Disabled.
          example: "n"
          enum:
          - "y"
          - "n"
        FEATURELIST:
          type: string
          description: "The hosting plan's [feature list](https://go.cpanel.net/whmdocsFeatureManager)."
          example: myfeaturelist
        HASSHELL:
          type: string
          description: |-
            Whether shell access is enabled for the hosting plan.

            * `y` — Enabled.
            * `n` — Disabled.
          example: "n"
          enum:
          - "y"
          - "n"
        IP:
          type: string
          description: |-
            Whether the hosting plan grants accounts a dedicated IP address.

            * `y` — Dedicated IP address.
            * `n` — Shared IP address.
          example: "n"
          enum:
          - "y"
          - "n"
        LANG:
          type: string
          description: The hosting plan's locale.
          format: ISO-3166-1 (alpha-2)
          example: en
        MAXADDON:
          description: |-
            The hosting plan's maximum number of addon domains.

            * `unlimited` — The hosting plan allows unlimited addon domains.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited addon domains.
            enum:
            - unlimited
        MAXFTP:
          description: |-
            The hosting plan's maximum number of FTP accounts.

            * `unlimited` — The hosting plan allows unlimited FTP accounts.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited FTP accounts.
            enum:
            - unlimited
        MAXLST:
          description: |-
            The hosting plan's maximum number of mailing lists.

            * `unlimited` — The hosting plan allows an unlimited number of mailing lists.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows an unlimited number of mailing lists.
            enum:
            - unlimited
        MAXPARK:
          description: |-
            The hosting plan's maximum number of parked domains (aliases).

            * `unlimited` — The hosting plan allows unlimited parked domains.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited parked domains.
            enum:
            - unlimited
        MAXPOP:
          description: |-
            The hosting plan's maximum number of email accounts.

            * `unlimited` — The hosting plan allows unlimited email accounts.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited email accounts.
            enum:
            - unlimited
        MAXSQL:
          description: |-
            The hosting plan's maximum number of each available type of SQL
            database.

            For example, if this value is `5`, and the system administrator
            allows MySQL® and PostgreSQL® databases, users can create up to
            five MySQL databases and up to five PostgreSQL databases.

            * `unlimited` — The hosting plan allows unlimited SQL databases.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited SQL databases.
            enum:
            - unlimited
        MAXSUB:
          description: |-
            The hosting plan's maximum number of subdomains.

            * `unlimited` — The hosting plan allows unlimited subdomains.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited subdomains.
            enum:
            - unlimited
        MAX_DEFER_FAIL_PERCENTAGE:
          description: |-
            The
            [percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam)
            that the hosting plan can send per hour before the system rate-limits
            outgoing mail.

            * `unlimited` — The hosting plan allows unlimited email messages.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited email messages.
            enum:
            - unlimited
        MAX_EMAILACCT_QUOTA:
          description: |-
            The hosting plan's maximum email account quota size, in megabytes (MB).

            * `unlimited` — The hosting plan allows an unlimited email account quota size.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows an unlimited email account quota
              size.
            enum:
            - unlimited
        MAX_EMAIL_PER_HOUR:
          description: |-
            The
            [maximum number of emails](https://go.cpanel.net/howtopreventspam)
            that the hosting plan can send in one hour.

            * `unlimited` — The hosting plan allows unlimited emails per hour.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited emails per hour.
            enum:
            - unlimited
        MAX_TEAM_USERS:
          maximum: 7
          minimum: 0
          type: integer
          description: The hosting plan's maximum number of Team users.
          nullable: true
          example: 7
        QUOTA:
          description: |-
            The hosting plan's disk space limit, in megabytes (MB).

            * `unlimited` — The hosting plan allows unlimited disk space.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited disk space.
            enum:
            - unlimited
        _PACKAGE_EXTENSIONS:
          type: string
          description: "A space-separated list of one or more of the hosting plan's\
            \ package extensions, if any exist."
          example: ""
        name:
          type: string
          description: The hosting plan's name.
          example: package1
    inline_response_200_308_data:
      type: object
      properties:
        pkg:
          type: array
          description: An array of objects that contains hosting plans and their settings.
          items:
            $ref: "#/components/schemas/inline_response_200_308_data_pkg"
    inline_response_200_308_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listpkgs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_309_data:
      type: object
      properties:
        reseller:
          type: array
          description: An array of the server's reseller accounts.
          items:
            type: string
            example: bob
    inline_response_200_309_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listresellers
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_310_data_keys:
      type: object
      properties:
        authorized:
          type: integer
          description: |-
            Whether the key is authorized to access the server.

            * `1` — Authorized.
            * `0` — **Not** authorized.
          example: 0
          enum:
          - 0
          - 1
        comment:
          type: string
          description: The key's comment.
          example: REPO username@example.com
        ctime:
          type: integer
          description: |-
            The date that the key was created, in
            [Unix time format](http://en.wikipedia.org/wiki/Unix_time).
          format: unix_timestamp
          example: 1416596824
        file:
          type: string
          description: The key's filename.
          example: TestKey
        mtime:
          type: integer
          description: "The date that the key will expire, in Unix time format."
          format: unix_timestamp
          example: 1416596824
        private:
          type: integer
          description: |-
            Whether the private key is stored on the server.

            * `1` — The private key is on the server.
            * `0` — The private key is **not** on the server.
          example: 1
          enum:
          - 0
          - 1
        text:
          type: string
          description: The key's text.
          example: ssh-rsaXXXXX3XXXX1XX2XXXXXXXXXXXXXXxXXXX6XXXXX90X41X7XXXXX02XXXXX8XXXX54XXXXXXXXXXX2X07XXXXXXXXXXX7XXXX4XXX2X98XXXX98X80XXXXXXX7X/X4XXXXxX1XXXXXXXXXXXxXXXXXXXXX6+4XXXX36XXXXX3XXXXXX1XXXXXXX/X7+XX1XX6XXXX0XXXXXXX0XXXXXXXX+XxX99X7X2XXXXXX03xXXXXX0XXXXXXXXXX9XXXXXXX9XXXXXXXXXXXX/XXXXX07XXXXX3XXXXXX5XXX+/XXXXXXXXXXXXX3XxXXXXXXXXXXXX6XXXXXXXXXXXX2XXXXXXXXXXXXXXXXX3XX+XXXX3XXXXXXX==
            REPO username@example.com
    inline_response_200_310_data:
      type: object
      properties:
        keys:
          type: array
          description: An array of objects of each key's information.
          items:
            $ref: "#/components/schemas/inline_response_200_310_data_keys"
    inline_response_200_310_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listsshkeys
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_311_data_account:
      type: object
      properties:
        is_locked:
          type: integer
          description: |-
            Whether the account is locked.
            * `1` - Locked.
            * `0` - Not locked.
          example: 0
          enum:
          - 0
          - 1
        owner:
          type: string
          description: |-
            The cPanel account's owner.
            - `root`
            - A reseller's username.
            - The account's username.
          example: root
        reason:
          type: string
          description: "The reason why the account is suspended, if one exists."
          example: Suspended for nonpayment.
        time:
          type: string
          description: |-
            The current date and time in `Day Mon DD HH:mm:SS YYYY` human-readable format, where:
            * `Day` - represents the day of the week as a three-letter abbreviation.
            * `Mon` - represents the month's three-letter abbreviation.
            * `DD` - represents the date.
            * `HH` - represents the hour.
            * `mm` - represents the minute.
            * `SS` - represents the second.
            * `YYYY` - represents the year.
          example: Thu Nov 18 10:34:34 2014
        unixtime:
          type: integer
          description: The current date and time.
          format: unix_timestamp
          example: 1416306874
        user:
          type: string
          description: The cPanel account's username.
          example: username
    inline_response_200_311_data:
      type: object
      properties:
        account:
          type: array
          description: A list of objects containing suspended account data.
          items:
            $ref: "#/components/schemas/inline_response_200_311_data_account"
    inline_response_200_311_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listsuspended
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_312_data_zone:
      type: object
      properties:
        domain:
          type: string
          description: The domain name.
          format: domain
          example: example.com
        zonefile:
          type: string
          description: The zone file's name.
          example: example.net.db
    inline_response_200_312_data:
      type: object
      properties:
        zone:
          type: array
          description: An array of objects of zone information.
          items:
            $ref: "#/components/schemas/inline_response_200_312_data_zone"
    inline_response_200_312_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: listzones
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_313_data_cpgreylist_config:
      type: object
      properties:
        child_timeout_secs:
          minimum: 1
          type: integer
          description: The maximum amount of seconds that Greylisting waits for a
            child process to time out.
          example: 5
        initial_block_time_mins:
          maximum: 240
          minimum: 1
          type: integer
          description: The number of minutes during which Greylisting defers email
            from an unknown triplet.
          example: 10
        is_enabled:
          type: integer
          description: |-
            Whether Greylisting is enabled.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        is_exim_enabled:
          type: integer
          description: |-
            Whether Exim is enabled.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
        max_child_procs:
          minimum: 1
          type: integer
          description: The maximum amount of child processes.
          example: 5
        must_try_time_mins:
          maximum: 1440
          minimum: 1
          type: integer
          description: The number of minutes during which Greylisting accepts a re-sent
            email from an unknown triplet.
          example: 240
        purge_interval_mins:
          minimum: 1
          type: integer
          description: The number of minutes before Greylisting deletes the records
            in the Greylisting database.
          example: 60
        record_exp_time_mins:
          maximum: 43200
          minimum: 1
          type: integer
          description: "The number of minutes before Greylisting deletes the triplet\
            \ record and treats a re-sent email as a new, unknown triplet."
          example: 4320
        spf_bypass:
          type: integer
          description: |-
            Whether emails with SPF bypass Greylisting.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains Greylisting settings.
    inline_response_200_313_data:
      type: object
      properties:
        cpgreylist_config:
          $ref: "#/components/schemas/inline_response_200_313_data_cpgreylist_config"
    inline_response_200_313_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: load_cpgreylist_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_314_data_cphulk_config:
      type: object
      properties:
        block_brute_force_with_firewall:
          type: integer
          description: |-
            Whether to use the server's firewall to block brute force attacks.
            * `1` - Block.
            * `0` - Don't block.
          example: 1
          enum:
          - 0
          - 1
        block_excessive_brute_force_with_firewall:
          type: integer
          description: |-
            Whether to use the server's firewall to block excessive brute force attacks.
            * `1` - Block.
            * `0` - Don't block.
          example: 1
          enum:
          - 0
          - 1
        brute_force_period_mins:
          minimum: 1
          type: integer
          description: The number of minutes during which cPHulk measures all login
            attempts to a specific user's account.
          example: 5
        brute_force_period_sec:
          minimum: 1
          type: integer
          description: The number of seconds over which cPHulk measures all login
            attempts to a specific user's account.
          example: 360
        can_temp_ban_firewall:
          type: integer
          description: |-
            Whether to add temporary IP bans via the server's firewall.
            * `1` - Add.
            * `0` - Don't add.
          example: 1
          enum:
          - 0
          - 1
        command_to_run_on_brute_force:
          type: string
          description: The command to run when the system detects a brute force attack.
            A valid BASH command.
          example: echo "BRUTE"
        command_to_run_on_excessive_brute_force:
          type: string
          description: The command to run when the system detects an excessive brute
            force attack. A valid BASH command.
          example: echo "TOO MUCH BRUTE"
        ip_based_protection:
          type: integer
          description: |-
            Whether cPHulk will track failed login attempts via IP addresses.
            * `1` - Track.
            * `0` - Don't track.
          example: 1
          enum:
          - 0
          - 1
        ip_brute_force_period_mins:
          minimum: 1
          type: integer
          description: The number of minutes during which cPHulk measures an attacker's
            login attempts.
          example: 15
        ip_brute_force_period_sec:
          minimum: 1
          type: integer
          description: The number of seconds during which cPHulk measures an attacker's
            login attempts.
          example: 300
        is_enabled:
          type: integer
          description: |-
            Whether the cPHulk service is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        lookback_period_min:
          minimum: 1
          type: integer
          description: The number of minutes during which cPHulk counts failed logins
            against a user.
          example: 360
        lookback_time:
          minimum: 1
          type: integer
          description: The number of seconds during which cPHulk counts failed logins
            against a user.
          example: 21600
        mark_as_brute:
          minimum: 0
          type: integer
          description: The maximum number of failures that cPHulk will allow per account
            from a specific IP address before the system locks out that address for
            two weeks.
          example: 30
        max_failures:
          minimum: 0
          type: integer
          description: The maximum number of failures that cPHulk will allow per account
            within the defined time range.
          example: 30
        max_failures_byip:
          minimum: 0
          type: integer
          description: The maximum number of failures that cPHulk will allow per account
            from a specific IP address within the defined time range.
          example: 5
        notify_on_brute:
          type: integer
          description: |-
            Whether cPHulk will send a notification when it detects a brute force attack.
            * `1` - Send.
            * `0` - Do not send.
          example: 1
          enum:
          - 0
          - 1
        notify_on_root_login:
          type: integer
          description: |-
            Whether cPHulk will send a notification when the root user successfully logs in from an IP address that is not on the whitelist.
            * `1` - Send.
            * `0` - Do not send.
          example: 1
          enum:
          - 0
          - 1
        notify_on_root_login_for_known_netblock:
          type: integer
          description: |-
            Whether cPHulk will send a notification when the root user successfully logs in from an IP address in the same netblock.
            * `1` - Send.
            * `0` - Do not send.
          example: 1
          enum:
          - 0
          - 1
        username_based_protection:
          type: integer
          description: |-
            Whether cPHulk will track failed logins by username.
            * `1` - Track.
            * `0` - Don't track.
          example: 1
          enum:
          - 0
          - 1
        username_based_protection_for_root:
          type: integer
          description: |-
            Whether cPHulk will track the root user's failed logins.
            * `1` - Track.
            * `0` - Don't track.
          example: 1
          enum:
          - 0
          - 1
        username_based_protection_local_origin:
          type: integer
          description: |-
            Whether cPHulk will only track failed logins for requests originating locally.
            * `1` - Track.
            * `0` - Don't track.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains cPHulk's current settings.
    inline_response_200_314_data:
      type: object
      properties:
        cphulk_config:
          $ref: "#/components/schemas/inline_response_200_314_data_cphulk_config"
    inline_response_200_314_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: load_cphulk_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_315_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: local_disable
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_316_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: local_enable
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_317_data:
      type: object
      properties:
        ip:
          type: string
          description: The nameserver's IP address.
          format: ipv4
          example: 192.168.0.20
    inline_response_200_317_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: lookupnsip
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_318_data:
      type: object
      properties:
        ipv4:
          type: string
          description: |-
            The nameserver's IPv4 address.

            **Note:**

             The function returns this value **only** if a nameserver with an IPv4 address exists on the server.
          format: ipv4
          example: 192.0.2.0
        ipv6:
          type: string
          description: |-
            The nameserver's IPv6 address.

            **Note:**

             The function returns this value **only** if a nameserver with an IPv6 address exists on the server.
          format: ipv6
          example: 2001:0db8:0:0:1:0:0:1
    inline_response_200_318_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: lookupnsips
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_319_data:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Whether SNI for mail is enabled.
            - `1` — Enabled.
            - `0` — Disabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_319_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: mail_sni_status
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_320_data_action:
      type: object
      properties:
        feature:
          type: string
          description: The feature's ID.
          example: mysql8
        status:
          type: string
          description: The feature's state.
          example: Successfully performed 'enable' for mysql8
    inline_response_200_320_data_feature:
      type: object
      properties:
        description:
          type: string
          description: |-
            The feature's description.

            **Note:**

            The function **only** returns this value if you pass the `info`
            value to the `action` parameter.
          example: "MySQL® 8 is now available in cPanel and WHM for all supported\
            \ operated operating systems. For more information, read our documentation\
            \ (https://go.cpanel.net/whmdocsUpgradeDBVersion)."
        enabled:
          type: integer
          description: |-
            Whether the feature is enabled.

            * `1` — Enabled.
            * `0` — Disabled.

            **Note:**

            The function **only** returns this value if you pass the `info`
            or `list` values to the `action` parameter.
          example: 0
          enum:
          - 1
          - 0
        feature_key:
          type: string
          description: |-
            The feature's ID.

            **Note:**

            The function **only** returns this value if you pass the `info`
            or `list` values to the `action` parameter.
          example: mysql8
        link:
          type: string
          description: |-
            The feature's documentation link.

            **Note:**

            The function **only** returns this value if you pass the `info`
            value to the `action` parameter.
          format: url
          example: https://go.cpanel.net/whmdocsUpgradeDBVersion
        name:
          type: string
          description: |-
            The feature's name.

            **Note:**

            The function **only** returns this value if you pass the `info`
            value to the `action` parameter.
          example: MySQL® 8 Now Available For Upgrade
        recommended:
          type: integer
          description: |-
            Whether we recommend that you install the feature.

            * `1` — Recommended.
            * `0` — **Not** recommended.

            **Note:**

            The function **only** returns this value if you pass the `info`
            value to the `action` parameter.
          example: 0
          enum:
          - 1
          - 0
        vendor:
          type: string
          description: |-
            The feature's vendor.

            **Note:**

            The function **only** returns this value if you pass the `info`
            value to the `action` parameter.
          example: "WebPros International, LLC"
    inline_response_200_320_data:
      type: object
      properties:
        action:
          type: array
          description: |-
            An array of objects containing feature information.

            **Note:**

            The function **only** returns this array if you pass the `enabled`
            or `disabled` values to the `action` parameter.
          items:
            $ref: "#/components/schemas/inline_response_200_320_data_action"
        feature:
          type: array
          description: |-
            An array of objects containing feature information.

            **Note:**

            The function **only** returns this array if you pass the `info`
            or `list` values to the `action` parameter.
          items:
            $ref: "#/components/schemas/inline_response_200_320_data_feature"
      example: "{\"feature\":[{\"description\":\"This feature does things.\",\"enabled\"\
        :1,\"feature_key\":\"featured_example1\",\"link\":\"https://go.cpanel.net/featureshowcasefeatured_example1\"\
        ,\"name\":\"Featured Example 1\",\"recommended\":1,\"vendor\":\"Third Party,\
        \ Inc.\"},{\"description\":\"This feature also does things.\",\"enabled\"\
        :1,\"feature_key\":\"featured_example2\",\"link\":\"https://go.cpanel.net/featureshowcasefeatured_example2\"\
        ,\"name\":\"Featured Example 2\",\"recommended\":1,\"vendor\":\"WebPros International,\
        \ LLC\"}]}"
    inline_response_200_320_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: manage_features
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_321_data:
      properties:
        new_serial:
          minimum: 0
          type: integer
          description: |-
            The DNS zone’s SOA record’s new serial number.
            You can use this to submit later edits if you
            track the number of lines each record takes up.
          example: 2021031903
    inline_response_200_321_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: mass_edit_dns_zone
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_322_data_extended:
      type: object
      properties:
        cpuser:
          type: object
          additionalProperties:
            description: The complete attributes of the cPanel account.
          description: |-
            An object containing the output of an account's `cpuser`
            file. The system stores this file in the `/var/cpanel/users`
            directory.

            **Note:**

            If the account or its hosting plan use
            [package extensions](https://go.cpanel.net/GuidetoPackageExtensions),
            the `cpuser` object will also include the extension's variables.
        domain:
          type: string
          description: The account's main domain.
          format: domain
        setshell:
          type: string
          description: |-
            The absolute file path to the account's updated shell location.

            * `unmodified` — The shell's absolute filepath did not change.
          format: path
          anyOf:
          - type: string
            description: The updated shell's absolute file path.
            format: path
          - type: string
            description: The shell's absolute filepath did not change.
            enum:
            - unmodified
            - noshell
        user:
          type: string
          description: |-
            The cPanel account's username.

            **Note:**

            If you changed the cPanel account's username, the function
            returns the new value.
          format: username
      description: An object containing the account's modified settings.
    inline_response_200_322_data_payload:
      type: object
      properties:
        extended:
          $ref: "#/components/schemas/inline_response_200_322_data_extended"
        messages:
          type: array
          description: A list containing account modification messages.
          items:
            type: string
        proxied_from:
          type: array
          description: |-
            The hostnames of the
            [linked cPanel server nodes](https://go.cpanel.net/serverroles)
            from which the function proxied the return. The function returns
            the hostnames in their proxied order.

            **Note:**

            The function **only** returns this value for
            [distributed cPanel accounts](https://go.cpanel.net/cPanelGlossary#distributed-cpanel-account).
          items:
            type: string
            format: domain
        reason:
          type: string
          description: The account's modification status.
        result:
          type: integer
          description: |-
            Whether the account modification succeeded.
            * `1` — Success.
            * `0` — Failure.
          enum:
          - 1
          - 0
        user:
          type: string
          description: The modified account's username.
          format: username
        warnings:
          type: array
          description: "A list of warning messages for the modified account, if any\
            \ exist."
          items:
            type: string
    inline_response_200_322_data:
      type: object
      properties:
        payload:
          type: array
          description: |-
            An array of objects containing data for each modified user.

            **Note:**

            If an account uses [linked cPanel server nodes](https://go.cpanel.net/whmdocsLinkServerNodes),
            this object contains a return for each server on which the account exists.
          example:
          - reason: Unable to fetch the cPanel user file for username
            result: 0
            user: username
          - extended:
              cpuser:
                BACKUP: "1"
                BWLIMIT: unlimited
                CONTACTEMAIL: username1@example.com
                CONTACTEMAIL2: ""
                DBOWNER: username1
                DEADDOMAINS:
                - example.example1.com
                DEMO: "0"
                DISK_BLOCK_LIMIT: 0
                DOMAIN: example1.com
                DOMAINS: []
                FEATURELIST: default
                HASCGI: "1"
                HASDKIM: "1"
                HASDMARC: "1"
                HASSPF: "1"
                HOMEDIRLINKS: []
                IP: 172.16.1.3
                LANG: english-utf8
                LEGACY_BACKUP: "0"
                LOCALE: en
                MAILBOX_FORMAT: maildir
                MAXADDON: "0"
                MAXFTP: "234"
                MAXLST: unlimited
                MAXPARK: "0"
                MAXPOP: "123"
                MAXSQL: "345"
                MAXSUB: unlimited
                MAX_DEFER_FAIL_PERCENTAGE: unlimited
                MAX_EMAILACCT_QUOTA: unlimited
                MAX_EMAIL_PER_HOUR: unlimited
                MTIME: "1584509675"
                MXCHECK-example1.com: remote
                OWNER: username1
                PLAN: extended
                RS: jupiter
                STARTDATE: "765435600"
                USER: username1
                UTF8MAILBOX: "1"
                WORKER_NODE-Mail: example1:6L3ZJZ8LPAAOMC8CA31325O8EKGJ5YV5
                _PACKAGE_EXTENSIONS: custom
                __CACHE_DATA_VERSION: "0.81"
              domain: example1.com
              setshell: unmodified
              user: username1
            messages: []
            reason: Account Modified
            result: 1
            user: username1
            warnings: []
          - extended:
              cpuser:
                BACKUP: "1"
                BWLIMIT: unlimited
                CONTACTEMAIL: ""
                CONTACTEMAIL2: ""
                DBOWNER: username2
                DEADDOMAINS: []
                DEMO: "0"
                DISK_BLOCK_LIMIT: 0
                DOMAIN: example2.com
                DOMAINS: []
                FEATURELIST: default
                HASCGI: "0"
                HASDKIM: "1"
                HASDMARC: "1"
                HASSPF: "1"
                HOMEDIRLINKS: []
                IP: 10.0.0.1
                LEGACY_BACKUP: "0"
                LOCALE: cs
                MAILBOX_FORMAT: maildir
                MAXADDON: "0"
                MAXFTP: "234"
                MAXLST: unlimited
                MAXPARK: "0"
                MAXPOP: "123"
                MAXSQL: "345"
                MAXSUB: unlimited
                MAX_DEFER_FAIL_PERCENTAGE: unlimited
                MAX_EMAILACCT_QUOTA: unlimited
                MAX_EMAIL_PER_HOUR: unlimited
                MTIME: "1583966719"
                MXCHECK-example2.com: "0"
                OWNER: root
                PLAN: extended
                RS: jupiter
                STARTDATE: "728719200"
                USER: username2
                UTF8MAILBOX: "1"
                WORKER_NODE-Mail: example2:BXE4LIAXF4X9N0B0TG69AAQ64DGR1XPU
                _PACKAGE_EXTENSIONS: ""
                __CACHE_DATA_VERSION: "0.81"
              domain: example2.com
              setshell: unmodified
              user: username2
            messages: []
            proxied_from:
            - example.com
            reason: Account Modified
            result: 1
            user: username2
            warnings: []
          - extended:
              cpuser:
                BACKUP: "1"
                BWLIMIT: unlimited
                CONTACTEMAIL: ""
                CONTACTEMAIL2: ""
                DBOWNER: username2
                DEADDOMAINS: []
                DEMO: 0
                DISK_BLOCK_LIMIT: 0
                DOMAIN: example2.com
                DOMAINS: []
                FEATURELIST: default
                HASCGI: "1"
                HASDKIM: "1"
                HASDMARC: "1"
                HASSPF: "1"
                HOMEDIRLINKS: []
                IP: 172.16.1.3
                LANG: english-utf8
                LEGACY_BACKUP: "0"
                LOCALE: en
                MAILBOX_FORMAT: maildir
                MAXADDON: unlimited
                MAXFTP: "234"
                MAXLST: unlimited
                MAXPARK: unlimited
                MAXPOP: "123"
                MAXSQL: "345"
                MAXSUB: unlimited
                MAX_DEFER_FAIL_PERCENTAGE: unlimited
                MAX_EMAILACCT_QUOTA: unlimited
                MAX_EMAIL_PER_HOUR: unlimited
                MTIME: "1584509675"
                MXCHECK-example2.com: remote
                OWNER: username2
                PLAN: default
                RS: jupiter
                STARTDATE: "765435600"
                USER: username2
                UTF8MAILBOX: "1"
                WORKER_NODE-Mail: example2:H99IZWY3OH9Q1DQNR58L55WUBXAENPDP
                _PACKAGE_EXTENSIONS: ""
                __CACHE_DATA_VERSION: "0.81"
              domain: example2.com
              setshell: unmodified
              user: username2
            messages: []
            reason: Account Modified
            result: 1
            user: username2
            warnings: []
          - extended:
              cpuser:
                BACKUP: "1"
                BWLIMIT: unlimited
                CONTACTEMAIL: ""
                CONTACTEMAIL2: ""
                DBOWNER: username2
                DEADDOMAINS: []
                DEMO: 0
                DISK_BLOCK_LIMIT: 0
                DOMAIN: example2.com
                DOMAINS: []
                FEATURELIST: default
                HASCGI: "0"
                HASDKIM: "1"
                HASDMARC: "1"
                HASSPF: "1"
                HOMEDIRLINKS: []
                IP: 10.0.0.2
                LANG: english-utf8
                LEGACY_BACKUP: "0"
                LOCALE: en
                MAILBOX_FORMAT: maildir
                MAXADDON: unlimited
                MAXFTP: "234"
                MAXLST: unlimited
                MAXPARK: unlimited
                MAXPOP: "123"
                MAXSQL: "345"
                MAXSUB: unlimited
                MAX_DEFER_FAIL_PERCENTAGE: unlimited
                MAX_EMAILACCT_QUOTA: unlimited
                MAX_EMAIL_PER_HOUR: unlimited
                MTIME: "1583966717"
                MXCHECK-example2.com: "0"
                OWNER: linked
                PLAN: default
                RS: jupiter
                STARTDATE: "765435600"
                USER: username2
                UTF8MAILBOX: "1"
                _PACKAGE_EXTENSIONS: ""
                __CACHE_DATA_VERSION: "0.81"
              domain: example2.com
              setshell: noshell
              user: username2
            messages:
            - Shell changed
            proxied_from:
            - example.com
            reason: Account Modified
            result: 1
            user: username2
            warnings: []
          items:
            $ref: "#/components/schemas/inline_response_200_322_data_payload"
    inline_response_200_322_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: massmodifyacct
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Failed to modify one or more users.
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
      example: "{\"command\":\"massmodifyacct\",\"messages\":[\"From example1.com:\
        \ Restarting apache\"],\"reason\":\"Failed to modify one or more users.\"\
        ,\"result\":0,\"version\":1,\"warnings\":[]}"
    inline_response_200_323_data_pkg:
      type: object
      properties:
        BWLIMIT:
          description: |-
            The hosting plan's bandwidth limit, in megabytes (MB).

            * `unlimited` — The hosting plan allows unlimited bandwidth.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
            format: megabytes
          - type: string
            description: The hosting plan allows unlimited bandwidth.
            enum:
            - unlimited
        CGI:
          type: integer
          description: |-
            Whether CGI is enabled for the hosting plan.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        CPMOD:
          type: string
          description: The hosting plan's cPanel interface theme.
          example: jupiter
        DIGESTAUTH:
          type: string
          description: |-
            Whether the hosting plan enables Digest Authentication.

            * `y` — Enable.
            * `n` — Disable.
          example: "y"
          enum:
          - "y"
          - "n"
        FEATURELIST:
          type: string
          description: |-
            The hosting plan's
            [feature list](https://go.cpanel.net/whmdocsFeatureManager).
          example: myfeaturelist
        FRONTPAGE:
          type: integer
          description: |-
            Whether Microsoft® FrontPage Extensions are enabled for the account.

            **Note:**

            cPanel & WHM ignores all FrontPage settings and parameters.
          example: 0
          deprecated: true
          default: 0
          enum:
          - 0
        HASSHELL:
          type: string
          description: |-
            Whether shell access is enabled for the hosting plan.
            * `y` — Enabled. * `n` — Disabled.
          example: "n"
          enum:
          - "y"
          - "n"
        IP:
          type: string
          description: |-
            Whether the hosting plan grants accounts a dedicated IP address.

            * `y` — Dedicated IP address.
            * `n` — Shared IP address.
          example: "n"
          enum:
          - "y"
          - "n"
        LANG:
          type: string
          description: The hosting plan's locale.
          format: ISO-3166-1 (alpha-2)
          example: en
        MAXADDON:
          description: |-
            The hosting plan's maximum number of addon domains.

            * `unlimited` — The hosting plan allows unlimited addon domains.
          example: 1
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited addon domains.
            enum:
            - unlimited
        MAXFTP:
          description: |-
            The hosting plan's maximum number of FTP accounts.

            * `unlimited` — The hosting plan allows for unlimited FTP accounts.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows for unlimited FTP accounts.
            enum:
            - unlimited
        MAXLST:
          description: |-
            The hosting plan's maximum number of mailing lists.

            * `unlimited` — The hosting plan allows an unlimited number of mailing lists.
          example: 5
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows an unlimited number of mailing lists.
            enum:
            - unlimited
        MAXPARK:
          description: |-
            The hosting plan's maximum number of parked domains.

            * `unlimited` — The hosting plan allows unlimited parked domains.
          example: 1
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited parked domains.
            enum:
            - unlimited
        MAXPOP:
          description: |-
            The hosting plan's maximum number of email accounts.

            * `unlimited` — The hosting plan's can create unlimited email accounts.
          example: 20
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan's can create unlimited email accounts.
            enum:
            - unlimited
        MAXSQL:
          description: |-
            The hosting plan's maximum number of SQL databases.

            * `unlimited` — The hosting plan allows unlimited SQL databases.
          example: 1
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited SQL databases.
            enum:
            - unlimited
        MAXSUB:
          description: |-
            The hosting plan's maximum number of subdomains.

            * `unlimited` — The hosting plan allows unlimited subdomains.
          example: 5
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited subdomains.
            enum:
            - unlimited
        MAX_DEFER_FAIL_PERCENTAGE:
          description: |-
            The
            [percentage of failed or deferred email messages](https://go.cpanel.net/howtopreventspam)
            that the hosting plan can send per hour before outgoing mail is rate-limited.

            * `unlimited` — The hosting plan allows unlimited email messages.
          example: 10
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited email messages.
            enum:
            - unlimited
        MAX_EMAILACCT_QUOTA:
          description: |-
            The maximum size that the account can define when it
            creates an email account.

            * `unlimited` — The hosting plan allows an unlimited email account quota size.
          example: unlimited
          oneOf:
          - minimum: 0
            type: integer
            format: megabytes
          - type: string
            description: The hosting plan allows an unlimited email account quota
              size.
            enum:
            - unlimited
        MAX_EMAIL_PER_HOUR:
          description: |-
            The [maximum number of emails](https://go.cpanel.net/howtopreventspam)
            that the hosting plan can send in one hour.

            * `unlimited` — The hosting plan allows unlimited emails per hour.
          example: 100
          oneOf:
          - minimum: 0
            type: integer
          - type: string
            description: The hosting plan allows unlimited emails per hour.
            enum:
            - unlimited
        QUOTA:
          description: |-
            The hosting plan's disk space limit.

            * `unlimited` — The hosting plan has unlimited disk space.
          example: 100
          oneOf:
          - minimum: 0
            type: integer
            format: megabytes
          - type: string
            description: The hosting plan has unlimited disk space.
            enum:
            - unlimited
        _PACKAGE_EXTENSIONS:
          type: string
          description: A list of one or more of the hosting plan's package extensions.
          example: ext1 ext2 ext3
      description: A list of hosting plan settings.
    inline_response_200_323_data:
      type: object
      properties:
        pkg:
          $ref: "#/components/schemas/inline_response_200_323_data_pkg"
    inline_response_200_323_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: matchpkgs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` – Success.
            * `0` – Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_324_data:
      type: object
      properties:
        id:
          type: string
          description: The updated enhancement id.
          example: sample-enhancement-id
        name:
          type: string
          description: The enhancement name.
          example: Sample Enhancement
    inline_response_200_324_metadata:
      properties:
        command:
          type: string
          description: The name of the method called.
          example: modify_account_enhancement
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_325_data:
      type: object
      properties:
        cpuser:
          type: object
          additionalProperties:
            description: The complete attributes of the cPanel account.
          description: |-
            An object that contains the cPanel account's modified information.

            **Note:**

            * The possible properties in this section are the same as the possible query parameters (the attributes of the cPanel account).
            * These properties show up even if the query did **not** modify them.
            * Some of these properties **only** appear under certain other conditions.
            * If the cPanel account or its hosting plan use package extensions, the `cpuser` object will also include the extension's variables.
          example:
            BACKUP: "1"
            BWLIMIT: "0"
            CONTACTEMAIL: example@example.com
            CONTACTEMAIL2: ""
            DBOWNER: example
            DEADDOMAINS: []
            DEMO: "0"
            DISK_BLOCK_LIMIT: "0"
            DOMAIN: example.com
            DOMAINS:
            - subdomain.example.com
            FEATURELIST: default
            HASCGI: "1"
            HASDKIM: "1"
            HASDMARC: "1"
            HASSPF: "1"
            HOMEDIRLINKS: []
            IP: 172.16.1.13
            LEGACY_BACKUP: "0"
            LOCALE: en
            MAILBOX_FORMAT: maildir
            MAXADDON: "0"
            MAXFTP: unlimited
            MAXLST: unlimited
            MAXPARK: "0"
            MAXPOP: unlimited
            MAXSQL: unlimited
            MAXSUB: unlimited
            MAX_DEFER_FAIL_PERCENTAGE: unlimited
            MAX_EMAILACCT_QUOTA: unlimited
            MAX_EMAIL_PER_HOUR: unlimited
            MTIME: "1560518791"
            MXCHECK-example.com: "0"
            OWNER: example
            PLAN: default
            PUSHBULLET_ACCESS_TOKEN: ""
            RS: jupiter
            STARTDATE: "1554919365"
            USER: example
            UTF8MAILBOX: "1"
            _PACKAGE_EXTENSIONS: ""
            __CACHE_DATA_VERSION: "0.81"
            modify_firewall: "1"
            notify_account_authn_link: "0"
            notify_account_authn_link_notification_disabled: "0"
            notify_autossl_expiry: "0"
            notify_autossl_expiry_coverage: "0"
            notify_autossl_renewal_coverage: "0"
            notify_autossl_renewal_coverage_reduced: "0"
            notify_autossl_renewal_uncovered_domains: "0"
            notify_bandwidth_limit: "0"
            notify_contact_address_change: "0"
            notify_contact_address_change_notification_disabled: "0"
            notify_disk_limit: "0"
            notify_password_change: "0"
            notify_password_change_notification_disabled: "0"
            notify_ssl_expiry: "0"
        domain:
          type: string
          description: The cPanel account's main domain.
          format: domain
          example: example.com
        setshell:
          type: string
          description: The absolute path to the cPanel account's shell.
          format: path
          example: /bin/bash
        user:
          type: string
          description: |-
            The cPanel account username.

            **Note:**

            If you changed the cPanel account's username, the function returns the new value.
          format: username
          example: example1
    inline_response_200_325_metadata_output:
      type: object
      properties:
        messages:
          type: array
          description: Any messages that the system generated.
          example:
          - Reseller data updated
          - |
            0 rows updated in eximstats sends database.
            0 rows updated in eximstats smtp database.
            0 rows updated in eximstats failures database.
            0 rows updated in eximstats defers database.
          - Username changed from example to example1
          - Restarting apache
          items:
            type: string
        warnings:
          type: array
          description: Any warnings that the system generated.
          example:
          - Changing the cPanel account username from “example” to “example1” requires
            Digest Authentication to be disabled.
          - Use the Web Disk Accounts page in cPanel to re-enable Digest Authentication.
          items:
            type: string
      description: Output of the operation.
    inline_response_200_325_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modifyacct
        output:
          $ref: "#/components/schemas/inline_response_200_325_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Account Modified
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_326_data_rule:
      type: object
      properties:
        config: {}
        config_active: {}
        disabled:
          type: integer
          description: |-
            Whether the rule is disabled.
            - 1  Disabled.
            - 0  Enabled.
          example: 0
          enum:
          - 0
          - 1
        duplicate:
          type: integer
          description: |-
            Whether the rule already exists in the ModSecurity configuration staging file.
            - 1  Exists.
            - 0  Does not exist.
          example: 0
          enum:
          - 0
          - 1
        id:
          type: integer
          description: The ModSecurity rule's ID. A valid ModSecurity rule ID.
          example: 168
        meta_msg:
          type: string
          description: The ModSecurity rule's description. A valid string.
          example: Example rule message
        rule:
          type: string
          description: The ModSecurity rule's text. A valid ModSecurity rule.
          example: "SecAction \\\"phase:1,id:168,nolog,pass,setvar:tx.REMOTE_ADDR=/%{REMOTE_ADDR}/\\\
            \""
        staged: {}
        vendor_active: {}
        vendor_id: {}
      description: "hash that contains information about the new ModSecurity rule.\
        \ This hash includes the id , rule , disabled , meta_msg , and duplicate returns."
    inline_response_200_326_data:
      type: object
      properties:
        rule:
          $ref: "#/components/schemas/inline_response_200_326_data_rule"
    inline_response_200_326_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_add_rule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_327_data:
      type: object
      properties:
        archive_url:
          type: string
          description: |-
            The URL to the vendor's rule set archive.

            **Note:**

            The system will download a set of rules that is compatible with your version
            of ModSecurity.
          format: url
          example: http://example.com/update/MyVendor.zip
        cpanel_provided:
          type: integer
          description: |-
            Whether WebPros International, LLC provided the vendor.

            * `1` — cPanel-provided.
            * `0` — **Not** cPanel-provided.
          example: 0
          enum:
          - 1
          - 0
        description:
          type: string
          description: The vendor's description.
          example: This is an example of a custom vendor set (updated)
        dist_md5:
          type: string
          description: "The download's [MD5](https://en.wikipedia.org/wiki/MD5) checksum\
            \ value."
          format: md5
          example: 307cb5320441ebd712e5581d12100dc9
        dist_sha512:
          type: string
          description: "The download's [sha512](https://en.wikipedia.org/wiki/SHA-2)\
            \ hash."
          format: sha512
          example: b55c09bb1835ed4209f0f3ea4a70d099665363f23d3819c0369be429438d675ba2c749dcefdb85cee682ee0bf485558e67d0b0965fe4799865529d943e8e14cb
        enabled:
          type: integer
          description: |-
            Whether the function enabled the vendor.

            * `1` — Enabled.
            * `0` — **Not** enabled.
          example: 1
          enum:
          - 1
          - 0
        inst_dist:
          type: string
          description: The rule set's unique identifier.
          example: MyVendor-2
        installed:
          type: integer
          description: |-
            Whether the function installed the vendor.

            * `1` — Installed.
            * `0` — **Not** installed.
          example: 1
          enum:
          - 1
          - 0
        installed_from:
          type: string
          description: The vendor's metadata file URL.
          format: url
          example: https://example.com/update/meta_MyVendor.yaml
        name:
          type: string
          description: The vendor's name.
          example: My Vendor
        path:
          type: string
          description: The absolute path to the directory that contains the vendor's
            configuration files.
          format: path
          example: /usr/local/apache/conf/modsec_vendor_configs/MyVendor
        report_url:
          type: string
          description: The URL to which the system will send reports.
          format: url
          example: https://waf.example.com/api/cpanel_feedback?source=1&rule_set=1.229
        supported_versions:
          type: array
          description: A list of the ModSecurity versions that the vendor supports.
          example:
          - 2.7.5
          - 2.7.7
          - 2.8.0
          - 2.9.0
          - 2.9.1
          - 2.9.2
          - 2.9.3
          items:
            type: string
        vendor_id:
          type: string
          description: The vendor's unique short name.
          example: MyVendor
        vendor_url:
          type: string
          description: The vendor's website URL.
          format: url
          example: http://www.example.com
    inline_response_200_327_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_add_vendor
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_328_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_assemble_config_text
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_329_data_radio_options:
      type: object
      properties:
        name:
          type: string
          description: The option's display name.
          example: Log all transactions.
        option:
          type: string
          description: The option.
          example: "On"
    inline_response_200_329_data_updated_settings:
      type: object
      properties:
        default:
          minimum: 1
          type: integer
          description: |-
            The setting's default value.

            **Note:**

            The `modsec2.cpanel.conf` file defines this value.
          example: 1500
        description:
          type: string
          description: The setting's description.
          example: define the match limit of the PCRE library.
        directive:
          type: string
          description: The setting's Apache configuration directive.
          example: SecAuditEngine
        engine:
          type: integer
          description: |-
            Whether the setting is an engine directive.

            * `1` — Engine directive.
            * `0` — Normal directive.
          example: 1
          enum:
          - 1
          - 0
        name:
          type: string
          description: The setting's name.
          example: Audit Log Level
        radio_options:
          type: array
          description: An array of objects that contain the setting's options display
            information.
          items:
            $ref: "#/components/schemas/inline_response_200_329_data_radio_options"
        setting_id:
          minimum: 1
          type: integer
          description: The setting ID.
          example: 1
        state:
          type: string
          description: "The setting's current state, as set by the `state` parameter's\
            \ input value."
          example: "On"
        type:
          type: string
          description: |-
            The form element that the WHM interface uses to display this setting.

            * `text` — WHM users modify this setting via a text box.
            * `radio` — WHM users modify this setting via a radio button.
            * `number` — WHM users modify this setting via a text box that **only**
            allows numeric values.
          example: radio
        url:
          type: string
          description: The URL of the setting's entry in the ModSecurity reference
            manual.
          example: https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secpcrematchlimit
    inline_response_200_329_data:
      type: object
      properties:
        updated_settings:
          type: array
          description: An array of objects that contains the configuration setting's
            information.
          items:
            $ref: "#/components/schemas/inline_response_200_329_data_updated_settings"
    inline_response_200_329_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_batch_settings
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_330_data:
      type: object
      properties:
        problem:
          type: string
          description: |-
            A string that describes any errors with the ModSecurity
            rule.

            **Note:**

            The function only returns this value if an error occurred.
          example: |-
            The rule is invalid. Apache returned the following error: AH00526: Syntax error on line 1 of /var/tmp/15500._USR_LOCAL_CPANEL_WHOSTMGR_BIN_XML_API__.gl2t8wZ1.tmp/validate.conf:
            Invalid command ''OWASP'', perhaps misspelled or defined by a module not included in the server configuration
            '
        valid:
          type: integer
          description: |-
            Whether the rule is valid.

            * `1` — Valid rule.
            * `0` — Invalid rule.
          example: 0
          enum:
          - 1
          - 0
    inline_response_200_330_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_check_rule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK Invalid Rule
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_331_data_rule:
      type: object
      properties:
        config:
          type: string
          description: The rule's ModSecurity configuration file.
          example: modsec2.user.conf
        config_active:
          type: integer
          description: |-
            Whether the configuration file is active.

            * `1` — Active.
            * `0` — **Not** active.
          example: 1
          enum:
          - 1
          - 0
        disabled:
          type: integer
          description: |-
            Whether the rule is disabled.

            * `1` — Disabled.
            * `0` — Enabled.
          example: 0
          enum:
          - 1
          - 0
        id:
          minimum: 1
          type: integer
          description: The rule's ID number.
          example: 123456789
        meta_msg:
          type: string
          description: The rule's description.
          example: Rejected request
        rule:
          type: string
          description: The rule's text that includes the new rule ID.
          example: "SecRule REQUEST_URI \"/rejected.php\" \"deny,auditlog,msg:'Rejected\
            \ request',id:'1'\""
        staged:
          type: integer
          description: |-
            Whether the rule is staged.

            * `1` — Staged.
            * `0` — **Not** staged.
          example: 1
          enum:
          - 1
          - 0
        vendor_active:
          type: integer
          description: |-
            Whether the vendor is active.

            * `1` — Active.
            * `0` — **Not** active.
          example: 0
          enum:
          - 1
          - 0
        vendor_id:
          type: string
          description: |-
            The vendor's unique short name.

            **Note:**

            Any rule that does not belong to a vendor rule set will **not**
            return a value.
          example: YourVendor
      description: A list of information about the cloned ModSecurity rule.
    inline_response_200_331_data:
      type: object
      properties:
        rule:
          $ref: "#/components/schemas/inline_response_200_331_data_rule"
    inline_response_200_331_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_clone_rule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_332_data_outcomes:
      type: object
      properties:
        config:
          type: string
          description: |-
            The file path to the configuration file.

            * EasyApache 4 — A valid path, relative to the `/etc/apache2/conf.d/modsec/` directory.
          example: modsec_vendor_configs/MyVendor/one.conf
        exception:
          type: string
          description: |-
            The error message for a failed deployment.

            **Note:**

            The function only returns this output if an error occurs.
          example: |+
            The system could not deploy changes for modsec_vendor_configs/MyVendor/one.conf: The system could not validate the new Apache configuration, because httpd exited with a nonzero value. Apache produced the following error: httpd: Syntax error on line 37 of /usr/local/apache/conf/httpd.conf: Syntax error on line 26 of /usr/local/apache/conf/modsec2.conf: Syntax error on line 27 of /usr/local/apache/conf/modsec2.cpanel.conf: Could not open configuration file /usr/local/apache/conf/modsec_vendor_configs/MyVendor/one.conf: No such file or directory


        ok:
          type: integer
          description: |-
            Whether the rule change deployment succeeded.

            * `1` — Successful deployment.
            * `0` — Unsuccessful deployment.
          example: 0
          enum:
          - 1
          - 0
    inline_response_200_332_data:
      type: object
      properties:
        failed:
          type: array
          description: |-
            The list of configuration files that the system could not deploy.

            **Note:**

            The function **only** returns this value if an error occurs.
          items:
            type: string
            example: modsec_vendor_configs/MyVendor/one.conf
        outcomes:
          type: array
          description: An array of objects containing information about the configuration
            deployment.
          items:
            $ref: "#/components/schemas/inline_response_200_332_data_outcomes"
    inline_response_200_332_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_deploy_all_rule_changes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_333_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_deploy_rule_changes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_334_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_deploy_settings_changes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_335_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_disable_rule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_336_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_disable_vendor
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_337_data_outcomes:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the configuration file is active.

            * `1` — Active.
            * `0` — **Not** active.
          example: 1
          enum:
          - 1
          - 0
        config:
          type: string
          description: "The configuration file path, relative to the `/usr/local/apache/conf/`\
            \ directory."
          example: modsec_vendor_configs/SomeVendor/example.conf
        exception:
          type: string
          description: |-
            If the function fails to disable the configuration file, this
            return contains the error message.

            **Note:**

            This function only returns a value if an error occurred.
          example: This is an error message.
        ok:
          type: integer
          description: |-
            Whether the function successfully disabled the configuration file.

            * `1` — Disabled.
            * `0` — Enabled.
          example: 0
          enum:
          - 1
          - 0
    inline_response_200_337_data:
      type: object
      properties:
        outcomes:
          type: array
          description: An array of objects containing elements that represent the
            outcome of each attempt to disable an operation.
          items:
            $ref: "#/components/schemas/inline_response_200_337_data_outcomes"
    inline_response_200_337_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_disable_vendor_configs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_338_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_disable_vendor_updates
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_339_data_outcomes:
      type: object
      properties:
        config:
          type: string
          description: |-
            The file path to the configuration file.

            * EasyApache 4 — A valid path, relative to the `/etc/apache2/conf.d/modsec/` directory.
          example: modsec_vendor_configs/MyVendor/one.conf
        exception:
          type: string
          description: |-
            The error message for a failed discard.

            **Note:**

             The function only returns this value if an error occurs. The reason for failure.
          example: |
            The system could not remove the file /usr/local/apache/conf/modsec_vendor_configs/MyVendor/one.conf.STAGE: Invalid argument
        ok:
          type: integer
          description: |-
            Whether the system successfully discarded the rule change.

            * `1` — Success.
            * `0` — Failure.
          example: 0
          enum:
          - 1
          - 0
    inline_response_200_339_data:
      type: object
      properties:
        failed:
          type: array
          description: |-
            The list of configuration files that contain changes that the system
            could not discard.

            **Note:**

            The function **only** returns this value if an error occurs.
          items:
            type: string
            format: path
            example: modsec_vendor_configs/MyVendor/one.conf
        outcomes:
          type: array
          description: An array of objects containing information about the discarded
            configuration changes.
          items:
            $ref: "#/components/schemas/inline_response_200_339_data_outcomes"
    inline_response_200_339_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_discard_all_rule_changes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_340_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_discard_rule_changes
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_341_data_rule:
      type: object
      properties:
        disabled:
          type: integer
          description: |-
            Whether the ModSecurity rule is disabled.

            * `1` — Disabled.
            * `0` — Enabled.
          example: 0
          enum:
          - 1
          - 0
        id:
          minimum: 1
          type: integer
          description: The ModSecurity rule's ID.
          example: 1234567
        meta_msg:
          type: string
          description: "The ModSecurity rule's description, if one exists."
          example: ""
        rule:
          type: string
          description: The ModSecurity rule's text.
          example: "SecAction \"pass,id:1234567\""
      description: A list of information about the new ModSecurity rule.
    inline_response_200_341_data:
      type: object
      properties:
        rule:
          $ref: "#/components/schemas/inline_response_200_341_data_rule"
    inline_response_200_341_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_edit_rule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_342_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_enable_vendor
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_343_data_outcomes:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the configuration file is active.

            * `1` — Active.
            * `0` — **Not** active.
          example: 1
          enum:
          - 1
          - 0
        config:
          type: string
          description: "The configuration file path, relative to the `/usr/local/apache/conf/`\
            \ directory."
          example: modsec_vendor_configs/SomeVendor/example.conf
        exception:
          type: string
          description: |-
            If the function fails to enable the configuration file, this return
            contains the error message.

            **Note:**

            The function **only** returns a value if an error occurred.
          example: This is an error message.
        ok:
          type: integer
          description: |-
            Whether the function successfully enabled the configuration file.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_343_data:
      type: object
      properties:
        outcomes:
          type: array
          description: An array of objects containing elements that represent the
            outcome of each attempt to enable operation.
          items:
            $ref: "#/components/schemas/inline_response_200_343_data_outcomes"
    inline_response_200_343_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_enable_vendor_configs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_344_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_enable_vendor_updates
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_345_data:
      type: object
      properties:
        text:
          type: string
          description: The ModSecurity configuration file's contents.
          example: SecRule REQUEST_URI "example" "deny:id:123456789" SecAction "pass:auditlog:id:444444444"
    inline_response_200_345_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_get_config_text
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_346_data_configs:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the configuration file is active.

            * `1` — Active.
            * `0` — **Not** active.

            **Note:**

            The file is active if an include for the configuration file appears
            in the `modsec2.cpanel.conf` file.
          example: 1
          enum:
          - 1
          - 0
        config:
          type: string
          description: "The configuration file's location, relative to the `/usr/local/apache/conf`\
            \ directory."
          example: modsec_vendor_configs/MyVendor/one.conf
        vendor_id:
          type: string
          description: The vendor's unique short name.
          example: MyVendor
    inline_response_200_346_data:
      type: object
      properties:
        configs:
          type: array
          description: An array of objects containing information about ModSecurity
            configuration files.
          items:
            $ref: "#/components/schemas/inline_response_200_346_data_configs"
    inline_response_200_346_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_get_configs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_347_data:
      type: object
      properties:
        configs:
          type: array
          description: An array of strings containing one or more ModSecurity configuration
            files.
          example:
          - modsec2.user.conf
          - modsec2.user1.conf
          - modsec2.user2.conf
          items:
            type: string
    inline_response_200_347_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_get_configs_with_changes_pending
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_348_data:
      type: object
      properties:
        action_desc:
          type: string
          description: The web server's response to the client.
          example: Access denied with code 406 (phase 1).
        file_exists:
          type: integer
          description: |-
            Whether the file in the `meta_file` return exists.

            * `1` — The file exists.
            * `0` — The files does **not** exist.
          example: 1
          enum:
          - 1
          - 0
        handler:
          type: string
          description: This parameter **only** returns the `null` value.
          nullable: true
        host:
          type: string
          description: The virtual host's (vhost) domain name.
          example: server.example.com
        http_method:
          type: string
          description: |-
            The
            [HTTP method](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html)
            that the client used to generate the hit.
          example: GET
        http_status:
          type: integer
          description: |-
            The
            [HTTP status code](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)
            that the web server returned.
          example: 406
        http_version:
          type: string
          description: The HTTP version number.
          example: HTTP/1.1
        id:
          minimum: 1
          type: integer
          description: The line number from the `modsec` database.
          example: 28
        ip:
          type: string
          description: The client's IP address.
          format: ipv4
          example: 10.1.14.77
        justification:
          type: string
          description: The specific criteria from the ModSecurity rule that generated
            the hit.
          example: "Match of \"within %{tx.allowed_methods}\" against \"REQUEST_METHOD\"\
            \ required."
        meta_file:
          type: string
          description: The ModSecurity configuration file with the rule that triggered
            the log entry.
          example: /usr/local/apache/conf/modsec_vendor_configs/OWASP/base_rules/modsecurity_crs_30_http_policy.conf
        meta_id:
          type: integer
          description: The ID of the ModSecurity rule that triggered the log entry.
          example: 960032
        meta_line:
          minimum: 1
          type: integer
          description: The ModSecurity rule's line number that triggered the log entry.
          example: 31
        meta_logdata:
          type: string
          description: The transaction data fragment from the ModSecurity rule's logdata
            action.
          nullable: true
          example: GET
        meta_msg:
          type: string
          description: The human-readable message from the ModSecurity rule's `msg`
            action.
          example: Method is not allowed by policy
        meta_offset:
          type: integer
          description: |-
            The byte offset at which a match occurred within the target data.

            **Note:**

            This data is not always available.
          example: 0
        meta_rev:
          type: integer
          description: The revision number from the ModSecurity rule's `rev` action.
          nullable: true
          example: 2
        meta_severity:
          type: string
          description: The hit severity level from the ModSecurity rule's `severity`
            action.
          nullable: true
          example: CRITICAL
        meta_uri:
          type: string
          description: |-
            The client-requested URI.

            **Note:**

            This data is not always available.
          format: uri
          nullable: true
        path:
          type: string
          description: The accessed file's absolute path and filename.
          example: /favicon.ico
        reportable:
          type: integer
          description: |-
            Whether the system can report the rule to the vendor.

            * `1` — Report the rule to the vendor.
            * `0` — Do **not** report the rule to the vendor.

            **Note:**

            The vendor **must** have configured a report URL in order to
            report a rule.
          example: 1
          enum:
          - 1
          - 0
        timestamp:
          type: string
          description: |-
            When the system recorded the log entry, in `YYYY-MM-DD HH:mm:SS` format.

            **Note:**

            This value uses the server's configured time zone.
          format: ISO-8601 Date Time
          example: 2019-10-13T07:58:04.000Z
        timezone:
          type: integer
          description: "The server's configured timezone, in minutes difference UTC/GMT\
            \ format."
          example: -300
    inline_response_200_348_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_get_log
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_349_data_chunks:
      type: object
      properties:
        config:
          type: string
          description: "The file path to the configuration file, relative to the `/usr/local/apache/conf/`\
            \ directory."
          example: modsec_vendor_configs/SomeVendor/config.conf
        config_active:
          type: integer
          description: |-
            Whether the configuration file is active.

            * `1` — Active.
            * `0` — **Not** active.
          example: 0
          enum:
          - 1
          - 0
        disabled:
          type: integer
          description: |-
            Whether the rule is active.

            * `1` — **Not** Active.
            * `0` — Active.
          example: 0
          enum:
          - 1
          - 0
        id:
          minimum: 1
          type: integer
          description: |-
            The ModSecurity rule's ID number.

            **Note:**

            The function does not always return this parameter.
          example: 662452
        meta_msg:
          type: string
          description: The description of the rule.
          example: Denied dangerous config traffic
        rule:
          type: string
          description: |-
            The rule's text.

            **Note:**

            This return may include multiple directives and comments if they
            are all part of the same rule.
          example: "SecRule REQUEST_FILENAME \"config\" \"deny,id:662452,msg:'Denied\
            \ dangerous config traffic',severity:1,auditlog\""
        staged:
          type: integer
          description: |-
            Whether the system has added the rule to the ModSecurity configuration file.

            * `1` — Rule staged.
            * `0` — Rule **not** staged.
          example: 0
          enum:
          - 1
          - 0
        vendor_active:
          type: integer
          description: |-
            Whether the vendor is active.

            * `1` — Active.
            * `0` — **Not** active.
          example: 0
          enum:
          - 1
          - 0
        vendor_id:
          type: string
          description: The vendor's unique short name.
          example: SomeVendor
    inline_response_200_349_data:
      type: object
      properties:
        chunks:
          type: array
          description: An array of objects that contains elements that represent the
            contents of each configuration file's rules.
          items:
            $ref: "#/components/schemas/inline_response_200_349_data_chunks"
        staged_changes:
          type: integer
          description: |-
            Whether the chunks array includes staged changes that the system has not
            yet added to the ModSecurity configuration file.

            * `1` — Staged changes in output.
            * `0` — **No** staged changes in output.
          example: 0
          enum:
          - 1
          - 0
    inline_response_200_349_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_get_rules
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_350_data_radio_options:
      type: object
      properties:
        name:
          type: string
          description: |-
            The setting name to display to the user. The user's
            [locale](https://go.cpanel.net/locale) may translate this value.
        option:
          type: string
          description: |-
            The setting that the system used to select the setting's state.

            **Note:**

            This value is identical to the string that the client sends in
            as the `state` value when users select the specified setting. In most
            cases, you should **not** display this value to the user. Instead,
            display the `name` value.
    inline_response_200_350_data_settings:
      type: object
      properties:
        default:
          description: The setting's default value.
          oneOf:
          - type: string
          - minimum: 0
            type: integer
        description:
          type: string
          description: |-
            The setting's description. The user's
            [locale](https://go.cpanel.net/locale) may translate this value.
        directive:
          type: string
          description: The setting's Apache® configuration directive.
        engine:
          type: integer
          description: |-
            Whether the setting is an engine directive. If the setting is
            a normal directive, the function does **not** return this value.

            * `1` — Engine directive.
          enum:
          - 1
        missing:
          type: integer
          description: |-
            Whether the setting is missing.

            * `1` — The value is missing.
          enum:
          - 1
        name:
          type: string
          description: The setting's name.
        radio_options:
          type: array
          description: |-
            An array of objects containing the options that the client should
            display, as radio buttons, for this setting in a user interface.

            **Note:**

            The function **only** returns this value when the `type`
            parameter is the `radio` values.
          items:
            $ref: "#/components/schemas/inline_response_200_350_data_radio_options"
        setting_id:
          minimum: 0
          type: integer
          description: The setting ID.
        state:
          type: string
          description: "The setting's current state, if available."
        type:
          type: string
          description: |-
            The form element that the WHM interface uses to display this setting.

            * `text` — WHM users modify this setting via a text box.
            * `radio` — WHM users modify this setting via a radio button.
            * `number` — WHM users modify this setting via a text box that
            only allows numeric values.
          enum:
          - text
          - radio
          - number
        url:
          type: string
          description: The URL of the setting's entry in the ModSecurity reference
            manual.
          format: url
        validation:
          type: array
          description: |-
            A list of validators to apply when updating the state. Use these validators
            to perform frontend validation through your preferred implementation
            methods.

            **Note:**

            The function may represent each validator as either a string or an
            object.

            * When the function represents the validator as a string, no arguments
            exist for the validator.
            * When the function returns the validator as a object, the API may
            also include an argument for the validator.
          items:
            anyOf:
            - type: object
              properties:
                arg:
                  type: string
                  description: The regular expression pattern that is used with the
                    validator identified in the `name` property.
                name:
                  type: string
                  description: |-
                    One of the following validators:

                    * `startsWith` - Check if the updated `state` starts with the pattern passed in `arg`.
                  enum:
                  - startsWith
                  - endsWith
              description: An object that contains the validation rule and arguments.
            - type: string
              description: |-
                One of the following validators:

                * `path` — An instruction to verify whether the user's input is a
                valid path.
                * `honeypotAccessKey` — An instruction to verify whether the user's
                input fits the constraints of an `Http:BL` API access key.
                * `positiveInteger` — An instruction to verify whether the user's
                input is a positive integer.
              enum:
              - path
              - honeypotAccessKey
              - positiveInteger
    inline_response_200_350_data:
      type: object
      properties:
        settings:
          type: array
          description: An array of objects containing ModSecurity global configuration
            settings.
          example:
          - default: "Off"
            description: This setting controls the behavior of the audit engine.
            directive: SecAuditEngine
            engine: 1
            missing: 1
            name: Audit Log Level
            radio_options:
            - name: Log all transactions.
              option: "On"
            - name: Do not log any transactions.
              option: "Off"
            - name: Only log noteworthy transactions.
              option: RelevantOnly
            setting_id: 0
            state: ""
            type: radio
            url: https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secauditengine
          - description: "Specify an external program to pipe transaction log information\
              \ to for additional analysis. The syntax is analogous to the .forward\
              \ file, in which a pipe at the beginning of the field indicates piping\
              \ to an external program."
            directive: SecGuardianLog
            missing: 1
            name: Guardian Log
            setting_id: 6
            state: ""
            type: text
            url: https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secguardianlog
            validation:
            - arg: "[|]"
              name: startsWith
            - path
          items:
            $ref: "#/components/schemas/inline_response_200_350_data_settings"
    inline_response_200_350_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_get_settings
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_351_data_configs:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the configuration is active.

            * `1` — Active.
            * `0` — Inactive.
          example: 1
          enum:
          - 1
          - 0
        config:
          type: string
          description: "The configuration file path, relative to the `/usr/local/apache/conf`\
            \ directory."
          example: modsec_vendor_configs/SAMPLE/slr_rules/modsecurity_crs_46_slr_et_joomla_attacks.conf
        vendor_id:
          type: string
          description: The vendor's unique short name.
          example: SAMPLE
    inline_response_200_351_data_vendors:
      type: object
      properties:
        archive_url:
          type: string
          description: The URL to download the vendor rules.
          format: url
          example: http://www.example.com/SAMPLE_1415038544.zip
        configs:
          type: array
          description: A list of information about the configuration files that the
            vendor provides.
          example:
          - active: 1
            config: modsec_vendor_configs/SAMPLE/modsecurity_crs_10_setup.conf
            vendor_id: SAMPLE
          - active: 0
            config: modsec_vendor_configs/SAMPLE/optional_rules/modsecurity_crs_16_session_hijacking.conf
            vendor_id: SAMPLE
          - active: 1
            config: modsec_vendor_configs/SAMPLE/optional_rules/modsecurity_crs_46_av_scanning.conf
            vendor_id: SAMPLE
          items:
            $ref: "#/components/schemas/inline_response_200_351_data_configs"
        cpanel_provided:
          type: integer
          description: |-
            Whether cPanel & WHM installed the vendor rule set.

            * `1` — Installed.
            * `0` — **Not** installed.
          example: 0
          enum:
          - 1
          - 0
        description:
          type: string
          description: The ModSecurity vendor's description.
          example: A SAMPLE-curated ModSecurity rule set.
        dist_md5:
          type: string
          description: |-
            The download's [MD5](https://en.wikipedia.org/wiki/MD5)
            checksum value.
          example: ffbaa3a7ead8dfaf0b661a729ce6ad3b
        dist_sha512:
          type: string
          description: "The download's [sha512](https://en.wikipedia.org/wiki/SHA-2)\
            \ hash."
          example: b55c09bb1835ed4209f0f3ea4a70d099665363f23d3819c0369be429438d675ba2c749dcefdb85cee682ee0bf485558e67d0b0965fe4799865529d943e8e14cb
        enabled:
          type: integer
          description: |-
            Whether the vendor is enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        in_use:
          minimum: 0
          type: integer
          description: The number of configuration files in the vendor rule set.
          example: 32
        inst_dist:
          type: string
          description: The rule set version's unique identifier.
          example: SAMPLE_1415038544
        installed:
          type: integer
          description: |-
            Whether the vendor is installed.

            * `1` — Installed.
            * `0` — **Not** installed.
          example: 1
          enum:
          - 1
          - 0
        installed_from:
          type: string
          description: The URL to the vendor's metadata file.
          example: http://www.example.com/meta_SAMPLE.yaml
        name:
          type: string
          description: The vendor's name.
          example: SAMPLE ModSecurity Core Rule Set
        path:
          type: string
          description: The full path to the vendor's ModSecurity configuration files.
          example: /usr/local/apache/conf/modsec_vendor_configs/SAMPLE
        report_url:
          type: string
          description: |-
            The URL of the vendor's Report Receiver API endpoint that reports
            problems with the vendor's rules.

            **Note:**

            The function may not always return this parameter.
          format: url
          example: https://www.example.com/report
        supported_versions:
          type: array
          description: A list of the ModSecurity versions that the vendor supports.
          example:
          - 2.9.1
          - 2.9.2
          - 2.9.3
          items:
            type: string
        update:
          type: integer
          description: |-
            Whether the vendor rule set can receive automatic updates.

            * `1` — Can receive automatic updates.
            * `0` — **Cannot** receive automatic updates.
          example: 1
          enum:
          - 1
          - 0
        vendor_id:
          type: string
          description: The vendor's unique short name.
          example: SAMPLE
        vendor_url:
          type: string
          description: The URL of the vendor's website.
          format: url
          example: https://www.example.com/index.php/Category:SAMPLE_ModSecurity_Core_Rule_Set_Project
    inline_response_200_351_data:
      type: object
      properties:
        vendors:
          type: array
          description: An array of objects that represent the list of configured vendors
            on the system.
          items:
            $ref: "#/components/schemas/inline_response_200_351_data_vendors"
    inline_response_200_351_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_get_vendors
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_352_data_data:
      type: object
      properties:
        installed:
          type: integer
          description: |-
            Whether ModSecurity is installed on the server.
            * `1` — Installed.
            * `0` — **Not** installed.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_352_data:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_352_data_data"
    inline_response_200_352_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_is_installed
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_353_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_make_config_active
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_354_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_make_config_inactive
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_355_data:
      type: object
      properties:
        archive_url:
          type: string
          description: The URL to the vendor's rule set archive.
          format: url
          example: https://www.example.com/vendor1.zip
        cpanel_provided:
          type: integer
          description: |-
            Whether WebPros International, LLC provided the vendor.

            * `1` — cPanel-provided.
            * `0` — **Not** cPanel-provided.
          example: 0
          enum:
          - 1
          - 0
        description:
          type: string
          description: The vendor's description.
          example: This is the Vendor1 ModSecurity Core Rule Set.
        dist_md5:
          type: string
          description: "The download's [MD5](https://en.wikipedia.org/wiki/Md5) checksum\
            \ value."
          example: 307cb5320441ebd712e5581d12100dc9
        dist_sha512:
          type: string
          description: "The download's [sha512](https://en.wikipedia.org/wiki/SHA-2)\
            \ hash."
          example: b55c09bb1835ed4209f0f3ea4a70d099665363f23d3819c0369be429438d675ba2c749dcefdb85cee682ee0bf485558e67d0b0965fe4799865529d943e8e14cb
        installed:
          type: integer
          description: |-
            Whether the vendor is installed.

            * `1` — Installed.
            * `0` — **Not** installed.
          example: 1
          enum:
          - 1
          - 0
        installed_from:
          type: string
          description: The vendor's metadata file URL.
          format: url
          example: https://www.example.com/vendor1rules/meta_vendor1.yaml
        name:
          type: string
          description: The vendor's name.
          example: Vendor1 ModSecurity Core Rule Set
        path:
          type: string
          description: The absolute path to the directory that contains the vendor's
            configuration files.
          example: /usr/local/apache/conf/modsec_vendor_configs/vendor1
        report_url:
          type: string
          description: The URL to which the system will send reports.
          format: url
          example: https://waf.example.com/api/cpanel_feedback?source=1&rule_set=1.229
        supported_versions:
          type: array
          description: A list of the ModSecurity versions that the vendor supports.
          example:
          - 2.9.1
          - 2.9.2
          - 2.9.3
          items:
            type: string
        vendor_id:
          type: string
          description: The vendor's unique short name.
          example: vendor1
        vendor_url:
          type: string
          description: The vendor's website URL.
          format: url
          example: http://www.example.com
    inline_response_200_355_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_preview_vendor
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_356_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_remove_rule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_357_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_remove_setting
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_358_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_remove_vendor
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_359_data_hits:
      type: object
      properties:
        action_desc:
          type: string
          description: The web server's response to the client.
          example: Access denied with code 406 (phase 2).
        handler:
          type: string
          description: This parameter only returns a `null` value.
          nullable: true
        host:
          type: string
          description: The virtual host's (vhost) domain name.
          format: domain
          example: example.com
        http_method:
          type: string
          description: |-
            The
            [HTTP method](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html)
            that the client used to generate the hit.
          example: GET
        http_status:
          type: integer
          description: |-
            The
            [HTTP status code](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)
            that the web server returned.
          example: 406
        http_version:
          type: string
          description: The HTTP version number.
          example: HTTP/1.1
        id:
          minimum: 1
          type: integer
          description: The `modsec` database line number.
          example: 794828
        ip:
          type: string
          description: The client's IP address.
          format: ipv4
          example: 10.215.215.236
        justification:
          type: string
          description: The specific criteria from the ModSecurity rule that generated
            the hit.
          example: Unconditional match in SecAction.
        meta_file:
          type: string
          description: The ModSecurity configuration file that contains the rule that
            triggered the log entry.
          example: /usr/local/apache/conf/modsec_vendor_configs/MyVendor/one.conf
        meta_id:
          type: integer
          description: The ID of the ModSecurity rule that triggered the log entry.
          example: 12345694
        meta_line:
          minimum: 1
          type: integer
          description: The line number of the ModSecurity rule that triggered the
            log entry.
          example: 1
        meta_logdata:
          type: string
          description: The transaction data fragment from the ModSecurity rule's `logdata`
            action.
          nullable: true
        meta_msg:
          type: string
          description: The human-readable message from the ModSecurity rule's `msg`
            action.
          nullable: true
          example: Method is not allowed by policy
        meta_offset:
          minimum: 0
          type: integer
          description: |-
            The byte offset at which a match occurred within the target
            data.

            **Note:**

            This data is not always available.
          example: 0
        meta_rev:
          minimum: 1
          type: integer
          description: The revision number from the ModSecurity rule's `rev` action.
          nullable: true
          example: 1
        meta_severity:
          type: string
          description: |-
            The hit severity level from the ModSecurity
            rule's `severity` action.

            * `ALERT`
            * `CRITICAL`
            * `DEBUG`
            * `EMERGENCY`
            * `ERROR`
            * `INFO`
            * `NOTICE`
            * `WARNING`
          nullable: true
          example: CRITICAL
          enum:
          - ALERT
          - CRITICAL
          - DEBUG
          - EMERGENCY
          - ERROR
          - INFO
          - NOTICE
          - WARNING
        meta_uri:
          type: string
          description: |-
            The client-requested URI.

            **Note:**

            This data is not always available.
          format: uri
          nullable: true
        path:
          type: string
          description: "The accessed file's path, relative to the document root."
          example: /something
        timestamp:
          type: string
          description: |-
            The date and time at which the log entry was made.

            **Note:**

            This parameter uses the server's configured time zone.
          format: ISO-8601 Date Time (Space Separated)
          example: 2019-10-13T07:58:04.000Z
        timezone:
          type: string
          description: "The server's configured timezone, in minutes difference from\
            \ UTC/GMT."
          example: "-300"
    inline_response_200_359_data_report:
      type: object
      properties:
        email:
          type: string
          description: The contact email address to send with the error report. This
            allows the rule's vendor to reply to the report directly.
          format: email
          example: john.doe@example.com
        hits:
          type: array
          description: An array of objects containing information about the hit.
          items:
            $ref: "#/components/schemas/inline_response_200_359_data_hits"
        message:
          type: string
          description: A short message that explains the reason for the report.
          example: Hi. We're having some trouble with this rule. It seems to be blocking
            all requests.
        rule_text:
          type: string
          description: The rule text from the configuration file.
          example: |
            SecAction "deny,auditlog,id:'12345694'"
        type:
          type: string
          description: |-
            The report's type.

            **Note:**

            This value does **not** use a specified format. Treat the value as
            freeform text.
          example: false positive
    inline_response_200_359_data:
      type: object
      properties:
        report:
          type: array
          description: An array of objects containing information for the report.
          items:
            $ref: "#/components/schemas/inline_response_200_359_data_report"
    inline_response_200_359_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_report_rule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_360_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_set_config_text
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_361_data_radio_options:
      type: object
      properties:
        name:
          type: string
          description: "The setting name to display to the user. The user's [locale](https://go.cpanel.net/localedocs)\
            \ may translate this value."
          example: Log all transactions.
        option:
          type: string
          description: |-
            The setting that the system used to select the setting's state.

            **Note:**

             This value is identical to the string that the client sends in as `state` value when users select the specified setting. In most cases, you should **not** display this value to the user. Instead, display the `name` value.
          example: "On"
    inline_response_200_361_data:
      type: object
      properties:
        default:
          type: string
          description: The setting's default value.
          example: "1500"
        description:
          type: string
          description: The setting's description.
          example: This setting allows you to define the match limit of the PCRE library.
        directive:
          type: string
          description: The setting's Apache® directive.
          example: SecPcreMatchLimit
        name:
          type: string
          description: The setting's name.
          example: PCRE library match limit
        radio_options:
          type: array
          description: |-
            An array of objects with the options that the client should display, as buttons, for this setting in a user interface.

            **Note:**

             The function **only** returns this array of objects when you set the `type` parameter's value to `radio`.
          items:
            $ref: "#/components/schemas/inline_response_200_361_data_radio_options"
        setting_id:
          minimum: 0
          type: integer
          description: The setting's ID.
          example: 8
        state:
          type: integer
          description: The setting's new state.
          example: 2000
        type:
          type: string
          description: |-
            The type of UI control that the client should use to represent the setting.

            * `text` - WHM users modify this setting via a text box.
            * `radio` - WHM users modify this setting via a radio button.
              - **Note:** If the `type` parameter's value is `radio`, the function also returns the `radio_options` array of objects.
            * `number` - WHM users modify this setting via a text box that only allows numeric values.
          example: text
          enum:
          - text
          - radio
          - number
        url:
          type: string
          description: The URL for the setting's documentation.
          format: url
          example: https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#secpcrematchlimit
        validation:
          type: array
          description: |-
            A validator or array of validators to apply. Use these validators to perform frontend validation through your preferred implementation methods.

            **Note:**

             The function may represent each validator as either a string or an object.
             * When the function represents the validator as a string, no arguments exist for the validator.
             * When the function returns the validator as a object, the API may also include an argument for the validator.
          items:
            anyOf:
            - type: object
              properties:
                arg:
                  description: The regular expression pattern that is used with `name`
                    when the validator checks a user's input.
                  example: "[Ee]xample"
                name:
                  description: The method that determines where the validator should
                    match a pattern in a user's input.
                  example: startsWith
              description: A JSON object string that contains one or more arguments
                for the validator.
            - type: string
              description: |-
                A string that is one of the following values:
                 * `path` - An instruction to verify whether the user's input is a valid path.
                 * `honeypotAccessKey` - An instruction to verify whether the user's input fits the constraints of an `Http:BL` API access key.
                 * `positiveInteger` - An instruction to verify whether the user's input is a positive integer.
              example: positiveInteger
              enum:
              - path
              - honeypotAccessKey
              - positiveInteger
    inline_response_200_361_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_set_setting
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_362_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_undisable_rule
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_363_data_diagnostics_new_configs:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the configuration file is active.

            * `1` — Active.
            * `0` — **Not** active.
          example: 0
          enum:
          - 1
          - 0
        config:
          type: string
          description: "The file path to the configuration file, relative to the `/usr/local/apache/conf/`\
            \ Apache configuration directory."
          example: modsec_vendor_configs/MyVendor/two.conf
        vendor_id:
          type: string
          description: The vendor's unique name.
          example: MyVendor
    inline_response_200_363_data_diagnostics_prev_configs:
      type: object
      properties:
        config:
          type: string
          description: "The file path of the configuration file, relative to the `/usr/local/apache/conf/`\
            \ Apache configuration directory."
          example: modsec_vendor_configs/MyVendor/two.conf
    inline_response_200_363_data_diagnostics:
      type: object
      properties:
        added_configs:
          type: array
          description: A list of the ModSecurity configuration files that the update
            added.
          items:
            type: string
            example: modsec_vendor_configs/MyVendor/three.conf
        deleted_configs:
          type: array
          description: An array of objects containing the ModSecurity configuration
            files that the update removed.
          items:
            type: string
            example: modsec_vendor_configs/MyVendor/one.conf
        new_configs:
          type: array
          description: A complete list of configuration files that the update modified.
          items:
            $ref: "#/components/schemas/inline_response_200_363_data_diagnostics_new_configs"
        prev_configs:
          type: array
          description: A list of configuration files in the old version.
          items:
            $ref: "#/components/schemas/inline_response_200_363_data_diagnostics_prev_configs"
      description: A list of diagnostic information about the update.
    inline_response_200_363_data_vendor:
      type: object
      properties:
        archive_url:
          type: string
          description: The URL to download the vendor rules.
          format: url
          example: http://example.com/update/MyVendor.zip
        cpanel_provided:
          type: integer
          description: |-
            Whether WebPros International, LLC provided the rule set.

            * `1` — Provided by WebPros International, LLC.
            * `0` — Not provided WebPros International, LLC.
          example: 0
          enum:
          - 1
          - 0
        description:
          type: string
          description: The vendor's description.
          example: This is an example of a custom vendor set (updated).
        dist_md5:
          type: string
          description: "The download's [MD5](https://en.wikipedia.org/wiki/MD5) checksum\
            \ value."
          example: ecafce1bf148532250a8d4743a8374d1
        enabled:
          type: integer
          description: |-
            Whether the vendor is enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        inst_dist:
          type: string
          description: The unique identifier for the rule set version.
          example: MyVendor-2
        installed:
          type: integer
          description: |-
            Whether the vendor is installed.

            * `1` — Installed.
            * `0` — **Not** installed.
          example: 1
          enum:
          - 1
          - 0
        installed_from:
          type: string
          description: The URL to the vendor's metadata file.
          format: url
          example: http://example.com/update/meta_MyVendor.yaml
        name:
          type: string
          description: The vendor's name.
          example: My Vendor
        path:
          type: string
          description: The file path to the vendor's ModSecurity configuration files.
          example: /usr/local/apache/conf/modsec_vendor_configs/MyVendor
        report_url:
          type: string
          description: The URL that the vendor uses to receive problem reports.
          format: url
          example: http://example.com/report/
        vendor_id:
          type: string
          description: The vendor's unique short name.
          example: MyVendor
        vendor_url:
          type: string
          description: The URL to the vendor's website.
          format: url
          example: http://example.com/
      description: A list of updated vendor information.
    inline_response_200_363_data:
      type: object
      properties:
        diagnostics:
          $ref: "#/components/schemas/inline_response_200_363_data_diagnostics"
        vendor:
          $ref: "#/components/schemas/inline_response_200_363_data_vendor"
    inline_response_200_363_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: modsec_update_vendor
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_364_data_privileges:
      type: object
      properties:
        acct-summary:
          type: integer
          description: |-
            Allows the user to view an account summary.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        add-pkg:
          type: integer
          description: |-
            Allows the user to create packages.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        add-pkg-ip:
          type: integer
          description: |-
            Allows the user to create packages with dedicated IP addresses.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        add-pkg-shell:
          type: integer
          description: |-
            Allows the user to create packages with shell access.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        all:
          type: integer
          description: |-
            Provides all access privileges to the user.
            * `1` — Enabled.
            * `0` — Disabled.

            **Warning:**

            If this value is set to `1` , the user has `root` access.
          example: 0
          enum:
          - 0
          - 1
        allow-addoncreate:
          type: integer
          description: |-
            Allows the user to create packages with addon domains.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        allow-emaillimits-pkgs:
          type: integer
          description: |-
            Allows the user to create packages with custom email limits.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        allow-parkedcreate:
          type: integer
          description: |-
            Allows the user to create packages with parked domains (aliases).
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        allow-shell:
          type: integer
          description: |-
            Allows the user to create an account with shell access.
            * `1` — Enabled.
            * `0` — Disabled.
        allow-unlimited-bw-pkgs:
          type: integer
          description: |-
            Allows the user to create packages with unlimited bandwidth.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        allow-unlimited-disk-pkgs:
          type: integer
          description: |-
            Allows the user to create packages with unlimited disk space quotas.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        allow-unlimited-pkgs:
          type: integer
          description: |-
            Allows the user to create packages with unlimited values for features (for example, unlimited email accounts).
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        basic-system-info:
          type: integer
          description: |-
            Allows the user to retrieve basic system information.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        basic-whm-functions:
          type: integer
          description: |-
            Whether to give the reseller access to basic cPanel & WHM options.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        clustering:
          type: integer
          description: |-
            Allows the user to configure DNS clusters.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        cors-proxy-get:
          type: integer
          description: |-
            Allows the user to perform Cross-Origin Resource Sharing (CORS) HTTP requests.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        cpanel-api:
          type: integer
          description: |-
            Allows the reseller to execute cPanel [UAPI](https://go.cpanel.net/uapi) functions via WHM.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        cpanel-integration:
          type: integer
          description: |-
            Allows the user to manage how their server and its services connect to other servers and services.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        create-acct:
          type: integer
          description: |-
            Allows the user to create accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        create-dns:
          type: integer
          description: |-
            Allows the user to create DNS zones.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        create-user-session:
          type: integer
          description: |-
            Allows the user to create a new temporary user session for a specified service.
            * `1` — Enabled.
            * `0` — Disabled.

            **Note:**

            This privilege allows an API token user to bypass any restrictions that you set on the API token. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.
          example: 0
          enum:
          - 0
          - 1
        demo-setup:
          type: integer
          description: |-
            Allows the user to enable demo mode on accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        digest-auth:
          type: integer
          description: |-
            Allows the user to manage Digest Authentication support.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        edit-account:
          type: integer
          description: |-
            Allows the user to modify accounts.
            * `1` — Enabled.
            * `0` — Disabled.

            **Warning:**

            This privilege allows circumvention of account creation limits, gives shell access unless explicitly disallowed, and provides access to dedicated IP addresses, among other features.
          example: 0
          enum:
          - 0
          - 1
        edit-dns:
          type: integer
          description: |-
            Allows the user to edit DNS zones.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        edit-mx:
          type: integer
          description: |-
            Allows the user to edit MX entries.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        edit-pkg:
          type: integer
          description: |-
            Allows the user to create and delete packages.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        file-restore:
          type: integer
          description: |-
            Allows the user to restore specific files and directories from a backup.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        generate-email-config:
          type: integer
          description: |-
            Allows the user to generate a mobile configuration profile for an email account.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        kill-acct:
          type: integer
          description: |-
            Allows the user to delete their customers' accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        kill-dns:
          type: integer
          description: |-
            Allows the user to delete DNS zones.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        limit-bandwidth:
          type: integer
          description: |-
            Allows the user to modify bandwidth limits on their accounts.
            * `1` — Enabled.
            * `0` — Disabled.

            **Warning:**

             This will allow circumvention of account package limits if you do not use resource limits.
          example: 0
          enum:
          - 0
          - 1
        list-accts:
          type: integer
          description: |-
            Allows the user to list owned accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        list-pkgs:
          type: integer
          description: |-
            Allows the user to view existing hosting plans (packages).
            * `1` — Enabled.
            * `0` — Disabled.
        locale-edit:
          type: integer
          description: |-
            Allows the user to create and modify locales on the server.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        mailcheck:
          type: integer
          description: |-
            Allows the user to access WHM's [_Mail Troubleshooter_](https://go.cpanel.net/whmdocsMailTroubleshooter) interface (_WHM >> Home >> Mail >> Mail Troubleshooter_).
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        manage-api-tokens:
          type: integer
          description: |-
            Allows the user to manage API tokens.
            * `1` — Enabled.
            * `0` — Disabled.

            **Note:**

            This ACL privilege allows an API token user to bypass any restrictions that you set on the API token.
          example: 0
          enum:
          - 0
          - 1
        manage-dns-records:
          type: integer
          description: |-
            Allows the user to manage DNS records.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        manage-oidc:
          type: integer
          description: |-
            Allows the user to manage external authentication for their accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        manage-styles:
          type: integer
          description: |-
            Allows the user to manage their server's cPanel styles.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        mysql-info:
          type: integer
          description: |-
            Allows the user to retrieve MySQL® database and user data.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        news:
          type: integer
          description: |-
            Allows the user to send news messages to customers' accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        ns-config:
          type: integer
          description: |-
            Allows the user to manage nameservers.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        park-dns:
          type: integer
          description: |-
            Allows the user to park domains within WHM.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        passwd:
          type: integer
          description: |-
            Allows the user to modify passwords for customers' accounts.
            * `1` — Enabled.
            * `0` — Disabled.

            **Note:**

             This privilege allows an API token user to change account passwords and log in with a new password. For more information, read our [Manage API Tokens](https://go.cpanel.net/whmdocsManageasisAPITokens) documentation.
          example: 0
          enum:
          - 0
          - 1
        quota:
          type: integer
          description: |-
            Allows the user to modify disk space quotas for accounts.
            * `1` — Enabled.
            * `0` — Disabled.

            **Warning:**

             This ACL privilege allows circumvention of account package limits if you do not use resource limits.
          example: 0
          enum:
          - 0
          - 1
        rearrange-accts:
          type: integer
          description: |-
            Allows the user to rearrange the locations of customer accounts in order to free up disk space.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        resftp:
          type: integer
          description: |-
            Allows the user to re-sync FTP account passwords.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        restart:
          type: integer
          description: |-
            Allows the user to restart services on the server, such as Apache® or Exim.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        show-bandwidth:
          type: integer
          description: |-
            Allows the user to view the bandwidth usage of accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        ssl:
          type: integer
          description: |-
            Allows the user to manage the SSL certificates installed on domains.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        ssl-buy:
          type: integer
          description: |-
            Allows the user to use WHM's [_Purchase and Install an SSL Certificate_](https://go.cpanel.net/whmdocsPurchaseandInstallanSSLCertificate) interface (_WHM >> Home >> SSL/TLS >> Purchase and Install an SSL Certificate_).
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        ssl-gencrt:
          type: integer
          description: |-
            Allows the user to use the SSL CSR/CRT generator.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        ssl-info:
          type: integer
          description: |-
            Allows the user to view their server's SSL information.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        stats:
          type: integer
          description: |-
            Allows the user to view WHM's [_Server Information_](https://go.cpanel.net/whmdocsServerInformation) interface (_WHM >> Home >> Server Status >> Server Information_).
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        status:
          type: integer
          description: |-
            Allows the user to view WHM's [_Service Status_](https://go.cpanel.net/whmdocsServiceStatus) interface (_WHM >> Home >> Server Status >> Service Status_).
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        suspend-acct:
          type: integer
          description: |-
            Allows the user to suspend customers' accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        thirdparty:
          type: integer
          description: |-
            Allows the user to manage third-party service offerings.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        track-email:
          type: integer
          description: |-
            Allows the user to view reports about email message delivery attempts from their account.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        upgrade-account:
          type: integer
          description: |-
            Allows the user to upgrade and downgrade customers' domain accounts.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
        viewglobalpackages:
          type: integer
          description: |-
            Whether to allow the reseller to use all global packages. For more information, read our [reseller packages](https://go.cpanel.net/resellerpackages) documentation.
            * `1` — Enabled.
            * `0` — Disabled.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_364_data:
      type: object
      properties:
        privileges:
          type: array
          description: "An array of objects that contains the privileges available\
            \ to the user, including any third-party ACL privileges."
          items:
            $ref: "#/components/schemas/inline_response_200_364_data_privileges"
    inline_response_200_364_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: myprivs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_365_data:
      type: object
      properties:
        checked_ip:
          type: string
          description: The local IPv4 address.
          format: ipv4
          example: 192.168.4.10
    inline_response_200_365_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: nat_checkip
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_366_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: nat_set_public_ip
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_367_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: nginxmanager_clear_cache
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_368_data_default:
      type: object
      properties:
        enabled:
          type: integer
          description: |-
            Caching is enabled or disabled.

            **Note:**

            * `1` - Caching is enabled
            * `0` - Caching is disabled
          enum:
          - 0
          - 1
      additionalProperties:
        description: |-
          The default configuration values.

          **Note:**

          The key names are the configuration properties. For more information, read the NGINX Caching documentation.

          [Nginx with Reverse Proxy | cPanel & WHM Documentation](https://go.cpanel.net/nginx-cache-settings)
      description: The default configuration values.
    inline_response_200_368_data_system:
      type: object
      properties:
        enabled:
          description: |-
            Caching is enabled or disabled.

            **Note:**

            * `true` - Caching is enabled
            * `false` - Caching is disabled
            enum:
            - true
            - false
            type: boolean
      additionalProperties:
        description: |-
          The system's configuration values.

          **Note:**

          The key names are the configuration properties. For more information, read the NGINX Caching documentation.

          [Nginx with Reverse Proxy | cPanel & WHM Documentation](https://go.cpanel.net/nginx-cache-settings)
      description: The system's configuration values.
    inline_response_200_368_data:
      properties:
        default:
          $ref: "#/components/schemas/inline_response_200_368_data_default"
        system:
          $ref: "#/components/schemas/inline_response_200_368_data_system"
      example: "{\"default\":{\"enabled\":1,\"inactive_time\":\"60m\",\"levels\":62,\"\
        logging\":0,\"proxy_cache_background_update\":\"on\",\"proxy_cache_lock\"\
        :\"on\",\"proxy_cache_min_uses\":1,\"proxy_cache_revalidate\":\"on\",\"proxy_cache_use_stale\"\
        :\"error timeout http_429 http_500 http_502 http_503 http_504\",\"x_cache_header\"\
        :0,\"zone_size\":\"10m\"},\"system\":{\"enabled\":true,\"inactive_time\":\"\
        60m\",\"levels\":62,\"logging\":false,\"proxy_cache_background_update\":\"\
        on\",\"proxy_cache_lock\":\"on\",\"proxy_cache_min_uses\":1,\"proxy_cache_revalidate\"\
        :\"on\",\"proxy_cache_use_stale\":\"error timeout http_429 http_500 http_502\
        \ http_503 http_504\",\"x_cache_header\":0,\"zone_size\":\"10m\"}}"
    inline_response_200_368_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: nginxmanager_set_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_369_data_config:
      type: object
      properties:
        enabled:
          type: boolean
          description: |-
            Caching is enabled or disabled.

            **Note:**

            * `true` - Caching is enabled
            * `false` - Caching is disabled
          enum:
          - false
          - true
      additionalProperties:
        description: |-
          The user's configuration values.

          **Note:**

          The key names are the configuration properties. For more information, read the NGINX Caching documentation.

          [Nginx with Reverse Proxy | cPanel & WHM Documentation](https://go.cpanel.net/nginx-cache-settings)
      description: The user's configuration values.
    inline_response_200_369_data_users:
      properties:
        config:
          $ref: "#/components/schemas/inline_response_200_369_data_config"
        merged:
          type: integer
          description: |-
            Whether the user's configuration is combined with the system and default configuration values.

            **Note:**

            This value indicates if the function passed the `merge` flag.

            * `1` - The system and default configuration values are combined with the user's configuration values.
            * `0` - The system and default configuration values are not combined with the user's configuration values.
          enum:
          - 1
          - 0
        owner:
          type: string
          description: The reseller who owns this account.
          format: username
        user:
          type: string
          description: The user's name.
          format: username
    inline_response_200_369_data:
      properties:
        users:
          type: array
          description: An array of objects containing the user configurations.
          items:
            $ref: "#/components/schemas/inline_response_200_369_data_users"
      example: "{\"users\":[{\"config\":{\"enabled\":true,\"inactive_time\":\"60m\"\
        ,\"levels\":62,\"logging\":false,\"proxy_cache_background_update\":\"on\"\
        ,\"proxy_cache_lock\":\"on\",\"proxy_cache_min_uses\":1,\"proxy_cache_revalidate\"\
        :\"on\",\"proxy_cache_use_stale\":\"error timeout http_429 http_500 http_502\
        \ http_503 http_504\",\"x_cache_header\":false,\"zone_size\":\"10m\"},\"merged\"\
        :0,\"owner\":\"root\",\"user\":\"cptest1\"},{\"config\":{\"enabled\":true,\"\
        inactive_time\":\"60m\",\"levels\":62,\"logging\":false,\"proxy_cache_background_update\"\
        :\"on\",\"proxy_cache_lock\":\"on\",\"proxy_cache_min_uses\":1,\"proxy_cache_revalidate\"\
        :\"on\",\"proxy_cache_use_stale\":\"error timeout http_429 http_500 http_502\
        \ http_503 http_504\",\"x_cache_header\":false,\"zone_size\":\"10m\"},\"merged\"\
        :0,\"owner\":\"root\",\"user\":\"cptest2\"}]}"
    inline_response_200_370_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: nginxmanager_rebuild_cache_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_371_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: nginxmanager_reset_users_cache_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_372_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: nginxmanager_set_cache_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_373_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: normalize_user_email_configuration
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_374_data:
      type: object
      properties:
        cache_seems_ok_now:
          type: integer
          description: |-
            Whether the system resolved the current error.

            * `1` — Resolved.

            **Note:**

            * The function **only** returns this value if the function succeeds.
            * If the function fails, it **only** returns metadata.
          example: 1
          enum:
          - 1
    inline_response_200_374_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: package_manager_fixcache
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_375_data:
      type: object
      properties:
        content:
          type: array
          description: The most recent build log entries.
          example:
          - line1
          - line2
          - line3
          items:
            type: string
        offset:
          minimum: 0
          type: integer
          description: The last position that the system read in the build log.
          format: bytes
          example: 9672
        still_running:
          type: integer
          description: |-
            Whether the build process is in progress.

            * `1` — In progress.
            * `0` — Complete.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_375_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: package_manager_get_build_log
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_376_data_pkg_dep:
      type: object
      properties:
        conflicts:
          type: array
          description: "A list of the RPM package's conflicts, if any exist."
          example:
          - ea-php55-php-ioncube5
          items:
            type: string
        requires:
          type: array
          description: "A list of the RPM package's requirements, if any exist."
          example:
          - glibc
          - libuuid
          - expat
          - libdb
          - ea-apr
          items:
            type: string
      description: The RPM package's dependencies and conflicts.
    inline_response_200_376_data_packages:
      type: object
      properties:
        architecture:
          type: string
          description: The required system architecture.
          example: x86_64
        license:
          type: string
          description: The RPM package's distribution license.
          example: ASL 2.0
        long_description:
          type: string
          description: A detailed description of the RPM package.
          example: The mission of the Apache Portable Runtime (APR) is to provide
            a\nfree library of C data structures and routines.
        more_info_url:
          type: string
          description: "The RPM package developer's URL, if available."
          format: url
          nullable: true
          example: http://apr.apache.org
        package:
          type: string
          description: The RPM package name.
          example: ea-apr-util
        pkg_dep:
          $ref: "#/components/schemas/inline_response_200_376_data_pkg_dep"
        pkg_group:
          type: string
          description: The RPM package's group.
          example: System Environment/Libraries
        release:
          type: string
          description: The RPM package's cPanel release number.
          example: 7.7.1.cpanel
        repo_name:
          type: string
          description: The repository where the RPM package resides.
          example: NYI
        short_description:
          type: string
          description: A short description of the RPM package.
          example: Apache Portable Runtime Utility library
        size:
          minimum: 1
          type: integer
          description: The RPM package's size.
          example: 214647
        state:
          type: string
          description: |-
            The install state of the RPM package.

            * `installed`
            * `not_installed`
            * `updatable`
          example: updatable
          enum:
          - installed
          - not_installed
          - updatable
        version:
          type: string
          description: The version of the RPM package's software.
          example: 1.6.1
        version_installed:
          type: string
          description: The currently installed version of an RPM package.
          example: 1.6.1-4.4.8.cpanel
        version_latest:
          type: string
          description: The latest available version of an RPM package.
          example: 1.6.1-7.7.1.cpanel
    inline_response_200_376_data:
      type: object
      properties:
        packages:
          type: array
          description: An array of objects containing information about the RPM packages
            on the system.
          items:
            $ref: "#/components/schemas/inline_response_200_376_data_packages"
    inline_response_200_376_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: package_manager_get_package_info
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_377_data:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the process is active.

            * `1` — Active.
            * `0` — Inactive.
          example: 1
          enum:
          - 1
          - 0
    inline_response_200_377_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: package_manager_is_performing_actions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_378_data_packages:
      type: object
      properties:
        package:
          type: string
          description: An RPM package.
    inline_response_200_378_data:
      type: object
      properties:
        packages:
          type: array
          description: An array of objects that contains the RPM packages on the system.
          example:
          - package: MariaDB-client
          - package: MariaDB-common
          items:
            $ref: "#/components/schemas/inline_response_200_378_data_packages"
      description: A list of RPM objects that match the requested `state`.
    inline_response_200_378_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: package_manager_list_packages
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_379_data:
      type: object
      properties:
        install:
          type: array
          description: A list of RPM packages that the system would install if you
            provisioned them as currently selected.
          example:
          - ea-apache24-mod_mpm_event
          - ea-apache24-mod_cgid
          items:
            type: string
        unaffected:
          type: array
          description: A list of unaffected RPM packages.
          example:
          - ea-php70-php-devel
          - ea-php56-runtime
          - ea-php55-php-common
          - ea-apache24-mod_headers
          - ea-php56-php-bcmath
          - ea-php70-php-curl
          - ea-php70-php-xml
          items:
            type: string
        uninstall:
          type: array
          description: A list of RPM packages that the system would uninstall if you
            provisioned them as currently selected.
          example:
          - ea-apache24-mod_cgi
          - ea-apache24-mod_mpm_prefork
          items:
            type: string
        upgrade:
          type: array
          description: A list of RPM packages that the system would upgrade if you
            provisioned them as currently selected.
          example:
          - ea-php56
          items:
            type: string
    inline_response_200_379_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: package_manager_resolve_actions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_380_data:
      type: object
      properties:
        build:
          type: integer
          description: A valid Process ID (PID).
          example: 9717
    inline_response_200_380_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: package_manager_submit_actions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_381_data:
      properties:
        build:
          type: integer
          description: A valid Process ID (PID).
          example: 10111
    inline_response_200_381_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: package_manager_upgrade
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_382_data:
      type: object
      properties:
        payload:
          $ref: "#/components/schemas/Payload"
    inline_response_200_382_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: parse_dns_zone
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_383_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: participate_in_analytics
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_384_data:
      type: object
      properties:
        app:
          type: array
          description: The services for which the system changed the password.
          items:
            type: string
            example: ftp
    inline_response_200_384_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: passwd
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Password changed for user “username”.
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_385_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: pause_transfer_session
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK.
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_386_data_personalization_additionalProperties:
      type: object
      properties:
        reason:
          description: An error message describing the failure if the `success` Boolean
            returns a `0` value.
          format: string
        success:
          type: integer
          description: |-
            Whether the function successfully retrieved the value from
            the server.

            * `1` — Successful.
            * `0` — Unsuccessful.
          enum:
          - 1
          - 0
        value:
          type: string
          description: |-
            The value stored in the field.

            * null — The pair is **not** available in the store.
          nullable: true
      description: |-
        The retrieved NVData information stored on the server.

        **Note:**

        This return's name is based on the keys provided in the `personalization`
        parameter with WHM API 1's `personalization_set` function.
    inline_response_200_386_data_personalization:
      type: object
      properties:
        additionalProperties:
          $ref: "#/components/schemas/inline_response_200_386_data_personalization_additionalProperties"
      description: The NVData keys and values stored on the server.
    inline_response_200_386_data:
      type: object
      properties:
        personalization:
          $ref: "#/components/schemas/inline_response_200_386_data_personalization"
      example: "{\"personalization\":{\"coffee\":{\"reason\":\"OK\",\"success\":1,\"\
        value\":\"hot\"},\"milk\":{\"reason\":\"OK\",\"success\":1,\"value\":\"cold\"\
        }}}"
    inline_response_200_386_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: personalization_get
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_387_data_personalization:
      type: object
      properties:
        reason:
          type: string
          description: The message that describes the failure if the `success` property
            returns `0`.
          example: OK
        success:
          type: integer
          description: |-
            Whether the function successfully saved the value on the server.
            * `1` - Successful.
            * `0` - Unsuccessful.
          example: 1
          enum:
          - 0
          - 1
        value:
          type: string
          description: The value stored in the field or `null` if the property is
            not available in the datastore.
          nullable: true
          example: hot
      description: The name for this property is one of the properties that you provide
        in the personalization parameter.
    inline_response_200_387_data:
      type: object
      properties:
        personalization:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_387_data_personalization"
          description: The saved personalization information on the server.
          example:
            coffee:
              reason: OK
              success: 1
              value: hot
            milk:
              reason: OK
              success: 1
              value: cold
    inline_response_200_387_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: personalization_set
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_388_data_config:
      type: object
      properties:
        base_flag_name:
          type: string
          description: |-
            PHP INI directive or PHP-FPM pool option name.

            **PHP INI directives**

            * `allow_url_fopen` - Treat URLs as files.
            * `disable_functions` - Lists the functions that the system will disable.
            * `doc_root` - The PHP pages' document root.
            * `error_log` - The error log file.
            * `error_reporting` - The errors that the system reports on.
            * `log_errors` - Whether the system will log errors.
            * `short_open_tag` - Whether the system recognizes code between the <? and ?> tags as a PHP source. Pool options- pm_max_children  The maximum number of process pools that the PHP-FPM Master Process will generate to handle requests.

            **Pool options**

            * `pm_max_children` — The maximum number of process pools that the PHP-FPM Master Process will generate to handle requests.
            * `pm_max_requests` - The maximum number of requests that the process pools can receive.
            * `pm_process_idle_timeout` - The amount of time, in seconds, that a pool process will wait for a request.
          example: pm_max_children
        trinary_admin_value:
          type: integer
          description: |-
            Whether the PHP value is a PHP INI directive value (`php_value`), a PHP INI ADMIN value (`php_admin_value`), or a PHP-FPM pool option (`pm_*`).

            * `0` - A PHP-FPM-specific value (pool options).
            * `1` - A PHP INI ADMIN directive. A cPanel account user **cannot** override this directive.
            * `2` - A PHP INI directive. A cPanel account user can override this directive.
          example: 0
          enum:
          - 0
          - 1
          - 2
        value:
          type: string
          description: An argument value for `base_flag_name`.
          example: "5"
    inline_response_200_388_data:
      type: object
      properties:
        config:
          type: array
          description: An array of objects that contains the PHP-FPM configuration
            values.
          example:
          - base_flag_name: short_open_tag
            trinary_admin_value: 1
            value: "on"
          - base_flag_name: log_errors
            trinary_admin_value: 1
            value: "on"
          - base_flag_name: pm_process_idle_timeout
            trinary_admin_value: 0
            value: "10"
          - base_flag_name: error_reporting
            trinary_admin_value: 2
            value: E_ALL & ~E_NOTICE
          - base_flag_name: disable_functions
            trinary_admin_value: 1
            value: "exec,passthru,shell_exec,system"
          - base_flag_name: error_log
            trinary_admin_value: 1
            value: "[% homedir %]/logs/[% scrubbed_domain %].php.error.log"
          - base_flag_name: pm_max_children
            trinary_admin_value: 0
            value: "5"
          - base_flag_name: pm_max_requests
            trinary_admin_value: 0
            value: "20"
          - base_flag_name: allow_url_fopen
            trinary_admin_value: 1
            value: "on"
          - base_flag_name: doc_root
            trinary_admin_value: 1
            value: "[% documentroot %]"
          items:
            $ref: "#/components/schemas/inline_response_200_388_data_config"
    inline_response_200_388_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_fpm_config_get
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_389_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_fpm_config_set
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_390_data:
      type: object
      properties:
        default_accounts_to_fpm:
          type: integer
          description: |-
            Whether PHP-FPM is enabled for a server's new accounts and domains.
            * `1` — PHP-FPM enabled.
            * `0` — PHP-FPM disabled.
          example: 0
          enum:
          - 1
          - 0
    inline_response_200_390_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_get_default_accounts_to_fpm
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_391_data_version_handlers:
      type: object
      properties:
        available_handlers:
          type: array
          description: |-
            The installed PHP handlers.

            * `suphp`
            * `cgi`
            * `dso`
            * `none`
          example:
          - cgi
          - none
          - suphp
          items:
            type: string
            enum:
            - suphp
            - cgi
            - dso
            - none
        current_handler:
          type: string
          description: |-
            The PHP version's handler.

            * `suphp`
            * `cgi`
            * `dso`
            * `none`
          example: suphp
          enum:
          - suphp
          - cgi
          - dso
          - none
        version:
          type: string
          description: |-
            An installed PHP version.

            * `ea-php54`
            * `ea-php55`
            * `ea-php56`
            * `ea-php70`
            * `ea-php71`
            * `ea-php72`
            * `inherit`
            * Any custom PHP package name.

            **Important:**

            We deprecated PHP 5.6 and PHP 7.0 and will remove them in a future version.
            For more information, read our
            [cPanel Deprecation Plan](https://docs.cpanel.net/knowledge-base/cpanel-product/cpanel-deprecation-plan/)
            documentation.
          example: ea-php72
    inline_response_200_391_data:
      type: object
      properties:
        version_handlers:
          type: array
          description: An array of objects containing the available PHP handlers.
          items:
            $ref: "#/components/schemas/inline_response_200_391_data_version_handlers"
    inline_response_200_391_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_get_handlers
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_392_data:
      type: object
      properties:
        domains:
          type: array
          description: |-
            A list of domains or subdomains that obtain their PHP version from
            the PHP configuration.

            **Note:**

            This function does **not** return parked domains.
          example:
          - example.com
          - subdomain.example.com
          - example2.com
          items:
            type: string
    inline_response_200_392_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_get_impacted_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_393_data:
      type: object
      properties:
        versions:
          type: array
          description: |-
            The installed PHP versions.

            - ea-php71
            - ea-php72
            - ea-php73
            - ea-php74
            - Any custom PHP package name.
          items:
            type: string
            example: ea-php74
    inline_response_200_393_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_get_installed_versions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_394_data:
      type: object
      properties:
        old_fpm_flag:
          type: integer
          description: |-
            The status of the preconfigured FPM.
            * `0` — No preconfigured FPM exists.
            * `1` — Preconfigured FPM exists.
            * `2` — Preconfiguration dialogue dismissed.
          example: 2
          enum:
          - 0
          - 1
          - 2
    inline_response_200_394_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_get_old_fpm_flag
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_395_data:
      type: object
      properties:
        version:
          type: string
          description: |-
            The server's default PHP version.
            * `ea-php##`, where `##` represents the major and minor versions of PHP (for example, `ea-php72` represents PHP 7.2).
            * `inherit`
            * Any custom PHP package name.
          example: ea-php56
    inline_response_200_395_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_get_system_default_version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_396_data_php_fpm_pool_parms:
      type: object
      properties:
        pm_max_children:
          minimum: 1
          type: integer
          description: The maximum number of child pages per pool.
          example: 5
        pm_max_requests:
          minimum: 1
          type: integer
          description: The number of possible requests the system allows.
          example: 20
        pm_process_idle_timeout:
          minimum: 1
          type: integer
          description: How long the system remains idle before it kills the FPM child
            process.
          example: 10
      description: Object containing the domain's PHP-FPM parameters.
    inline_response_200_396_data_phpversion_source:
      type: object
      properties:
        domain:
          type: string
          description: The domain the virtual host inherits its PHP version from.
          format: domain
          example: example.com
        system_default:
          type: integer
          description: |-
            Whether the virtual host uses the system's default PHP version.
            * `1` - Uses the system default PHP version.

            **Note:**

              The function **only** returns this value if true.
          example: 1
          enum:
          - 1
    inline_response_200_396_data_versions:
      type: object
      properties:
        account:
          type: string
          description: The account's name.
          format: username
          example: rm3
        account_owner:
          type: string
          description: The account owner's name.
          format: username
          example: root
        documentroot:
          type: string
          description: The virtual host's document root.
          example: /home/example/public_html
        homedir:
          type: string
          description: The virtual host's home directory.
          example: /home/rm3
        is_suspended:
          type: integer
          description: |-
            The virtual host's suspension status.

            **Note:**

            * `1` - Suspended
            * `0` - **Not** suspended.
          example: 0
          enum:
          - 1
          - 0
        main_domain:
          type: integer
          description: |-
            Whether the virtual host is the primary domain.

            **Note:**

            * `1` - The primary domain
            * `0` - **Not** the primary domain
          example: 1
          enum:
          - 1
          - 0
        php_fpm:
          type: integer
          description: |-
            Whether PHP-FPM is enabled.

            * `1` - PHP-FPM enabled.
            * `0` - PHP-FPM **not** enabled.
          example: 1
          enum:
          - 1
          - 0
        php_fpm_pool_parms:
          $ref: "#/components/schemas/inline_response_200_396_data_php_fpm_pool_parms"
        phpversion_source:
          type: array
          properties:
            system_default: {}
          description: How the virtual host determines its PHP version.
          items:
            $ref: "#/components/schemas/inline_response_200_396_data_phpversion_source"
        version:
          type: string
          description: |-
            The virtual host's PHP version.

            * `ea-php72`
            * `ea-php73`
            * `ea-php74`
            * `inherit`
            * Any custom PHP package name.
          example: ea-php72
        vhost:
          type: string
          description: The virtual host's name.
          example: otherchars.rm3.tld
    inline_response_200_396_data:
      type: object
      properties:
        versions:
          type: array
          description: "An array of objects containing the virtual host's suspendend\
            \ status, versions, virtual hosts, and accounts."
          items:
            $ref: "#/components/schemas/inline_response_200_396_data_versions"
    inline_response_200_396_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_get_vhost_versions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_397_data:
      type: object
      properties:
        vhosts:
          type: array
          description: An array of the virtual hosts that use the specified PHP version.
          items:
            type: string
            format: domain
            example: example.com
    inline_response_200_397_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_get_vhosts_by_version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_398_data:
      properties:
        content:
          type: string
          description: The contents of the requested PHP version's `php.ini` file.
          example: "display_errors; Default Value: On; Development Value: On; Production\
            \ Value: Off;"
    inline_response_200_398_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_ini_get_content
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_399_data_directives:
      type: object
      properties:
        default_value:
          type: string
          description: The directive's default value.
          example: "1"
        info:
          type: string
          description: The purpose of the directive.
          example: "This option enables the URL-aware fopen wrappers that enable accessing\
            \ URL object like files. Default wrappers are provided for the access\
            \ of remote files using the ftp or http protocol, some extensions like\
            \ zlib may register additional wrappers."
        key:
          type: string
          description: The directive's name.
          example: allow_url_fopen
        php_ini_mode:
          type: string
          description: |-
            The directive's [PHP_INI mode](http://php.net/manual/en/configuration.changes.modes.php).

            * `PHP_INI_SYSTEM`
            * `PHP_INI_PERDIR`
            * `PHP_INI_ALL`
            * `PHPINI_ONLY`
          example: PHP_INI_SYSTEM
        type:
          type: string
          description: |-
            The type of value that the directive uses.
            * `string`
            * `boolean`
            * `integer`
            * `float`
          example: boolean
          enum:
          - string
          - boolean
          - integer
          - float
        value:
          type: string
          description: The directive's current value.
          example: "On"
    inline_response_200_399_data:
      type: object
      properties:
        directives:
          type: array
          description: An array of directives that are available in the `php.ini`
            file of the selected version of PHP.
          items:
            $ref: "#/components/schemas/inline_response_200_399_data_directives"
    inline_response_200_399_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_ini_get_directives
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_400_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_ini_set_content
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_401_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_ini_set_directives
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_402_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_set_default_accounts_to_fpm
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_403_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_set_handler
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_404_data:
      type: object
      properties:
        success:
          type: integer
          description: |-
            Whether the operation succeeds.
            * `1` — Success.
            * `0` — Failure.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_404_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_set_old_fpm_flag
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_405_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_set_session_save_path
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_406_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_set_system_default_version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_407_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: php_set_vhost_versions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_408_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of checkout URLs. A valid checkout URL.
          items:
            type: string
            example: https://store.cpanel.net/checkout/ssl/1234567
    inline_response_200_408_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: purchase_a_license
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed .Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_409_data:
      type: object
      properties:
        quota_enabled:
          type: integer
          description: |-
            Whether quotas are enabled.
            * 1 - Enabled.
            * 0 - Disabled.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_409_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: quota_enabled
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * 1 - Success
            * 0 - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_410_data_greylist_deferred_entries:
      type: object
      properties:
        accepted_count:
          minimum: 0
          type: integer
          description: The number of times that Greylisting accepted the triplet.
          example: 0
        block_exp_time:
          type: string
          description: The date and time when Greylisting will no longer defer the
            triplet.
          format: ISO-8601 Date Time (Space Separated)
          example: 2015-03-23T12:09:32.000Z
        create_time:
          type: string
          description: The date and time when Greylisting created the triplet.
          format: ISO-8601 Date Time (Space Separated)
          example: 2015-03-23T11:59:32.000Z
        deferred_count:
          minimum: 0
          type: integer
          description: The number of times Greylisting deferred the triplet.
          example: 1
        from_addr:
          type: string
          description: The email address that the system identified as the triplet's
            sender.
          format: email
          example: fromaddress1.com@example.com
        id:
          minimum: 1
          type: integer
          description: The identification number that the system assigned to the triplet.
          example: 45
        must_retry_by:
          type: string
          description: The date and time when Greylisting will no longer accept the
            resent triplet.
          format: ISO-8601 Date Time (Space Separated)
          example: 2015-03-23T15:59:32.000Z
        record_exp_time:
          type: string
          description: The date and time when Greylisting will purge the triplet from
            the database.
          format: ISO-8601 Date Time (Space Separated)
          example: 2015-03-26T11:59:32.000Z
        sender_ip:
          type: string
          description: The IP address that the system identified as the triplet's
            sender.
          format: ipv4
          example: 97.215.255.29
        to_addr:
          type: string
          description: The email address that the system identified as the triplet's
            recipient.
          format: email
          example: toaddress1.com@example.com
    inline_response_200_410_data:
      type: object
      properties:
        greylist_deferred_entries:
          type: array
          description: An object of deferred triplet data.
          items:
            $ref: "#/components/schemas/inline_response_200_410_data_greylist_deferred_entries"
        limit:
          minimum: 0
          type: integer
          description: The number of triplets in the interface.
          example: 20
        offset:
          minimum: 0
          type: integer
          description: The number of triplets to skip from the beginning of the query
            in the interface.
          example: 20
        server_timezone:
          type: string
          description: The standard letter code abbreviation for the time zone.
          example: CDT
        server_tzoffset:
          minimum: 0
          type: integer
          description: The time zone offset in minutes.
          example: 60
        total_rows:
          minimum: 0
          type: integer
          description: The total number of triplets in the database.
          example: 3
    inline_response_200_410_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: read_cpgreylist_deferred_entries
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result` field is `0`.
            This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_411_data_greylist_trusted_hosts:
      type: object
      properties:
        comment:
          maximum: 255
          type: string
          description: The IP address' comment.
          example: Example
        create_time:
          type: string
          description: The date and time when the system added the IP address to the
            _Trusted Hosts_ list.
          format: ISO-8601 Date Time (Space Separated)
          example: 2015-03-24T10:22:38.000Z
        host_ip:
          type: string
          description: The IP address of the host that the system added to the _Trusted
            Hosts_ list.
          format: ipv4
          example: 192.0.2.0
        id:
          minimum: 1
          type: integer
          description: The identification number that the system assigned to the IP
            address.
          example: 19
    inline_response_200_411_data:
      type: object
      properties:
        greylist_trusted_hosts:
          type: array
          description: An array of objects that contain identification information
            for the trusted hosts.
          items:
            $ref: "#/components/schemas/inline_response_200_411_data_greylist_trusted_hosts"
    inline_response_200_411_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: read_cpgreylist_trusted_hosts
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_412_data:
      type: object
      properties:
        ips_in_list:
          type: object
          additionalProperties:
            type: string
            description: |-
              The IP address’s comment.

              **Note:**

              The IP address is the return's name.
            example: A helpful comment about the IP address.
          description: IP address information.
          example:
            "10.1.4.44": A helpful comment about the IP address.
            DEED::1: A helpful comment about the IP address.
        list_name:
          type: string
          description: |-
            The cPHulk list's name.
            * `black`
            * `white`
          example: white
          enum:
          - black
          - white
        requester_ip:
          description: The requester's IP address.
          example: 10.1.4.228
          anyOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        requester_ip_is_whitelisted:
          type: integer
          description: |-
            Whether the requester's IP address exists on cPHulk's whitelist.
            * `1` - The IP address exists on the whitelist.
            * `0` - The IP address does not exist on the white list.
          example: 1
          enum:
          - 0
          - 1
        restart_ssh:
          type: integer
          description: |-
            Whether you must restart `sshd` in order to implement changes.

            * `1` — You **must** restart the `sshd` daemon.
            * `0` — The system will implement changes without a restart.

            **Note:**

            This return **only** appears if `sshd`’s `UseDNS` setting is enabled. Because `UseDNS` and cPHulk are incompatible, the system disables `UseDNS` when you enable cPHulk.
            * `1` - You must restart `sshd`.
            * `0` - The system will implement changes without a restart.
          example: 1
          enum:
          - 0
          - 1
        warning_ip:
          type: string
          description: "A localized warning message, if the requester's IP address\
            \ does not exist on the whitelist."
          example: The IP address is not on the white list.
        warning_ssh:
          type: string
          description: |-
            A message that explains why you must restart `sshd`.

            **Note:**

             This return **only** appears if the `restart_ssh` return's value is `1`.
          example: The system disabled the UseDNS setting for sshd in order to add
            IP addresses to the whitelist. You must restart sshd to implement the
            change.
    inline_response_200_412_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: read_cphulk_records
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_413_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: reboot
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_414_data:
      type: object
      properties:
        configs_built:
          type: array
          description: |-
            list of configuration files that this function rebuilt.

            **Note:**

             The function only returns this value if you call it as the root user.
          items:
            type: string
            example: /etc/dovecot/sni.conf
        success:
          type: integer
          description: |-
            Whether the system rebuilt the configuration files.
            * `1` - The system rebuilt the configuration files.
            * `0` - The system did **not** rebuild the configuration files.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_414_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: rebuild_mail_sni_config
        reason:
          type: string
          description: The `reason` the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_415_data:
      type: object
      properties:
        records:
          type: array
          description: The cPanel accounts that the function rebuilt SSL certificate
            information for.
          items:
            type: string
            format: username
            example: username
    inline_response_200_415_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: rebuilduserssldb
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_416_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: release_outgoing_email
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_417_data:
      type: object
      properties:
        output:
          type: string
          description: The function call's raw HTML output.
          example: |
            Basic credential check…
            Done
        response:
          type: string
          description: The function call's response.
          example: |
            basic credential check
    inline_response_200_417_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_basic_credential_check
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Success
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_418_data_profile_details:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the system uses this profile to access the MySQL server.
            * `1` — Active.
            * `0` — **Not** active.
          example: 0
          enum:
          - 0
          - 1
        cpcloud:
          type: integer
          description: |-
            Whether the remote database profile is a cPanel Cloud deployment.

            * `1` — Is cPanel Cloud.
            * `0` — **Not** cPanel Cloud.
          example: 0
          enum:
          - 0
          - 1
        mysql_host:
          description: The MySQL server's IP address or hostname.
          example: 192.168.0.1
          oneOf:
          - type: string
            format: ipv4
          - type: string
            format: hostname
        mysql_pass:
          type: string
          description: The MySQL server's password.
          example: 12345luggage
        mysql_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The MySQL server's port.
          example: 3306
        mysql_user:
          type: string
          description: The MySQL server's username.
          example: username
        setup_via:
          maxLength: 255
          type: string
          description: A description of the profile data.
          example: Main terminal
      description: An object containing the new profile's data.
    inline_response_200_418_data:
      type: object
      properties:
        profile_details:
          $ref: "#/components/schemas/inline_response_200_418_data_profile_details"
        profile_saved:
          type: string
          description: The new profile's name.
          example: MyProfile
    inline_response_200_418_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_create_profile
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_419_data_profile_details:
      type: object
      properties:
        cpcloud:
          type: integer
          description: |-
            Whether the remote database profile is a cPanel Cloud deployment.

            * `1` — Is cPanel Cloud.
            * `0` — **Not** cPanel Cloud.
          example: 0
          enum:
          - 0
          - 1
        mysql_host:
          description: The MySQL server's IP address or hostname.
          example: 192.168.0.1
          oneOf:
          - type: string
            format: ipv4
          - type: string
            format: hostname
        mysql_pass:
          type: string
          description: The MySQL server's password.
          example: 12345luggage
        mysql_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The MySQL server's port.
          example: 3306
        mysql_user:
          type: string
          description: The MySQL server's username.
          example: username
        setup_via:
          maxLength: 255
          type: string
          description: description of the profile data.
          example: Created via SSH
      description: An object containing the new profile's data.
    inline_response_200_419_data:
      type: object
      properties:
        profile_details:
          $ref: "#/components/schemas/inline_response_200_419_data_profile_details"
        profile_saved:
          type: string
          description: The new profile's name.
          example: MyProfileSSH
    inline_response_200_419_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_create_profile_via_ssh
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_420_data_profile_details:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the system uses this profile to access the MySQL server.
            - 1  Active.
            - 0  Not active.
          example: 0
          enum:
          - 0
          - 1
        mysql_host:
          type: string
          description: The MySQL server's IP address or hostname. A valid IP address
            or hostname.
          example: 192.168.0.1
        mysql_pass:
          type: string
          description: The MySQL server's password. A valid string.
          example: 12345luggage
        mysql_port:
          type: integer
          description: The MySQL server's port. A valid positive integer.
          example: 3306
        mysql_user:
          type: string
          description: The MySQL server's username. A valid string.
          example: username
        setup_via:
          type: string
          description: description of the profile data. A valid string with a maximum
            length of 255 characters.
          example: Main terminal
      description: "hash of the deleted profile's data. This hash includes the name\
        \ , mysql_host , mysql_user , mysql_pass , mysql_port , setup_via , and active\
        \ returns."
    inline_response_200_420_data:
      type: object
      properties:
        profile_deleted:
          type: string
          description: The deleted profile's name. A valid string.
          example: MyProfile
        profile_details:
          $ref: "#/components/schemas/inline_response_200_420_data_profile_details"
    inline_response_200_420_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_delete_profile
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_421_data:
      type: object
      properties:
        activation_job_started:
          minimum: 1
          type: integer
          description: The profile activation's process ID.
          example: 8093
    inline_response_200_421_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_initiate_profile_activation
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_422_data_job_in_progress_steps:
      type: object
      properties:
        end_time:
          type: integer
          description: The time when the process finished.
          format: unix_timestamp
          example: 1432064520
        name:
          type: string
          description: The name of the process.
          example: Updating /root/.my.cnf
        start_time:
          type: integer
          description: The time when the process began.
          format: unix_timestamp
          example: 1432064519
        status:
          type: string
          description: |-
            The process's current status.
            * `DONE` — The process completed successfully.
            * `INPROGRESS` — The process is currently active.
            * `FAILED` — The process failed to complete successfully.
          example: DONE
          enum:
          - DONE
          - INPROGRESS
          - FAILED
    inline_response_200_422_data_job_in_progress:
      type: object
      properties:
        profile_name:
          type: string
          description: The the name of the activated profile.
          example: remote_server
        start_time:
          type: integer
          description: The time when the job started.
          format: unix_timestamp
          example: 1432064519
        status:
          type: string
          description: |-
            The job's current status.
            * `DONE` — The process completed successfully.
            * `INPROGRESS` — The process is currently active.
            * `FAILED` — The process failed to complete successfully.
          example: INPROGRESS
          enum:
          - DONE
          - INPROGRESS
          - FAILED
        steps:
          type: array
          description: An array of objects containing the completed or active processes
            for the current profile activation.
          items:
            $ref: "#/components/schemas/inline_response_200_422_data_job_in_progress_steps"
      description: An object containing the profile activation that is currently in
        progress.
    inline_response_200_422_data_last_job_details_steps:
      type: object
      properties:
        end_time:
          type: integer
          description: The time when the process finished.
          format: unix_timestamp
          example: 1432220941
        name:
          type: string
          description: The name of the process.
        start_time:
          type: integer
          description: The time when the process began.
          format: unix_timestamp
          example: 1432220941
        status:
          type: string
          description: |-
            The process's current status.
            * `DONE` — The process completed successfully.
            * `INPROGRESS` - The process is currently active.
            * `FAILED` - The process failed to complete successfully.
          example: DONE
    inline_response_200_422_data_last_job_details:
      type: object
      properties:
        end_time:
          type: integer
          description: The time when the job finished.
          format: unix_timestamp
          example: 1432220941
        profile_name:
          type: string
          description: The the name of the activated profile.
          example: MyProfile
        start_time:
          type: integer
          description: The time when the job started.
          format: unix_timestamp
          example: 1432064519
        status:
          type: string
          description: |-
            The job's current status.
            * `DONE` — The process completed successfully.
            * `INPROGRESS` — The process is currently active.
            * `FAILED` - The process failed to complete successfully.
          example: DONE
          enum:
          - DONE
          - INPROGRESS
          - FAILED
        steps:
          type: array
          description: An array of objects containing the completed processes for
            the most recent profile activation.
          items:
            $ref: "#/components/schemas/inline_response_200_422_data_last_job_details_steps"
      description: An object containing the most recently completed profile activation's
        data.
    inline_response_200_422_data:
      type: object
      properties:
        job_in_progress:
          $ref: "#/components/schemas/inline_response_200_422_data_job_in_progress"
        last_job_details:
          $ref: "#/components/schemas/inline_response_200_422_data_last_job_details"
    inline_response_200_422_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_monitor_profile_activation
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_423_data_profile_details:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the system uses this profile to access the MySQL server.

            * `1` — The system uses the profile.
            * `0` — The system does **not** use the profile.
          example: 0
          enum:
          - 1
          - 0
        mysql_host:
          type: string
          description: The MySQL server's IP address or hostname.
          oneOf:
          - type: string
            description: A valid IP address.
            format: ipv4
            example: 192.168.0.1
          - type: string
            description: A valid hostname.
            format: hostname
            example: hostname.example.com
        mysql_pass:
          type: string
          description: The MySQL server's password.
          example: 123456luggage
        mysql_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The MySQL server's port number.
          example: 3306
        mysql_user:
          type: string
          description: The MySQL server's username.
          example: username
        setup_via:
          maxLength: 255
          type: string
          description: A description of the MySQL profile data.
          example: Main terminal
      description: An object containing the profile's data.
    inline_response_200_423_data:
      type: object
      properties:
        profile_details:
          $ref: "#/components/schemas/inline_response_200_423_data_profile_details"
        profile_name:
          type: string
          description: The MySQL profile's name.
          example: MyProfile
    inline_response_200_423_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_read_profile
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_424_data_additionalProperties:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the system uses this profile to access the MySQL server.

            * `1` — Accesses the MySQL server.
            * `0` — Does **not** access the MySQL server.
          example: 0
          enum:
          - 1
          - 0
        is_localhost_profile:
          type: integer
          description: |-
            Whether the system's MySQL profile functions with the server's
            local MySQL instance.

            **Note:**

            * `1` — Functions with the local MySQL instance.
            * `0` — Does **not** function with the local MySQL instance.
          example: 1
          enum:
          - 1
          - 0
        mysql_host:
          description: The MySQL server's IP address or hostname.
          oneOf:
          - type: string
            description: A valid hostname.
            format: hostname
            example: hostname.example.com
          - type: string
            description: A valid IP address.
            example: 192.168.0.1
        mysql_pass:
          type: string
          description: The MySQL server's password.
          example: 123456luggage
        mysql_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The MySQL server's port.
          example: 3306
        mysql_user:
          type: string
          description: The MySQL server's username.
          format: username
          example: username
        mysql_version_is_supported:
          type: integer
          description: |-
            Whether the system supports the server's MySQL version.

            * `1` — Supported.
            * `0` — **Not** supported.
          example: 0
          enum:
          - 1
          - 0
        setup_via:
          maxLength: 255
          type: string
          description: A description of the MySQL profile data.
          example: Main terminal
      description: |-
        An object containing the MySQL profile's data.

        **Note:**

        The profile's name is the return's name.
    inline_response_200_424_data:
      type: object
      properties:
        additionalProperties:
          $ref: "#/components/schemas/inline_response_200_424_data_additionalProperties"
      example: "{\"MyProfile\":{\"active\":0,\"is_localhost_profile\":1,\"mysql_host\"\
        :\"192.168.0.1\",\"mysql_pass\":\"123456luggage\",\"mysql_port\":3306,\"mysql_user\"\
        :\"username\",\"mysql_version_is_supported\":0,\"setup_via\":\"Main terminal\"\
        },\"MyProfile2\":{\"active\":0,\"is_localhost_profile\":\"1\",\"mysql_host\"\
        :\"192.168.0.2\",\"mysql_pass\":\"123456luggage\",\"mysql_port\":3306,\"mysql_user\"\
        :\"username\",\"mysql_version_is_supported\":\"0\",\"setup_via\":\"Main terminal\"\
        },\"localhost\":{\"active\":1,\"is_localhost_profile\":1,\"mysql_host\":\"\
        localhost\",\"mysql_pass\":\"#1mpll-C\",\"mysql_port\":3306,\"mysql_user\"\
        :\"root\",\"mysql_version_is_supported\":0,\"setup_via\":\"Auto-Migrated active\
        \ profile\"}}"
    inline_response_200_424_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_read_profiles
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_425_data_profile_details:
      type: object
      properties:
        active:
          type: integer
          description: |-
            Whether the system uses this profile to access the MySQL server.
            * `1` — Active.
            * `0` — Not active.
          example: 0
          enum:
          - 0
          - 1
        mysql_host:
          description: The MySQL server's IP address or hostname.
          example: 192.168.0.1
          oneOf:
          - type: string
            format: ipv4
          - type: string
            format: hostname
        mysql_pass:
          type: string
          description: The MySQL server's password.
          example: 12345luggage
        mysql_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The MySQL server's port.
          example: 3306
        mysql_user:
          type: string
          description: The MySQL server's username.
          example: username
        setup_via:
          maxLength: 255
          type: string
          description: A description of the profile data.
          example: Main terminal
      description: An object containing the updated profile's data.
    inline_response_200_425_data:
      type: object
      properties:
        profile_details:
          $ref: "#/components/schemas/inline_response_200_425_data_profile_details"
        profile_saved:
          type: string
          description: The updated profile's name.
          example: MyProfile
    inline_response_200_425_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_update_profile
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_426_data:
      type: object
      properties:
        profile_validated:
          type: string
          description: The validated profile's name.
          example: MyProfile
    inline_response_200_426_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remote_mysql_validate_profile
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_427_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remove_autossl_user_excluded_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_428_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remove_connected_application
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_429_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system removed the DMARC record.
          example: example.com
        msg:
          type: string
          description: Information about the removed DMARC record.
          example: "[REMOVE:TXT@_dmarc.exmaple.com:v=DMARC1; p=reject;]"
        status:
          type: integer
          description: |-
            Whether the system removed the domain's DMARC record on the DNS server.
            - `1`  — The system removed the domain's DMARC record.
            - `0`  — The system did *not* remove the domain's DMARC record.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_429_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contains information about the DMARC
            records that were removed.
          items:
            $ref: "#/components/schemas/inline_response_200_429_data_payload"
    inline_response_200_429_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remove_dmarc
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_430_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remove_in_progress_exim_config_edit
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Removed OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_431_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remove_integration_group
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_432_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remove_integration_link
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_433_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remove_override_features_for_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_434_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: remove_zone_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_435_metadata_output:
      type: object
      properties:
        raw:
          type: string
          description: The function's raw output.
          example: "\"raw\":\"Running pre removal script (/usr/local/cpanel/scripts/prekillacct)......Done\\\
            nCollecting Domain Name and IP...User: example\\nDomain: example.com\\\
            n...Done\\nLocking account and setting shell to nologin...Locking password\
            \ for user example.\\npasswd: Success\\n...Done\\nKilling all processes\
            \ owned by user......Done\\nRemoving Sessions.........Done\\nRemoving\
            \ Suspended Info.........Done\\nCleaning Virtfs.........Done\\nRemoving\
            \ Web Logs......Done\\nRemoving Bandwidth Files......Done\\nRemoving Email\
            \ Sending Limits Cache......Done\\nRemoving DKIM keys......Done\\nRemoving\
            \ Crontab......Done\\nRemoving HTTP Virtual Hosts...Removed the following\
            \ non-SSL virtual hosts: example.com\\nRemoved the following SSL virtual\
            \ hosts:\\n...Done\\nRemoving ftp Virtual Hosts......Done\\nRemoving user's\
            \ web content directory symlinks......Done\\nRemoving MySQL databases\
            \ and users......Done\\nRemoving PostgreSQL databases and users......Done\\\
            nRemoving User & Group.......Success...Done\\nRemoving DNS Entries...example.com\
            \ => deleted from hostname. \\n...Done\\nRemoving Email Setup...Removing\
            \ /etc/valiases/example.com\\n...Done\\nRemoving mailman lists......Done\\\
            nUpdating Databases......Done\\nRemoving bandwidth limits......Done\\\
            nRemoving Counter Data......Done\\nAdding IP back to the IP address pool...System\
            \ has 2 free ips.\\n...Done\\nRemoving user's cPanel Databases & Updating......Done\\\
            nReloading Services......Done\\nRemoving mail and service configs...\\\
            n...Done\\nSending Contacts......Done\\nUpdating internal databases...Updating\
            \ ftp passwords for example\\nPurging ftp user example\\nFtp password\
            \ files updated.\\nFtp vhost passwords synced\\n...Done\\nRunning post\
            \ removal scripts (/usr/local/cpanel/scripts/legacypostkillacct, /usr/local/cpanel/scripts/postkillacct)......Done\\\
            nAccount Removal Complete!!!...example account removed...Done\\n\""
    inline_response_200_435_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: removeacct
        output:
          $ref: "#/components/schemas/inline_response_200_435_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: example account removed
        result:
          type: integer
          description: |-
            - `1` — Success
            - `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_436_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: removezonerecord
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: |
            Bind reloading on hostname using rndc zone: [example.com]
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_437_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: rename_mysql_database
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_438_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: rename_mysql_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_439_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: rename_postgresql_database
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_440_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: rename_postgresql_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_441_data_hook_order:
      type: object
      properties:
        id:
          type: string
          description: The script hook's ID.
          example: HzEpGvT6QGUYwxuX3hWB8AUq
        weight:
          minimum: 1
          type: integer
          description: "The script hook's weight. The lower the number, the greater\
            \ the priority."
          example: 100
    inline_response_200_441_data:
      type: object
      properties:
        hook_order:
          type: array
          description: A list of the script hook details.
          example:
          - id: HzEpGvT6QGUYwxuX3hWB8AUq
            weight: 100
          - id: UNs8a8IbbAVf5oi_hXbcEw5a
            weight: 200
          items:
            $ref: "#/components/schemas/inline_response_200_441_data_hook_order"
    inline_response_200_441_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: reorder_hooks
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_442_data_reseller_acct:
      type: object
      properties:
        bandwidthlimit:
          type: string
          description: |-
            The account's bandwidth limit.

            * A positive numeric value, encoded as a string, that represents the account's bandwidth limit, in megabytes (MB).
            * `0.00` — The account has unlimited bandwidth.
          example: "500"
        bandwidthused:
          type: string
          description: |-
            The account's current bandwidth use.
            A positive numeric value, encoded as a string, that represents the account's bandwidth use, in megabytes (MB).
          example: "0"
        deleted:
          type: integer
          description: |-
            Whether the account has been deleted.

            * `1` — Deleted.
            * `0` — **Not** deleted.
          example: 0
          enum:
          - 0
          - 1
        diskquota:
          type: string
          description: |-
            The account's disk space quota.

            * A positive numeric value, encoded as a string, that represents the account's disk space quota, in megabytes (MB).
            * `0.00` — The account has unlimited disk space.
          example: "1100.00"
        diskused:
          type: string
          description: |-
            The account's current disk space use.
            A positive numeric value, encoded as a string, that represents the account's current disk space use, in megabytes (MB).
          example: "1.57"
        domain:
          type: string
          description: The account's main domain.
          format: domain
          example: example1.com
        package:
          type: string
          description: The account's hosting plan (package).
          example: default
        suspended:
          type: integer
          description: |-
            Whether the account is suspended.

            * `1` — Suspended.
            * `0` — Not suspended.
          example: 0
          enum:
          - 0
          - 1
        user:
          type: string
          description: The account's username.
          format: username
          example: example1
    inline_response_200_442_data_reseller:
      type: object
      properties:
        acct:
          type: array
          description: |-
            Array of objects that contains data about all of the reseller's accounts.

            **Note:**

            This array also returns the reseller account.
          items:
            $ref: "#/components/schemas/inline_response_200_442_data_reseller_acct"
        bandwidthlimit:
          minimum: 0
          type: integer
          description: |-
            The reseller's total bandwidth limit.

            * A positive integer that represents the reseller's bandwidth limit, in megabytes (MB).
            * `0` — The reseller has unlimited bandwidth.
          example: 0
        bwoverselling:
          type: integer
          description: |-
            Whether the reseller can oversell bandwidth.

            * `1` — The reseller can oversell bandwidth.
            * `0` — The reseller **cannot** oversell bandwidth.
          example: 0
          enum:
          - 0
          - 1
        diskoverselling:
          type: integer
          description: |-
            Whether the reseller can oversell disk space.

            * `1` — The reseller can oversell disk space.
            * `0` — The reseller **cannot** oversell disk space.
          example: 0
          enum:
          - 0
          - 1
        diskquota:
          minimum: 0
          type: integer
          description: |-
            The reseller's total disk space quota.

            * A positive integer that represents the reseller's disk space quota, in megabytes (MB).
            * `0` — The reseller has unlimited disk space.
          example: 0
        diskused:
          type: number
          description: |-
            The total amount of disk space that the reseller and all of its accounts use, in megabytes (MB).

            **Note:**

            This value does not include disk space the reseller account uses if the root account owns it.
          example: 5.69
        month:
          maximum: 12
          minimum: 1
          type: integer
          description: The current month or a queried month.
          example: 2
        totalbwalloc:
          type: string
          description: "The total amount of bandwidth that the reseller has given\
            \ to its accounts, in megabytes (MB), encoded as a string."
          example: "500"
        totalbwused:
          type: string
          description: "The total amount of bandwidth that the reseller's accounts\
            \ have used, in megabytes (MB), encoded as a string."
          example: "0"
        totaldiskalloc:
          type: string
          description: "The total amount of disk space that the reseller has given\
            \ to its accounts, in megabytes (MB), encoded as a string."
          example: "1100"
        user:
          type: string
          description: The reseller account's username.
          format: username
          example: username
        year:
          type: integer
          description: The current year or a queried year.
          example: 2019
      description: Object containing data about a reseller account.
    inline_response_200_442_data:
      type: object
      properties:
        reseller:
          $ref: "#/components/schemas/inline_response_200_442_data_reseller"
    inline_response_200_442_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: resellerstats
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_443_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: reset_autossl_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_444_data_certificate_info:
      type: object
      properties:
        domains:
          type: array
          description: The domains that correspond to the certificate.
          items:
            type: string
            format: domain
            example: example.com
        ecdsa_curve_name:
          type: string
          description: |-
            The ECDSA curve that the certificate's key uses.

            * `prime256v1`
            * `secp384r1`
            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
          enum:
          - prime256v1
          - secp384r1
        ecdsa_public:
          type: string
          description: |-
            The certificate's key's ECDSA compressed public point, in hexadecimal format.

            * `null` — The certificate's key is **not** an ECDSA key.
          nullable: true
        is_self_signed:
          type: integer
          description: |-
            This value indicates whether the certificate is a self-signed certificate.
            * `1` - Certificate is self-signed.
            * `0` - Certificate is **not** self-signed.
          example: 1
          enum:
          - 0
          - 1
        issuer.commonName:
          type: string
          description: The Common Name of the organization that issued the certificate.
          example: example.com
        issuer.organizationName:
          type: string
          description: The organization that generated the certificate.
          example: Writer's Guild of America
        issuer_text:
          type: string
          description: Information about the issuer.
          example: |-
            commonName
            hostname.example.com
            emailAddress
            ssl@hostname.example.com
        key_algorithm:
          type: string
          description: |-
            The certificate's key's algorithm.

            * `rsaEncryption` — RSA.
            * `id-ecPublicKey` — ECDSA.
          example: rsaEncryption
          enum:
          - rsaEncryption
          - id-ecPublicKey
        modulus:
          type: string
          description: |-
            The certificate's key's modulus, in hexadecimal format.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
          example: a673c3b17344664b35f8791f562d3aea6bf4d8faa3ae3fc0a519380fd453964a36677c34d48677ecb7f5ed035df026f5f0f8fbfe21745e52daf1f3b9e58c73f0baefdb709320e2202e7d05250b051a59b30ff1fef22d83d7140c1c81cea314a0890ce8d2226799872181c58a74016c7aaa2cff5ac72b575cecde8f304aa572a2ea03d8b173ab76c6e8cdb9dfd0da81e1119cefd4b8b4dbfbe0e46c7f1ee2fe8b5fd5504e58ccbc0d13b4fa41ecc9ebd0dabe1d1fec5c724f748167e7c0553e997f9b77eb36abce70973f06df151748d41b758de3efd7afa6f2464a1547f5ff158469d96e248be464df9eda0e7ce854a89332a2c1278b17c425368a9604f454db
        modulus_length:
          minimum: 1
          type: integer
          description: |-
            The certificate's key's modulus length, in bits.

            * `null` — The certificate's key is **not** an RSA key.
          nullable: true
          example: 2048
        not_after:
          type: integer
          description: When the certificate expires.
          format: unix_timestamp
          example: 1398805499
        not_before:
          type: integer
          description: The certificate's validation date.
          format: unix_timestamp
          example: 1367269499
      description: Detailed information about the certificate.
    inline_response_200_444_data:
      type: object
      properties:
        certificate:
          type: string
          description: The SSL certificate's contents.
          format: pem-certificate
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDWzCCAkOgAwIBAgIFAiil8fgwDQYJKoZIhvcNAQELBQAwRjEcMBoGA1UEAwwT
            dm01LmRvY3MuY3BhbmVsLm5ldDEmMCQGCSqGSIb3DQEJARYXc3NsQHZtNS5kb2Nz
            LmNwYW5lbC5uZXQwHhcNMTQxMTI0MTg0NDE5WhcNMTUxMTI0MTg0NDE5WjBGMRww
            GgYDVQQDDBN2bTUuZG9jcy5jcGFuZWwubmV0MSYwJAYJKoZIhvcNAQkBFhdzc2xA
            dm01LmRvY3MuY3BhbmVsLm5ldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
            ggEBAKYsBFQaqfz9ggP2uw+Vm4196hDlgZtx/A7cN7ktDkCzztxpQ1Us6zty0DPB
            Km6aMhi8tvfO1/DU8+L2ybmgXXmAvhMjEdBYtiMd7rUVAo4zuPOzwABJzfTq46Wk
            tQiuT9TZ+051ixFLRyz58ke0jAqqQugeZK1d5q1m82lUow3LU3oPhtYiR31ROU4g
            Ht1/p+okMf3T21Bl6lLXQf8EVwUL8c0zrRsLYlhIFGyedaVqoZ47anGFc0U0ZJzw
            BOXnmxbYZY+pExXiNZpxTjUDKgtLvY8CjrHjNgVXSL9S7J8Src4/l7SvKoRjnAit
            KsMh6d/nTC4bukX5FGBph9anoFcCAwEAAaNQME4wHQYDVR0OBBYEFDBzN9RDgdnH
            Hx5x7iUeBDX8qQ3yMB8GA1UdIwQYMBaAFDBzN9RDgdnHHx5x7iUeBDX8qQ3yMAwG
            A1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBACYT6VSDfRxsGIzzoYMlIN9K
            d1pfDqFVFKZecI9M+fc0iAnYYRm5VUpItw5fAoMbrjCL4XMZKImSmkAWc4m9cCDs
            WT4rSEE/Fhv3dUjI3Hg7CFoxwU+Ke+yORsPNCv/9lDjReh9pU120UIttOa1lu9NN
            kT8QcUN0+NAvhj6MTm87VsQBNEpQhddyPuOmtga/zf8HTOcvtbeoRTueVNa4yNvP
            3UI6FLwNWNebzgm5zunahY7svqrTbKkNbQbIFqHrhSZdY5i7+I7Lgi9hfri7nDDk
            l6Dv+Ntm0LKWJNEKuZ8I+QVuJiFIFqF/8Gsqc/8pDuJF3b7UchyqGCXJhnExBR4=
            -----END CERTIFICATE-----
        certificate_info:
          $ref: "#/components/schemas/inline_response_200_444_data_certificate_info"
        service:
          type: string
          description: |-
            The service that the certificate corresponds to.
            * `ftp` - The `ftp` service.
            * `exim` - The `exim` service.
            * `dovecot` - The `dovecot` service.
            * `cpanel` - The `cpanel` service.
          example: ftp
          enum:
          - ftp
          - exim
          - dovecot
          - cpanel
    inline_response_200_444_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: reset_service_ssl_certificate
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_445_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: resetzone
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason `field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_446_data:
      type: object
      properties:
        ip:
          type: string
          description: The domain's IPv4 address.
          format: ipv4
          example: 192.168.0.20
    inline_response_200_446_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: resolvedomainname
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_447_data:
      type: object
      properties:
        output:
          type: string
          description: |-
            The function's raw output.

            **Note:**

            If you call the `queue_task` parameter, this changes the return's output:

            * `1` — Nothing.
            * `0` — A string of raw output.
          example: Waiting for httpd to restart..............finished.\n\nhttpd (/usr/local/apache/bin/httpd
            -k start -DSSL) running as root with PID 21379\nhttpd (/usr/local/apache/bin/httpd
            -k start -DSSL) running as root with PID 21385\n\nhttpd started ok\n
        service:
          type: string
          description: The restarted service.
          example: exim
    inline_response_200_447_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restartservice
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_448_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_config_from_file
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_449_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_config_from_upload
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_450_data_modules:
      type: object
      properties:
        module:
          type: string
          description: The module's name.
        notes:
          type: array
          description: "Notes about the module, if any exist."
          items:
            type: string
        restricted_available:
          type: integer
          description: |-
            Whether the module is available under a
            [restricted restore](https://go.cpanel.net/whmdocsTransferorRestoreacPanelAccount#restricted-restore).

            * `1` — The module is available under a restricted restore.
            * `0` — The module is **not** available under a restricted restore.
          enum:
          - 1
          - 0
        restricted_summary:
          type: array
          description: A description of the module's behavior when the transfer uses
            a restricted restore.
          items:
            type: string
        summary:
          type: array
          description: A description of the module's behavior when the transfer does
            **not** use a restricted restore.
          items:
            type: string
    inline_response_200_450_data:
      type: object
      properties:
        modules:
          type: array
          description: An array of objects containing information about backup configuration
            modules.
          items:
            $ref: "#/components/schemas/inline_response_200_450_data_modules"
      example: "{\"modules\":[{\"module\":\"APITokens\",\"restricted_available\":1,\"\
        summary\":[\"The APITokens module restores the API tokens for an account.\"\
        ]},{\"module\":\"Account\",\"restricted_available\":1,\"restricted_summary\"\
        :[\"Force mode is not available in restricted mode.\"],\"summary\":[\"This\
        \ creates the cPanel account and system user.\"]},{\"module\":\"AuthnLinks\"\
        ,\"restricted_available\":1,\"summary\":[\"This restores the account’s external\
        \ authentication links.\"]},{\"module\":\"AutoSSL\",\"restricted_available\"\
        :1,\"summary\":[\"This restores AutoSSL settings.\"]},{\"module\":\"BackupConfig\"\
        ,\"restricted_available\":1,\"summary\":[\"This installs the backup configuration\
        \ based on the target system’s defaults.\"]},{\"module\":\"BandwidthData\"\
        ,\"restricted_available\":1,\"summary\":[\"This restores the bandwidth data.\"\
        ]},{\"module\":\"CpUser\",\"restricted_available\":1,\"restricted_summary\"\
        :[\"The system discards configuration data that is unknown or that the system\
        \ cannot validate.\"],\"summary\":[\"This restores the cPanel account’s configuration\
        \ data.\"]},{\"module\":\"Cron\",\"restricted_available\":1,\"summary\":[\"\
        This restores crontab entries.\"]},{\"module\":\"CustomLocale\",\"restricted_available\"\
        :0,\"summary\":[\"This restores custom locales.\"]},{\"module\":\"DKIM\",\"\
        restricted_available\":1,\"summary\":[\"This restores DKIM (DomainKeys Identified\
        \ Mail) keys and updates records for the current server.\"]},{\"module\":\"\
        DNSAuthority\",\"restricted_available\":1,\"summary\":[\"This module reports\
        \ whether this system is authoritative for each of the new accounts’ DNS (Domain\
        \ Name System) zones.\"]},{\"module\":\"DNSSEC\",\"restricted_available\"\
        :1,\"summary\":[\"This module restores the DNSSEC keys for an account.\"]},{\"\
        module\":\"DigestShadow\",\"restricted_available\":1,\"summary\":[\"This restores\
        \ password data for digest authentication.\"]},{\"module\":\"Domains\",\"\
        restricted_available\":1,\"restricted_summary\":[\"The system will restore\
        \ subdomains, parked domains, and addon domains if they pass the server’s\
        \ domain creation rules. If the server rejects the restoration of an addon\
        \ domain, it will still create a subdomain associated with that addon domain.\"\
        ],\"summary\":[\"This restores subdomains, parked domains, and addon domains.\"\
        ]},{\"module\":\"FeatureList\",\"restricted_available\":1,\"summary\":[\"\
        This restores the account’s feature list setting.\"]},{\"module\":\"FileProtect\"\
        ,\"restricted_available\":1,\"summary\":[\"This configures the account for\
        \ cPanel FileProtect.\"]},{\"module\":\"Ftp\",\"restricted_available\":1,\"\
        summary\":[\"This restores FTP (File Transfer Protocol) accounts.\"]},{\"\
        module\":\"Homedir\",\"restricted_available\":1,\"restricted_summary\":[\"\
        If the home directory does not already exist, the system will not create it.\"\
        ],\"summary\":[\"This restores the home directory’s contents.\"]},{\"module\"\
        :\"Htaccess\",\"restricted_available\":1,\"summary\":[\"This repairs EasyApache4\
        \ and removes legacy Frontpage entries from .htaccess.\"]},{\"module\":\"\
        IPAddress\",\"restricted_available\":1,\"summary\":[\"This sets up a dedicated\
        \ IP address.\"]},{\"module\":\"Integration\",\"restricted_available\":0,\"\
        summary\":[\"Implementor Error: The summary for this module is missing.\"\
        ]},{\"module\":\"LinkedNodes\",\"restricted_available\":1,\"summary\":[\"\
        This module handles the linked node setup.\"]},{\"module\":\"LinkedNodesSubarchives\"\
        ,\"restricted_available\":1,\"summary\":[\"This module restores linked-node\
        \ configurations when the archive contains linked node data.\"]},{\"module\"\
        :\"LocalConfig\",\"restricted_available\":1,\"summary\":[\"This module updates\
        \ the local user’s configuration.\"]},{\"module\":\"Logs\",\"restricted_available\"\
        :1,\"summary\":[\"This restores service access logs.\"]},{\"module\":\"Mail\"\
        ,\"restricted_available\":1,\"summary\":[\"This resets email quotas to safe\
        \ values and restores email aliases, filters and mail items.\"]},{\"module\"\
        :\"MailFix\",\"restricted_available\":1,\"summary\":[\"This repairs mail permissions\
        \ and upgrades the system to the latest storage methods.\"]},{\"module\":\"\
        MailLimits\",\"restricted_available\":1,\"summary\":[\"This restores any holds\
        \ or suspensions on outgoing messages for a user’s email accounts.\"]},{\"\
        module\":\"MailRouting\",\"restricted_available\":1,\"summary\":[\"This updates\
        \ MX (Mail eXchange) records.\"]},{\"module\":\"MailSync\",\"restricted_available\"\
        :1,\"summary\":[\"This copies any new mail to the local server that the remote\
        \ account received during the transfer.\"]},{\"module\":\"Mailman\",\"restricted_available\"\
        :1,\"summary\":[\"This restores mailing lists.\"]},{\"module\":\"ManualMX\"\
        ,\"restricted_available\":1,\"summary\":[\"This configures the source server’\
        s manual MX entries to send mail to the destination server.\"]},{\"module\"\
        :\"Mysql\",\"restricted_available\":1,\"summary\":[\"This restores MariaDB/MySQL\
        \ databases, users, and grants.\"]},{\"module\":\"MysqlRemoteNotes\",\"restricted_available\"\
        :1,\"summary\":[\"The MysqlRemoteNotes module restores the Remote MySQL comments\
        \ for an account.\"]},{\"module\":\"NobodyFiles\",\"restricted_available\"\
        :1,\"summary\":[\"This restores ownership of files previously owned by the\
        \ “nobody” user in the home directory.\"]},{\"module\":\"OldHomedirs\",\"\
        notes\":[\"Symbolic links for former home directories ensure that applications\
        \ with hard-coded paths continue to work when transferred between servers.\"\
        ],\"restricted_available\":0,\"summary\":[\"This creates symbolic links to\
        \ former home directory paths.\"]},{\"module\":\"Package\",\"notes\":[\"If\
        \ the target server does not have the package that the user has been assigned,\
        \ the system will use the account’s properties to recreate the package.\"\
        ],\"restricted_available\":0,\"summary\":[\"This recreates account packages.\"\
        ]},{\"module\":\"Password\",\"restricted_available\":1,\"summary\":[\"This\
        \ restores the encrypted system password.\"]},{\"module\":\"PostRestoreActions\"\
        ,\"notes\":[\"This module updates system databases and name server IP address\
        \ lists, restarts services, unblocks dynamic content, and runs custom post-restoration\
        \ scripts.\"],\"restricted_available\":1,\"summary\":[\"This runs post-restoration\
        \ actions and cleanups.\"]},{\"module\":\"Postgres\",\"restricted_available\"\
        :0,\"restricted_summary\":[\"PostgreSQL version “8.4” or later is required\
        \ to restore databases in restricted mode.\"],\"summary\":[\"This restores\
        \ PostgreSQL databases, users, and grants.\"]},{\"module\":\"PreRestoreActions\"\
        ,\"notes\":[\"This module temporarily lifts the account’s quota and runs custom\
        \ pre-restoration scripts.\"],\"restricted_available\":1,\"summary\":[\"This\
        \ performs pre-restoration actions and cleanups.\"]},{\"module\":\"ProxySubdomains\"\
        ,\"notes\":[\"This module ensures that service subdomains such as “cpanel”\
        , “cpcalendars”, and “cpcontacts” are configured properly.\"],\"restricted_available\"\
        :1,\"summary\":[\"This restores service subdomains.\"]},{\"module\":\"PublicContact\"\
        ,\"restricted_available\":1,\"summary\":[\"This restores the account’s public\
        \ contact data.\"]},{\"module\":\"PublicHtmlSymlinks\",\"notes\":[\"Symbolic\
        \ links for former web root directories ensure that applications with hard-coded\
        \ paths will continue to work when transferred between servers.\"],\"restricted_available\"\
        :1,\"restricted_summary\":[\"The system does not recreate symbolic links outside\
        \ of the account’s home directory in restricted mode.\"],\"summary\":[\"This\
        \ creates symbolic links to former web root directory paths.\"]},{\"module\"\
        :\"PublishZones\",\"restricted_available\":1,\"summary\":[\"This module ensures\
        \ all zones have been synced out and reloaded across the DNS (Domain Name\
        \ System) cluster.\"]},{\"module\":\"Quota\",\"restricted_available\":1,\"\
        summary\":[\"This restores the account’s data storage quota.\"]},{\"module\"\
        :\"Reseller\",\"notes\":[\"This restores all of the privileges the account\
        \ previously had. This includes the “all” privilege, which is equivalent to\
        \ root access.\"],\"restricted_available\":0,\"summary\":[\"This restores\
        \ reseller privileges.\"]},{\"module\":\"ResyncHomedir\",\"restricted_available\"\
        :1,\"restricted_summary\":[\"If the home directory does not already exist,\
        \ the system will not create it.\"],\"summary\":[\"This module will resynchronize\
        \ the home directory from the source server. The module preserves any changes\
        \ that occurred during the transfer.\"]},{\"module\":\"Roundcube\",\"restricted_available\"\
        :1,\"summary\":[\"This restores Roundcube configuration and preferences.\"\
        ]},{\"module\":\"SPF\",\"restricted_available\":1,\"summary\":[\"This restores\
        \ SPF (Sender Policy Framework) records and updates them for the target server.\"\
        ]},{\"module\":\"SSL\",\"restricted_available\":1,\"summary\":[\"This restores\
        \ SSL (Secure Sockets Layer) keys, certificates, and virtual host entries.\"\
        ]},{\"module\":\"ServiceProxy\",\"restricted_available\":1,\"summary\":[\"\
        This module sets up applicable service proxying to the destination servers.\"\
        ]},{\"module\":\"Shell\",\"restricted_available\":1,\"restricted_summary\"\
        :[\"In restricted mode, the system will set any account that requests a shell\
        \ other than “noshell” or “jailshell” to use “jailshell”.\"],\"summary\":[\"\
        This restores the account’s shell.\"]},{\"module\":\"SpamAssassin\",\"restricted_available\"\
        :0,\"summary\":[\"This module will disable SpamAssassin for the restored user\
        \ if they had it enabled at the source.\"]},{\"module\":\"Subaccount\",\"\
        restricted_available\":0,\"summary\":[\"Implementor Error: The summary for\
        \ this module is missing.\"]},{\"module\":\"Suspend\",\"restricted_available\"\
        :1,\"restricted_summary\":[\"The system will not restore the suspension reason\
        \ or old shell for the account and instead will use a default.\"],\"summary\"\
        :[\"This module will suspend the restored user if they were suspended at the\
        \ source.\"]},{\"module\":\"Unsuspend\",\"restricted_available\":1,\"summary\"\
        :[\"This unsuspends .htaccess files.\"]},{\"module\":\"VhostIncludes\",\"\
        restricted_available\":0,\"summary\":[\"This restores custom virtual host\
        \ includes.\"]},{\"module\":\"Vhosts\",\"restricted_available\":1,\"summary\"\
        :[\"This module installs the web server configuration and restarts the web\
        \ server.\"]},{\"module\":\"WebCalls\",\"restricted_available\":1,\"summary\"\
        :[\"This module restores the account’s web call data.\"]},{\"module\":\"WebDiskHomedir\"\
        ,\"restricted_available\":1,\"summary\":[\"This rewrites web disk home directories\
        \ to the correct location on the new server.\"]},{\"module\":\"ZoneFile\"\
        ,\"restricted_available\":1,\"summary\":[\"This restores custom DNS (Domain\
        \ Name System) Zone entries.\"]},{\"module\":\"userdata\",\"restricted_available\"\
        :1,\"restricted_summary\":[\"Restricted Restore does not restore the entire\
        \ userdata file; instead, the system will create a new one and copy in certain\
        \ information. Customizations to the userdata file in the archive will not\
        \ be in the newly-created userdata file.\"],\"summary\":[\"This restores website\
        \ configuration (userdata).\"]}]}"
    inline_response_200_450_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_modules_summary
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_451_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_activate
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Restore queue processing initiated
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_452_data:
      type: object
      properties:
        queue_id:
          type: string
          description: The process's internal task queue ID.
          example: 3b99QG5fp99tdL5
    inline_response_200_452_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_add_task
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_453_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_clear_all_completed_tasks
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_454_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_clear_all_failed_tasks
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_455_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_clear_all_pending_tasks
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_456_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_clear_all_tasks
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_457_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_clear_completed_task
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_458_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_clear_pending_task
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_459_data:
      type: object
      properties:
        is_active:
          type: integer
          description: |-
            Whether the restoration queue is actively processing tasks.

            * `1` — Currently active.
            * `0` — **Not** currently active.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_459_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_is_active
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_460_data_options:
      type: object
      properties:
        destid:
          type: string
          description: The backup location from which to restore the data.
          example: local
        give_ip:
          type: integer
          description: |-
            Whether the task will assign the account a dedicated IP address.

            * `1` — Assign.
            * `0` — Will **not** assign.
          example: 1
          enum:
          - 0
          - 1
        mail_config:
          type: integer
          description: |-
            Whether the function will restore the account's email configuration.

            * `1` — Restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 0
          - 1
        mysql:
          type: integer
          description: |-
            Whether the task will restore the account's MySQL® databases.

            * `1` — Restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 0
          - 1
        subdomains:
          type: integer
          description: |-
            Whether the function will restore the account's subdomains.

            * `1` — Restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 0
          - 1
      description: A list of information about an active task in the restoration queue.
    inline_response_200_460_data_restore_job:
      type: object
      properties:
        options:
          $ref: "#/components/schemas/inline_response_200_460_data_options"
        restore_point:
          type: string
          description: "The date of the backup that the task will use, in `YYYY-MM-DD`\
            \ format."
          format: ISO-8601 Date
          example: 2019-10-21T00:00:00.000Z
        user:
          type: string
          description: The cPanel account's username.
          example: username
    inline_response_200_460_data:
      type: object
      properties:
        restore_job:
          type: array
          description: An array of objects that contain information about an active
            task in the restoration queue.
          items:
            $ref: "#/components/schemas/inline_response_200_460_data_restore_job"
    inline_response_200_460_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_list_active
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_461_data_restore_job_options:
      type: object
      properties:
        destid:
          type: string
          description: |-
            The destination's identification string.
            * `local` — The local directory.
            * The destination ID string's value.
          example: LmTZCUpqqLSPH8AO7pVtIeNK
        give_ip:
          type: integer
          description: |-
            Whether the task assigned the account a dedicated IP address.
            * `1` - Assigned.
            * `0` - Did **not** assign.
          example: 1
          enum:
          - 0
          - 1
        mail_config:
          type: integer
          description: |-
            Whether the function restored the account's email configuration.
            * `1` - Restored.
            * `0` - Did **not** restore.
          example: 1
          enum:
          - 0
          - 1
        mysql:
          type: integer
          description: |-
            Whether the task restored the account's MySQL® databases.
            * `1` - Restored.
            * `0` - Did **not** restore.
          example: 1
          enum:
          - 0
          - 1
        subdomains:
          type: integer
          description: |-
            Whether the function restored the account's subdomains.
            * `1` - Restored.
            * `0` - Did **not** restore.
          example: 1
          enum:
          - 0
          - 1
      description: An object that contains information about the task's options.
    inline_response_200_461_data_restore_job:
      type: object
      properties:
        options:
          $ref: "#/components/schemas/inline_response_200_461_data_restore_job_options"
        restore_point:
          type: string
          description: The date of the backup that the task used.
          format: ISO-8601 Date
          example: 2015-10-21T00:00:00.000Z
        user:
          type: string
          description: The cPanel account's username.
          format: username
          example: username
      description: An object that contains the task's settings.
    inline_response_200_461_data_status_info:
      type: object
      properties:
        altered_items:
          type: integer
          description: The number of items that the restoration process changed.
          nullable: true
          example: 1
        dangerous_items:
          type: integer
          description: The number of items in the restoration process that may cause
            problems on the account.
          nullable: true
          example: 1
        finished:
          type: string
          description: The time that the restoration process completed this task.
          format: unix_timestamp
          example: "1355840823"
        log:
          type: string
          description: The task's log information.
          example: "Extracting Domain....Done Done Restoring cpanel user config file\
            \ Done Restoring reseller packages and features (if any) Restoring reseller\
            \ privs (if any) Restoring Locale Setting Restoring SSL keys and Certificates\
            \ Done Restoring frontpage (if installed) Done Restoring access logs....\
            \ Done Restoring domain keys.... Done Restoring MySQL databases.... Database\
            \ \"cptmpdb_azri8qf8_0KuzT3yEH7JFeeSi\" dropped Done Successful creation\
            \ of roundcube cp_schema_version table Initial run through schema migration:\
            \ from '0.2b' to '0.8.4' Please ignore non-fatal warnings, such as duplicate\
            \ keys, columns, indexes, or tables already existing. Successfully saved\
            \ version 0.8.4 to cp_schema_version table DBD::mysql::st execute failed:\
            \ Table 'cptmpdb_azri8qf8_7WIKvg175f2M02yn.users' doesn't exist at /usr/local/cpanel/Cpanel/Email/RoundCube/DBI.pm\
            \ line 503, line 1. DBD::mysql::st execute failed: Table 'cptmpdb_azri8qf8_7WIKvg175f2M02yn.users'\
            \ doesn't exist at /usr/local/cpanel/Cpanel/Email/RoundCube/DBI.pm line\
            \ 503, line 1. Transfer failed from temp database to Roundcube database.\
            \ Done Done Restoring MySQL privs Done Reloading MySQL Done Restoring\
            \ PostgreSQL databases.... ERROR: role \"azri8qf8\" already exists Restoring\
            \ PostgreSQL privs Done Restoring Mailman lists Done Restoring Mailman\
            \ Archives Done Restoring shell Current shell /usr/local/cpanel/bin/noshell\
            \ is up to date. Done Restoring password Password for azri8qf8 has been\
            \ changed Done Restoring proftpd file Done Resyncing FTP Passwords Updating\
            \ ftp passwords for azri8qf8Ftp password files updated.Ftp vhost passwords\
            \ syncedDone Linking old home directories Parsing Domain Databases ...Subdomains......ParkedDomains......AddonDomains...\
            \ Restoring Domains Restoring Bandwidth Data Done Restoring Counter Data\
            \ Restoring Homedir.... Done Doing fileprotect conversion Restoring nobody\
            \ owned files Done Restoring Mail files Done Restoring userdata.... Done\
            \ Restoring custom virtualhost templates.... Converting email to cPanel\
            \ 5+ (if needed) Done Cleaning up filters (if needed) vfilter converter\
            \ v3.0Updating vfilter files to latest format.Running for azri8qf8 only\
            \ (force=0) (has_spam_acl=0)Processing azri8qf8......DoneDone Fixing mail\
            \ permissions Done Restoring crontab Done Converting to maildir if needed\
            \ Done Restoring Dns Zones Restoring zone: 28-ps1n25d.test.db Zone updates:\
            \ 28-ps1n25d.test Adding missing subdomain DNS entries (if needed) Update\
            \ Proxy subomains Adding proxy subdomains for domain 28-ps1n25d.test.28-ps1n25d.test\
            \ [28-ps1n25d.test, 10.215.215.229, no changes needed]Done Updating SPF\
            \ Records Done Restoring quota Done Update mail routing LOCAL MAIL EXCHANGER:\
            \ This server will serve as a primary mail exchanger for 28-ps1n25d.test's\
            \ mail.: This configuration has been manually selected. Done Rebuilding\
            \ Apache Conf Built /usr/local/apache/conf/httpd.conf OK Restore Complete\
            \ Account Restore Complete Unlocking password for user azri8qf8.passwd:\
            \ Success."
        restore_logfile:
          type: string
          description: The restoration log file's name.
          example: item-RESTORE_AccountLocal_example
        result:
          type: integer
          description: |-
            Whether the task completed successfully.
            * `1` - Success.
            * `0` - Failure.
            * `2` - Warning.
          example: 1
          enum:
          - 0
          - 1
          - 2
        skipped_items:
          type: integer
          description: The number of items that the restoration process skipped.
          nullable: true
          example: 1
        started:
          type: string
          description: The restoration process's start time for this task.
          format: unix_timestamp
          example: "1355840811"
        transfer_session_id:
          type: string
          description: The restoration transfer session's ID.
          example: userbackup20200406154758JqBa
        warnings:
          type: array
          description: Any warnings about the restoration process.
          nullable: true
          items:
            type: string
      description: An object that contains information about the task's status.
    inline_response_200_461_data_restore_job_1:
      type: object
      properties:
        restore_job:
          $ref: "#/components/schemas/inline_response_200_461_data_restore_job"
        status_info:
          $ref: "#/components/schemas/inline_response_200_461_data_status_info"
    inline_response_200_461_data:
      type: object
      properties:
        restore_job:
          type: array
          description: An array of objects that contain information about a completed
            task in the restoration queue.
          items:
            $ref: "#/components/schemas/inline_response_200_461_data_restore_job_1"
    inline_response_200_461_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_list_completed
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_462_data_options:
      type: object
      properties:
        destid:
          type: string
          description: |-
            The destination's identification string.

            * `local` — The local directory.
            * The destination ID string's value.
          example: LmTZCUpqqLSPH8AO7pVtIeNK
        give_ip:
          type: integer
          description: |-
            Whether the task will assign the account a dedicated IP address.

            * `1` — Assign.
            * `0` — Will **not** assign.
          example: 1
          enum:
          - 0
          - 1
        mail_config:
          type: integer
          description: |-
            Whether the function will restore the account's email configuration.

            * `1` — Restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 0
          - 1
        mysql:
          type: integer
          description: |-
            Whether the task will restore the account's MySQL® databases.

            * `1` — Restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 0
          - 1
        subdomains:
          type: integer
          description: |-
            Whether the function will restore the account's subdomains.

            * `1` — Restore.
            * `0` — Will **not** restore.
          example: 1
          enum:
          - 0
          - 1
      description: A list of information about the options for a pending task in the
        restoration queue.
    inline_response_200_462_data_restore_job:
      type: object
      properties:
        options:
          $ref: "#/components/schemas/inline_response_200_462_data_options"
        restore_point:
          type: string
          description: "The date of the backup that the task will use, in `YYYY-MM-DD`\
            \ format."
          format: ISO-8601 Date
          example: 2015-10-21T00:00:00.000Z
        user:
          type: string
          description: The cPanel account's username.
          example: username
    inline_response_200_462_data:
      type: object
      properties:
        restore_job:
          type: array
          description: An array of objects that contain information about a pending
            task in the restoration queue.
          items:
            $ref: "#/components/schemas/inline_response_200_462_data_restore_job"
    inline_response_200_462_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_list_pending
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_463_data:
      type: object
      properties:
        active:
          type: array
          description: An array of objects containing restoration queue items that
            the system is actively processing.
          items:
            $ref: "#/components/schemas/restorePoint"
        completed:
          type: array
          description: An array of objects containing restoration queue items that
            the system has already processed.
          items:
            $ref: "#/components/schemas/restorePoint"
        is_active:
          type: integer
          description: |-
            Whether the restoration queue is actively processing a task.

            * `1` — The restoration queue is processing a task.
            * `0` — The restoration queue is **not** processing a task.
          example: 0
          enum:
          - 0
          - 1
        pending:
          type: array
          description: An array of objects containing restoration queue items that
            the system will process next.
          items:
            $ref: "#/components/schemas/restorePoint"
      example: "{\"active\":[{\"options\":{\"give_ip\":1,\"mail_config\":1,\"mysql\"\
        :1,\"subdomains\":1},\"restore_point\":\"2019-10-21T00:00:00.000Z\",\"user\"\
        :\"username\"}],\"completed\":[{\"options\":{\"give_ip\":1,\"mail_config\"\
        :0,\"mysql\":1,\"subdomains\":0},\"restore_point\":\"2019-10-22T00:00:00.000Z\"\
        ,\"user\":\"username\"}],\"is_active\":1,\"pending\":[{\"options\":{\"give_ip\"\
        :0,\"mail_config\":1,\"mysql\":0,\"subdomains\":1},\"restore_point\":\"2019-10-23T00:00:00.000Z\"\
        ,\"user\":\"username\"}]}"
    inline_response_200_463_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restore_queue_state
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_464_metadata_output:
      properties:
        raw:
          type: string
          description: An output message that may contain long HTML.
          example: |-
            Extracting tarball...................
            Done<br />
            Extracting Domain....Done<br />
            Done<br />
            <br /><br />Restoring cpanel user config fileDone<br />
            <br />Restoring reseller privs (if any)<br />Restoring Locale Setting<br />Restoring SSL keys and CertificatesDone<br />
            <br />Restoring frontpage (if installed)Done<br />
            <br />Restoring access logs....
            Done<br />
            <br /><br />Restoring domain keys....
            Done<br />
            <br /><br />Restoring DB MAP File....
            Done<br />
            <br /><br /><span class="b2">Restoring PostgreSQL databases....</span>
            Restoring PostgreSQL privs<!--
            -->
            Done<br />
            <br />Restoring Mailman listsDone<br />
            <br />Restoring Mailman ArchivesDone<br />
            <br />Restoring shell<blockquote><pre>Current shell /bin/bash is up to date.
            </pre></blockquote>Done<br />
            <br />Restoring password<blockquote><pre></pre></blockquote>Done<br />
            <br />Restoring proftpd fileDone<br />
            <br />Resyncing FTP Passwords<blockquote><pre>Updating ftp passwords for userFtp password files updated.Ftp vhost passwords synced</pre></blockquote>Done<br />
            <br />Linking old home directories<br />Parsing Domain Databases...ParkedDomains......AddonDomains...<br />Restoring Domains<br />
            <br />Restoring Bandwidth DataDone
            <br />Restoring Counter Data<pre></pre><br />Restoring Homedir....<blockquote><pre></pre></blockquote>Done<br />
            <br />Doing fileprotect conversion<br />Restoring nobody owned filesDone<br />
            <br />Restoring Mail filesDone<br />
            <br />Restoring userdata....
            Done<br />
            <br /><br />Restoring custom virtualhost templates....
            Converting email to cPanel 5+ (if needed)<blockquote><pre></pre></blockquote>Done<br />
            <br />Cleaning up filters (if needed)<blockquote><pre>vfilter converter v3.0Updating vfilter files to latest format.Running for user only (force=0) (has_spam_acl=1)Processing user......Done</pre></blockquote>Done<br />
            <br />Fixing mail permissions<blockquote><pre></pre></blockquote>Done<br />
            <br />Restoring crontabDone<br />
            Converting to maildir if needed<blockquote><pre></pre></blockquote>Done<br />
            Restoring Dns Zones<blockquote><pre>Restoring zone: user.com.db
            </pre></blockquote><br />Adding missing subdomain DNS entries (if needed)<pre></pre><br />Update Proxy subomains<blockquote><pre>Adding proxy subdomains for domain example.com.Records Installed</pre></blockquote>Done<br />
            <br />Updating SPF Records<blockquote><pre></pre></blockquote>Done<br />
            <br />Restoring quota<blockquote><pre></pre></blockquote>Done<br />
            <br /><br />Update mail routing<blockquote><pre>LOCAL MAIL EXCHANGER: This server will serve as a primary mail exchanger for example.com's mail.: This configuration has been manually selected.
            </pre></blockquote>Done<br />
            <br />Rebuilding Apache Conf<br />Restore CompleteAccount Restore Complete
            Unlocking password for user user.passwd: Success.<br />
    inline_response_200_464_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restoreaccount
        output:
          $ref: "#/components/schemas/inline_response_200_464_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_465_data:
      type: object
      properties:
        cidr:
          type: array
          description: A reduced list of what CIDR addresses root access will be restricted
            to.
          example:
          - 10.2.0.0/16
          - 10.6.5.0/24
          - 10.1.6.7
          items:
            type: string
            format: cidr
    inline_response_200_465_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: restrict_whm_root_access
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_466_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: retrieve_customizations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_467_data_config:
      type: object
      properties:
        shared_mysql_server:
          type: integer
          description: |-
            Whether the remote and target server share the same MySQL® server.
            * `1` - The remote and target server share the same MySQL server.
            * `0` - The remote and target server do **not** share the same MySQL server.
          example: 1
          enum:
          - 0
          - 1
      description: An object containing the transfer configuration options.
    inline_response_200_467_data_items:
      type: object
      properties:
        accounts:
          type: object
          additionalProperties:
            type: string
            description: Information for each account.
          description: The accounts to transfer.
        packages:
          type: object
          additionalProperties:
            type: string
            description: List of packages and featurelists.
          description: The packages to transfer.
      description: An object containing items to transfer.
    inline_response_200_467_data_local_dbs_dbs_MYSQL:
      type: object
      properties:
        owner:
          type: string
          description: Owner of the database.
      description: |-
        An object containing the database owner.

        **Note:**

          The database's name is the key's name.
    inline_response_200_467_data_local_dbs_dbs:
      type: object
      properties:
        MYSQL:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_dbs_MYSQL"
          description: An object containing the local server's MySQL databases.
          example:
            user_db1:
              owner: user
            user_db2:
              owner: user
        PGSQL:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_dbs_MYSQL"
          description: An object containing the local server's PgSQL databases.
          example:
            user_db1:
              owner: user
            user_db2:
              owner: user
      description: An object containing the local server's databases.
    inline_response_200_467_data_local_dbs_users_MYSQL:
      type: object
      properties:
        owner:
          type: string
          description: Owner of the database user.
      description: |-
        An object containing the database user owner.

        **Note:**

          The database user's name is the key's name.
    inline_response_200_467_data_local_dbs_users_PGSQL:
      type: object
      properties:
        owner:
          type: string
          description: Owner of the user.
      description: |-
        An object containing the database user owner.

        **Note:**

          The database user's name is the key's name.
    inline_response_200_467_data_local_dbs_users:
      type: object
      properties:
        MYSQL:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_users_MYSQL"
          description: An object containing the local server's MySQL users.
          example:
            user_user1:
              owner: user
            user_user2:
              owner: user
        PGSQL:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_users_PGSQL"
          description: An object containing the local server's PgSQL databases users.
          example:
            user_user1:
              owner: user
            user_user2:
              owner: user
      description: An object containing the local server's database users.
    inline_response_200_467_data_local_dbs:
      type: object
      properties:
        dbs:
          $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_dbs"
        users:
          $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_users"
      description: An object containing the local server's databases and users.
    inline_response_200_467_data_local:
      type: object
      properties:
        available_ips:
          type: array
          description: A list of the local server's available IP addresses.
          items:
            example: 192.168.1.1
            oneOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6
        dbs:
          $ref: "#/components/schemas/inline_response_200_467_data_local_dbs"
        dedicated_ips:
          type: object
          additionalProperties:
            type: string
            description: Domain with a dedicated IP address. The dedicated IP addresses
              is the key's name.
          description: A list of the local server's dedicated IP addresses.
          example:
            "192.168.1.2": domain.tld
        domains:
          description: A list of the local server's domains and owners.
          example:
            '*': nobody
            domain.tld: user
        groups:
          type: object
          additionalProperties:
            type: integer
            description: The group name is the key's name. Value is **always** `1`.
            enum:
            - 1
          description: An object containing the local server's account groups.
          example:
            bin: 1
            nobody: 1
        host:
          type: string
          description: The local server's hostname.
          format: domain
          example: hostname.domain.tld
        major_version:
          type: string
          description: The local server's major version.
          example: "11.90"
        roundcube_dbtype:
          type: string
          description: The database type Roundcube uses on the local server.
          example: sqlite
          enum:
          - sqlite
          - mysql
        users:
          type: object
          additionalProperties:
            type: integer
            description: The user's name is the key's name. Value is **always** `1`.
            enum:
            - 1
          description: An object containing the local server's account users.
          example:
            nobody: 1
            root: 1
        version:
          type: string
          description: The local server's version of cPanel.
          format: cPanel version
          example: 11.90.0.6
      description: An object containing the local server's information.
    inline_response_200_467_data_modules:
      type: object
      properties:
        analysis:
          type: object
          additionalProperties:
            type: string
            description: "Module version and other information when applicable. Key\
              \ name will be either `Local` or `Remote`, followed by the module information\
              \ type."
          description: Module information from both servers.
        name:
          type: string
          description: The name of the module.
      description: |-
        An object containing the module.

        **Note:**

          The module name is the key's name.
    inline_response_200_467_data_options:
      type: object
      properties:
        skip_reseller_privs:
          type: integer
          description: |-
            Whether reseller privileges will be set to transfer by default.
            * `0` - Reseller privileges will **not** be set to transfer by default.
            * `1` - Reseller privileges will be set to transfer by default.
          default: 0
          enum:
          - 0
          - 1
        unrestricted:
          type: integer
          description: |-
            Whether the transfer session will use [Restriced Restore](https://go.cpanel.net/insecurerestoreaccount).
            * `0` - Transfer session will use Restriced Restore.
            * `1` _ Transfer session will **not** use Restirced Restore.
          default: 1
          enum:
          - 0
          - 1
      description: An object containing transfer session options.
    inline_response_200_467_data_remote_dbs_dbs:
      type: object
      properties:
        MYSQL:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_dbs_MYSQL"
          description: An object containing the remote server's MySQL databases.
          example:
            user_db1:
              owner: user
            user_db2:
              owner: user
        PGSQL:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_dbs_MYSQL"
          description: An object containing the remote server's PgSQL databases.
          example:
            user_db1:
              owner: user
            user_db2:
              owner: user
      description: An object containing the remote server's databases.
    inline_response_200_467_data_remote_dbs_users:
      type: object
      properties:
        MYSQL:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_users_MYSQL"
          description: An object containing the remote server's MySQL users.
          example:
            user_user1:
              owner: user
            user_user2:
              owner: user
        PGSQL:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_local_dbs_users_PGSQL"
          description: An object containing the remote server's PgSQL databases users.
          example:
            user_user1:
              owner: user
            user_user2:
              owner: user
      description: An object containing the remote server's database users.
    inline_response_200_467_data_remote_dbs:
      type: object
      properties:
        dbs:
          $ref: "#/components/schemas/inline_response_200_467_data_remote_dbs_dbs"
        users:
          $ref: "#/components/schemas/inline_response_200_467_data_remote_dbs_users"
      description: An object containing the remote server's databases and users.
    inline_response_200_467_data_remote_linked_nodes:
      type: object
      properties:
        alias:
          type: string
          description: The remote server's linked cPanel server node alias.
          example: mailnode
        enabled_services:
          type: array
          description: Enabled services on the linked node.
          example:
          - exim
          - imap
          items:
            type: string
        hostname:
          type: string
          description: The remote server's linked cPanel server node hostname.
          format: domain
          example: remotemailnode.example.com
        last_check:
          type: integer
          description: Last time linked node was checked.
          format: unix_timestamp
          example: 1600126907
        system_settings:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              description: |-
                Server role system setting.
                * `0` - System setting is **not** enabled.
                * `1` - System setting is enabled.

                **Note:**

                  The system setting's name is the key's name.
              enum:
              - 0
              - 1
            description: |-
              An object containing the server role.

              **Note:**

                The server role's name is the key's name.
          description: An object containing server role system settings.
          example:
            Mail:
              globalspamassassin: 0
        tls_verified:
          type: integer
          description: |-
            Whether the connection to the server node is using TLS verification.
            * `0` - Server node connection is **note** using TLS verification.
            * `1` - Server node connection is using TLS verification.
          example: 1
          enum:
          - 0
          - 1
        username:
          type: string
          description: The username the server node link uses.
          example: root
        version:
          type: string
          description: The server node's software version number.
          format: cPanel version
          example: 11.90.0.6
        worker_capabilities:
          type: object
          additionalProperties:
            type: object
            description: |-
              An object containing the server role.

              **Note:**

                The server role's name is the key's name.
          description: An object containing a group of services required for the remote
            server's linked cPanel server node to perform a specific task.
          example:
            Mail: {}
    inline_response_200_467_data_remote:
      type: object
      properties:
        conflicts:
          type: object
          description: Remote server data load error message.
        cpversion:
          type: string
          description: Remote server internal version.
          example: "11.64"
        dbs:
          $ref: "#/components/schemas/inline_response_200_467_data_remote_dbs"
        has_disk_used:
          type: integer
          description: |-
            Whether the remote server can transmit disk usage information to the target server.
            * `1` - Remote server can transmit disk usage information.
            * `0` - Remote server **cannot** transmit disk usage information.

            **Note:**

              cPanel & WHM servers have this ability by default.
          example: 1
          enum:
          - 0
          - 1
        has_files_used:
          type: integer
          description: |-
            Whether the remote server can transmit file usage information to the target server.
            * `1` - Remote server can transmit file usage information.
            * `0` - Remote server **cannot** transmit file usage information.

            **Note:**

              cPanel & WHM servers have this ability by default.
          example: 1
          enum:
          - 0
          - 1
        has_owners:
          type: integer
          description: |-
            Whether the remote server can transmit owner information to the target server.
            * `1` — Remote server can transmit owner information.
            * `0` — Remote server **cannot** transfer owner information, and the transfer tool will assume that root owns all accounts.
          example: 1
          enum:
          - 0
          - 1
        has_package_extensions:
          type: integer
          description: |-
            Whether the remote server has package extensions.
            * `1` - Remote server has package extensions.
            * `0` - Remote server does **not** have package extensions.
          example: 1
          enum:
          - 0
          - 1
        has_xfertool:
          type: integer
          description: |-
            Whether the remote server has the transfer tool.
            * `1` - Remote server has the transfer tool.
            * `0` - Remote server does **not** have the transfer tool.
          example: 1
          enum:
          - 0
          - 1
        host:
          type: string
          description: The remote server's IP address.
          format: ipv4
          example: 192.168.1.1
        hostname:
          type: string
          description: The local server's hostname.
          format: domain
          example: hostname.domain.tld
        linked_nodes:
          type: array
          description: "An array containing the remote server's linked cPanel server\
            \ nodes, if any exist."
          items:
            $ref: "#/components/schemas/inline_response_200_467_data_remote_linked_nodes"
        major_version:
          type: string
          description: The remote server's major version.
          example: "11.90"
        resellers:
          type: object
          additionalProperties:
            type: integer
            description: The reseller's username is the key's name. Value is **always**
              `1`.
            enum:
            - 1
          description: |-
            The remote servers reseller accounts that own one or more accounts.

            **Note:**

              This won't return a value if the `root` user is the only user that owns accounts.
          example:
            resell2: 1
            reseller: 1
            root: 1
        roundcube_dbtype:
          type: string
          description: The database type Roundcube uses on the remote server.
          example: sqlite
          enum:
          - sqlite
          - mysql
        server_type:
          type: string
          description: |-
            The remote server's type.
            * An internal cPanel type ID dependent on cPanel version.
            * `Plesk`
            * `Ensim`
          example: WHM1164
        supports_live_transfers:
          type: integer
          description: |-
            Whether the remote server supports the Live Transfers feature in WHM's Transfer Tool  interface (WHM >> Home >> Transfers >> Transfer Tool).
            * `1` — Supported.
            * `0` — **Not** supported.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: string
          description: The remote server's software version number.
          format: cPanel version
          example: 11.90.0.6
      description: An object containing the remote server's information.
    inline_response_200_467_data:
      type: object
      properties:
        config:
          $ref: "#/components/schemas/inline_response_200_467_data_config"
        items:
          $ref: "#/components/schemas/inline_response_200_467_data_items"
        local:
          $ref: "#/components/schemas/inline_response_200_467_data_local"
        modules:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_467_data_modules"
          description: An list of objects containing the module infromation of both
            servers.
          example:
            Backups:
              analysis:
                Local Backups Version: 11.90.0.6
                Remote Backups Version: 11.88.0.7
              name: Backups
            MySQL:
              analysis:
                Local Type: MySQL
                Local Version: "5.7"
                Remote Type: MariaDB
                Remote Version: "10.3"
              name: Database Server
        options:
          $ref: "#/components/schemas/inline_response_200_467_data_options"
        remote:
          $ref: "#/components/schemas/inline_response_200_467_data_remote"
        transfer_session_id:
          type: string
          description: The transfer session's ID.
          example: exampleservercopya20140206192428NtyW
    inline_response_200_467_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: retrieve_transfer_session_remote_analysis
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_468_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: run_cpkeyclt
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_469_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: save_connected_application
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_470_data_cpgreylist_config:
      type: object
      properties:
        child_timeout_secs:
          minimum: 1
          type: integer
          description: The maximum amount of seconds that Greylisting waits for child
            process to time out.
          example: 5
        initial_block_time_mins:
          maximum: 240
          minimum: 1
          type: integer
          description: The number of minutes during which Greylisting defers email
            from an unknown triplet.
          example: 10
        is_enabled:
          type: integer
          description: |-
            Whether Greylisting is enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        is_exim_enabled:
          type: integer
          description: |-
            Whether Exim is enabled.

            * `1` — Enabled.
            * `0` — Disabled.
          example: 1
          enum:
          - 1
          - 0
        max_child_procs:
          minimum: 1
          type: integer
          description: The maximum amount of child processes.
          example: 5
        must_try_time_mins:
          maximum: 1440
          minimum: 1
          type: integer
          description: The number of minutes during which Greylisting accepts a re-sent
            email from an unknown triplet.
          example: 240
        purge_interval_mins:
          minimum: 1
          type: integer
          description: The number of minutes before Greylisting deletes the records
            in the Greylisting database.
          example: 60
        record_exp_time_mins:
          maximum: 43200
          minimum: 1
          type: integer
          description: "The number of minutes before Greylisting deletes the triplet\
            \ record and treats a re-sent email as a new, unknown triplet."
          example: 4320
        spf_bypass:
          type: integer
          description: |-
            Whether emails with SPF bypass Greylisting.

            * `1` — Bypass.
            * `0` — Do **not** bypass.
          example: 1
          enum:
          - 1
          - 0
      description: A list of Greylisting settings.
    inline_response_200_470_data:
      type: object
      properties:
        cpgreylist_config:
          $ref: "#/components/schemas/inline_response_200_470_data_cpgreylist_config"
    inline_response_200_470_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: save_cpgreylist_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_471_data_cphulk_config:
      type: object
      properties:
        block_brute_force_with_firewall:
          type: integer
          description: |-
            Whether to use cPanel & WHM's firewall to block brute force attacks.
            * `1` -  Use the firewall.
            * `0` - Do **not** use the firewall.
          example: 0
          enum:
          - 0
          - 1
        block_excessive_brute_force_with_firewall:
          type: integer
          description: |-
            Whether to use cPanel & WHM's firewall to block excessive brute force attacks.
            * `1` - Use the firewall.
            * `0` - Do **not** use the firewall.
          example: 0
          enum:
          - 0
          - 1
        brute_force_period_mins:
          minimum: 1
          type: integer
          description: The number of minutes over which cPHulk measures all login
            attempts to a specific user's account.
          example: 5
        brute_force_period_sec:
          type: integer
          description: The number of seconds over which cPHulk measures all login
            attempts to a specific user's account.
          example: 300
        can_temp_ban_firewall:
          type: integer
          description: |-
            Whether the system firewall can apply temporary IP address bans.
            * `1` - Can temporarily apply IP address bans.
            * `0` - **Cannot** temporarily apply IP address bans.

            **Note:**

            If this return's value is `0`, then the `ip_based_protection` parameter is **not** available, which means that you cannot use the following parameters:
            * `block_brute_force_with_firewall`
            * `block_excessive_brute_force_with_firewall`
            * `ip_brute_force_period_mins`
            * `ip_brute_force_period_sec`
          example: 1
          enum:
          - 0
          - 1
        command_to_run_on_brute_force:
          type: string
          description: The command to run when an IP address triggers brute force
            protection.
          example: ""
        command_to_run_on_excessive_brute_force:
          type: string
          description: The command to run when the system blocks an IP address blocked
            for a one day period.
          example: ""
        ip_based_protection:
          type: integer
          description: |-
            Whether IP address-based protection on all requests is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        ip_brute_force_period_mins:
          minimum: 1
          type: integer
          description: The number of minutes in which cPHulk measures an attacker's
            login attempts.
          example: 15
        ip_brute_force_period_sec:
          type: integer
          description: The number of seconds in which cPHulk measures an attacker's
            login attempts.
          example: 900
        is_enabled:
          type: integer
          description: |-
            Whether the cPHulk service is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        lookback_period_min:
          minimum: 0
          type: integer
          description: The number of minutes over which cPHulk counts failed logins
            against a user.
          example: 360
        lookback_time:
          type: integer
          description: The number of seconds over which cPHulk counts failed logins
            against a user.
          example: 21600
        mark_as_brute:
          minimum: 0
          type: integer
          description: The maximum number of failures from a specific IP address before
            cPHulk blocks that address for a two-week period.
          example: 30
        max_failures:
          minimum: 0
          type: integer
          description: The maximum number of failures that cPHulk allows per account
            within the defined time range.
          example: 30
        max_failures_byip:
          minimum: 0
          type: integer
          description: The maximum number of failures from a specific IP address before
            cPHulk locks out that address.
          example: 5
        notify_on_brute:
          type: integer
          description: |-
            Whether cPHulk will send a notification when it detects a brute force attack.
            * `1` - Send the notification.
            * `0` - Do **not** send the notification.
          example: 0
          enum:
          - 0
          - 1
        notify_on_root_login:
          type: integer
          description: |-
            Whether cPHulk will send a notification when the `root` user successfully logs in from an IP address that is not on the whitelist.
            * `1` - Send the notification.
            * `0` - Do **not** send the notification.
          example: 0
          enum:
          - 0
          - 1
        notify_on_root_login_for_known_netblock:
          type: integer
          description: |-
            Whether cPHulk sends a notification upon successful `root` login when the IP address is not on the whitelist, but from a known netblock.
            * `1` - Send the notification.
            * `0` - Do **not** send the notification.
          example: 0
          enum:
          - 0
          - 1
        username_based_protection:
          type: integer
          description: |-
            Whether username-based protection on all requests is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 0
          enum:
          - 0
          - 1
        username_based_protection_for_root:
          type: integer
          description: |-
            Whether username-based protection can lock out the `root` user.
            * `1` - Allowed.
            * `0` - **Not** allowed.
          example: 0
          enum:
          - 0
          - 1
        username_based_protection_local_origin:
          type: integer
          description: |-
            Whether username-based protection **only** on requests that originate from a local IP address.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
      description: An object containing cPHulk configuration settings.
    inline_response_200_471_data:
      type: object
      properties:
        cphulk_config:
          $ref: "#/components/schemas/inline_response_200_471_data_cphulk_config"
        restart_ssh:
          type: integer
          description: |-
            Whether the system disabled UseDNS in the `sshd.conf` file and restarted the `sshd` daemon to allow cPHulk to add IP addresses to the whitelist.

            **Note:**

             This return **only** appears if the `UseDNS` setting is `yes` in the `/etc/ssh/sshd_config` file. Because UseDNS and cPHulk are incompatible, the system sets the `UseDNS` setting to `no` when you enable cPHulk.
            * `1` - Disabled UseDNS in the `sshd` daemon and restarted the `sshd` service.
            * `0` - Did **not** alter the `sshd.conf` file or restart the `sshd` service.
          example: 1
          enum:
          - 0
          - 1
        warning:
          type: string
          description: |-
            A warning message about the restart.

            **Note:**

            The function **only** returns this value if the `restart_ssh` return's value is `1`.
          nullable: true
    inline_response_200_471_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: save_cphulk_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_472_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: save_spamd_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_473_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: saveacllist
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: ACL List my_acl_list saved.
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_474_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: savemxs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: |
            Bind reloading on server1 using rndc zone: [example.com]
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_475_data:
      type: object
      properties:
        message_id:
          type: string
          description: The test message's ID. A valid string.
          example: 554d2cbd-efe61da3cacb
    inline_response_200_475_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: send_test_posturl
        reason:
          type: string
          description: The reason the function failed when the `metadata.result` field
            is 0. This field may include a success message when the function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The API version of the function.
          example: 1
    inline_response_200_476_data:
      type: object
      properties:
        message_id:
          type: string
          description: The test message's ID.
          example: 554d2cbd-efe61da3cacb
        payload:
          type: object
          additionalProperties: true
          description: "The payload from the Pushbullet server. For more information,\
            \ visit [Pushbullet's API documentation](https://docs.pushbullet.com/)."
          example:
            active: true
            body: |-
              This message confirms that "hostname.example.com" (192.168.0.20) can send a message to you via Pushbullet.

              This message was sent on Monday, May 18, 2015 at 7:12:20 PM UTC.
            created: 1.43197634138872E9
            direction: self
            dismissed: false
            iden: ujw5ScArtjUsjAeRXXMLGS
            modifiedx: 1.43197634139182E9
            receiver_email: user@example.com
            receiver_email_normalized: user@example.com
            receiver_iden: ujw5ScArtjU
            sender_email: user@example.com
            sender_email_normalized: user@example.com
            sender_iden: ujw5ScArtjU
            sender_name: Firstname Lastname
            title: "Test message (ID: 555a3994-173a4a271062d)"
            type: note
    inline_response_200_476_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: send_test_pushbullet_note
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_477_data_service:
      type: object
      properties:
        display_name:
          type: string
          description: The service's full name.
          example: Cron Daemon
        enabled:
          type: integer
          description: |-
            Whether the service is enabled.
            * `1` - Enabled.
            * `0` - Disabled. If a server profile **disables** a service, this returns a `0` value.
          example: 1
          enum:
          - 0
          - 1
        installed:
          type: integer
          description: |-
            Whether the service is installed.
            * `1` - Installed.
            * `0` - Uninstalled. If a server profile **disables** a service, this returns a `0` value.
          example: 1
          enum:
          - 0
          - 1
        monitored:
          type: integer
          description: |-
            Whether the server monitors the service.
            * `1` - Monitored.
            * `0` - Not monitored. If a server profile **disables** a service, this returns a `0` value.
          example: 1
          enum:
          - 0
          - 1
        name:
          type: string
          description: |-
            The service's short name.
            * apache_php_fpm
            * clamd
            * cpanel-dovecot-solr
            * cpanel_php_fpm
            * cpanellogd
            * cpdavd
            * cpgreylistd
            * cphulkd
            * cpsrvd
            * crond
            * dnsadmin
            * exim
            * exim-altport
            * ftpd
            * httpd
            * imap
            * ipaliases
            * lmtp
            * mailman
            * mysql
            * named
            * nscd
            * p0f
            * pop
            * postgresql
            * queueprocd
            * rsyslogd
            * spamd
            * sshd
            * syslogd
            * tailwatchd

            **Note:**  For more information about these services, read our [Service Manager](https://go.cpanel.net/whmdocsServiceManager) documentation.
          example: crond
        running:
          type: integer
          description: |-
            Whether the service currently runs on the server.

            **Note:**

            The function does **not** return this parameter if the server does **not** monitor the service.

            * `1` - Running.
            * `0` - Not running.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_477_data:
      type: object
      properties:
        service:
          type: array
          properties: {}
          description: |-
            An object containing service information.

            **Note:**

            Certain [server profiles](https://go.cpanel.net/howtouseserverprofiles) **disable** specific services. For example, the Mail profile's `ftpd` service would return a `0` value for the `enabled`, `installed`, and `monitored` returns.
          items:
            $ref: "#/components/schemas/inline_response_200_477_data_service"
    inline_response_200_477_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: servicestatus
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_478_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_application_contact_event_importance
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_479_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_application_contact_importance
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_480_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_autossl_metadata
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_481_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_autossl_metadata_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_482_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_autossl_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_483_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_autossl_user_excluded_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_484_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_commerce
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_485_data:
      type: object
      properties:
        updates:
          type: string
          description: |-
            The new frequency of server updates.
            - `daily` — Run updates daily.
            - `manual` — Run updates manually.
            - `never` — Never run updates.
          example: daily
          enum:
          - daily
          - manual
          - never
    inline_response_200_485_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_cpanel_updates
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Cpanel update frequency set to daily
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_486_data_cphulk_config:
      type: object
      properties:
        block_brute_force_with_firewall:
          type: integer
          description: |-
            Whether to use cPanel & WHM's firewall to block brute force attacks.
            * `1` - Use the firewall.
            * `0` - Do **not** use the firewall.
          example: 0
          enum:
          - 0
          - 1
        block_excessive_brute_force_with_firewall:
          type: integer
          description: |-
            Whether to use cPanel & WHM's firewall to block excessive brute force attacks.
            * `1` - Use the firewall.
            * `0` - Do **not** use the firewall.
          example: 0
          enum:
          - 0
          - 1
        brute_force_period_mins:
          type: integer
          description: The number of minutes over which cPHulk measures all login
            attempts to a specific user's account.
          example: 5
        brute_force_period_sec:
          type: integer
          description: The number of seconds over which cPHulk measures all login
            attempts to a specific user's account.
          example: 300
        can_temp_ban_firewall:
          type: integer
          description: |-
            Whether the system firewall can apply temporary IP address bans.
            * `1` - Can temporarily apply IP address bans.
            * `0` - Cannot temporarily apply IP address bans.

            **Note:**

            If this return's value is 0, then the `ip_based_protection parameter` is **not** available, which means that you cannot use the following parameters:
            * `block_brute_force_with_firewall`
            * `block_excessive_brute_force_with_firewall`
            * `ip_brute_force_period_mins`
            * `ip_brute_force_period_sec`
          example: 1
          enum:
          - 0
          - 1
        command_to_run_on_brute_force:
          type: string
          description: |-
            The command to run when an IP address triggers brute force protection.
            - A valid command.
            - An empty string.
          example: ""
        command_to_run_on_excessive_brute_force:
          type: string
          description: |-
            The command to run when the system blocks an IP address blocked for a one day period.
            * A valid command.
            * An empty string.
          example: ""
        country_blacklist:
          type: string
          description: The countries to blacklist. A comma-separated list of valid
            ISO 3166-1 alpha-2 country codes. This value may be empty.
          format: ISO-3166-1 (alpha-2)
          example: "PK,BR"
        country_whitelist:
          type: string
          description: The countries to whitelist. A comma-separated list of valid
            ISO 3166-1 alpha-2 country codes. This value may be empty.
          format: ISO-3166-1 (alpha-2)
          example: "US,AU"
        ip_based_protection:
          type: integer
          description: |-
            Whether IP address-based protection on all requests is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        ip_brute_force_period_mins:
          type: integer
          description: The number of minutes in which cPHulk measures an attacker's
            login attempts.
          example: 15
        ip_brute_force_period_sec:
          type: integer
          description: The number of seconds in which cPHulk measures an attacker's
            login attempts.
          example: 900
        is_enabled:
          type: integer
          description: |-
            Whether the cPHulk service is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
        lookback_period_min:
          type: integer
          description: The number of minutes over which cPHulk counts failed logins
            against a user.
          example: 360
        lookback_time:
          type: integer
          description: The number of seconds over which cPHulk counts failed logins
            against a user.
          example: 21600
        mark_as_brute:
          type: integer
          description: The maximum number of failures from a specific IP address before
            cPHulk blocks that address for a two-week period.
          example: 30
        max_failures:
          type: integer
          description: The maximum number of failures that cPHulk allows per account
            within the defined time range.
          example: 30
        max_failures_byip:
          type: integer
          description: The maximum number of failures from a specific IP address before
            cPHulk locks out that address.
          example: 5
        notify_on_brute:
          type: integer
          description: |-
            Whether cPHulk will send a notification when it detects a brute force attack.
            * `1` - Send the notification.
            * `0` - Do **not** send the notification.
          example: 0
          enum:
          - 0
          - 1
        notify_on_root_login:
          type: integer
          description: |-
            Whether cPHulk will send a notification when the root user successfully logs in from an IP address that is **not** on the whitelist.
            * `1` - Send the notification.
            * `0` - Do **not** send the notification.
          example: 0
          enum:
          - 0
          - 1
        notify_on_root_login_for_known_netblock:
          type: integer
          description: |-
            Whether cPHulk sends a notification upon successful root login when the IP address is **not** on the whitelist, but from a known netblock
            * `1` - Send the notification.
            * `0` - Do **not** send the notification.
          example: 0
          enum:
          - 0
          - 1
        username_based_protection:
          type: integer
          description: |-
            Whether username-based protection on all requests is enabled.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 0
          enum:
          - 0
          - 1
        username_based_protection_for_root:
          type: integer
          description: |-
            Whether username-based protection can lock out the root user.
            * `1` - Allowed.
            * `0` - Not allowed.
          example: 0
          enum:
          - 0
          - 1
        username_based_protection_local_origin:
          type: integer
          description: |-
            Whether username-based protection only on requests that originate from a local IP address.
            * `1` - Enabled.
            * `0` - Disabled.
          example: 1
          enum:
          - 0
          - 1
      description: cPHulk configuration settings.
    inline_response_200_486_data:
      type: object
      properties:
        cphulk_config:
          $ref: "#/components/schemas/inline_response_200_486_data_cphulk_config"
    inline_response_200_486_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_cphulk_config_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_487_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_digest_auth
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: Digest Authentication enabled.
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_488_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_ecommerce
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_489_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_enhancement_limit
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_490_data:
      type: object
      properties:
        configs_updated:
          type: integer
          description: |-
            Whether the system updated the configuration settings.

            **Note:**

             This return **only** appears when the function includes the `update_config` parameter or when the *localhost* MySQL profile is active.
            * `1` — Updated.
            * `0` — **Not** updated.
          example: 1
          enum:
          - 0
          - 1
        password_reset:
          type: integer
          description: |-
            Whether the system reset the password.
            * `1` — Reset.
            * `0` — **Not** reset.
          example: 1
          enum:
          - 0
          - 1
        profile_updated:
          type: integer
          description: |-
            Whether the system updated the profile.

            **Note:**

             This return **only** appears when the *localhost* MySQL profile is active.
            * `1` — Updated.
            * `0` — **Not** updated.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_490_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_local_mysql_root_password
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_491_data:
      type: object
      properties:
        payload:
          type: object
          additionalProperties:
            type: string
            description: "The domain’s former MX redirect target, or null if the domain\
              \ did not have an MX redirect target before."
            nullable: true
            example: mailhostexample.com
            x-additionalPropertiesName: domain
          description: The former manual MX redirect entry for each domain.
          example:
            example.com: mailhostexample.com
    inline_response_200_491_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_manual_mx_redirects
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_492_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_market_product_attribute
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_493_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_market_provider_commission_id
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_494_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_mysql_password
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_495_data:
      type: object
      properties:
        message:
          type: string
          description: A confirmation message from the system.
          example: Queued task to set nameserver to bind successfully.
        nameserver:
          type: string
          description: |-
            The nameserver software.
            * `bind`
            * `powerdns`
            * `disabled`
          example: bind
          enum:
          - bind
          - powerdns
          - disabled
    inline_response_200_495_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_nameserver
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_496_data_domains:
      type: object
      properties:
        domain:
          type: string
          description: The domain for which the system enabled NSEC3.
          format: domain
          example: example.com
        enabled:
          type: integer
          description: |-
            Whether the system enabled NSEC3.
            - `1` — Enabled.
            - `0` — The system failed to enable NSEC3.
          example: 1
          enum:
          - 0
          - 1
        error:
          type: string
          description: |-
            An error message that describes why the system could not enable NSEC3.

            **Note:**

             The function **only** displays this return when the enabled return is a `0` value.
          example: Error message.
    inline_response_200_496_data:
      type: object
      properties:
        domains:
          type: array
          description: An array of objects that contains information about each domain.
          items:
            $ref: "#/components/schemas/inline_response_200_496_data_domains"
    inline_response_200_496_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_nsec3_for_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason `field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_497_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_postgresql_password
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_498_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_primary_servername
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_499_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_provider_client_configurations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_500_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_provider_display_configurations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_501_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_public_contact
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_502_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_service_config_key
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Succeeded
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_503_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_service_proxy_backends
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_504_data:
      type: object
      properties:
        tier:
          type: string
          description: The server's new support tier.
          example: current
          enum:
          - edge
          - current
          - release
          - stable
          - lts
    inline_response_200_504_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_tier
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Update tier successfully changed to current
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_505_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_tweaksetting
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_506_data_flags:
      type: object
      properties:
        do-ip6:
          type: string
          description: "The system **cannot** create an [IPv6](https://en.wikipedia.org/wiki/IPv6)\
            \ socket."
          example: "no"
        do-udp:
          type: string
          description: "The system **cannot** receive a [User Datagram Protocol (UDP)](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\
            \ DNS response."
          example: "no"
        edns-buffer-size:
          type: string
          description: "The [extension mechanism for DNS (EDNS)](https://en.wikipedia.org/wiki/Extension_mechanisms_for_DNS)\
            \ length size is at or exceeds 512 bytes."
          example: "512"
      description: |-
        An object that contains of [`libunbound` configuration options](https://www.nlnetlabs.nl/documentation/unbound/unbound.conf/).

        **Note:**

        The function **only** returns an option if the system finds a configuration issue.
    inline_response_200_506_data:
      type: object
      properties:
        flags:
          $ref: "#/components/schemas/inline_response_200_506_data_flags"
    inline_response_200_506_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_up_dns_resolver_workarounds
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_507_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: set_user_email_forward_destination
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_508_data:
      type: object
      properties:
        acl:
          type: array
          description: An array of the reseller's privileges. An array that contains
            the names of one or more privileges.
          items:
            type: string
            example: all
    inline_response_200_508_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setacls
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_509_metadata_output:
      type: object
      properties:
        messages:
          type: string
          description: Any of the function's output messages.
          example: Updating cPanel license...Done. Update succeeded.
        warnings:
          type: string
          description: Any of the function's warnings.
          example: "The hostname was already set to hostname.example.com, syncing\
            \ configuration only."
      description: A list of the function's output.
    inline_response_200_509_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: sethostname
        output:
          $ref: "#/components/schemas/inline_response_200_509_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: |-
            Stopping cPHulkd during hostname change
            Service “cphulkd” is already stopped.<br />
            <br />
            <span class='cpanel_output_color_bold'>Startup Log</span><br />
             <span class='cpanel_output_indent'></span><span class='cpanel_output_color_bold cpanel_output_ color_bright_yellow cpanel_output_color_on_grey6'>Warning: Journal has been rotated since unit was started. Log output is incomplete or unavailable.</span><br />
            <br />
            <span class= 'cpanel_output_color_bold okmsg'>cphulkd stopped successfully.</span><br />
            Stopping MySQL during hostname change
            Changing hostname in kernel to hostname.example.com
            Altered hostname in /etc/sysconfig/network
            Updating cPHulkd
            Starting cPHulkd
            (XID qju5cf) The “cphulkd” service is not configured.
            Restarting Exim
            Waiting for “exim” to restart ………waiting for “exim” to initialize ………finished.<br />
            <br />
            <span class='cpanel_output_color_bold'>Service Status</span><br />
            <span class='cpanel_output_indent'></span>exim (/usr/sbin/exim -ps -bd -q1h -oP /var/spool/exim/exim-daemon.pid) is running as mailnull with PID 16943 (systemd+/proc check method).<br />
            <br />
            <span class='cpanel_output_color_bold'>Startup Log</span><br />
             <span class='cpanel_output_indent'></span>Jul 29 15:03:14 hostname.example.com systemd[1]: Starting Exim is a Mail Transport Agent, which is the program that moves mail from one machine to another....<br />
            <span class='cpanel_output_indent'></span>Jul 29 15:03:14 hostname. example.com systemd[1]: Can&#39;t open PID file /var/spool/exim/exim-daemon.pid (yet?) after start: No such file or directory<br />
            <span class='cpanel_output_indent'></span>Jul 29 15:03:14 hostname.example.com systemd[1]: Started Exim is a Mail Transport Agent, which is the program that moves mail from one machine to another..<br />
            <br />
            <span class='cpanel_output_ color_bold'>Log Messages</span><br />
            <span class='cpanel_output_indent'></span>2020-07-29 15:03:14 exim 4.93 daemon started: pid=16943, -q1h, listening for SMTP on port 25 (IPv6 and IPv4) port 587 (IPv6 and IPv4) and for SMTPS on port 465 (IPv6 and IPv4)<br />
            <span class='cpanel_ output_indent'></span>2020-07-29 14:57:20 exim 4.93 daemon started: pid=16089, -q1h, listening for SMTP on port 25 (IPv6 and IPv4) port 587 (IPv6 and IPv4) and for SMTPS on port 465 (IPv6 and IPv4)<br />
            <br />
            <span class='cpanel_output_color_bold okmsg'>exim restarted successfully.</span><br />
            Updating Apache configuration
            Updating cPanel license...Done. Update succeeded.
            A DNS record already exists for “hostname.example.com”.
            The system has queued the hostname changes for the DAV services.
            Users cannot access the DAV features that use these services until
            the system has finished updates to the hostname. After the system adjusts a
            specific user’s database, it restores their access to the DAV services.

            You will receive a notification when the system completes the update for all users.
            Waiting for “mysql” to start ……waiting for “mysql” to initialize ………finished.<br />
            <br />
            <span class='cpanel_output_color_bold'>Service Status</span><br />
            <span class='cpanel_output_indent'></span>mysqld (/usr/sbin/mysqld --daemonize --pid-file= /var/run/mysqld/mysqld.pid) is running as mysql with PID 16886 (systemd+/proc check method). <br />
            <br />
            <span class='cpanel_output_color_bold'>Startup Log</span><br />
            <span class= 'cpanel_output_indent'></span>Jul 29 15:03:10 hostname.example.com systemd[1]: Starting MySQL Server...<br />
            <span class='cpanel_output_indent'></span>Jul 29 15:03:11 hostname.example.com systemd[1]: Started MySQL Server.<br />
            <br />
            <span class='cpanel_output_color_bold'>Log Messages</span><br />
            <span class='cpanel_output_indent'></span>2020-07-29T20:03:11.894935Z 0 [Note] /usr/sbin/mysqld: ready for connections.<br />
            <span class='cpanel_output_indent'> </span>2020-07-29T20:03:09.442015Z 0 [Note] /usr/sbin/mysqld: Shutdown complete<br />
            <span class='cpanel_output_indent'></span>2020-07-29T19:57:17.010586Z 0 [Note] /usr/sbin/mysqld: ready for connections.<br />
            <br />
            <span class='cpanel_output_color_bold okmsg'>mysql started successfully.</span><br />
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_510_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setminimumpasswordstrengths
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_511_data:
      type: object
      properties:
        all:
          type: integer
          description: |-
            Whether the function allocated all available IP addresses to the reseller. This return **only** appears if you set the `delegate` parameter to `0`.

            **Note:**

            `1` is the only possible value.
          example: 1
          enum:
          - 1
        ip:
          type: array
          description: An array of the reseller's allocated IP addresses.
          items:
            type: string
            format: ipv4
            example: 192.168.0.20
    inline_response_200_511_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setresellerips
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_512_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setresellerlimits
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_513_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setresellermainip
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_514_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setresellernameservers
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_515_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setresellerpackagelimit
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_516_metadata_output:
      type: object
      properties:
        messages:
          type: string
          example: |
            Listed in order they are:
            192.168.0.20
            192.168.0.21
            2001:4860:4860::8888
      description: Messages returned from the call.
    inline_response_200_516_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setresolvers
        output:
          $ref: "#/components/schemas/inline_response_200_516_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Your resolvers have been setup!
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_517_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setsiteip
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_518_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: setupreseller
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_519_data_bwusage:
      type: object
      properties:
        deleted:
          type: integer
          description: |-
            Whether the account was deleted.

            * `1` — Deleted.
            * `0` — **Not** deleted.
          example: 0
          enum:
          - 1
          - 0
        domain:
          type: string
          description: The domain on the account.
          example: example.com
        usage:
          minimum: 0
          type: integer
          description: "The domain's bandwidth usage during the queried period, in\
            \ bytes."
          example: 0
    inline_response_200_519_data_acct:
      type: object
      properties:
        bwusage:
          type: array
          description: The bandwidth information for domains on the account.
          items:
            $ref: "#/components/schemas/inline_response_200_519_data_bwusage"
        deleted:
          type: integer
          description: |-
            Whether the account was deleted.

            * `1` — Deleted.
            * `0` — **Not** deleted.
          example: 0
          enum:
          - 1
          - 0
        limit:
          minimum: 0
          type: integer
          description: "The account's bandwidth limit, in bytes."
          example: 0
        maindomain:
          type: string
          description: The account's main domain.
          example: example.com
        owner:
          type: string
          description: The account's owner.
          example: root
        reseller:
          type: integer
          description: |-
            Whether the user is a reseller.

            * `1` — Reseller account.
            * `0` — **Not** a reseller account.
          example: 0
          enum:
          - 1
          - 0
        totalbytes:
          minimum: 0
          type: integer
          description: "The account's total bandwidth usage during the queried period,\
            \ in bytes."
          example: 352
        user:
          type: string
          description: The account username.
          example: user
    inline_response_200_519_data:
      type: object
      properties:
        acct:
          type: array
          description: Bandwidth information for the reseller's accounts.
          items:
            $ref: "#/components/schemas/inline_response_200_519_data_acct"
        month:
          maximum: 12
          minimum: 1
          type: integer
          description: The queried month.
          example: 12
        reseller:
          type: string
          description: The reseller username or the `root` user.
          example: root
        totalused:
          minimum: 0
          type: integer
          description: "The total bandwidth usage of the reseller's accounts during\
            \ the queried period, in bytes."
          example: 352
        year:
          type: integer
          description: The queried year.
          example: 2019
    inline_response_200_519_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: showbw
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_520_data:
      type: object
      properties:
        pid:
          minimum: 1
          type: integer
          description: The process ID of the script.
          example: 29193
    inline_response_200_520_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: start_autossl_check_for_all_users
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_521_data:
      properties:
        pid:
          minimum: 1
          type: integer
          description: The process ID of the script.
          example: 12345
    inline_response_200_521_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: start_autossl_check_for_one_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_522_data:
      type: object
      properties:
        upgrade_id:
          type: string
          description: "The upgrade log's location, relative to the `/var/cpanel/logs/`\
            \ directory."
          example: mysql_upgrade.20200202-172923
    inline_response_200_522_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: start_background_mysql_upgrade
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_523_data:
      type: object
      properties:
        complete_master_error_log:
          type: string
          description: |-
            The name of the master error log.

            **Note:**

             The target system streams the output of this file with the `live_tail_log.cgi` script; however, users should **not** directly call this script.
          example: master.error_log
        complete_master_log:
          type: string
          description: |-
            The name of the master log.

            **Note:**

             The target system streams the output of this file with the `live_tail_log.cgi` script; however, users should **not** directly call this script.
          example: master.log
        session_id:
          type: string
          description: The backup's session ID.
          example: example20151109162046c4xzDp55q9u4tPj
    inline_response_200_523_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: start_background_pkgacct
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_524_data:
      type: object
      properties:
        is_new:
          type: integer
          description: |-
            Whether the update process started as a result of this request.

            * `1` — The update process started as a result of this request.
            * `0` — The update process existed prior to this request.
          example: 1
          enum:
          - 1
          - 0
        log_path:
          type: string
          description: The filesystem path to the update process’s log file.
          format: path
          example: /var/cpanel/updatelogs/update.1604521159.log
        pid:
          minimum: 2
          type: integer
          description: The update process’s ID.
          example: 23456
    inline_response_200_524_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: start_cpanel_update
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_525_data:
      type: object
      properties:
        transfer_session_id:
          type: string
          description: The background transfer process ID.
          example: example202003301756425ugO
    inline_response_200_525_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: start_local_cpmove_restore
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_526_data:
      type: object
      properties:
        log_id:
          type: string
          description: The profile activation log ID. The system creates the log files
            in the `/var/cpanel/logs/activate_profile/` directory.
          example: 17053.10418168.1533478604
    inline_response_200_526_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: start_profile_activation
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_527_data:
      type: object
      properties:
        pid:
          minimum: 1
          type: integer
          description: The transfer session's process ID.
          example: 90210
    inline_response_200_527_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: start_transfer_session
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_528_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: suspend_outgoing_email
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_529_metadata_output:
      type: object
      properties:
        raw:
          type: string
          description: The raw system message.
          example: |
            Changing Shell to /bin/false...Changing shell for username. Warning: "/bin/false" is not listed in /etc/shells. Shell changed. Done Locking Password...Locking password for user username. passwd: Success Done Suspending mysql users Using Universal Quota Support (quota=0) Suspending websites... Using Universal Quota Support (quota=0) Suspending FTP accounts... Updating FTP passwords for username FTP password files updated. FTP vhost passwords synced username's account has been suspended
      description: System messages generated while suspending the account.
    inline_response_200_529_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: suspendacct
        output:
          $ref: "#/components/schemas/inline_response_200_529_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_530_metadata_output:
      type: object
      properties:
        raw:
          type: string
          description: The raw output from the function.
    inline_response_200_530_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: suspendreseller
        output:
          $ref: "#/components/schemas/inline_response_200_530_metadata_output"
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_531_details_kernel:
      type: object
      properties:
        boot_version:
          type: string
          description: The version that the system's kernel updated to.
          example: 3.10.0-514.10.2.e17.x86_64
        running_version:
          type: string
          description: The kernel version that the server currently runs.
          example: 3.10.0-514.10.2.e17.x86_64
      description: |-
        An object of kernel versions.

        **Note:**

        The function **only** returns this object if the kernel updates and requires a reboot.
    inline_response_200_531_details:
      type: object
      properties:
        kernel:
          $ref: "#/components/schemas/inline_response_200_531_details_kernel"
        quota:
          type: integer
          description: |-
            Whether the system requires a reboot to enable quotas.

            * `1` — System requires a reboot to enable quotas.

            **Note:**

            The function **only** returns this value if the kernel updates and requires a reboot.
          example: 1
          enum:
          - 1
        updates:
          type: object
          description: |-
            A list of software packages that require an update and their most recent versions.

            **Note:**

            The function **only** returns this object if software packages on your server require updates.
          example:
            glibc: 2.17-157.el7_3.1
      description: An object that contains reasons why the system requires a reboot.
    inline_response_200_531_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: system_needs_reboot
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_532_data:
      properties:
        fifteen:
          type: number
          description: The server's load average over the previous fifteen minutes.
          example: 0.19
        five:
          type: number
          description: The server's load average over the previous five minutes.
          example: 0.18
        one:
          type: number
          description: The server's load average over the previous minute.
          example: 0.17
    inline_response_200_532_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: systemloadavg
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_533_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: terminate_cpuser_mailbox_sessions
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_534_data_output:
      type: object
      properties:
        raw:
          type: string
          description: |-
            Output from the account's removal.

            **Note:**

            This output may contain HTML.
          example: |
            Running pre removal script (/usr/local/cpanel/scripts/prekillacct)......DoneCollecting
            Domain Name and IP...User: example Domain: example.com
            ...DoneLocking account and setting shell to nologin...Locking
            password for user example. passwd: Success ...DoneKilling
            all processes owned by user......DoneRemoving
            Sessions.........DoneRemoving Suspended Info.........DoneCleaning
            Virtfs.........DoneRemoving Web Logs......DoneRemoving
            Bandwidth Files......DoneRemoving Email Sending
            Limits Cache......DoneRemoving DKIM keys......DoneRemoving
            Crontab......DoneRemoving HTTP Virtual Hosts...Removed
            the following non-SSL virtual hosts: example.com
            Removed the following SSL virtual hosts: ...DoneRemoving
            ftp Virtual Hosts......Done Removing user''''s
            web content directory symlinks......DoneRemoving
            MySQL databases and users......DoneRemoving PostgreSQL
            databases and users......DoneRemoving User & Group.......Success...Done
            Removing DNS Entries...example.com => deleted
            from hostname. ...Done Removing Email Setup...Removing
            /etc/valiases/example.com ...Done Removing mailman
            lists......Done Updating Databases......Done Removing
            bandwidth limits......Done Removing Counter Data......Done
            Adding IP back to the IP address pool...System
            has 3 free ips. ...Done Removing user''''s cPanel
            Databases & Updating......Done Reloading Services......Done
            Removing mail and service configs... ...Done Removing
            Logaholic Webstats...Id: TQ:TaskQueue:129 ...Done
            Sending Contacts......Done Updating internal databases...Updating
            ftp passwords for example Purging ftp user example
            Ftp password files updated. Ftp vhost passwords
            synced ...Done Running post removal scripts (/usr/local/cpanel/scripts/legacypostkillacct,
            /usr/local/cpanel/scripts/postkillacct)......Done
            Account Removal Complete!!!...example account
            removed...Done
      description: An object containing the termination data for the reseller's accounts.
    inline_response_200_534_data_acct:
      type: object
      properties:
        output:
          $ref: "#/components/schemas/inline_response_200_534_data_output"
        reason:
          type: string
          description: A message of success or the reason for a failure.
          example: username account removed
        result:
          type: integer
          description: |-
            Whether the function succeeded.

            * `1` — Success.
            * `0` — Failure.
          example: 1
          enum:
          - 1
          - 0
        user:
          type: string
          description: The account username.
          format: username
          example: username
    inline_response_200_534_data:
      type: object
      properties:
        acct:
          type: array
          description: An array of objects containing the function's output.
          items:
            $ref: "#/components/schemas/inline_response_200_534_data_acct"
    inline_response_200_534_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: terminatereseller
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_535_data:
      type: object
      properties:
        secure_id:
          type: string
          description: The support ticket's secure ID token.
          example: rofh411bv8
        ticket_id:
          minimum: 1
          type: integer
          description: The support ticket number that other functions can look up.
          example: 7648492
    inline_response_200_535_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_create_stub_ticket
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_536_data:
      type: object
      properties:
        accepted:
          type: integer
          description: |-
            Whether the user associated with the OAuth token has already accepted this
            version of the agreement.

            * `1` — Accepted.
            * `0` — **Not** accepted.
          example: 0
          enum:
          - 0
          - 1
        accepted_date:
          type: integer
          description: |-
            The [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time)
            at which the user associated with the OAuth token accepted the
            Technical Support Agreement.

            * A valid Unix timestamp.
            * `null` — Never accepted.
          format: unix_timestamp
          nullable: true
          example: 1566000000
        accepted_date_human:
          type: string
          description: |-
            The human-readable date at which the user associated with the OAuth token
            accepted the Technical Support Agreement.

            * A human-readable date, in `MM/DD/YY` format.
            * `null` — Never accepted.
          nullable: true
          example: 8/17/19
        body:
          type: string
          description: |-
            The full Technical Support Agreement.

            **Note:**

            This returned value may contain HTML.
          example: "<p>IMPORTANT: THIS TECHNICAL SUPPORT AGREEMENT ... at the end\
            \ of AGREEMENT"
        create_date:
          type: integer
          description: The creation or publication Unix timestamp of the Technical
            Support Agreement's current version.
          format: unix_timestamp
          example: 1564790400
        create_date_human:
          type: string
          description: "The human-readable date at which the current version of the\
            \ Technical Support Agreement was created or published, in `MM/DD/YY`\
            \ format."
          example: 8/3/19
        download_url:
          type: string
          description: The URL at which the end-user may download the support agreement.
          format: url
          example: https://www.cpanel.net/legal/techagreement_download.cgi
        title:
          type: string
          description: The Technical Support Agreement's title.
          example: Technical Support Agreement
        version:
          type: string
          description: The Technical Support Agreement's version.
          example: 2019-04.v01.TSUPPORT
        view_url:
          type: string
          description: The URL at which the end-user may view the Technical Support
            Agreement agreement as a standalone HTML document.
          format: url
          example: http://cpanel.com/technical-support-agreements.html
    inline_response_200_536_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_get_support_agreement
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_537_data:
      type: object
      properties:
        arch:
          type: string
          description: The server's CPU architecture retrieved at the last license
            check.
          example: x86_64
        arch_supported:
          type: integer
          description: |-
            Whether cPanel Support provides assistance with the server's CPU architecture.

            * `1` — Yes.
            * `0` — No.
            * `-1` — Unknown architecture.
          example: 1
          enum:
          - 1
          - 0
          - -1
        company_id:
          minimum: 1
          type: integer
          description: A number that represents the company with the licensed IP address.
          example: 7
        company_name:
          type: string
          description: The company name associated with the submitted IP address.
          example: "Example, L.L.C."
        distro:
          type: string
          description: The server's operating system retrieved during the last license
            check.
          example: centos enterprise 6.8
        distro_supported:
          type: integer
          description: |-
            Whether cPanel Technical Support provides assistance for the server's
            operating system.

            * `1` — Yes.
            * `0` — No.
            * `-1` — Unknown OS.
          example: 1
          enum:
          - 1
          - 0
          - -1
        gets_direct_support:
          type: integer
          description: |-
            Whether the IP address owner's primary support is WebPros International LLC.

            * `1` — Receives initial support from WebPros International, LLC.
            * `0` — Receives initial support from a partner.
          example: 0
          enum:
          - 0
          - 1
        has_company_info:
          type: integer
          description: |-
            Whether the response contains the company information associated with
            the licensed IP address.

            * `1` — Contains company info.
            * `0` — Does **not** contain company info.
          example: 0
          enum:
          - 0
          - 1
        has_compatibility_info:
          type: integer
          description: |-
            Whether the response contains the server's compatibility information.

            * `1` — Contains compatibility info.
            * `0` — Does **not** contain compatibility info.
          example: 1
          enum:
          - 0
          - 1
        hostname:
          type: string
          description: "The hostname or IP address of the server, as recorded in the\
            \ license database."
          example: server.example.com
        ip:
          type: string
          description: The license provider's IP address.
          format: ipv4
          example: 192.168.0.1
        logo_url:
          type: string
          description: The optional URL to the company's brand image file on the partner
            website.
          format: url
          example: http://example.com/assets/ourlogo.png
        pub_support_contact:
          type: string
          description: "The URL to the company's general support resources, if available."
          format: url
          example: http://documentation.example.com/
        pub_tech_contact:
          type: string
          description: |-
            The optional URL to the company's technical support resources.

            **Note:**

            If the `pub_tech_contact` return does not contain a value, the system
            will use the `pub_support_contact` return's value.
          format: url
          example: https://support.example.com/
        tech_contact_email:
          type: string
          description: The contact email address for the company's technical support.
          format: email
          example: support@example.com
    inline_response_200_537_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_get_support_info
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_538_data:
      type: object
      properties:
        auth_status:
          type: string
          description: The installation status.
          example: AUTHED
        auth_time:
          type: integer
          description: When the system authorized access.
          format: unix_timestamp
          example: 1477338450
        chain_status:
          type: string
          description: |-
            The status of the
            [`iptables`](https://netfilter.org/projects/iptables/index.html)
            whitelist entries.

            * `ACTIVE` — The system added the appropriate `iptables` whitelist
            entries or they already existed.
            * `INACTIVE` — The `iptables` whitelist entries were successfully
            removed or were already deleted.
            * `ERR_SETUP` — The system failed to add the `iptables` whitelist
            entries.
            * `ERR_UNSETUP` — The system failed to remove the `iptables` whitelist
            entries.
            * `ERR_UNKNOWN` — An unknown error occurred.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        csf_wl_status:
          type: string
          description: |-
            The status of the
            [ConfigServer Security & Firewall (CSF)](https://www.configserver.com/)
            whitelist entries.

            * `ACTIVE` — The system added the appropriate CSF whitelist entries or they
            already existed.
            * `INACTIVE` — The CSF whitelist entries were successfully removed or they
            were already deleted.
            * `ERR_SETUP` — The system failed to add the CSF whitelist entries.
            * `ERR_UNSETUP` — The system failed to remove the CSF whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.

            **Note:**

            If CSF does not exist on the server, the function will **not**
            display this return.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        host_access_wl_status:
          type: string
          description: "The status of the `/etc/hosts.allow` file's whitelist entries.\n\
            \n* `ACTIVE` — The system added the appropriate `/etc/hosts.allow` file\
            \ whitelist\nentries or they already existed.\n* `INACTIVE` — The `/etc/hosts.allow`\
            \ file whitelist entries were successfully\nremoved or they were already\
            \ deleted.\n* `ERR_SETUP` — The system failed to add the `/etc/hosts.allow`\
            \ file whitelist\nentries.\n* `ERR_UNSETUP` — The system failed to remove\
            \ the `/etc/hosts.allow` file\nwhitelist entries.\n* `ERR_UNKNOWN` — An\
            \ unknown error occurred. "
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        hulk_wl_status:
          type: string
          description: |-
            The status of the
            [cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)
            whitelist entries.

            * `ACTIVE` — The system added the appropriate cPHulk whitelist entries or they
            already existed.
            * `INACTIVE` — The cPHulk whitelist entries were successfully removed or they
            were already deleted.
            * `ERR_SETUP` — The system failed to add the cPHulk whitelist entries.
            * `ERR_UNSETUP` — The system failed to remove the cPHulk whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        non_fatals:
          type: array
          description: |-
            Any non-fatal errors.

            * `ticket_system_log_entry` — The function could not record the grant
            operation in the ticket.
            * `audit_log` — The function could not record the grant operation in the
            local audit log.

            **Note:**

            The system stores the local audit log in the
            `/var/cpanel/logs/supportauth/audit.log`
            file.
          example: []
          items:
            type: string
            enum:
            - ticket_system_log_entry
            - audit_log
        server_name:
          type: string
          description: |-
            The server's human-readable description from the
            [cPanel Customer Portal](https://tickets.cpanel.net/).
          example: example
        server_num:
          minimum: 1
          type: integer
          description: The server's ID number.
          example: 1
        ssh_username:
          type: string
          description: The username for incoming SSH connections before they escalate
            the `root` user.
          example: username
        ticket_id:
          minimum: 1
          type: integer
          description: The support ticket's ID number.
          example: 999999999
        ticket_status:
          type: string
          description: |-
            The support ticket's status.

            * `OPEN`
            * `CLOSED`
            * `UNKNOWN`
          example: OPEN
          enum:
          - OPEN
          - CLOSED
          - UNKNOWN
    inline_response_200_538_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_grant
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_539_data_servers:
      type: object
      properties:
        auth_status:
          type: string
          description: |-
            The installation status.

            * `AUTHED`
            * `NOT_AUTHED`
            * `EXPIRED`
          example: AUTHED
          enum:
          - AUTHED
          - NOT_AUTHED
          - EXPIRED
        auth_time:
          type: integer
          description: |-
            When the grant happened, in
            [Unix time format](http://en.wikipedia.org/wiki/Unix_time).
          format: unit_timestamp
          example: 1400603208
        server_name:
          type: string
          description: |-
            The server's human-readable description, from the
            [cPanel Customer Portal](https://tickets.cpanel.net/).
          example: My Server
        server_num:
          minimum: 1
          type: integer
          description: The server's ID number.
          example: 2
        ssh:
          type: string
          description: The server's IP address and port number for SSH connections.
          example: 10.11.12.13:22
        ssh_username:
          type: string
          description: The username for incoming SSH connections before they escalate
            to the `root` user.
          example: username
        whm_ip:
          type: string
          description: The server's IP address for WHM connections.
          example: 10.11.12.13
    inline_response_200_539_data_auths:
      type: object
      properties:
        servers:
          type: array
          description: An array of objects containing the server information.
          items:
            $ref: "#/components/schemas/inline_response_200_539_data_servers"
        ticket_id:
          minimum: 1
          type: integer
          description: The ticket's ID number.
          example: 999999999
        ticket_status:
          type: string
          description: |-
            The ticket's status.

            * `OPEN`
            * `CLOSED`
            * `UNKNOWN`
          example: OPEN
          enum:
          - OPEN
          - CLOSED
          - UNKNOWN
        ticket_subject:
          type: string
          description: The ticket's subject line.
          example: Example ticket
    inline_response_200_539_data:
      type: object
      properties:
        auths:
          type: array
          description: An array of objects containing the ticket authorization information.
          items:
            $ref: "#/components/schemas/inline_response_200_539_data_auths"
        non_fatals:
          type: array
          description: |-
            Any non-fatal errors.

            * `ticket_system_log_entry` — The function could not record the grant
            operation in the ticket.
            * `audit_log` — The function could not record the grant operation in the
            local audit log.

            **Note:**

            The system stores the local audit log in the
            `/var/cpanel/logs/supportauth/audit.log` file.
          example: []
          items:
            type: string
    inline_response_200_539_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_list
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_540_data:
      type: object
      properties:
        chain_status:
          type: string
          description: |-
            The status of the `iptables` whitelist entries.

            * `ACTIVE` — The system added the appropriate `iptables` whitelist entries,
            or they already existed.
            * `INACTIVE` — The system successfully removed the `iptables` whitelist
            entries, or they did not exist.
            * `ERR_SETUP` — The system failed to add the `iptables` whitelist entries.
            * `ERR_UNSETUP` — The system failed to remove the `iptables` whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        csf_wl_status:
          type: string
          description: |-
            The status of the
            [ConfigServer Security & Firewall (CSF)](https://www.configserver.com/)
            whitelist entries.

            * `ACTIVE` — The system added the appropriate CSF whitelist entries or they
            already existed.
            * `INACTIVE` — The CSF whitelist entries were successfully removed or they
            were already deleted.
            * `ERR_SETUP` — The system failed to add the CSF whitelist entries.
            * `ERR_UNSETUP` — The system failed to remove the CSF whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.

            **Note:**

            If CSF does not exist on the server, the function will **not**
            display this return.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        host_access_wl_status:
          type: string
          description: |-
            The status of the `/etc/hosts.allow` file's whitelist entries.

            * `ACTIVE` — The system added the appropriate `/etc/hosts.allow` file whitelist
            entries or they already existed.
            * `INACTIVE` — The `/etc/hosts.allow` file whitelist entries were successfully
            removed or they were already deleted.
            * `ERR_SETUP` — The system failed to add the `/etc/hosts.allow` file whitelist
            entries.
            * `ERR_UNSETUP` — The system failed to remove the `/etc/hosts.allow` file
            whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.
          example: INACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        hulk_wl_status:
          type: string
          description: |-
            The status of the
            [cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)
            whitelist entries.

            * `ACTIVE` — The system added the appropriate cPHulk whitelist entries or they
            already existed.
            * `INACTIVE` — The cPHulk whitelist entries were successfully removed or they
            were already deleted.
            * `ERR_SETUP` — The system failed to add the cPHulk whitelist entries.
            * `ERR_UNSETUP` — The system failed to remove the cPHulk whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        non_fatals:
          type: array
          description: |-
            Any non-fatal errors.

            * `ticket_system_log_entry` — The function could not record the grant operation
            in the ticket.
            * `audit_log` — The function could not record the grant operation in the local
            audit log.

            **Note:**

            The system stores the local audit log in the
            `/var/cpanel/logs/supportauth/audit.log` file.
          example: []
          items:
            type: string
            enum:
            - ticket_system_log_entry
            - audit_log
        revoked_keys:
          minimum: 1
          type: integer
          description: The total number of SSH keys that the system removed.
          example: 9
    inline_response_200_540_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_remove_closed
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_541_data:
      type: object
      properties:
        chain_status:
          type: string
          description: |-
            The status of the
            [`iptables`](https://netfilter.org/projects/iptables/index.html)
            whitelist entries.

            * `ACTIVE` — The system added the appropriate whitelist entries or they
            already existed.
            * `INACTIVE` — The whitelist entries were successfully removed or were
            already deleted.
            * `ERR_SETUP` — The system failed to add the whitelist entries.
            * `ERR_UNSETUP` — The system failed to remove the whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        csf_wl_status:
          type: string
          description: |-
            The status of the
            [ConfigServer Security & Firewall (CSF)](https://www.configserver.com/)
            whitelist entries.

            * `ACTIVE` — The system added the appropriate CSF whitelist entries or they
            already existed.
            * `INACTIVE` — The CSF whitelist entries were successfully removed or they
            were already deleted.
            * `ERR_SETUP` — The system failed to add the CSF whitelist entries.
            * `ERR_UNSETUP` — The system failed to remove the CSF whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.

            **Note:**

            If CSF does not exist on the server, the function will **not**
            display this return.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        host_access_wl_status:
          type: string
          description: "The status of the `/etc/hosts.allow` file's whitelist\nentries.\n\
            \n* `ACTIVE` — The system added the appropriate `/etc/hosts.allow` file\
            \ whitelist\nentries or they already existed.\n* `INACTIVE` — The `/etc/hosts.allow`\
            \ file whitelist entries were successfully\nremoved or they were already\
            \ deleted.\n* `ERR_SETUP` — The system failed to add the `/etc/hosts.allow`\
            \ file whitelist entries.\n* `ERR_UNSETUP` — The system failed to remove\
            \ the `/etc/hosts.allow` file whitelist\nentries.\n* `ERR_UNKNOWN` — An\
            \ unknown error occurred.                          "
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        hulk_wl_status:
          type: string
          description: |-
            The status of the
            [cPHulk](https://docs.cpanel.net/whm/security-center/cphulk-brute-force-protection/)
            whitelist entries.

            * `ACTIVE` — The system added the appropriate cPHulk whitelist entries or they
            already existed.
            * `INACTIVE` — The cPHulk whitelist entries were successfully removed or they
            were already deleted.
            * `ERR_SETUP` — The system failed to add the cPHulk whitelist entries.
            * `ERR_UNSETUP` — The system failed to remove the cPHulk whitelist entries.
            * `ERR_UNKNOWN` — An unknown error occurred.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - ERR_SETUP
          - ERR_UNSETUP
          - ERR_UNKNOWN
        non_fatals:
          type: array
          description: |-
            Any non-fatal errors.

            * `ticket_system_log_entry` — The function could not record the grant operation
            in the ticket.
            * `audit_log` — The function could not record the grant operation in the local
            audit log.

            **Note:**

            The system stores the local audit log in the
            `/var/cpanel/logs/supportauth/audit.log` file.
          example: []
          items:
            type: string
            enum:
            - ticket_system_log_entry
            - audit_log
        revoked_keys:
          minimum: 1
          type: integer
          description: The total number of revoked SSH keys.
          example: 1
        server_num:
          minimum: 1
          type: integer
          description: The server's ID number.
          example: 2
        ssh_username:
          type: string
          description: The username for incoming SSH connections before they escalate
            to the `root` user.
          example: username
        ticket_id:
          minimum: 1
          type: integer
          description: The revoked support ticket's ID number.
          example: 999999999
    inline_response_200_541_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_revoke
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_542_data:
      type: object
      properties:
        non_fatals:
          type: array
          description: |-
            A list of non-fatal errors, if any exist.

            * `ticket_system_log_entry` — The function could not record the grant operation
            in the ticket.
            * `audit_log` — The function could not record the grant operation in the local
            audit log. The system stores the local audit log in the `/var/cpanel/logs/supportauth/audit.log`
            file.
          items:
            type: string
            example: audit_log
            enum:
            - ticket_system_log_entry
            - audit_log
        result:
          type: string
          description: The SSH test's result.
          example: SUCCESS
    inline_response_200_542_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_ssh_test
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_543_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_ssh_test_start
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_544_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_update_service_agreement_approval
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_545_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_validate_oauth2_code
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_546_data:
      type: object
      properties:
        chain_status:
          type: string
          description: |-
            The status of the server's firewall whitelist.

            * `ACTIVE` — The whitelist is active.
            * `INACTIVE` — The whitelist is inactive.
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
        problem:
          type: string
          description: |-
            message that indicates whether a problem exists with the current status.
            * `NO` — The firewall does not require changes.
            * `NEED_SETUP` — You have granted cPanel Support access, but the system's
            firewall whitelist does not contain support's IP addresses.
            * `NEED_UNSETUP` — The system detected that **no** cPanel Support access
            grants exist, but the system's firewall whitelist contains support's IP
            addresses.
          example: "NO"
          enum:
          - "NO"
          - NEED_SETUP
          - NEED_UNSETUP
    inline_response_200_546_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_whitelist_check
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_547_data:
      type: object
      properties:
        chain_status:
          type: string
          description: |-
            A message that indicates whether the whitelist setup succeeded.

            * `ACTIVE` — A successful setup.
            * `ERR_SETUP` — An error occurred.
          example: ACTIVE
          enum:
          - ACTIVE
          - ERR_SETUP
    inline_response_200_547_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_whitelist_setup
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_548_data:
      type: object
      properties:
        chain_status:
          type: string
          description: |-
            A message that indicates whether the whitelist removal succeeded.

            * `INACTIVE` — Success.
            * `ERR_UNSETUP` — An error occurred.
          example: INACTIVE
          enum:
          - INACTIVE
          - ERR_UNSETUP
    inline_response_200_548_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: ticket_whitelist_unsetup
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_549_data:
      type: object
      properties:
        toggle_status:
          type: integer
          description: |-
            Whether backups are active on the account.
            * `1` - Active.
            * `0` - Inactive.
          example: 0
          enum:
          - 0
          - 1
    inline_response_200_549_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: toggle_user_backup_state
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: Backup state modified
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_550_data_schema_keys:
      type: object
      properties:
        def:
          type: string
          description: |-
            The first value is the parameter's type and length:

            * `int`
            * `char`
            * `bigint`
            * `text`

            The second value is the default prepended by the word `DEFAULT`.
          example: char(255) DEFAULT NULL
      description: |-
        An object containing the key's information.

        **Note:**

        The key's name is the return's name.
    inline_response_200_550_data_schema:
      type: object
      properties:
        keys:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_550_data_schema_keys"
          description: An object containing the schema's keys.
          example:
            copypoint:
              def: text
            cpmovefile:
              def: text
            customip:
              def: char(255) DEFAULT NULL
            detected_remote_user:
              def: char(255) DEFAULT NULL
            disabled:
              def: text
            domain:
              def: char(255) DEFAULT NULL
            files:
              def: BIGINT UNSIGNED DEFAULT 1
            force:
              def: int(1) DEFAULT 0
            ip:
              def: int(1) DEFAULT 0
            live_transfer:
              def: int(1) DEFAULT 0
            localuser:
              def: char(255) DEFAULT NULL
            mail_location:
              def: char(255) DEFAULT NULL
            overwrite_all_dbs:
              def: int(1) DEFAULT 0
            overwrite_all_dbusers:
              def: int(1) DEFAULT 0
            overwrite_sameowner_dbs:
              def: int(1) DEFAULT 0
            overwrite_sameowner_dbusers:
              def: int(1) DEFAULT 0
            overwrite_with_delete:
              def: int(1) DEFAULT 0
            prerequisite_user:
              def: char(255) DEFAULT NULL
            priority:
              def: int(1) DEFAULT 255
            replaceip:
              def: char(255) DEFAULT NULL
            reseller:
              def: int(1) DEFAULT 0
            shared_mysql_server:
              def: int(1) DEFAULT 0
            size:
              def: BIGINT UNSIGNED DEFAULT 1
            skipaccount:
              def: int(1) DEFAULT 0
            skipacctdb:
              def: int(1) DEFAULT 0
            skipbwdata:
              def: int(1) DEFAULT 0
            skipemail:
              def: int(1) DEFAULT 0
            skiphomedir:
              def: int(1) DEFAULT 0
            skipres:
              def: int(1) DEFAULT 0
            skipsubdomains:
              def: int(1) DEFAULT 0
            user:
              def: char(255) DEFAULT NULL
            xferpoint:
              def: int(1) DEFAULT 0
        primary:
          type: array
          description: The schema's primary key.
          example:
          - user
          items:
            type: string
        required:
          type: array
          description: A list of schema's required keys.
          example:
          - user
          - localuser
          items:
            type: string
      description: An object containing information about the schema's keys.
    inline_response_200_550_data:
      type: object
      properties:
        schema:
          $ref: "#/components/schemas/inline_response_200_550_data_schema"
    inline_response_200_550_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: transfer_module_schema
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_551_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_disable_policy
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_552_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_enable_policy
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_553_data:
      type: object
      properties:
        otpauth_str:
          type: string
          description: A one-time authentication URL to encode as the QR code.
          format: uri
          example: otpauth://totp/Example:root?secret=CAOXW75HKYJJ6E5Y&issuer=Example
        secret:
          type: string
          description: A generated security code for use with 2FA.
          example: WJ73QJSKZBXCFIPZ
    inline_response_200_553_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_generate_tfa_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_554_data:
      type: object
      properties:
        issuer:
          type: string
          description: The issuer's name for the currently-authenticated user.
          example: example.cpanel.net
        system_wide_issuer:
          type: string
          description: |-
            The system's default issuer's name.

            **Note:**

            If the `root` user has **not** configured a system-wide issuer, this value defaults to the system hostname.
          example: example.cpanel.net
    inline_response_200_554_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_get_issuer
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_555_email:
      type: object
      properties:
        secret:
          type: string
          description: The 2FA secret for the account.
          example: QLLIU5WTY3UTJGNG
      description: An object that contains a hash of the email account's data.
    inline_response_200_555_primary_account:
      type: object
      properties:
        secret:
          type: string
          description: The 2FA secret for the account.
      description: An object containing the secret for the cPanel user if 2FA is enabled
        for the user.
    inline_response_200_555_team:
      type: object
      properties:
        secret:
          type: string
          description: The 2FA secret for the account.
          example: QLLIU5WTY3UTJGNG
      description: An objection that contains a hash of the team user account's data.
    inline_response_200_555_data:
      type: object
      properties:
        email:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_555_email"
          description: The email data for the user.
        primary_account:
          $ref: "#/components/schemas/inline_response_200_555_primary_account"
        team:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/inline_response_200_555_team"
          description: The cPanel user's team user account data.
    inline_response_200_555_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_get_tfa_config_for_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_556_data:
      type: object
      properties:
        is_enabled:
          type: integer
          description: |-
            Whether the account has 2FA enabled.
            * `1` - Enabled.
            * `0` - **Not** enabled.
          example: 1
          enum:
          - 0
          - 1
        primary_domain:
          type: string
          description: The account's primary domain.
          format: domain
          example: example.com
      description: An object that contains a hash of the account's data.
    inline_response_200_556_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_get_user_configs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_557_data:
      type: object
      properties:
        is_enabled:
          type: integer
          description: |-
            Whether the 2FA security policy is enabled.
            - `1` — Enabled.
            - `0` — **Not** enabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_557_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_policy_status
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_558_data:
      type: object
      properties:
        failed:
          type: object
          additionalProperties:
            type: string
            description: |-
              The reason for the failure.

              **Note:**

              The user's name is the return name.
            example: You are not authorized to modify example
            x-additionalPropertiesName: username
          description: An object that contains the user accounts for which removal
            failed.
        users_modified:
          type: array
          description: An array of the user accounts for which you successfully removed
            2FA settings.
          items:
            type: string
            example: example
    inline_response_200_558_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_remove_user_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_559_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_set_issuer
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_560_data:
      type: object
      properties:
        success:
          type: integer
          description: |-
            Whether the account successfully enabled 2FA.
            * `1` — Enabled.
            * `0` — **Not** enabled.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_560_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_set_tfa_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_561_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: twofactorauth_set_tfa_config_for_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_562_data_uapi_metadata:
      type: object
      properties:
        transformed:
          type: integer
          description: |-
            - 1 - A transform was applied.
            - 0 - A transform was not applied.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_562_data_uapi:
      type: object
      properties:
        data:
          description: The UAPI response. This value varies based on the UAPI function
            requested.
          anyOf:
          - type: string
          - type: number
          - type: integer
          - type: boolean
          - type: array
            items: {}
          - type: object
        errors:
          type: array
          description: List of errors produced the by the API if any.
          nullable: true
          items:
            type: string
        messages:
          type: array
          description: List of messages produced the by the API if any.
          nullable: true
          items:
            type: string
        metadata:
          $ref: "#/components/schemas/inline_response_200_562_data_uapi_metadata"
        status:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the errors field for more details.
          example: 1
          enum:
          - 0
          - 1
        warnings:
          type: array
          description: List of warnings produced the by the API if any.
          nullable: true
          items:
            type: string
      description: "hash of function output. Each hash contains the returns from the\
        \ called UAPI function. For information about a function's returns, read the\
        \ function's documentation."
      example: "{\"data\":[{\"_count\":\"0\",\"_max\":\"unlimited\",\"_maxed\":0,\"\
        count\":\"0\",\"feature\":\"addondomains\",\"id\":\"addondomains\",\"is_maxed\"\
        :0,\"item\":\"Addon Domains\",\"max\":\"unlimited\",\"maxed_phrase\":\"You\
        \ are using your maximum allotment ([numf,_1]) of addon domains.\",\"module\"\
        :\"Park\",\"name\":\"addondomains\",\"near_limit_phrase\":\"You are using\
        \ [numf,_1] of [numf,_2] available addon [numerate,_2,domain,domains].\",\"\
        percent\":0,\"percent10\":0,\"percent20\":0,\"percent5\":0,\"phrase\":\"Addon\
        \ Domains\",\"role\":\"WebServer\",\"zeroisunlimited\":0}],\"metadata\":{\"\
        transformed\":1},\"status\":1}"
    inline_response_200_562_data:
      type: object
      properties:
        uapi:
          $ref: "#/components/schemas/inline_response_200_562_data_uapi"
    inline_response_200_562_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: uapi_cpanel
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_563_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unassign_account_enhancement
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_564_data:
      type: object
      properties:
        updated:
          type: integer
          description: |-
            Whether the function unblocked one or more countries.
            * `1` - Success.
            * `0` - Failure.

            **Note:**
            If the server already doesn't block that country, `updated` will return `0`.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_564_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unblock_incoming_email_from_country
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_565_data:
      type: object
      properties:
        updated:
          type: integer
          description: |-
            Whether the function unblocked one or more domains.
            * `1` — Success.
            * `0` — Failure.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_565_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unblock_incoming_email_from_domain
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_566_data:
      type: object
      properties:
        log_entry:
          type: string
          description: "The name of the RPM plugin log entry for this uninstall process,\
            \ including a timestamp."
          example: 2017-01-01T19:39:27Z_plugin_name
        pid:
          minimum: 0
          type: integer
          description: The PID of the process that is doing the removal.
          example: 1234
    inline_response_200_566_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: uninstall_rpm_plugin
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_567_data:
      type: object
      properties:
        alias:
          type: string
          description: The name of a linked remote server node.
          example: example
        enabled_services:
          type: array
          description: A list of services enabled on the linked remote server node.
          items:
            type: string
            example: apache_php_fpm
        hostname:
          type: string
          description: The remote server node's hostname.
          format: hostname
          example: example.com
        last_check:
          type: integer
          description: The last time that the server queried the current status of
            the remote server.
          format: unix_timestamp
          example: 1556576165
        system_settings:
          type: object
          properties: {}
          description: A list of the `worker_capabilities` return's system settings.
          example:
            Mail:
              globalspamassassin: "0"
        tls_verified:
          type: integer
          description: |-
            Whether the remote server node has a valid [SSL certificate](https://docs.cpanel.net/knowledge-base/security/guide-to-ssl/).
            * `1` - The remote server node has a valid SSL certificate.
            * `0` - The remote server node does not have a valid SSL certificate.
          example: 1
          enum:
          - 0
          - 1
        username:
          type: string
          description: The username required to make API calls to the linked remote
            server node.
          example: root
        version:
          type: string
          description: The version of cPanel & WHM installed on the remote server
            node.
          example: 11.86.0.0
        worker_capabilities:
          type: object
          additionalProperties:
            type: array
            description: |-
              The current role of the linked remote server node. This will
              return the required options for the role, if any exist.

              **Note:**

              This return's name is the name of the remote server node's current
              role.
            items:
              type: string
          description: |-
            A group of services required for a remote server node to perform a
            specific task.
          example:
            Mail: {}
    inline_response_200_567_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unlink_server_node
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_568_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unlink_user_authn_provider
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_569_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unset_all_service_proxy_backends
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_570_data:
      type: object
      properties:
        payload:
          type: object
          additionalProperties:
            type: string
            description: "The domain’s former MX redirect target, or null if the domain\
              \ did not have an MX redirect target."
            nullable: true
            example: mailhostexample.com
            x-additionalPropertiesName: domain
          description: The removed manual MX redirect entry for each domain.
          example:
            example.com: mailhostexample.com
    inline_response_200_570_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unset_manual_mx_redirects
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_571_data_domains:
      type: object
      properties:
        disabled:
          type: integer
          description: |-
            Whether the system disabled NSEC3.
            * `1` — Disabled.
            * `0` — The system failed to disable NSEC3.
          example: 1
          enum:
          - 0
          - 1
        domain:
          type: string
          description: The domain for which to disable NSEC3.
          example: example.com
        error:
          type: string
          description: |-
            An error message that describes why the system could not disable NSEC3.

            **Note:**

            The function **only** displays this return when the `disabled` return is a `0` value.
          example: Error message.
    inline_response_200_571_data:
      type: object
      properties:
        domains:
          type: array
          description: An array of objects that contain information about each domain.
          items:
            $ref: "#/components/schemas/inline_response_200_571_data_domains"
    inline_response_200_571_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unset_nsec3_for_domains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_572_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unsetupreseller
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_573_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unsuspend_outgoing_email
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_574_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unsuspendacct
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_575_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: unsuspendreseller
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_576_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: untrack_acct_id
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_577_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_configclusterserver
        name:
          type: string
          description: The remote configureation cluster server's name.
          example: example.com
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        signature:
          type: string
          description: The new remote access key.
          example: d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0:d0
        user:
          type: string
          description: The server's `root`-level account username.
          example: root
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_578_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_contact_email
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_579_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_customizations
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_580_data_invalid_features:
      type: object
      properties:
        invalid feature:
          type: integer
          description: |-
            Whether the feature exists in the feature list.

            **Note:**

             The feature's name is the return's name.
            - 1  The feature exists in the feature list.
            - 0  The feature does not exist in the feature list.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_580_data_updated_features:
      type: object
      properties:
        autoresponders: {}
        feature name:
          type: integer
          description: |-
            Whether the feature exists in the feature list.

            **Note:**

             The feature's name is the return's name.
            - 1  The feature exists in the feature list.
            - 0  The feature does not exist in the feature list.
          example: 1
          enum:
          - 0
          - 1
      description: hash of features in the feature list. This hash includes the feature  name
        return.
    inline_response_200_580_data:
      type: object
      properties:
        featurelist:
          type: string
          description: The feature list's name. A valid string.
          example: TheBlackLagoon
        invalid_features:
          type: array
          description: An array of invalid feature names. This array includes the
            invalid  feature return.
          items:
            $ref: "#/components/schemas/inline_response_200_580_data_invalid_features"
        updated_features:
          $ref: "#/components/schemas/inline_response_200_580_data_updated_features"
    inline_response_200_580_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_featurelist
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_581_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_integration_link_token
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Ok
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_582_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_linked_server_node
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_583_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_nameservers_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_584_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_reverse_dns_cache
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_585_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_sql_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_586_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: update_updateconf
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_587_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: updateuserdomains
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_588_data_records:
      type: object
      properties:
        current:
          type: string
          description: The full contents of the domain's `DKIM TXT` record data.
        state:
          type: string
          description: |-
            The DKIM TXT record's status.

            * `VALID` — The `DKIM TXT` record matches the local server's
            public key.
            * `MISMATCH` — The `DKIM TXT` record does **not** match the
            local server's public key.
            * `PERMFAIL` — Multiple `DKIM TXT` records for the domain
            exist or a misconfigured `DKIM TXT` record exists.
          enum:
          - VALID
          - MISMATCH
          - PERMFAIL
    inline_response_200_588_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The domain that the function used to check the DKIM record
            with a `default._domainkey` prefix.
        error:
          type: string
          description: |-
            An error message that details the reason why the DNS lookup failed.

            **Note:**

            The function **only** returns this value when the `state` return
            is the `ERROR` value.
        expected:
          type: string
          description: The DKIM record's contents.
        records:
          type: array
          description: The domain's DNS `DKIM TXT` records.
          items:
            $ref: "#/components/schemas/inline_response_200_588_data_records"
        state:
          type: string
          description: |-
            The domain's DKIM record status.

            * `VALID` — The DKIM record is valid.
            * `MALFORMED` — A single DKIM record exists, but the record
            does **not** match the expected DKIM specifications.
            * `MISMATCH` — A DKIM record exists, but it does **not** match the
            expected public key.
            * `MISSING` — No DKIM record exists for the domain.
            * `MULTIPLE` — Multiple DKIM records exist.
            * `NOPUB` — No key exists on the local server for the domain.
            * `ERROR` — The record's DNS lookup failed. The function returns
            the reason in the `error` return value.
          enum:
          - VALID
          - MALFORMED
          - MISMATCH
          - MISSING
          - MULTIPLE
          - NOPUB
          - ERROR
        validity_cache_update:
          type: string
          description: |-
            The result of the DKIM record's validity cache update operation.

            * `set` — The domain is invalid but passed its validity check.
            The validity check now passes the domain as valid.
            * `valid` — The domain is valid and passed its validity check.
            There are no changes required.
            * `none` — The domain is invalid but the system will **not** take
            further action.
            * `error` — The domain's validity check operation failed.
          enum:
          - set
          - valid
          - none
          - error
    inline_response_200_588_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about the domain's
            DKIM records.
          example:
          - domain: default._domainkey.example.com
            expected: v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO/xJtrPZKskZF8/sU0zWGTqKUOErlyJfoJzMDUv3/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB\
            records:
            - current: v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDw5nw4NP1RsWXlfmiMzByDfOT16QCZO/xJtrPZKskZF8/sU0zWGTqKUOErlyJfoJzMDUv3/zzjGswc2nEmYqxxoQZaBkN4QaS6MvJQxysAr+sK8C248/r9zMperQdhJedUVejtpFQHJwgqpHy1tQMxY37L7sQjdxmQ5WnQ1acXiwIDAQAB\
              state: VALID
            state: VALID
            validity_cache_update: valid
          - domain: default._domainkey.example2.com
            error: (XID 4krw35) DNS returned “SERVFAIL” (code 2) in response to the
              system’s query for “default._domainkey.example2.com”’s “TXT” records.
            expected: v=DKIM1; k=rsa; p=MIIBIjAAAgkrhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4mA8NH3BkYvOmB0+ll23U78JesahG8304unKhW+MAm0ZE+i6EWN6iXhUj7FRPvI/6jFRd7qAHCPKFLo5+/PTy8C8eK312tfSnF3N0eucYFbgZ8F8iSRdgrcgEjvJ1vM1uvcUF211yd/e3jxT2Ge4/fmZcTYNjfH3uAuriv61L6pdIwHUWPhcjQvgOQoKQgXgooCUbUkWFDkMAH+EF/0g1dnXf289LjlvQsKhY7Y135Zpvm21kjUcj5mrLDlHJALzCVb8K/r/LCxjV5GFUyJiiNLAxkI9V1vZ4pMQvKIsN7wzu6gXK87w6mEWvKvipMAP8A2choDrk6H/fcQtfNodgwIDADAB;
            records: []
            state: ERROR
            validity_cache_update: none
          items:
            $ref: "#/components/schemas/inline_response_200_588_data_payload"
    inline_response_200_588_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: validate_current_dkims
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_589_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The target domain of the DMARC policy.
          format: domain
          example: example.com
        error:
          type: string
          description: "A message that details either why the DNS lookup failed, or\
            \ if there is a SPF/DKIM failure."
          example: |-
            (XID 4krw35) DNS returned SERVFAIL (code 2)
            in response to the system's query for _dmarc.example.com
            TXT records.
        record:
          type: string
          description: The domain's DMARC TXT record.
          example: v=DMARC1; p=none;
        state:
          type: string
          description: |-
            The domain's DMARC record status.
            Possible values:

            * `VALID` - A DMARC policy is set for the domain, along with valid SPF and DKIM records for the domain and IP address.
            * `MALFORMED` - A DMARC record is set, but it did not pass a syntax check.
            * `DKIM_SPF_ERROR` - A DMARC record exists; however, both the DKIM and SPF records for this domain did not pass validation.
            * `DKIM_ERROR` - A DMARC record exists; however, the DKIM record for this domain did not pass validation.
            * `SPF_ERROR` - A DMARC record exists; however, the SPF record for this domain did not pass validation.
            * `MISSING` - No DMARC policy record exists for the domain at the DMARC subdomain location.
            * `DNS_ERROR` - A DNS error prevented validation of the DMARC record.
          example: VALID
          enum:
          - VALID
          - MALFORMED
          - DKIM_SPF_ERROR
          - DKIM_ERROR
          - SPF_ERROR
          - MISSING
          - DNS_ERROR
        subdomain:
          type: string
          description: |-
            The domain that the function used to check
            the DMARC record. This will be the value of
            the `domain` parameter with a `_dmarc` prefix.
          format: domain
          example: _dmarc.example.com
        suggested:
          type: string
          description: The recommended DMARC policy.
          example: v=DMARC1; p=none;
    inline_response_200_589_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about the domain's
            DMARC records.
          example:
          - domain: example.com
            error: ""
            record: v=DMARC1; p=none;
            state: VALID
            subdomain: _dmarc.example.com
            suggested: v=DMARC1; p=none;
          - domain: example2.com
            error: (XID 4krw35) DNS returned “SERVFAIL” (code 2) in response to the
              system’s query for “_dmarc.example2.com”’s “TXT” records.
            record: ""
            state: DNS_ERROR
            subdomain: _dmarc.example2.com
            suggested: v=DMARC1; p=none;
          items:
            $ref: "#/components/schemas/inline_response_200_589_data_payload"
    inline_response_200_589_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: validate_current_dmarcs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_590_data:
      type: object
      properties:
        message:
          type: string
          description: A list of Exim's configuration parameters.
          format: HTML
          example: "<pre>Doing Dry Run\nDry Run ok\nEnabled system filter options:\
            \ attachments| fail_spam_score_over_int|spam_rewrite\nEnabled ACL options\
            \ in block ACL_MAIL_PRE_BLOCK: default_mail_pre\nEnabled ACL options in\
            \ block ACL_RBL_BLOCK: primary_hostname_bl\n Enabled ACL options in block\
            \ ACL_RECIPIENT_POST_BLOCK: default_recipient_post\nEnabled ACL options\
            \ in block ACL_SPAM_SCAN_CHECK_BLOCK: default_spam_scan_check\nEnabled\
            \ ACL options in block ACL_CHECK_MESSAGE_PRE_BLOCK: default_check_message_pre\
            \ \nEnabled ACL options in block ACL_CONNECT_POST_BLOCK: default_connect_post\
            \ \nEnabled ACL options in block ACL_CONNECT_BLOCK: ratelimit|spammerlist\
            \ \nEnabled ACL options in block ACL_POST_RECP_VERIFY_BLOCK: dictionary_attack\n\
            Enabled ACL options in block ACL_IDENTIFY_SENDER_BLOCK: default_identify_sender\n\
            Enabled ACL options in block ACL_MAIL_BLOCK: requirehelo| requirehelonoforge|requirehelosyntax\n\
            Enabled ACL options in block ACL_RATELIMIT_SPAM_BLOCK: ratelimit_spam_score_over_int\n\
            Enabled ACL options in block ACL_CHECK_MESSAGE_POST_BLOCK: default_check_message_post\n\
            Enabled ACL options in block ACL_POST_SPAM_SCAN_CHECK_BLOCK: mailproviders\
            \ \nEnabled ACL options in block ACL_SPAM_SCAN_BLOCK: default_spam_scan\
            \ \nEnabled ACL options in block ACL_RATELIMIT_BLOCK: 0tracksenders\n\
            Enabled ACL options in block ACL_NOTQUIT_BLOCK: ratelimit\nEnabled ACL\
            \ options in block ACL_RECP_VERIFY_BLOCK: default_recp_verify\nEnabled\
            \ ACL options in block ACL_PRE_SPAM_SCAN: mailproviders\nEnabled ACL options\
            \ in block ACL_SPAM_BLOCK: deny_spam_score_over_int\nEnabled ACL options\
            \ in block ACL_EXISCAN_BLOCK: default_exiscan\nEnabled ACL options in\
            \ block ACL_RECIPIENT_BLOCK: default_recipient\nEnabled ACL options in\
            \ block ACL_MAIL_POST_BLOCK: default_mail_post\nThe system detected spam\
            \ handling in acls and will now disable Apache SpamAssassin in routers\
            \ and transports!\nThe Apache SpamAssassin method remains unchanged.\n\
            Configured options list is:\nACL: acl_smtp_connect is active\nACL: acl_smtp_data\
            \ is active\nACL: acl_smtp_mail is active\nACL: acl_smtp_notquit is active\n\
            ACL: acl_smtp_rcpt is active\nProvided options list is: daemon_smtp_ports|\
            \ tls_on_connect_ports|system_filter_user|system_filter_group|tls_require_ciphers|hostlist\
            \ loopback|hostlist senderverifybypass_hosts|hostlist skipsmtpcheck_hosts|hostlist\
            \ spammeripblocks|hostlist backupmx_hosts|hostlist trustedmailhosts|hostlist\
            \ relay_hosts| domainlist user_domains|remote_max_parallel|smtp_receive_timeout|\
            \ ignore_bounce_errors_after|rfc1413_query_timeout|timeout_frozen_after|auto_thaw|\
            \ callout_domain_negative_expire|callout_negative_expire|acl_smtp_connect|\
            \ acl_smtp_data|acl_smtp_mail|acl_smtp_notquit|acl_smtp_rcpt|perl_at_start|\
            \ daemon_smtp_ports|tls_on_connect_ports|system_filter_user|system_filter_\
            \ group|tls_require_ciphers|spamd_address\nExim Insert Regex is: virtual_userdelivery|\
            \ virtual_aliases|lookuphost|virtual_user|address_pipe|virtual_sa_user|localuser\n\
            Exim Replace Regex is: virtual_sa_user|sa_localuser|virtual_sa_userdelivery|\
            \ local_sa_delivery|central_filter|central_user_filter|democheck|fail_remote_domains|\
            \ fixed_login|fixed_plain|has_alias_but_no_mailbox_discarded_to_prevent_loop|literal|\
            \ local_delivery|local_delivery_spam|localuser|localuser_spam|lookuphost|remote_smtp|\
            \ secure_login|secure_plain|userforward|virtual_aliases|virtual_aliases_nostar|\
            \ virtual_user|virtual_user_spam|virtual_userdelivery|virtual_userdelivery_spam\n\
            Exim Match Insert Regex is: quota_directory|maildir_format\nExim version\
            \ 4.76 #1 built 16- Aug-2011 11:41:07\nCopyright (c) University of Cambridge,\
            \ 1995 - 2007\nBerkeley DB: Sleepycat Software: Berkeley DB 4.3.29: (July\
            \ 12, 2010)\nSupport for: crypteq iconv() IPv6 PAM Perl OpenSSL Content_Scanning\
            \ DKIM Old_Demime Experimental_SPF Experimental_SRS\nLookups (built-in):\
            \ lsearch wildlsearch nwildlsearch iplsearch dbm dbmnz passwd\nAuthenticators:\
            \ cram_md5 dovecot plaintext spa\nRouters: accept dnslookup ipliteral\
            \ manualroute queryprogram redirect\nTransports: appendfile/maildir autoreply\
            \ pipe smtp\nSize of off_t: 8\n\n</pre>"
    inline_response_200_590_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: validate_current_installed_exim_config
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: Your configuration is currently valid.
        result:
          type: integer
          description: |-
            * `1` - Success.
            * `0` - Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_591_data_ptr_records:
      type: object
      properties:
        domain:
          type: string
          description: The fully qualified domain name (FQDN) that a PTR record points
            to.
        forward_records:
          type: array
          description: An array of IP addresses that the domain resolves to for A
            (IPv4) and AAAA (IPv6) records.
          items:
            type: string
        state:
          type: string
          description: |-
            Whether the domain's PTR record points to a domain with an A
            (IPv4) or a AAAA (IPv6) record.

            * `VALID` — The PTR record is valid.
            * `MISSING_FWD` — The PTR points to a domain without an A or
            AAAA record.
            * `FWD_MISMATCH` — The PTR record points to a domain without
            an A or AAAA record that points back to the IP address.
          enum:
          - VALID
          - MISSING_FWD
          - FWD_MISMATCH
    inline_response_200_591_data_payload:
      type: object
      properties:
        arpa_domain:
          type: string
          description: |-
            The IP address used to perform a
            [reverse DNS (rDNS) lookup](https://go.cpanel.net/HowtoConfigureReverseDNSforBINDinWHM),
            in reversed format and appended with one of the following:

            * `in-addr.arpa` — An IPv4 address
            * `ip6.arpa` — An IPv6 address.

            For information about `.arpa` domains, read Wikipedia's
            [Reverse DNS lookup](https://en.wikipedia.org/wiki/Reverse_DNS_lookup)
            article.

            **Note:**

            The function does **not** return this value for a domain with an invalid IP address.
        domain:
          type: string
          description: The queried domain.
        error:
          type: string
          description: |-
            An error message that details the reason why the domain's IP address
            validation failed.

            **Note:**

            The function **only** returns this value when the `state` return is
            the `ERROR` value.
        helo:
          type: string
          description: The hostname that the domain uses to identify itself to remote
            SMTP servers.
          format: hostname
        ip_address:
          type: string
          description: |-
            The IPv4 or IPv6 address.

            **Note:**

            The function does **not** return this value for a domain with an
            invalid IP address.
        ip_version:
          type: integer
          description: |-
            The IP version number.

            * `4` — An IPv4 address.
            * `6` — An IPv6 address.

            **Note:**

            The function does **not** return this value for a domain with an
            invalid IP address.
        nameservers:
          type: array
          description: An array of the authoritative nameservers for the domain's
            PTR record.
          items:
            type: string
        ptr_records:
          type: array
          description: |-
            An array of objects containing the domain's PTR records.

            **Note:**

            The function does **not** return this array for a domain with an
            invalid IP address.
          items:
            $ref: "#/components/schemas/inline_response_200_591_data_ptr_records"
        state:
          type: string
          description: |-
            Whether the PTR records are valid for the domain.

            * `ERROR` — The domain's IP address is invalid. The function returns
            the reason in the `error` return.
            * `IP_IS_PRIVATE` — The IP address exists within a range of private
            IP addresses. DNS does **not** define PTR records for private IP
            addresses.
            * `VALID` — The PTR record is valid. The function **only** returns
            this response if **all** of an IP address's PTR records are valid.
            * `MISSING_PTR` — No PTR record exists for the IP address.
            * `PTR_MISMATCH` — One or more PTR records point to a domain that
            does not point back to the correct IP address.
          enum:
          - ERROR
          - IP_IS_PRIVATE
          - VALID
          - MISSING_PTR
          - PTR_MISMATCH
    inline_response_200_591_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about the account's
            PTR records.
          example:
          - arpa_domain: 1.0.0.10.in-addr.arpa
            domain: example.com
            helo: example.com
            ip_address: 10.0.0.1
            ip_version: 4
            nameservers:
            - ns1.example.com
            - ns2.example.com
            - ns3.example.com
            ptr_records:
            - domain: example.com
              forward_records:
              - 10.0.0.1
              state: VALID
            state: VALID
          - arpa_domain: 3.0.0.10.in-addr.arpa
            domain: example.com
            helo: example.com
            ip_address: 10.0.0.3
            ip_version: 4
            nameservers:
            - ns1.example.com
            - ns2.example.com
            - ns3.example.com
            ptr_records:
            - domain: example.com
              forward_records:
              - 192.168.12.34
              state: FWD_MISMATCH
            state: PTR_MISMATCH
          - arpa_domain: 4.3.3.7.0.7.3.0.e.2.a.8.0.0.0.0.0.0.0.0.3.a.5.8.8.b.d.0.1.0.0.2.ip6.arpa
            domain: example.com
            helo: example.com
            ip_address: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
            ip_version: 6
            nameservers:
            - ns1.example.com
            - ns2.example.com
            - ns3.example.com
            ptr_records:
            - domain: example.com
              forward_records:
              - 2001:0db8:85a3:0000:0000:8a2e:0370:7334
              state: VALID
            state: VALID
          - arpa_domain: 2.0.0.10.in-addr.arpa
            domain: example.com
            helo: example.com
            ip_address: 10.0.0.2
            ip_version: 4
            nameservers:
            - ns1.example.com
            - ns2.example.com
            - ns3.example.com
            ptr_records: []
            state: MISSING_PTR
          - domain: thisotheremaildomain.com
            error: 1.1.1.1.1 is not a valid IP address.
            helo: thisothermaildomain.com
            ip_address: 1.1.1.1.1
            ptr_records: []
            state: ERROR
          - arpa_domain: 4.0.0.10.in-addr.arpa
            domain: example.com
            helo: example.com
            ip_address: 10.0.0.4
            ip_version: 4
            nameservers:
            - ns1.example.com
            - ns2.example.com
            - ns3.example.com
            ptr_records:
            - domain: example.com
              forward_records: []
              state: MISSING_FWD
            state: PTR_MISMATCH
          items:
            $ref: "#/components/schemas/inline_response_200_591_data_payload"
    inline_response_200_591_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: validate_current_ptrs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_592_data_records:
      type: object
      properties:
        current:
          type: string
          description: The SPF record's contents.
        reason:
          type: string
          description: The reason for the SPF record's status.
        state:
          type: string
          description: |-
            The SPF record's status.

            * `PASS` — The SPF record confirms that the `ip_address` value
            is a valid sender.
            * `NEUTRAL` — The current SPF record configuration does not
            determine the `ip_address` value's validity.
            * `FAIL` — The SPF record states that the `ip_address` value
            is **not** a valid sender.
            * `SOFTFAIL` — The SPF record states that the `ip_address` value
            is **not** a valid sender, but does not `FAIL` state it.
            * `TEMPERROR` — The SPF record check resulted in a failure. For
            example, a network failure.
            * `PERMERROR` — The domain's SPF records are **incorrect** and
            require manual correction.

            **Note:**

            These values correspond with
            [RFC 7208 section 2.6](https://tools.ietf.org/html/rfc7208#section-2.6).
          enum:
          - PASS
          - NEUTRAL
          - FAIL
          - SOFTFAIL
          - TEMPERROR
          - PERMERROR
    inline_response_200_592_data_payload:
      type: object
      properties:
        domain:
          type: string
          description: The queried domain.
          format: domain
        error:
          type: string
          description: |-
            An error message that details the reason why the DNS lookup failed.

            **Note:**

            The function **only** returns this value when the `state` return is
            the `ERROR` value.
        expected:
          type: string
          description: The SPF record for the domain in the DNS.
        ip_address:
          description: The domain's IPv4 or IPv6 address.
          anyOf:
          - type: string
            format: ipv4
          - type: string
            format: ipv6
        ip_version:
          type: integer
          description: |-
            The IP address version.

            * `4` — IPv4.
            * `6` — IPv6.
          enum:
          - 4
          - 6
        records:
          type: array
          description: The SPF records of the domain's DNS.
          items:
            $ref: "#/components/schemas/inline_response_200_592_data_records"
        state:
          type: string
          description: |-
            The SPF record's status.

            * `VALID` — A single `SPF TXT` record exists in the domain's DNS
            with the correct `ip_address` value or redirect mechanism.
            * `MISMATCHED` — An `SPF TXT` record exists for the domain that
            does **not** match the `ip_address` value.
            * `MULTIPLE` — Multiple `SPF TXT` records exist in the domain's DNS.
            * `MISSING` — No `SPF TXT` record exists for the domain's DNS.
            * `ERROR` — The record's DNS lookup failed. The system returns the
            reason in the `error` return.
          enum:
          - VALID
          - MISMATCHED
          - MULTIPLE
          - MISSING
          - ERROR
    inline_response_200_592_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects containing information about a domain's
            SPF records.
          example:
          - domain: example.com
            expected: ip6:0:0:0:0:0:ffff:c0a8:101
            ip_address: 0:0:0:0:0:ffff:c0a8:101
            ip_version: 6
            records:
            - current: v=spf1 ~all
              reason: "example.com: Sender is not authorized by default to use 'example.com'\
                \ in 'helo' identity (mechanism '-all' matched)"
              state: FAIL
            state: VALID
          - domain: example2.com
            error: (XID rm8h9f) DNS returned “SERVFAIL” (code 2) in response to the
              system’s query for “example2.com”’s “TXT” records.
            ip_address: 198.252.32.45
            ip_version: 4
            records: []
            state: ERROR
          items:
            $ref: "#/components/schemas/inline_response_200_592_data_payload"
    inline_response_200_592_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: validate_current_spfs
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_593_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: validate_exim_configuration_syntax
        output:
          type: string
          description: "The function's raw HTML output, if any exists."
          format: HTML
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_594_data_payload:
      type: object
      properties:
        access_token:
          type: string
          description: The access token that the cPanel Store or cPanel Market provider
            returns after you log in.
          example: b7a6f029-99fc-11e6-a0bd-87581cb027ac
        refresh_token:
          type: string
          description: The refresh token that the cPanel Store or cPanel Market provider
            returns after you log in .
          example: b7a7107f-99fc-11e6-a0bd-b46329164206
    inline_response_200_594_data:
      type: object
      properties:
        payload:
          type: array
          description: An array of objects that contain token information.
          items:
            $ref: "#/components/schemas/inline_response_200_594_data_payload"
    inline_response_200_594_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: validate_login_token
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the 'reason' field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_595_data:
      type: object
      properties:
        exists:
          type: integer
          description: |-
            Whether the username exists on the server.
            * `1` — Exists.
            * `0` — Does **not** exist.
          example: 1
          enum:
          - 0
          - 1
        reserved:
          type: integer
          description: |-
            Whether the username is reserved.
            * `1` — Reserved.
            * `0` — **Not** reserved.
          example: 1
          enum:
          - 0
          - 1
        valid_for_new:
          type: integer
          description: |-
            Whether the system can use the username to create a new account.
            * `1` — Usable.
            * `0` — Unusable.
          example: 1
          enum:
          - 0
          - 1
        valid_for_transfer:
          type: integer
          description: |-
            Whether the username is valid for a transferred account, but not a new account.
            * `1` — Valid for transfer, but **not** a new account.
            * `0` — Invalid.
          example: 1
          enum:
          - 0
          - 1
    inline_response_200_595_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: validate_system_user
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_596_data:
      type: object
      properties:
        message_id:
          type: string
          description: The test message's ID.
          example: 554d2cbd-efe61da3cacb
    inline_response_200_596_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: verify_icq_access
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_597_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: verify_new_username
        reason:
          type: string
          description: |-
            The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when
            a function succeeds.

            **Note:**

            If the function detects a username conflict, it returns an error
            message in this field.
          example: OK
        result:
          type: integer
          description: |-
            - `1` — Success.
            - `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_598_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: verify_new_username_for_restore
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - `1` — Success.
            - `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_599_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: verify_oscar_access
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_600_data_result_payload:
      type: object
      properties:
        content:
          type: string
          description: The URLs content.
          example: |
            <!doctype html>
            <html>
            <head>
                <title>Example Domain</title>

                <meta charset="utf-8" />
                <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <style type="text/css">
                body {
                    background-color: #f0f0f2;
                    margin: 0;
                    padding: 0;
                    font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
                }
                div {
                    width: 600px;
                    margin: 5em auto;
                    padding: 2em;
                    background-color: #fdfdff;
                    border-radius: 0.5em;
                    box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);
                }
                a:link, a:visited {
                    color: #38488f;
                    text-decoration: none;
                }
                @media (max-width: 700px) {
                    div {
                        margin: 0 auto;
                        width: auto;
                    }
                }
                </style>
            </head>

            <body>
            <div>
                <h1>Example Domain</h1>
                <p>This domain is for use in illustrative examples in documents. You may use this
                domain in literature without prior coordination or asking for permission.</p>
                <p><a href="https://www.iana.org/domains/example">More information...</a></p>
            </div>
            </body>
            </html>
        headers:
          type: object
          description: |-
            An object of the header fields that the request returned.

            **Note:**

            This object's returns vary based on the URL's headers.
          example:
            connection: keep-alive
            content-length: "743"
            content-type: application/json; charset=utf-8
            date: "Tue, 05 May 2020 19:10:13 GMT"
            e-tag: z'W/\"2e7-Klmw/9Djp5E2M7VZdH2LwFWXX6s\""
            server: nginx
            set-cookie: sails.sid=s%3Arpjt9JrVXDIYMxpjyUqLuCtcUxSwbEWX.6ldYuWKV2zqn%2BhmsUlAi7PtsIEd9RXI32y6gjg0gwJA;
              Path=/; HttpOnly
            vary: Accept-Encoding
        protocol:
          type: string
          description: The URL's HTTP protocol.
          example: HTTP/1
        reason:
          type: string
          description: The response that the server returned.
          example: OK
        status:
          type: string
          description: |-
            The response's
            [HTTP status](https://wikipedia.org/wiki/List_of_HTTP_status_codes)
            code.
          example: "200"
        success:
          type: integer
          description: |-
            Whether the function returned a
            [2XX HTTP](https://wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success)
            status code.

            * `1` — Success.
            * `0` — Failure.
          example: 1
          enum:
          - 0
          - 1
        url:
          type: string
          description: The URL that provided the response.
          format: url
          example: http://www.example.com
      description: A list that contains information about a POST notification URL.
    inline_response_200_600_data_result:
      properties:
        message_id:
          type: string
          description: The test message's ID.
          example: 88M7
        payload:
          $ref: "#/components/schemas/inline_response_200_600_data_result_payload"
      description: A list of data about the POST notification URLs.
    inline_response_200_600_data_results:
      properties:
        result:
          $ref: "#/components/schemas/inline_response_200_600_data_result"
        url:
          type: string
          description: The URL and query string for the POST notification URL.
          format: url
          example: https://postman-echo.com/post
    inline_response_200_600_data:
      type: object
      properties:
        results:
          type: array
          description: An array of objects containing POST notification URL data.
          items:
            $ref: "#/components/schemas/inline_response_200_600_data_results"
    inline_response_200_600_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: verify_posturl_access
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 1
          - 0
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_601_data_result:
      type: object
      properties:
        message_id:
          type: string
          description: The test message's ID.
          example: 554d2cbd-efe61da3cacb
        payload:
          type: object
          description: |-
            The payload from the Pushbullet server.

            For more information, visit
            [Pushbullet's API documentation](https://go.cpanel.net/pushbulletdocs).
          example:
            active: "true,"
            body: |-
              This message confirms that ??hostname.example.com?? (192.168.0.20) can send a
              message to you via Pushbullet.

              This message was sent on Tuesday, March 17, 2020 at 3:09:20 PM UTC.
            created: "1584457760.74319,"
            direction: self
            dismissed: "false,"
            iden: ABCDEFGHIJKLABCDEFGHIJKL
            modified: "1584457760.74993,"
            receiver_email: user@example.com
            receiver_email_normalized: user@example.com
            receiver_iden: ABCDEFGHIJKL
            sender_email: user@example.com
            sender_email_normalized: user@example.com
            sender_iden: ABCDEFGHIJKL
            sender_name: Firstname Lastname
            title: "Test message (ID: J2SY)"
            type: note
    inline_response_200_601_data_results:
      type: object
      properties:
        access_token:
          type: string
          description: |-
            The Pushbullet token used.

            **Note:**
            * To access your Pushbullet token, navigate to
            [Pushbullet's My Account](https://go.cpanel.net/pushbulletaccount)
            page. It will appear under the Access Token heading.
            * This is confidential information that your server sends via a secure channel.
          example: "123456789012345678901234567890"
        result:
          $ref: "#/components/schemas/inline_response_200_601_data_result"
    inline_response_200_601_data:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_601_data_results"
    inline_response_200_601_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: verify_pushbullet_access
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_602_data_result_payload_headers:
      type: object
      properties:
        access-control-allow-origin: {}
        content-type: {}
        date: {}
        referrer-policy: {}
        server: {}
        strict-transport-security: {}
        transfer-encoding: {}
        vary: {}
        x-frame-options: {}
        x-slack-backend: {}
        x-via: {}
    inline_response_200_602_data_result_payload:
      type: object
      properties:
        content: {}
        headers:
          $ref: "#/components/schemas/inline_response_200_602_data_result_payload_headers"
        protocol: {}
        reason: {}
        status: {}
        success: {}
        url: {}
    inline_response_200_602_data_result:
      type: object
      properties:
        message_id: {}
        payload:
          $ref: "#/components/schemas/inline_response_200_602_data_result_payload"
    inline_response_200_602_data_results:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/inline_response_200_602_data_result"
        url: {}
    inline_response_200_602_data:
      type: object
      properties:
        results:
          type: array
          description: "The payload from the Slack server. For more information, visit\
            \ Slack's WebHooks documentation ."
          items:
            $ref: "#/components/schemas/inline_response_200_602_data_results"
    inline_response_200_602_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: verify_slack_access
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is 0. This field may display a success message when a function succeeds.
          example: OK
        result:
          type: integer
          description: |-
            - 1 - Success
            - 0 - Failed: Check the reason field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_603_data:
      type: object
      properties:
        has_feature:
          type: integer
          description: |-
            Whether the user can access the feature.

            * `1` — The user can access the feature.
            * `0` — The user **cannot** access the feature.

            **Note:**

            This function returns a `1` value for any feature that does **not** exist in
            a [feature list](https://go.cpanel.net/whmdocsFeatureManager). This is because
            the system presumes users have access to features that exist outside of the
            system's feature lists.
          example: 1
          enum:
          - 0
          - 1
        query_feature:
          type: string
          description: The queried feature's ID.
          example: sslinstall
    inline_response_200_603_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: verify_user_has_feature
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` — Success.
            * `0` — Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
    inline_response_200_604_data:
      type: object
      properties:
        version:
          type: string
          description: The server's cPanel & WHM version.
          example: 11.88.0.9999
    inline_response_200_604_metadata:
      properties:
        command:
          type: string
          description: The method name called.
          example: version
        reason:
          type: string
          description: The reason the API function failed when the `metadata.result`
            field is `0`. This field may display a success message when a function
            succeeds.
          example: OK
        result:
          type: integer
          description: |-
            * `1` - Success
            * `0` - Failed. Check the `reason` field for more details.
          example: 1
          enum:
          - 0
          - 1
        version:
          type: integer
          description: The version of the API function.
          example: 1
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
x-tagGroups:
- name: Account Restoration
  tags:
  - Restore Account
  - Restore Queue Management
  - Restore Queue Reporting
- name: Accounts
  tags:
  - Account Creation
  - Account Enhancements
  - Account Management
  - Bandwidth and Disk Quotas
  - Domain Information
  - Passwords
  - Styles
  - Suspensions
- name: API Development Tools
  tags:
  - API Execution
  - API Statistics
  - API Token Management
  - Applications
  - Session
- name: Authentication
  tags:
  - Authentication Providers
  - External Authentication
  - Login URL
  - SSH Keys and Connections
  - Two-Factor Authentication
- name: Backups
  tags:
  - Backup Destination
  - Backup or Restore
  - Backup Settings
  - Legacy Migration
- name: Commerce Integration
  tags:
  - Market Integration
  - Sitejet
- name: cPanel Market
  tags:
  - Product Management
  - Provider Management
- name: cPanel Support Tickets
  tags:
  - Support Access
  - Ticket Management
- name: Customizations
  tags:
  - Brand
  - Customizations
- name: Databases
  tags:
  - Manage MySQL Server
  - MySQL Databases
  - PostgreSQL Databases
  - Remote MySQL Databases
- name: DNS
  tags:
  - DNS Cluster Settings
  - DNS Security
  - DNS Zones
  - Domain Management
  - Domain Management
  - Resolvers
- name: Hosting Plans
  tags:
  - Feature Access
  - Feature Lists
  - Hosting Plan Extensions
  - Hosting Plans
- name: Integrations
  tags:
  - API Authentication
  - Links
  - Scripts Hooks
- name: IP Address Management
  tags:
  - IPv4 Address Settings
  - IPv6 Address Settings
  - Network Address Translation
- name: Login Security (cPHulk)
  tags:
  - Management
  - Reporting
  - Settings
- name: Mail
  tags:
  - cPanel Account Mail Management
  - Mail DNS Settings
  - Mail Server Settings
  - Spam Management
  - Spam Protection (Greylisting)
- name: NGINX Manager
  tags:
  - NGINX Manager
- name: Resellers
  tags:
  - Account Enhancement Limit
  - Account Limits
  - Account Permissions
  - Account Settings
  - Reseller Account Management
- name: Security
  tags:
  - WHM Access
- name: Server Administration
  tags:
  - Configuration Clusters
  - Configurations
  - Connected Applications
  - Connections
  - cPanel Analytics
  - License Management
  - Notifications
  - Plugin-Based Features
  - Security
  - Server Nodes
  - Server Profiles
  - Services
  - System Information
  - Updates
- name: SSL Certificates
  tags:
  - Auto-Generated Certificates
  - cPanel Account Settings
  - SSL Server Settings
- name: System Package Management
  tags:
  - Install or Uninstall Package
  - List Package Information
  - Package Manager Settings
- name: Transfers
  tags:
  - cPanel Account Transfer
  - Transfer Configuration
  - Transfer Monitoring
- name: Web Server Configuration
  tags:
  - EasyApache Settings
  - PHP
  - PHP-FPM
- name: Web Server Security (ModSecurity)
  tags:
  - Rule Settings
  - Rule Vendor Settings
  - Server Settings
